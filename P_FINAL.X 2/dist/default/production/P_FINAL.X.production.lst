

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Jul 11 21:20:59 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=3
    51                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=3
    53                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=3
    54                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=3
    55                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87   000000                     
    88                           ; Generated 23/02/2024 GMT
    89                           ; 
    90                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution. Publication is not required when
   104                           ;        this file is used in an embedded application.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F57Q43 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122   0004E0                     bsr             equ	1248
   123   0004E9                     fsr0            equ	1257
   124   0004EA                     fsr0h           equ	1258
   125   0004E9                     fsr0l           equ	1257
   126   0004E1                     fsr1            equ	1249
   127   0004E2                     fsr1h           equ	1250
   128   0004E1                     fsr1l           equ	1249
   129   0004D9                     fsr2            equ	1241
   130   0004DA                     fsr2h           equ	1242
   131   0004D9                     fsr2l           equ	1241
   132   0004EF                     indf0           equ	1263
   133   0004E7                     indf1           equ	1255
   134   0004DF                     indf2           equ	1247
   135   0004D6                     intcon          equ	1238
   136   000041                     nvmcon          equ	65
   137   0004F9                     pcl             equ	1273
   138   0004FA                     pclath          equ	1274
   139   0004FB                     pclatu          equ	1275
   140   0004EB                     plusw0          equ	1259
   141   0004E3                     plusw1          equ	1251
   142   0004DB                     plusw2          equ	1243
   143   0004ED                     postdec0        equ	1261
   144   0004E5                     postdec1        equ	1253
   145   0004DD                     postdec2        equ	1245
   146   0004EE                     postinc0        equ	1262
   147   0004E6                     postinc1        equ	1254
   148   0004DE                     postinc2        equ	1246
   149   0004EC                     preinc0         equ	1260
   150   0004E4                     preinc1         equ	1252
   151   0004DC                     preinc2         equ	1244
   152   0004F3                     prod            equ	1267
   153   0004F4                     prodh           equ	1268
   154   0004F3                     prodl           equ	1267
   155   0004D8                     status          equ	1240
   156   0004F5                     tablat          equ	1269
   157   0004F6                     tblptr          equ	1270
   158   0004F7                     tblptrh         equ	1271
   159   0004F6                     tblptrl         equ	1270
   160   0004F8                     tblptru         equ	1272
   161   0004FD                     tosl            equ	1277
   162   0004E8                     wreg            equ	1256
   163   000039                     CLKRCON         equ	57	;# 
   164   00003A                     CLKRCLK         equ	58	;# 
   165   000040                     NVMCON0         equ	64	;# 
   166   000041                     NVMCON1         equ	65	;# 
   167   000042                     NVMLOCK         equ	66	;# 
   168   000043                     NVMADR          equ	67	;# 
   169   000043                     NVMADRL         equ	67	;# 
   170   000044                     NVMADRH         equ	68	;# 
   171   000045                     NVMADRU         equ	69	;# 
   172   000046                     NVMDAT          equ	70	;# 
   173   000046                     NVMDATL         equ	70	;# 
   174   000047                     NVMDATH         equ	71	;# 
   175   000048                     VREGCON         equ	72	;# 
   176   000049                     BORCON          equ	73	;# 
   177   00004A                     HLVDCON0        equ	74	;# 
   178   00004B                     HLVDCON1        equ	75	;# 
   179   00004C                     ZCDCON          equ	76	;# 
   180   000060                     PMD0            equ	96	;# 
   181   000061                     PMD1            equ	97	;# 
   182   000063                     PMD3            equ	99	;# 
   183   000064                     PMD4            equ	100	;# 
   184   000065                     PMD5            equ	101	;# 
   185   000066                     PMD6            equ	102	;# 
   186   000067                     PMD7            equ	103	;# 
   187   000068                     PMD8            equ	104	;# 
   188   00006A                     MD1CON0         equ	106	;# 
   189   00006B                     MD1CON1         equ	107	;# 
   190   00006C                     MD1SRC          equ	108	;# 
   191   00006D                     MD1CARL         equ	109	;# 
   192   00006E                     MD1CARH         equ	110	;# 
   193   00006F                     CMOUT           equ	111	;# 
   194   000070                     CM1CON0         equ	112	;# 
   195   000071                     CM1CON1         equ	113	;# 
   196   000072                     CM1NCH          equ	114	;# 
   197   000073                     CM1PCH          equ	115	;# 
   198   000074                     CM2CON0         equ	116	;# 
   199   000075                     CM2CON1         equ	117	;# 
   200   000076                     CM2NCH          equ	118	;# 
   201   000077                     CM2PCH          equ	119	;# 
   202   000078                     WDTCON0         equ	120	;# 
   203   000079                     WDTCON1         equ	121	;# 
   204   00007A                     WDTPS           equ	122	;# 
   205   00007A                     WDTPSL          equ	122	;# 
   206   00007B                     WDTPSH          equ	123	;# 
   207   00007C                     WDTTMR          equ	124	;# 
   208   00007D                     DAC1DAT         equ	125	;# 
   209   00007D                     DAC1DATL        equ	125	;# 
   210   00007F                     DAC1CON         equ	127	;# 
   211   000080                     SPI1RXB         equ	128	;# 
   212   000081                     SPI1TXB         equ	129	;# 
   213   000082                     SPI1TCNT        equ	130	;# 
   214   000082                     SPI1TCNTL       equ	130	;# 
   215   000083                     SPI1TCNTH       equ	131	;# 
   216   000084                     SPI1CON0        equ	132	;# 
   217   000085                     SPI1CON1        equ	133	;# 
   218   000086                     SPI1CON2        equ	134	;# 
   219   000087                     SPI1STATUS      equ	135	;# 
   220   000088                     SPI1TWIDTH      equ	136	;# 
   221   000089                     SPI1BAUD        equ	137	;# 
   222   00008A                     SPI1INTF        equ	138	;# 
   223   00008B                     SPI1INTE        equ	139	;# 
   224   00008C                     SPI1CLK         equ	140	;# 
   225   00008D                     SPI2RXB         equ	141	;# 
   226   00008E                     SPI2TXB         equ	142	;# 
   227   00008F                     SPI2TCNT        equ	143	;# 
   228   00008F                     SPI2TCNTL       equ	143	;# 
   229   000090                     SPI2TCNTH       equ	144	;# 
   230   000091                     SPI2CON0        equ	145	;# 
   231   000092                     SPI2CON1        equ	146	;# 
   232   000093                     SPI2CON2        equ	147	;# 
   233   000094                     SPI2STATUS      equ	148	;# 
   234   000095                     SPI2TWIDTH      equ	149	;# 
   235   000096                     SPI2BAUD        equ	150	;# 
   236   000097                     SPI2INTF        equ	151	;# 
   237   000098                     SPI2INTE        equ	152	;# 
   238   000099                     SPI2CLK         equ	153	;# 
   239   0000AC                     ACTCON          equ	172	;# 
   240   0000AD                     OSCCON1         equ	173	;# 
   241   0000AE                     OSCCON2         equ	174	;# 
   242   0000AF                     OSCCON3         equ	175	;# 
   243   0000B0                     OSCTUNE         equ	176	;# 
   244   0000B1                     OSCFRQ          equ	177	;# 
   245   0000B1                     OSCFREQ         equ	177	;# 
   246   0000B2                     OSCSTAT         equ	178	;# 
   247   0000B2                     OSCSTAT1        equ	178	;# 
   248   0000B3                     OSCEN           equ	179	;# 
   249   0000B4                     PRLOCK          equ	180	;# 
   250   0000B5                     SCANPR          equ	181	;# 
   251   0000B6                     DMA1PR          equ	182	;# 
   252   0000B7                     DMA2PR          equ	183	;# 
   253   0000B8                     DMA3PR          equ	184	;# 
   254   0000B9                     DMA4PR          equ	185	;# 
   255   0000BA                     DMA5PR          equ	186	;# 
   256   0000BB                     DMA6PR          equ	187	;# 
   257   0000BE                     MAINPR          equ	190	;# 
   258   0000BF                     ISRPR           equ	191	;# 
   259   0000D4                     CLCDATA         equ	212	;# 
   260   0000D5                     CLCSELECT       equ	213	;# 
   261   0000D6                     CLCnCON         equ	214	;# 
   262   0000D7                     CLCnPOL         equ	215	;# 
   263   0000D8                     CLCnSEL0        equ	216	;# 
   264   0000D9                     CLCnSEL1        equ	217	;# 
   265   0000DA                     CLCnSEL2        equ	218	;# 
   266   0000DB                     CLCnSEL3        equ	219	;# 
   267   0000DC                     CLCnGLS0        equ	220	;# 
   268   0000DD                     CLCnGLS1        equ	221	;# 
   269   0000DE                     CLCnGLS2        equ	222	;# 
   270   0000DF                     CLCnGLS3        equ	223	;# 
   271   0000E8                     DMASELECT       equ	232	;# 
   272   0000E9                     DMAnBUF         equ	233	;# 
   273   0000EA                     DMAnDCNT        equ	234	;# 
   274   0000EA                     DMAnDCNTL       equ	234	;# 
   275   0000EB                     DMAnDCNTH       equ	235	;# 
   276   0000EC                     DMAnDPTR        equ	236	;# 
   277   0000EC                     DMAnDPTRL       equ	236	;# 
   278   0000ED                     DMAnDPTRH       equ	237	;# 
   279   0000EE                     DMAnDSZ         equ	238	;# 
   280   0000EE                     DMAnDSZL        equ	238	;# 
   281   0000EF                     DMAnDSZH        equ	239	;# 
   282   0000F0                     DMAnDSA         equ	240	;# 
   283   0000F0                     DMAnDSAL        equ	240	;# 
   284   0000F1                     DMAnDSAH        equ	241	;# 
   285   0000F2                     DMAnSCNT        equ	242	;# 
   286   0000F2                     DMAnSCNTL       equ	242	;# 
   287   0000F3                     DMAnSCNTH       equ	243	;# 
   288   0000F4                     DMAnSPTR        equ	244	;# 
   289   0000F4                     DMAnSPTRL       equ	244	;# 
   290   0000F5                     DMAnSPTRH       equ	245	;# 
   291   0000F6                     DMAnSPTRU       equ	246	;# 
   292   0000F7                     DMAnSSZ         equ	247	;# 
   293   0000F7                     DMAnSSZL        equ	247	;# 
   294   0000F8                     DMAnSSZH        equ	248	;# 
   295   0000F9                     DMAnSSA         equ	249	;# 
   296   0000F9                     DMAnSSAL        equ	249	;# 
   297   0000FA                     DMAnSSAH        equ	250	;# 
   298   0000FB                     DMAnSSAU        equ	251	;# 
   299   0000FC                     DMAnCON0        equ	252	;# 
   300   0000FD                     DMAnCON1        equ	253	;# 
   301   0000FE                     DMAnAIRQ        equ	254	;# 
   302   0000FF                     DMAnSIRQ        equ	255	;# 
   303   000200                     PPSLOCK         equ	512	;# 
   304   000201                     RA0PPS          equ	513	;# 
   305   000202                     RA1PPS          equ	514	;# 
   306   000203                     RA2PPS          equ	515	;# 
   307   000204                     RA3PPS          equ	516	;# 
   308   000205                     RA4PPS          equ	517	;# 
   309   000206                     RA5PPS          equ	518	;# 
   310   000207                     RA6PPS          equ	519	;# 
   311   000208                     RA7PPS          equ	520	;# 
   312   000209                     RB0PPS          equ	521	;# 
   313   00020A                     RB1PPS          equ	522	;# 
   314   00020B                     RB2PPS          equ	523	;# 
   315   00020C                     RB3PPS          equ	524	;# 
   316   00020D                     RB4PPS          equ	525	;# 
   317   00020E                     RB5PPS          equ	526	;# 
   318   00020F                     RB6PPS          equ	527	;# 
   319   000210                     RB7PPS          equ	528	;# 
   320   000211                     RC0PPS          equ	529	;# 
   321   000212                     RC1PPS          equ	530	;# 
   322   000213                     RC2PPS          equ	531	;# 
   323   000214                     RC3PPS          equ	532	;# 
   324   000215                     RC4PPS          equ	533	;# 
   325   000216                     RC5PPS          equ	534	;# 
   326   000217                     RC6PPS          equ	535	;# 
   327   000218                     RC7PPS          equ	536	;# 
   328   000219                     RD0PPS          equ	537	;# 
   329   00021A                     RD1PPS          equ	538	;# 
   330   00021B                     RD2PPS          equ	539	;# 
   331   00021C                     RD3PPS          equ	540	;# 
   332   00021D                     RD4PPS          equ	541	;# 
   333   00021E                     RD5PPS          equ	542	;# 
   334   00021F                     RD6PPS          equ	543	;# 
   335   000220                     RD7PPS          equ	544	;# 
   336   000221                     RE0PPS          equ	545	;# 
   337   000222                     RE1PPS          equ	546	;# 
   338   000223                     RE2PPS          equ	547	;# 
   339   000229                     RF0PPS          equ	553	;# 
   340   00022A                     RF1PPS          equ	554	;# 
   341   00022B                     RF2PPS          equ	555	;# 
   342   00022C                     RF3PPS          equ	556	;# 
   343   00022D                     RF4PPS          equ	557	;# 
   344   00022E                     RF5PPS          equ	558	;# 
   345   00022F                     RF6PPS          equ	559	;# 
   346   000230                     RF7PPS          equ	560	;# 
   347   00023E                     INT0PPS         equ	574	;# 
   348   00023F                     INT1PPS         equ	575	;# 
   349   000240                     INT2PPS         equ	576	;# 
   350   000241                     T0CKIPPS        equ	577	;# 
   351   000242                     T1CKIPPS        equ	578	;# 
   352   000243                     T1GPPS          equ	579	;# 
   353   000244                     T3CKIPPS        equ	580	;# 
   354   000245                     T3GPPS          equ	581	;# 
   355   000246                     T5CKIPPS        equ	582	;# 
   356   000247                     T5GPPS          equ	583	;# 
   357   000248                     T2INPPS         equ	584	;# 
   358   000249                     T4INPPS         equ	585	;# 
   359   00024A                     T6INPPS         equ	586	;# 
   360   00024F                     CCP1PPS         equ	591	;# 
   361   000250                     CCP2PPS         equ	592	;# 
   362   000251                     CCP3PPS         equ	593	;# 
   363   000253                     PWM1ERSPPS      equ	595	;# 
   364   000254                     PWM2ERSPPS      equ	596	;# 
   365   000255                     PWM3ERSPPS      equ	597	;# 
   366   000257                     PWMIN0PPS       equ	599	;# 
   367   000258                     PWMIN1PPS       equ	600	;# 
   368   000259                     SMT1WINPPS      equ	601	;# 
   369   00025A                     SMT1SIGPPS      equ	602	;# 
   370   00025B                     CWG1PPS         equ	603	;# 
   371   00025B                     CWG1INPPS       equ	603	;# 
   372   00025C                     CWG2PPS         equ	604	;# 
   373   00025C                     CWG2INPPS       equ	604	;# 
   374   00025D                     CWG3PPS         equ	605	;# 
   375   00025D                     CWG3INPPS       equ	605	;# 
   376   00025E                     MD1CARLPPS      equ	606	;# 
   377   00025E                     MDCARLPPS       equ	606	;# 
   378   00025F                     MD1CARHPPS      equ	607	;# 
   379   00025F                     MDCARHPPS       equ	607	;# 
   380   000260                     MD1SRCPPS       equ	608	;# 
   381   000260                     MDSRCPPS        equ	608	;# 
   382   000261                     CLCIN0PPS       equ	609	;# 
   383   000262                     CLCIN1PPS       equ	610	;# 
   384   000263                     CLCIN2PPS       equ	611	;# 
   385   000264                     CLCIN3PPS       equ	612	;# 
   386   000265                     CLCIN4PPS       equ	613	;# 
   387   000266                     CLCIN5PPS       equ	614	;# 
   388   000267                     CLCIN6PPS       equ	615	;# 
   389   000268                     CLCIN7PPS       equ	616	;# 
   390   000269                     ADACTPPS        equ	617	;# 
   391   00026A                     SPI1SCKPPS      equ	618	;# 
   392   00026B                     SPI1SDIPPS      equ	619	;# 
   393   00026C                     SPI1SSPPS       equ	620	;# 
   394   00026D                     SPI2SCKPPS      equ	621	;# 
   395   00026E                     SPI2SDIPPS      equ	622	;# 
   396   00026F                     SPI2SSPPS       equ	623	;# 
   397   000270                     I2C1SDAPPS      equ	624	;# 
   398   000271                     I2C1SCLPPS      equ	625	;# 
   399   000272                     U1RXPPS         equ	626	;# 
   400   000273                     U1CTSPPS        equ	627	;# 
   401   000274                     U2RXPPS         equ	628	;# 
   402   000275                     U2CTSPPS        equ	629	;# 
   403   000276                     U3RXPPS         equ	630	;# 
   404   000277                     U3CTSPPS        equ	631	;# 
   405   000278                     U4RXPPS         equ	632	;# 
   406   000279                     U4CTSPPS        equ	633	;# 
   407   00027A                     U5RXPPS         equ	634	;# 
   408   00027B                     U5CTSPPS        equ	635	;# 
   409   000286                     RC4I2C          equ	646	;# 
   410   000287                     RC3I2C          equ	647	;# 
   411   000288                     RB2I2C          equ	648	;# 
   412   000289                     RB1I2C          equ	649	;# 
   413   00028B                     I2C1RXB         equ	651	;# 
   414   00028C                     I2C1TXB         equ	652	;# 
   415   00028D                     I2C1CNT         equ	653	;# 
   416   00028E                     I2C1ADB0        equ	654	;# 
   417   00028F                     I2C1ADB1        equ	655	;# 
   418   000290                     I2C1ADR0        equ	656	;# 
   419   000291                     I2C1ADR1        equ	657	;# 
   420   000292                     I2C1ADR2        equ	658	;# 
   421   000293                     I2C1ADR3        equ	659	;# 
   422   000294                     I2C1CON0        equ	660	;# 
   423   000295                     I2C1CON1        equ	661	;# 
   424   000296                     I2C1CON2        equ	662	;# 
   425   000297                     I2C1ERR         equ	663	;# 
   426   000298                     I2C1STAT0       equ	664	;# 
   427   000299                     I2C1STAT1       equ	665	;# 
   428   00029A                     I2C1PIR         equ	666	;# 
   429   00029B                     I2C1PIE         equ	667	;# 
   430   00029C                     I2C1CLK         equ	668	;# 
   431   00029D                     I2C1BTO         equ	669	;# 
   432   0002A1                     U1RXB           equ	673	;# 
   433   0002A1                     U1RXBL          equ	673	;# 
   434   0002A2                     U1RXCHK         equ	674	;# 
   435   0002A3                     U1TXB           equ	675	;# 
   436   0002A3                     U1TXBL          equ	675	;# 
   437   0002A4                     U1TXCHK         equ	676	;# 
   438   0002A5                     U1P1            equ	677	;# 
   439   0002A5                     U1P1L           equ	677	;# 
   440   0002A6                     U1P1H           equ	678	;# 
   441   0002A7                     U1P2            equ	679	;# 
   442   0002A7                     U1P2L           equ	679	;# 
   443   0002A8                     U1P2H           equ	680	;# 
   444   0002A9                     U1P3            equ	681	;# 
   445   0002A9                     U1P3L           equ	681	;# 
   446   0002AA                     U1P3H           equ	682	;# 
   447   0002AB                     U1CON0          equ	683	;# 
   448   0002AC                     U1CON1          equ	684	;# 
   449   0002AD                     U1CON2          equ	685	;# 
   450   0002AE                     U1BRG           equ	686	;# 
   451   0002AE                     U1BRGL          equ	686	;# 
   452   0002AF                     U1BRGH          equ	687	;# 
   453   0002B0                     U1FIFO          equ	688	;# 
   454   0002B1                     U1UIR           equ	689	;# 
   455   0002B2                     U1ERRIR         equ	690	;# 
   456   0002B3                     U1ERRIE         equ	691	;# 
   457   0002B4                     U2RXB           equ	692	;# 
   458   0002B4                     U2RXBL          equ	692	;# 
   459   0002B6                     U2TXB           equ	694	;# 
   460   0002B6                     U2TXBL          equ	694	;# 
   461   0002B8                     U2P1            equ	696	;# 
   462   0002B8                     U2P1L           equ	696	;# 
   463   0002BA                     U2P2            equ	698	;# 
   464   0002BA                     U2P2L           equ	698	;# 
   465   0002BC                     U2P3            equ	700	;# 
   466   0002BC                     U2P3L           equ	700	;# 
   467   0002BE                     U2CON0          equ	702	;# 
   468   0002BF                     U2CON1          equ	703	;# 
   469   0002C0                     U2CON2          equ	704	;# 
   470   0002C1                     U2BRG           equ	705	;# 
   471   0002C1                     U2BRGL          equ	705	;# 
   472   0002C2                     U2BRGH          equ	706	;# 
   473   0002C3                     U2FIFO          equ	707	;# 
   474   0002C4                     U2UIR           equ	708	;# 
   475   0002C5                     U2ERRIR         equ	709	;# 
   476   0002C6                     U2ERRIE         equ	710	;# 
   477   0002C7                     U3RXB           equ	711	;# 
   478   0002C7                     U3RXBL          equ	711	;# 
   479   0002C9                     U3TXB           equ	713	;# 
   480   0002C9                     U3TXBL          equ	713	;# 
   481   0002CB                     U3P1            equ	715	;# 
   482   0002CB                     U3P1L           equ	715	;# 
   483   0002CD                     U3P2            equ	717	;# 
   484   0002CD                     U3P2L           equ	717	;# 
   485   0002CF                     U3P3            equ	719	;# 
   486   0002CF                     U3P3L           equ	719	;# 
   487   0002D1                     U3CON0          equ	721	;# 
   488   0002D2                     U3CON1          equ	722	;# 
   489   0002D3                     U3CON2          equ	723	;# 
   490   0002D4                     U3BRG           equ	724	;# 
   491   0002D4                     U3BRGL          equ	724	;# 
   492   0002D5                     U3BRGH          equ	725	;# 
   493   0002D6                     U3FIFO          equ	726	;# 
   494   0002D7                     U3UIR           equ	727	;# 
   495   0002D8                     U3ERRIR         equ	728	;# 
   496   0002D9                     U3ERRIE         equ	729	;# 
   497   0002DA                     U4RXB           equ	730	;# 
   498   0002DA                     U4RXBL          equ	730	;# 
   499   0002DC                     U4TXB           equ	732	;# 
   500   0002DC                     U4TXBL          equ	732	;# 
   501   0002DE                     U4P1            equ	734	;# 
   502   0002DE                     U4P1L           equ	734	;# 
   503   0002E0                     U4P2            equ	736	;# 
   504   0002E0                     U4P2L           equ	736	;# 
   505   0002E2                     U4P3            equ	738	;# 
   506   0002E2                     U4P3L           equ	738	;# 
   507   0002E4                     U4CON0          equ	740	;# 
   508   0002E5                     U4CON1          equ	741	;# 
   509   0002E6                     U4CON2          equ	742	;# 
   510   0002E7                     U4BRG           equ	743	;# 
   511   0002E7                     U4BRGL          equ	743	;# 
   512   0002E8                     U4BRGH          equ	744	;# 
   513   0002E9                     U4FIFO          equ	745	;# 
   514   0002EA                     U4UIR           equ	746	;# 
   515   0002EB                     U4ERRIR         equ	747	;# 
   516   0002EC                     U4ERRIE         equ	748	;# 
   517   0002ED                     U5RXB           equ	749	;# 
   518   0002ED                     U5RXBL          equ	749	;# 
   519   0002EF                     U5TXB           equ	751	;# 
   520   0002EF                     U5TXBL          equ	751	;# 
   521   0002F1                     U5P1            equ	753	;# 
   522   0002F1                     U5P1L           equ	753	;# 
   523   0002F3                     U5P2            equ	755	;# 
   524   0002F3                     U5P2L           equ	755	;# 
   525   0002F5                     U5P3            equ	757	;# 
   526   0002F5                     U5P3L           equ	757	;# 
   527   0002F7                     U5CON0          equ	759	;# 
   528   0002F8                     U5CON1          equ	760	;# 
   529   0002F9                     U5CON2          equ	761	;# 
   530   0002FA                     U5BRG           equ	762	;# 
   531   0002FA                     U5BRGL          equ	762	;# 
   532   0002FB                     U5BRGH          equ	763	;# 
   533   0002FC                     U5FIFO          equ	764	;# 
   534   0002FD                     U5UIR           equ	765	;# 
   535   0002FE                     U5ERRIR         equ	766	;# 
   536   0002FF                     U5ERRIE         equ	767	;# 
   537   000300                     SMT1TMR         equ	768	;# 
   538   000300                     SMT1TMRL        equ	768	;# 
   539   000301                     SMT1TMRH        equ	769	;# 
   540   000302                     SMT1TMRU        equ	770	;# 
   541   000303                     SMT1CPR         equ	771	;# 
   542   000303                     SMT1CPRL        equ	771	;# 
   543   000304                     SMT1CPRH        equ	772	;# 
   544   000305                     SMT1CPRU        equ	773	;# 
   545   000306                     SMT1CPW         equ	774	;# 
   546   000306                     SMT1CPWL        equ	774	;# 
   547   000307                     SMT1CPWH        equ	775	;# 
   548   000308                     SMT1CPWU        equ	776	;# 
   549   000309                     SMT1PR          equ	777	;# 
   550   000309                     SMT1PRL         equ	777	;# 
   551   00030A                     SMT1PRH         equ	778	;# 
   552   00030B                     SMT1PRU         equ	779	;# 
   553   00030C                     SMT1CON0        equ	780	;# 
   554   00030D                     SMT1CON1        equ	781	;# 
   555   00030E                     SMT1STAT        equ	782	;# 
   556   00030F                     SMT1CLK         equ	783	;# 
   557   000310                     SMT1SIG         equ	784	;# 
   558   000311                     SMT1WIN         equ	785	;# 
   559   000318                     TMR0L           equ	792	;# 
   560   000318                     TMR0            equ	792	;# 
   561   000319                     TMR0H           equ	793	;# 
   562   000319                     PR0             equ	793	;# 
   563   00031A                     T0CON0          equ	794	;# 
   564   00031B                     T0CON1          equ	795	;# 
   565   00031C                     TMR1            equ	796	;# 
   566   00031C                     TMR1L           equ	796	;# 
   567   00031D                     TMR1H           equ	797	;# 
   568   00031E                     T1CON           equ	798	;# 
   569   00031E                     TMR1CON         equ	798	;# 
   570   00031F                     T1GCON          equ	799	;# 
   571   00031F                     TMR1GCON        equ	799	;# 
   572   000320                     T1GATE          equ	800	;# 
   573   000320                     TMR1GATE        equ	800	;# 
   574   000321                     T1CLK           equ	801	;# 
   575   000321                     TMR1CLK         equ	801	;# 
   576   000321                     PR1             equ	801	;# 
   577   000322                     T2TMR           equ	802	;# 
   578   000322                     TMR2            equ	802	;# 
   579   000323                     T2PR            equ	803	;# 
   580   000323                     PR2             equ	803	;# 
   581   000324                     T2CON           equ	804	;# 
   582   000325                     T2HLT           equ	805	;# 
   583   000326                     T2CLKCON        equ	806	;# 
   584   000326                     T2CLK           equ	806	;# 
   585   000327                     T2RST           equ	807	;# 
   586   000328                     TMR3            equ	808	;# 
   587   000328                     TMR3L           equ	808	;# 
   588   000329                     TMR3H           equ	809	;# 
   589   00032A                     T3CON           equ	810	;# 
   590   00032A                     TMR3CON         equ	810	;# 
   591   00032B                     T3GCON          equ	811	;# 
   592   00032B                     TMR3GCON        equ	811	;# 
   593   00032C                     T3GATE          equ	812	;# 
   594   00032C                     TMR3GATE        equ	812	;# 
   595   00032D                     T3CLK           equ	813	;# 
   596   00032D                     TMR3CLK         equ	813	;# 
   597   00032D                     PR3             equ	813	;# 
   598   00032E                     T4TMR           equ	814	;# 
   599   00032E                     TMR4            equ	814	;# 
   600   00032F                     T4PR            equ	815	;# 
   601   00032F                     PR4             equ	815	;# 
   602   000330                     T4CON           equ	816	;# 
   603   000331                     T4HLT           equ	817	;# 
   604   000332                     T4CLKCON        equ	818	;# 
   605   000332                     T4CLK           equ	818	;# 
   606   000333                     T4RST           equ	819	;# 
   607   000334                     TMR5            equ	820	;# 
   608   000334                     TMR5L           equ	820	;# 
   609   000335                     TMR5H           equ	821	;# 
   610   000336                     T5CON           equ	822	;# 
   611   000336                     TMR5CON         equ	822	;# 
   612   000337                     T5GCON          equ	823	;# 
   613   000337                     TMR5GCON        equ	823	;# 
   614   000338                     T5GATE          equ	824	;# 
   615   000338                     TMR5GATE        equ	824	;# 
   616   000339                     T5CLK           equ	825	;# 
   617   000339                     TMR5CLK         equ	825	;# 
   618   000339                     PR5             equ	825	;# 
   619   00033A                     T6TMR           equ	826	;# 
   620   00033A                     TMR6            equ	826	;# 
   621   00033B                     T6PR            equ	827	;# 
   622   00033B                     PR6             equ	827	;# 
   623   00033C                     T6CON           equ	828	;# 
   624   00033D                     T6HLT           equ	829	;# 
   625   00033E                     T6CLKCON        equ	830	;# 
   626   00033E                     T6CLK           equ	830	;# 
   627   00033F                     T6RST           equ	831	;# 
   628   000340                     CCPR1           equ	832	;# 
   629   000340                     CCPR1L          equ	832	;# 
   630   000341                     CCPR1H          equ	833	;# 
   631   000342                     CCP1CON         equ	834	;# 
   632   000343                     CCP1CAP         equ	835	;# 
   633   000344                     CCPR2           equ	836	;# 
   634   000344                     CCPR2L          equ	836	;# 
   635   000345                     CCPR2H          equ	837	;# 
   636   000346                     CCP2CON         equ	838	;# 
   637   000347                     CCP2CAP         equ	839	;# 
   638   000348                     CCPR3           equ	840	;# 
   639   000348                     CCPR3L          equ	840	;# 
   640   000349                     CCPR3H          equ	841	;# 
   641   00034A                     CCP3CON         equ	842	;# 
   642   00034B                     CCP3CAP         equ	843	;# 
   643   00034C                     CCPTMRS0        equ	844	;# 
   644   00034F                     CRCDATA         equ	847	;# 
   645   00034F                     CRCDATL         equ	847	;# 
   646   000350                     CRCDATH         equ	848	;# 
   647   000351                     CRCACC          equ	849	;# 
   648   000351                     CRCACCL         equ	849	;# 
   649   000352                     CRCACCH         equ	850	;# 
   650   000353                     CRCSHFT         equ	851	;# 
   651   000353                     CRCSHIFTL       equ	851	;# 
   652   000354                     CRCSHIFTH       equ	852	;# 
   653   000355                     CRCXOR          equ	853	;# 
   654   000355                     CRCXORL         equ	853	;# 
   655   000356                     CRCXORH         equ	854	;# 
   656   000357                     CRCCON0         equ	855	;# 
   657   000358                     CRCCON1         equ	856	;# 
   658   00035A                     SCANLADR        equ	858	;# 
   659   00035A                     SCANLADRL       equ	858	;# 
   660   00035B                     SCANLADRH       equ	859	;# 
   661   00035C                     SCANLADRU       equ	860	;# 
   662   00035D                     SCANHADR        equ	861	;# 
   663   00035D                     SCANHADRL       equ	861	;# 
   664   00035E                     SCANHADRH       equ	862	;# 
   665   00035F                     SCANHADRU       equ	863	;# 
   666   000360                     SCANCON0        equ	864	;# 
   667   000361                     SCANTRIG        equ	865	;# 
   668   000362                     IPR0            equ	866	;# 
   669   000363                     IPR1            equ	867	;# 
   670   000364                     IPR2            equ	868	;# 
   671   000365                     IPR3            equ	869	;# 
   672   000366                     IPR4            equ	870	;# 
   673   000367                     IPR5            equ	871	;# 
   674   000368                     IPR6            equ	872	;# 
   675   000369                     IPR7            equ	873	;# 
   676   00036A                     IPR8            equ	874	;# 
   677   00036B                     IPR9            equ	875	;# 
   678   00036C                     IPR10           equ	876	;# 
   679   00036D                     IPR11           equ	877	;# 
   680   00036E                     IPR12           equ	878	;# 
   681   00036F                     IPR13           equ	879	;# 
   682   000370                     IPR14           equ	880	;# 
   683   000371                     IPR15           equ	881	;# 
   684   000373                     STATUS_CSHAD    equ	883	;# 
   685   000374                     WREG_CSHAD      equ	884	;# 
   686   000375                     BSR_CSHAD       equ	885	;# 
   687   000376                     SHADCON         equ	886	;# 
   688   000377                     STATUS_SHAD     equ	887	;# 
   689   000378                     WREG_SHAD       equ	888	;# 
   690   000379                     BSR_SHAD        equ	889	;# 
   691   00037A                     PCLATH_SHAD     equ	890	;# 
   692   00037B                     PCLATU_SHAD     equ	891	;# 
   693   00037C                     FSR0SH          equ	892	;# 
   694   00037C                     FSR0L_SHAD      equ	892	;# 
   695   00037D                     FSR0H_SHAD      equ	893	;# 
   696   00037E                     FSR1SH          equ	894	;# 
   697   00037E                     FSR1L_SHAD      equ	894	;# 
   698   00037F                     FSR1H_SHAD      equ	895	;# 
   699   000380                     FSR2SH          equ	896	;# 
   700   000380                     FSR2L_SHAD      equ	896	;# 
   701   000381                     FSR2H_SHAD      equ	897	;# 
   702   000382                     PRODSH          equ	898	;# 
   703   000382                     PRODL_SHAD      equ	898	;# 
   704   000383                     PRODH_SHAD      equ	899	;# 
   705   0003BC                     CWG1CLK         equ	956	;# 
   706   0003BC                     CWG1CLKCON      equ	956	;# 
   707   0003BD                     CWG1ISM         equ	957	;# 
   708   0003BD                     CWG1DAT         equ	957	;# 
   709   0003BE                     CWG1DBR         equ	958	;# 
   710   0003BF                     CWG1DBF         equ	959	;# 
   711   0003C0                     CWG1CON0        equ	960	;# 
   712   0003C1                     CWG1CON1        equ	961	;# 
   713   0003C2                     CWG1AS0         equ	962	;# 
   714   0003C3                     CWG1AS1         equ	963	;# 
   715   0003C4                     CWG1STR         equ	964	;# 
   716   0003C5                     CWG2CLK         equ	965	;# 
   717   0003C5                     CWG2CLKCON      equ	965	;# 
   718   0003C6                     CWG2ISM         equ	966	;# 
   719   0003C6                     CWG2DAT         equ	966	;# 
   720   0003C7                     CWG2DBR         equ	967	;# 
   721   0003C8                     CWG2DBF         equ	968	;# 
   722   0003C9                     CWG2CON0        equ	969	;# 
   723   0003CA                     CWG2CON1        equ	970	;# 
   724   0003CB                     CWG2AS0         equ	971	;# 
   725   0003CC                     CWG2AS1         equ	972	;# 
   726   0003CD                     CWG2STR         equ	973	;# 
   727   0003CE                     CWG3CLK         equ	974	;# 
   728   0003CE                     CWG3CLKCON      equ	974	;# 
   729   0003CF                     CWG3ISM         equ	975	;# 
   730   0003CF                     CWG3DAT         equ	975	;# 
   731   0003D0                     CWG3DBR         equ	976	;# 
   732   0003D1                     CWG3DBF         equ	977	;# 
   733   0003D2                     CWG3CON0        equ	978	;# 
   734   0003D3                     CWG3CON1        equ	979	;# 
   735   0003D4                     CWG3AS0         equ	980	;# 
   736   0003D5                     CWG3AS1         equ	981	;# 
   737   0003D6                     CWG3STR         equ	982	;# 
   738   0003D7                     FVRCON          equ	983	;# 
   739   0003D8                     ADCPCON         equ	984	;# 
   740   0003D8                     ADCP            equ	984	;# 
   741   0003D9                     ADLTH           equ	985	;# 
   742   0003D9                     ADLTHL          equ	985	;# 
   743   0003DA                     ADLTHH          equ	986	;# 
   744   0003DB                     ADUTH           equ	987	;# 
   745   0003DB                     ADUTHL          equ	987	;# 
   746   0003DC                     ADUTHH          equ	988	;# 
   747   0003DD                     ADERR           equ	989	;# 
   748   0003DD                     ADERRL          equ	989	;# 
   749   0003DE                     ADERRH          equ	990	;# 
   750   0003DF                     ADSTPT          equ	991	;# 
   751   0003DF                     ADSTPTL         equ	991	;# 
   752   0003E0                     ADSTPTH         equ	992	;# 
   753   0003E1                     ADFLTR          equ	993	;# 
   754   0003E1                     ADFLTRL         equ	993	;# 
   755   0003E2                     ADFLTRH         equ	994	;# 
   756   0003E3                     ADACC           equ	995	;# 
   757   0003E3                     ADACCL          equ	995	;# 
   758   0003E4                     ADACCH          equ	996	;# 
   759   0003E5                     ADACCU          equ	997	;# 
   760   0003E6                     ADCNT           equ	998	;# 
   761   0003E7                     ADRPT           equ	999	;# 
   762   0003E8                     ADPREV          equ	1000	;# 
   763   0003E8                     ADPREVL         equ	1000	;# 
   764   0003E9                     ADPREVH         equ	1001	;# 
   765   0003EA                     ADRES           equ	1002	;# 
   766   0003EA                     ADRESL          equ	1002	;# 
   767   0003EB                     ADRESH          equ	1003	;# 
   768   0003EC                     ADPCH           equ	1004	;# 
   769   0003EE                     ADACQ           equ	1006	;# 
   770   0003EE                     ADACQL          equ	1006	;# 
   771   0003EF                     ADACQH          equ	1007	;# 
   772   0003F0                     ADCAP           equ	1008	;# 
   773   0003F1                     ADPRE           equ	1009	;# 
   774   0003F1                     ADPREL          equ	1009	;# 
   775   0003F2                     ADPREH          equ	1010	;# 
   776   0003F3                     ADCON0          equ	1011	;# 
   777   0003F4                     ADCON1          equ	1012	;# 
   778   0003F5                     ADCON2          equ	1013	;# 
   779   0003F6                     ADCON3          equ	1014	;# 
   780   0003F7                     ADSTAT          equ	1015	;# 
   781   0003F8                     ADREF           equ	1016	;# 
   782   0003F9                     ADACT           equ	1017	;# 
   783   0003FA                     ADCLK           equ	1018	;# 
   784   000400                     ANSELA          equ	1024	;# 
   785   000401                     WPUA            equ	1025	;# 
   786   000402                     ODCONA          equ	1026	;# 
   787   000403                     SLRCONA         equ	1027	;# 
   788   000404                     INLVLA          equ	1028	;# 
   789   000405                     IOCAP           equ	1029	;# 
   790   000406                     IOCAN           equ	1030	;# 
   791   000407                     IOCAF           equ	1031	;# 
   792   000408                     ANSELB          equ	1032	;# 
   793   000409                     WPUB            equ	1033	;# 
   794   00040A                     ODCONB          equ	1034	;# 
   795   00040B                     SLRCONB         equ	1035	;# 
   796   00040C                     INLVLB          equ	1036	;# 
   797   00040D                     IOCBP           equ	1037	;# 
   798   00040E                     IOCBN           equ	1038	;# 
   799   00040F                     IOCBF           equ	1039	;# 
   800   000410                     ANSELC          equ	1040	;# 
   801   000411                     WPUC            equ	1041	;# 
   802   000412                     ODCONC          equ	1042	;# 
   803   000413                     SLRCONC         equ	1043	;# 
   804   000414                     INLVLC          equ	1044	;# 
   805   000415                     IOCCP           equ	1045	;# 
   806   000416                     IOCCN           equ	1046	;# 
   807   000417                     IOCCF           equ	1047	;# 
   808   000418                     ANSELD          equ	1048	;# 
   809   000419                     WPUD            equ	1049	;# 
   810   00041A                     ODCOND          equ	1050	;# 
   811   00041B                     SLRCOND         equ	1051	;# 
   812   00041C                     INLVLD          equ	1052	;# 
   813   000420                     ANSELE          equ	1056	;# 
   814   000421                     WPUE            equ	1057	;# 
   815   000422                     ODCONE          equ	1058	;# 
   816   000423                     SLRCONE         equ	1059	;# 
   817   000424                     INLVLE          equ	1060	;# 
   818   000425                     IOCEP           equ	1061	;# 
   819   000426                     IOCEN           equ	1062	;# 
   820   000427                     IOCEF           equ	1063	;# 
   821   000428                     ANSELF          equ	1064	;# 
   822   000429                     WPUF            equ	1065	;# 
   823   00042A                     ODCONF          equ	1066	;# 
   824   00042B                     SLRCONF         equ	1067	;# 
   825   00042C                     INLVLF          equ	1068	;# 
   826   000440                     NCO1ACC         equ	1088	;# 
   827   000440                     NCO1ACCL        equ	1088	;# 
   828   000441                     NCO1ACCH        equ	1089	;# 
   829   000442                     NCO1ACCU        equ	1090	;# 
   830   000443                     NCO1INC         equ	1091	;# 
   831   000443                     NCO1INCL        equ	1091	;# 
   832   000444                     NCO1INCH        equ	1092	;# 
   833   000445                     NCO1INCU        equ	1093	;# 
   834   000446                     NCO1CON         equ	1094	;# 
   835   000447                     NCO1CLK         equ	1095	;# 
   836   000448                     NCO2ACC         equ	1096	;# 
   837   000448                     NCO2ACCL        equ	1096	;# 
   838   000449                     NCO2ACCH        equ	1097	;# 
   839   00044A                     NCO2ACCU        equ	1098	;# 
   840   00044B                     NCO2INC         equ	1099	;# 
   841   00044B                     NCO2INCL        equ	1099	;# 
   842   00044C                     NCO2INCH        equ	1100	;# 
   843   00044D                     NCO2INCU        equ	1101	;# 
   844   00044E                     NCO2CON         equ	1102	;# 
   845   00044F                     NCO2CLK         equ	1103	;# 
   846   000450                     NCO3ACC         equ	1104	;# 
   847   000450                     NCO3ACCL        equ	1104	;# 
   848   000451                     NCO3ACCH        equ	1105	;# 
   849   000452                     NCO3ACCU        equ	1106	;# 
   850   000453                     NCO3INC         equ	1107	;# 
   851   000453                     NCO3INCL        equ	1107	;# 
   852   000454                     NCO3INCH        equ	1108	;# 
   853   000455                     NCO3INCU        equ	1109	;# 
   854   000456                     NCO3CON         equ	1110	;# 
   855   000457                     NCO3CLK         equ	1111	;# 
   856   000459                     IVTLOCK         equ	1113	;# 
   857   00045A                     IVTAD           equ	1114	;# 
   858   00045A                     IVTADL          equ	1114	;# 
   859   00045B                     IVTADH          equ	1115	;# 
   860   00045C                     IVTADU          equ	1116	;# 
   861   00045D                     IVTBASE         equ	1117	;# 
   862   00045D                     IVTBASEL        equ	1117	;# 
   863   00045E                     IVTBASEH        equ	1118	;# 
   864   00045F                     IVTBASEU        equ	1119	;# 
   865   000460                     PWM1ERS         equ	1120	;# 
   866   000461                     PWM1CLK         equ	1121	;# 
   867   000462                     PWM1LDS         equ	1122	;# 
   868   000463                     PWM1PR          equ	1123	;# 
   869   000463                     PWM1PRL         equ	1123	;# 
   870   000464                     PWM1PRH         equ	1124	;# 
   871   000465                     PWM1CPRE        equ	1125	;# 
   872   000466                     PWM1PIPOS       equ	1126	;# 
   873   000467                     PWM1GIR         equ	1127	;# 
   874   000468                     PWM1GIE         equ	1128	;# 
   875   000469                     PWM1CON         equ	1129	;# 
   876   00046A                     PWM1S1CFG       equ	1130	;# 
   877   00046B                     PWM1S1P1        equ	1131	;# 
   878   00046B                     PWM1S1P1L       equ	1131	;# 
   879   00046C                     PWM1S1P1H       equ	1132	;# 
   880   00046D                     PWM1S1P2        equ	1133	;# 
   881   00046D                     PWM1S1P2L       equ	1133	;# 
   882   00046E                     PWM1S1P2H       equ	1134	;# 
   883   00046F                     PWM2ERS         equ	1135	;# 
   884   000470                     PWM2CLK         equ	1136	;# 
   885   000471                     PWM2LDS         equ	1137	;# 
   886   000472                     PWM2PR          equ	1138	;# 
   887   000472                     PWM2PRL         equ	1138	;# 
   888   000473                     PWM2PRH         equ	1139	;# 
   889   000474                     PWM2CPRE        equ	1140	;# 
   890   000475                     PWM2PIPOS       equ	1141	;# 
   891   000476                     PWM2GIR         equ	1142	;# 
   892   000477                     PWM2GIE         equ	1143	;# 
   893   000478                     PWM2CON         equ	1144	;# 
   894   000479                     PWM2S1CFG       equ	1145	;# 
   895   00047A                     PWM2S1P1        equ	1146	;# 
   896   00047A                     PWM2S1P1L       equ	1146	;# 
   897   00047B                     PWM2S1P1H       equ	1147	;# 
   898   00047C                     PWM2S1P2        equ	1148	;# 
   899   00047C                     PWM2S1P2L       equ	1148	;# 
   900   00047D                     PWM2S1P2H       equ	1149	;# 
   901   00047E                     PWM3ERS         equ	1150	;# 
   902   00047F                     PWM3CLK         equ	1151	;# 
   903   000480                     PWM3LDS         equ	1152	;# 
   904   000481                     PWM3PR          equ	1153	;# 
   905   000481                     PWM3PRL         equ	1153	;# 
   906   000482                     PWM3PRH         equ	1154	;# 
   907   000483                     PWM3CPRE        equ	1155	;# 
   908   000484                     PWM3PIPOS       equ	1156	;# 
   909   000485                     PWM3GIR         equ	1157	;# 
   910   000486                     PWM3GIE         equ	1158	;# 
   911   000487                     PWM3CON         equ	1159	;# 
   912   000488                     PWM3S1CFG       equ	1160	;# 
   913   000489                     PWM3S1P1        equ	1161	;# 
   914   000489                     PWM3S1P1L       equ	1161	;# 
   915   00048A                     PWM3S1P1H       equ	1162	;# 
   916   00048B                     PWM3S1P2        equ	1163	;# 
   917   00048B                     PWM3S1P2L       equ	1163	;# 
   918   00048C                     PWM3S1P2H       equ	1164	;# 
   919   00049C                     PWMLOAD         equ	1180	;# 
   920   00049D                     PWMEN           equ	1181	;# 
   921   00049E                     PIE0            equ	1182	;# 
   922   00049F                     PIE1            equ	1183	;# 
   923   0004A0                     PIE2            equ	1184	;# 
   924   0004A1                     PIE3            equ	1185	;# 
   925   0004A2                     PIE4            equ	1186	;# 
   926   0004A3                     PIE5            equ	1187	;# 
   927   0004A4                     PIE6            equ	1188	;# 
   928   0004A5                     PIE7            equ	1189	;# 
   929   0004A6                     PIE8            equ	1190	;# 
   930   0004A7                     PIE9            equ	1191	;# 
   931   0004A8                     PIE10           equ	1192	;# 
   932   0004A9                     PIE11           equ	1193	;# 
   933   0004AA                     PIE12           equ	1194	;# 
   934   0004AB                     PIE13           equ	1195	;# 
   935   0004AC                     PIE14           equ	1196	;# 
   936   0004AD                     PIE15           equ	1197	;# 
   937   0004AE                     PIR0            equ	1198	;# 
   938   0004AF                     PIR1            equ	1199	;# 
   939   0004B0                     PIR2            equ	1200	;# 
   940   0004B1                     PIR3            equ	1201	;# 
   941   0004B2                     PIR4            equ	1202	;# 
   942   0004B3                     PIR5            equ	1203	;# 
   943   0004B4                     PIR6            equ	1204	;# 
   944   0004B5                     PIR7            equ	1205	;# 
   945   0004B6                     PIR8            equ	1206	;# 
   946   0004B7                     PIR9            equ	1207	;# 
   947   0004B8                     PIR10           equ	1208	;# 
   948   0004B9                     PIR11           equ	1209	;# 
   949   0004BA                     PIR12           equ	1210	;# 
   950   0004BB                     PIR13           equ	1211	;# 
   951   0004BC                     PIR14           equ	1212	;# 
   952   0004BD                     PIR15           equ	1213	;# 
   953   0004BE                     LATA            equ	1214	;# 
   954   0004BF                     LATB            equ	1215	;# 
   955   0004C0                     LATC            equ	1216	;# 
   956   0004C1                     LATD            equ	1217	;# 
   957   0004C2                     LATE            equ	1218	;# 
   958   0004C3                     LATF            equ	1219	;# 
   959   0004C6                     TRISA           equ	1222	;# 
   960   0004C7                     TRISB           equ	1223	;# 
   961   0004C8                     TRISC           equ	1224	;# 
   962   0004C9                     TRISD           equ	1225	;# 
   963   0004CA                     TRISE           equ	1226	;# 
   964   0004CB                     TRISF           equ	1227	;# 
   965   0004CE                     PORTA           equ	1230	;# 
   966   0004CF                     PORTB           equ	1231	;# 
   967   0004D0                     PORTC           equ	1232	;# 
   968   0004D1                     PORTD           equ	1233	;# 
   969   0004D2                     PORTE           equ	1234	;# 
   970   0004D3                     PORTF           equ	1235	;# 
   971   0004D6                     INTCON0         equ	1238	;# 
   972   0004D7                     INTCON1         equ	1239	;# 
   973   0004D8                     STATUS          equ	1240	;# 
   974   0004D9                     FSR2            equ	1241	;# 
   975   0004D9                     FSR2L           equ	1241	;# 
   976   0004DA                     FSR2H           equ	1242	;# 
   977   0004DB                     PLUSW2          equ	1243	;# 
   978   0004DC                     PREINC2         equ	1244	;# 
   979   0004DD                     POSTDEC2        equ	1245	;# 
   980   0004DE                     POSTINC2        equ	1246	;# 
   981   0004DF                     INDF2           equ	1247	;# 
   982   0004E0                     BSR             equ	1248	;# 
   983   0004E1                     FSR1            equ	1249	;# 
   984   0004E1                     FSR1L           equ	1249	;# 
   985   0004E2                     FSR1H           equ	1250	;# 
   986   0004E3                     PLUSW1          equ	1251	;# 
   987   0004E4                     PREINC1         equ	1252	;# 
   988   0004E5                     POSTDEC1        equ	1253	;# 
   989   0004E6                     POSTINC1        equ	1254	;# 
   990   0004E7                     INDF1           equ	1255	;# 
   991   0004E8                     WREG            equ	1256	;# 
   992   0004E9                     FSR0            equ	1257	;# 
   993   0004E9                     FSR0L           equ	1257	;# 
   994   0004EA                     FSR0H           equ	1258	;# 
   995   0004EB                     PLUSW0          equ	1259	;# 
   996   0004EC                     PREINC0         equ	1260	;# 
   997   0004ED                     POSTDEC0        equ	1261	;# 
   998   0004EE                     POSTINC0        equ	1262	;# 
   999   0004EF                     INDF0           equ	1263	;# 
  1000   0004F0                     PCON0           equ	1264	;# 
  1001   0004F1                     PCON1           equ	1265	;# 
  1002   0004F2                     CPUDOZE         equ	1266	;# 
  1003   0004F3                     PROD            equ	1267	;# 
  1004   0004F3                     PRODL           equ	1267	;# 
  1005   0004F4                     PRODH           equ	1268	;# 
  1006   0004F5                     TABLAT          equ	1269	;# 
  1007   0004F6                     TBLPTR          equ	1270	;# 
  1008   0004F6                     TBLPTRL         equ	1270	;# 
  1009   0004F7                     TBLPTRH         equ	1271	;# 
  1010   0004F8                     TBLPTRU         equ	1272	;# 
  1011   0004F9                     PCLAT           equ	1273	;# 
  1012   0004F9                     PCL             equ	1273	;# 
  1013   0004FA                     PCLATH          equ	1274	;# 
  1014   0004FB                     PCLATU          equ	1275	;# 
  1015   0004FC                     STKPTR          equ	1276	;# 
  1016   0004FD                     TOS             equ	1277	;# 
  1017   0004FD                     TOSL            equ	1277	;# 
  1018   0004FE                     TOSH            equ	1278	;# 
  1019   0004FF                     TOSU            equ	1279	;# 
  1020   000039                     CLKRCON         equ	57	;# 
  1021   00003A                     CLKRCLK         equ	58	;# 
  1022   000040                     NVMCON0         equ	64	;# 
  1023   000041                     NVMCON1         equ	65	;# 
  1024   000042                     NVMLOCK         equ	66	;# 
  1025   000043                     NVMADR          equ	67	;# 
  1026   000043                     NVMADRL         equ	67	;# 
  1027   000044                     NVMADRH         equ	68	;# 
  1028   000045                     NVMADRU         equ	69	;# 
  1029   000046                     NVMDAT          equ	70	;# 
  1030   000046                     NVMDATL         equ	70	;# 
  1031   000047                     NVMDATH         equ	71	;# 
  1032   000048                     VREGCON         equ	72	;# 
  1033   000049                     BORCON          equ	73	;# 
  1034   00004A                     HLVDCON0        equ	74	;# 
  1035   00004B                     HLVDCON1        equ	75	;# 
  1036   00004C                     ZCDCON          equ	76	;# 
  1037   000060                     PMD0            equ	96	;# 
  1038   000061                     PMD1            equ	97	;# 
  1039   000063                     PMD3            equ	99	;# 
  1040   000064                     PMD4            equ	100	;# 
  1041   000065                     PMD5            equ	101	;# 
  1042   000066                     PMD6            equ	102	;# 
  1043   000067                     PMD7            equ	103	;# 
  1044   000068                     PMD8            equ	104	;# 
  1045   00006A                     MD1CON0         equ	106	;# 
  1046   00006B                     MD1CON1         equ	107	;# 
  1047   00006C                     MD1SRC          equ	108	;# 
  1048   00006D                     MD1CARL         equ	109	;# 
  1049   00006E                     MD1CARH         equ	110	;# 
  1050   00006F                     CMOUT           equ	111	;# 
  1051   000070                     CM1CON0         equ	112	;# 
  1052   000071                     CM1CON1         equ	113	;# 
  1053   000072                     CM1NCH          equ	114	;# 
  1054   000073                     CM1PCH          equ	115	;# 
  1055   000074                     CM2CON0         equ	116	;# 
  1056   000075                     CM2CON1         equ	117	;# 
  1057   000076                     CM2NCH          equ	118	;# 
  1058   000077                     CM2PCH          equ	119	;# 
  1059   000078                     WDTCON0         equ	120	;# 
  1060   000079                     WDTCON1         equ	121	;# 
  1061   00007A                     WDTPS           equ	122	;# 
  1062   00007A                     WDTPSL          equ	122	;# 
  1063   00007B                     WDTPSH          equ	123	;# 
  1064   00007C                     WDTTMR          equ	124	;# 
  1065   00007D                     DAC1DAT         equ	125	;# 
  1066   00007D                     DAC1DATL        equ	125	;# 
  1067   00007F                     DAC1CON         equ	127	;# 
  1068   000080                     SPI1RXB         equ	128	;# 
  1069   000081                     SPI1TXB         equ	129	;# 
  1070   000082                     SPI1TCNT        equ	130	;# 
  1071   000082                     SPI1TCNTL       equ	130	;# 
  1072   000083                     SPI1TCNTH       equ	131	;# 
  1073   000084                     SPI1CON0        equ	132	;# 
  1074   000085                     SPI1CON1        equ	133	;# 
  1075   000086                     SPI1CON2        equ	134	;# 
  1076   000087                     SPI1STATUS      equ	135	;# 
  1077   000088                     SPI1TWIDTH      equ	136	;# 
  1078   000089                     SPI1BAUD        equ	137	;# 
  1079   00008A                     SPI1INTF        equ	138	;# 
  1080   00008B                     SPI1INTE        equ	139	;# 
  1081   00008C                     SPI1CLK         equ	140	;# 
  1082   00008D                     SPI2RXB         equ	141	;# 
  1083   00008E                     SPI2TXB         equ	142	;# 
  1084   00008F                     SPI2TCNT        equ	143	;# 
  1085   00008F                     SPI2TCNTL       equ	143	;# 
  1086   000090                     SPI2TCNTH       equ	144	;# 
  1087   000091                     SPI2CON0        equ	145	;# 
  1088   000092                     SPI2CON1        equ	146	;# 
  1089   000093                     SPI2CON2        equ	147	;# 
  1090   000094                     SPI2STATUS      equ	148	;# 
  1091   000095                     SPI2TWIDTH      equ	149	;# 
  1092   000096                     SPI2BAUD        equ	150	;# 
  1093   000097                     SPI2INTF        equ	151	;# 
  1094   000098                     SPI2INTE        equ	152	;# 
  1095   000099                     SPI2CLK         equ	153	;# 
  1096   0000AC                     ACTCON          equ	172	;# 
  1097   0000AD                     OSCCON1         equ	173	;# 
  1098   0000AE                     OSCCON2         equ	174	;# 
  1099   0000AF                     OSCCON3         equ	175	;# 
  1100   0000B0                     OSCTUNE         equ	176	;# 
  1101   0000B1                     OSCFRQ          equ	177	;# 
  1102   0000B1                     OSCFREQ         equ	177	;# 
  1103   0000B2                     OSCSTAT         equ	178	;# 
  1104   0000B2                     OSCSTAT1        equ	178	;# 
  1105   0000B3                     OSCEN           equ	179	;# 
  1106   0000B4                     PRLOCK          equ	180	;# 
  1107   0000B5                     SCANPR          equ	181	;# 
  1108   0000B6                     DMA1PR          equ	182	;# 
  1109   0000B7                     DMA2PR          equ	183	;# 
  1110   0000B8                     DMA3PR          equ	184	;# 
  1111   0000B9                     DMA4PR          equ	185	;# 
  1112   0000BA                     DMA5PR          equ	186	;# 
  1113   0000BB                     DMA6PR          equ	187	;# 
  1114   0000BE                     MAINPR          equ	190	;# 
  1115   0000BF                     ISRPR           equ	191	;# 
  1116   0000D4                     CLCDATA         equ	212	;# 
  1117   0000D5                     CLCSELECT       equ	213	;# 
  1118   0000D6                     CLCnCON         equ	214	;# 
  1119   0000D7                     CLCnPOL         equ	215	;# 
  1120   0000D8                     CLCnSEL0        equ	216	;# 
  1121   0000D9                     CLCnSEL1        equ	217	;# 
  1122   0000DA                     CLCnSEL2        equ	218	;# 
  1123   0000DB                     CLCnSEL3        equ	219	;# 
  1124   0000DC                     CLCnGLS0        equ	220	;# 
  1125   0000DD                     CLCnGLS1        equ	221	;# 
  1126   0000DE                     CLCnGLS2        equ	222	;# 
  1127   0000DF                     CLCnGLS3        equ	223	;# 
  1128   0000E8                     DMASELECT       equ	232	;# 
  1129   0000E9                     DMAnBUF         equ	233	;# 
  1130   0000EA                     DMAnDCNT        equ	234	;# 
  1131   0000EA                     DMAnDCNTL       equ	234	;# 
  1132   0000EB                     DMAnDCNTH       equ	235	;# 
  1133   0000EC                     DMAnDPTR        equ	236	;# 
  1134   0000EC                     DMAnDPTRL       equ	236	;# 
  1135   0000ED                     DMAnDPTRH       equ	237	;# 
  1136   0000EE                     DMAnDSZ         equ	238	;# 
  1137   0000EE                     DMAnDSZL        equ	238	;# 
  1138   0000EF                     DMAnDSZH        equ	239	;# 
  1139   0000F0                     DMAnDSA         equ	240	;# 
  1140   0000F0                     DMAnDSAL        equ	240	;# 
  1141   0000F1                     DMAnDSAH        equ	241	;# 
  1142   0000F2                     DMAnSCNT        equ	242	;# 
  1143   0000F2                     DMAnSCNTL       equ	242	;# 
  1144   0000F3                     DMAnSCNTH       equ	243	;# 
  1145   0000F4                     DMAnSPTR        equ	244	;# 
  1146   0000F4                     DMAnSPTRL       equ	244	;# 
  1147   0000F5                     DMAnSPTRH       equ	245	;# 
  1148   0000F6                     DMAnSPTRU       equ	246	;# 
  1149   0000F7                     DMAnSSZ         equ	247	;# 
  1150   0000F7                     DMAnSSZL        equ	247	;# 
  1151   0000F8                     DMAnSSZH        equ	248	;# 
  1152   0000F9                     DMAnSSA         equ	249	;# 
  1153   0000F9                     DMAnSSAL        equ	249	;# 
  1154   0000FA                     DMAnSSAH        equ	250	;# 
  1155   0000FB                     DMAnSSAU        equ	251	;# 
  1156   0000FC                     DMAnCON0        equ	252	;# 
  1157   0000FD                     DMAnCON1        equ	253	;# 
  1158   0000FE                     DMAnAIRQ        equ	254	;# 
  1159   0000FF                     DMAnSIRQ        equ	255	;# 
  1160   000200                     PPSLOCK         equ	512	;# 
  1161   000201                     RA0PPS          equ	513	;# 
  1162   000202                     RA1PPS          equ	514	;# 
  1163   000203                     RA2PPS          equ	515	;# 
  1164   000204                     RA3PPS          equ	516	;# 
  1165   000205                     RA4PPS          equ	517	;# 
  1166   000206                     RA5PPS          equ	518	;# 
  1167   000207                     RA6PPS          equ	519	;# 
  1168   000208                     RA7PPS          equ	520	;# 
  1169   000209                     RB0PPS          equ	521	;# 
  1170   00020A                     RB1PPS          equ	522	;# 
  1171   00020B                     RB2PPS          equ	523	;# 
  1172   00020C                     RB3PPS          equ	524	;# 
  1173   00020D                     RB4PPS          equ	525	;# 
  1174   00020E                     RB5PPS          equ	526	;# 
  1175   00020F                     RB6PPS          equ	527	;# 
  1176   000210                     RB7PPS          equ	528	;# 
  1177   000211                     RC0PPS          equ	529	;# 
  1178   000212                     RC1PPS          equ	530	;# 
  1179   000213                     RC2PPS          equ	531	;# 
  1180   000214                     RC3PPS          equ	532	;# 
  1181   000215                     RC4PPS          equ	533	;# 
  1182   000216                     RC5PPS          equ	534	;# 
  1183   000217                     RC6PPS          equ	535	;# 
  1184   000218                     RC7PPS          equ	536	;# 
  1185   000219                     RD0PPS          equ	537	;# 
  1186   00021A                     RD1PPS          equ	538	;# 
  1187   00021B                     RD2PPS          equ	539	;# 
  1188   00021C                     RD3PPS          equ	540	;# 
  1189   00021D                     RD4PPS          equ	541	;# 
  1190   00021E                     RD5PPS          equ	542	;# 
  1191   00021F                     RD6PPS          equ	543	;# 
  1192   000220                     RD7PPS          equ	544	;# 
  1193   000221                     RE0PPS          equ	545	;# 
  1194   000222                     RE1PPS          equ	546	;# 
  1195   000223                     RE2PPS          equ	547	;# 
  1196   000229                     RF0PPS          equ	553	;# 
  1197   00022A                     RF1PPS          equ	554	;# 
  1198   00022B                     RF2PPS          equ	555	;# 
  1199   00022C                     RF3PPS          equ	556	;# 
  1200   00022D                     RF4PPS          equ	557	;# 
  1201   00022E                     RF5PPS          equ	558	;# 
  1202   00022F                     RF6PPS          equ	559	;# 
  1203   000230                     RF7PPS          equ	560	;# 
  1204   00023E                     INT0PPS         equ	574	;# 
  1205   00023F                     INT1PPS         equ	575	;# 
  1206   000240                     INT2PPS         equ	576	;# 
  1207   000241                     T0CKIPPS        equ	577	;# 
  1208   000242                     T1CKIPPS        equ	578	;# 
  1209   000243                     T1GPPS          equ	579	;# 
  1210   000244                     T3CKIPPS        equ	580	;# 
  1211   000245                     T3GPPS          equ	581	;# 
  1212   000246                     T5CKIPPS        equ	582	;# 
  1213   000247                     T5GPPS          equ	583	;# 
  1214   000248                     T2INPPS         equ	584	;# 
  1215   000249                     T4INPPS         equ	585	;# 
  1216   00024A                     T6INPPS         equ	586	;# 
  1217   00024F                     CCP1PPS         equ	591	;# 
  1218   000250                     CCP2PPS         equ	592	;# 
  1219   000251                     CCP3PPS         equ	593	;# 
  1220   000253                     PWM1ERSPPS      equ	595	;# 
  1221   000254                     PWM2ERSPPS      equ	596	;# 
  1222   000255                     PWM3ERSPPS      equ	597	;# 
  1223   000257                     PWMIN0PPS       equ	599	;# 
  1224   000258                     PWMIN1PPS       equ	600	;# 
  1225   000259                     SMT1WINPPS      equ	601	;# 
  1226   00025A                     SMT1SIGPPS      equ	602	;# 
  1227   00025B                     CWG1PPS         equ	603	;# 
  1228   00025B                     CWG1INPPS       equ	603	;# 
  1229   00025C                     CWG2PPS         equ	604	;# 
  1230   00025C                     CWG2INPPS       equ	604	;# 
  1231   00025D                     CWG3PPS         equ	605	;# 
  1232   00025D                     CWG3INPPS       equ	605	;# 
  1233   00025E                     MD1CARLPPS      equ	606	;# 
  1234   00025E                     MDCARLPPS       equ	606	;# 
  1235   00025F                     MD1CARHPPS      equ	607	;# 
  1236   00025F                     MDCARHPPS       equ	607	;# 
  1237   000260                     MD1SRCPPS       equ	608	;# 
  1238   000260                     MDSRCPPS        equ	608	;# 
  1239   000261                     CLCIN0PPS       equ	609	;# 
  1240   000262                     CLCIN1PPS       equ	610	;# 
  1241   000263                     CLCIN2PPS       equ	611	;# 
  1242   000264                     CLCIN3PPS       equ	612	;# 
  1243   000265                     CLCIN4PPS       equ	613	;# 
  1244   000266                     CLCIN5PPS       equ	614	;# 
  1245   000267                     CLCIN6PPS       equ	615	;# 
  1246   000268                     CLCIN7PPS       equ	616	;# 
  1247   000269                     ADACTPPS        equ	617	;# 
  1248   00026A                     SPI1SCKPPS      equ	618	;# 
  1249   00026B                     SPI1SDIPPS      equ	619	;# 
  1250   00026C                     SPI1SSPPS       equ	620	;# 
  1251   00026D                     SPI2SCKPPS      equ	621	;# 
  1252   00026E                     SPI2SDIPPS      equ	622	;# 
  1253   00026F                     SPI2SSPPS       equ	623	;# 
  1254   000270                     I2C1SDAPPS      equ	624	;# 
  1255   000271                     I2C1SCLPPS      equ	625	;# 
  1256   000272                     U1RXPPS         equ	626	;# 
  1257   000273                     U1CTSPPS        equ	627	;# 
  1258   000274                     U2RXPPS         equ	628	;# 
  1259   000275                     U2CTSPPS        equ	629	;# 
  1260   000276                     U3RXPPS         equ	630	;# 
  1261   000277                     U3CTSPPS        equ	631	;# 
  1262   000278                     U4RXPPS         equ	632	;# 
  1263   000279                     U4CTSPPS        equ	633	;# 
  1264   00027A                     U5RXPPS         equ	634	;# 
  1265   00027B                     U5CTSPPS        equ	635	;# 
  1266   000286                     RC4I2C          equ	646	;# 
  1267   000287                     RC3I2C          equ	647	;# 
  1268   000288                     RB2I2C          equ	648	;# 
  1269   000289                     RB1I2C          equ	649	;# 
  1270   00028B                     I2C1RXB         equ	651	;# 
  1271   00028C                     I2C1TXB         equ	652	;# 
  1272   00028D                     I2C1CNT         equ	653	;# 
  1273   00028E                     I2C1ADB0        equ	654	;# 
  1274   00028F                     I2C1ADB1        equ	655	;# 
  1275   000290                     I2C1ADR0        equ	656	;# 
  1276   000291                     I2C1ADR1        equ	657	;# 
  1277   000292                     I2C1ADR2        equ	658	;# 
  1278   000293                     I2C1ADR3        equ	659	;# 
  1279   000294                     I2C1CON0        equ	660	;# 
  1280   000295                     I2C1CON1        equ	661	;# 
  1281   000296                     I2C1CON2        equ	662	;# 
  1282   000297                     I2C1ERR         equ	663	;# 
  1283   000298                     I2C1STAT0       equ	664	;# 
  1284   000299                     I2C1STAT1       equ	665	;# 
  1285   00029A                     I2C1PIR         equ	666	;# 
  1286   00029B                     I2C1PIE         equ	667	;# 
  1287   00029C                     I2C1CLK         equ	668	;# 
  1288   00029D                     I2C1BTO         equ	669	;# 
  1289   0002A1                     U1RXB           equ	673	;# 
  1290   0002A1                     U1RXBL          equ	673	;# 
  1291   0002A2                     U1RXCHK         equ	674	;# 
  1292   0002A3                     U1TXB           equ	675	;# 
  1293   0002A3                     U1TXBL          equ	675	;# 
  1294   0002A4                     U1TXCHK         equ	676	;# 
  1295   0002A5                     U1P1            equ	677	;# 
  1296   0002A5                     U1P1L           equ	677	;# 
  1297   0002A6                     U1P1H           equ	678	;# 
  1298   0002A7                     U1P2            equ	679	;# 
  1299   0002A7                     U1P2L           equ	679	;# 
  1300   0002A8                     U1P2H           equ	680	;# 
  1301   0002A9                     U1P3            equ	681	;# 
  1302   0002A9                     U1P3L           equ	681	;# 
  1303   0002AA                     U1P3H           equ	682	;# 
  1304   0002AB                     U1CON0          equ	683	;# 
  1305   0002AC                     U1CON1          equ	684	;# 
  1306   0002AD                     U1CON2          equ	685	;# 
  1307   0002AE                     U1BRG           equ	686	;# 
  1308   0002AE                     U1BRGL          equ	686	;# 
  1309   0002AF                     U1BRGH          equ	687	;# 
  1310   0002B0                     U1FIFO          equ	688	;# 
  1311   0002B1                     U1UIR           equ	689	;# 
  1312   0002B2                     U1ERRIR         equ	690	;# 
  1313   0002B3                     U1ERRIE         equ	691	;# 
  1314   0002B4                     U2RXB           equ	692	;# 
  1315   0002B4                     U2RXBL          equ	692	;# 
  1316   0002B6                     U2TXB           equ	694	;# 
  1317   0002B6                     U2TXBL          equ	694	;# 
  1318   0002B8                     U2P1            equ	696	;# 
  1319   0002B8                     U2P1L           equ	696	;# 
  1320   0002BA                     U2P2            equ	698	;# 
  1321   0002BA                     U2P2L           equ	698	;# 
  1322   0002BC                     U2P3            equ	700	;# 
  1323   0002BC                     U2P3L           equ	700	;# 
  1324   0002BE                     U2CON0          equ	702	;# 
  1325   0002BF                     U2CON1          equ	703	;# 
  1326   0002C0                     U2CON2          equ	704	;# 
  1327   0002C1                     U2BRG           equ	705	;# 
  1328   0002C1                     U2BRGL          equ	705	;# 
  1329   0002C2                     U2BRGH          equ	706	;# 
  1330   0002C3                     U2FIFO          equ	707	;# 
  1331   0002C4                     U2UIR           equ	708	;# 
  1332   0002C5                     U2ERRIR         equ	709	;# 
  1333   0002C6                     U2ERRIE         equ	710	;# 
  1334   0002C7                     U3RXB           equ	711	;# 
  1335   0002C7                     U3RXBL          equ	711	;# 
  1336   0002C9                     U3TXB           equ	713	;# 
  1337   0002C9                     U3TXBL          equ	713	;# 
  1338   0002CB                     U3P1            equ	715	;# 
  1339   0002CB                     U3P1L           equ	715	;# 
  1340   0002CD                     U3P2            equ	717	;# 
  1341   0002CD                     U3P2L           equ	717	;# 
  1342   0002CF                     U3P3            equ	719	;# 
  1343   0002CF                     U3P3L           equ	719	;# 
  1344   0002D1                     U3CON0          equ	721	;# 
  1345   0002D2                     U3CON1          equ	722	;# 
  1346   0002D3                     U3CON2          equ	723	;# 
  1347   0002D4                     U3BRG           equ	724	;# 
  1348   0002D4                     U3BRGL          equ	724	;# 
  1349   0002D5                     U3BRGH          equ	725	;# 
  1350   0002D6                     U3FIFO          equ	726	;# 
  1351   0002D7                     U3UIR           equ	727	;# 
  1352   0002D8                     U3ERRIR         equ	728	;# 
  1353   0002D9                     U3ERRIE         equ	729	;# 
  1354   0002DA                     U4RXB           equ	730	;# 
  1355   0002DA                     U4RXBL          equ	730	;# 
  1356   0002DC                     U4TXB           equ	732	;# 
  1357   0002DC                     U4TXBL          equ	732	;# 
  1358   0002DE                     U4P1            equ	734	;# 
  1359   0002DE                     U4P1L           equ	734	;# 
  1360   0002E0                     U4P2            equ	736	;# 
  1361   0002E0                     U4P2L           equ	736	;# 
  1362   0002E2                     U4P3            equ	738	;# 
  1363   0002E2                     U4P3L           equ	738	;# 
  1364   0002E4                     U4CON0          equ	740	;# 
  1365   0002E5                     U4CON1          equ	741	;# 
  1366   0002E6                     U4CON2          equ	742	;# 
  1367   0002E7                     U4BRG           equ	743	;# 
  1368   0002E7                     U4BRGL          equ	743	;# 
  1369   0002E8                     U4BRGH          equ	744	;# 
  1370   0002E9                     U4FIFO          equ	745	;# 
  1371   0002EA                     U4UIR           equ	746	;# 
  1372   0002EB                     U4ERRIR         equ	747	;# 
  1373   0002EC                     U4ERRIE         equ	748	;# 
  1374   0002ED                     U5RXB           equ	749	;# 
  1375   0002ED                     U5RXBL          equ	749	;# 
  1376   0002EF                     U5TXB           equ	751	;# 
  1377   0002EF                     U5TXBL          equ	751	;# 
  1378   0002F1                     U5P1            equ	753	;# 
  1379   0002F1                     U5P1L           equ	753	;# 
  1380   0002F3                     U5P2            equ	755	;# 
  1381   0002F3                     U5P2L           equ	755	;# 
  1382   0002F5                     U5P3            equ	757	;# 
  1383   0002F5                     U5P3L           equ	757	;# 
  1384   0002F7                     U5CON0          equ	759	;# 
  1385   0002F8                     U5CON1          equ	760	;# 
  1386   0002F9                     U5CON2          equ	761	;# 
  1387   0002FA                     U5BRG           equ	762	;# 
  1388   0002FA                     U5BRGL          equ	762	;# 
  1389   0002FB                     U5BRGH          equ	763	;# 
  1390   0002FC                     U5FIFO          equ	764	;# 
  1391   0002FD                     U5UIR           equ	765	;# 
  1392   0002FE                     U5ERRIR         equ	766	;# 
  1393   0002FF                     U5ERRIE         equ	767	;# 
  1394   000300                     SMT1TMR         equ	768	;# 
  1395   000300                     SMT1TMRL        equ	768	;# 
  1396   000301                     SMT1TMRH        equ	769	;# 
  1397   000302                     SMT1TMRU        equ	770	;# 
  1398   000303                     SMT1CPR         equ	771	;# 
  1399   000303                     SMT1CPRL        equ	771	;# 
  1400   000304                     SMT1CPRH        equ	772	;# 
  1401   000305                     SMT1CPRU        equ	773	;# 
  1402   000306                     SMT1CPW         equ	774	;# 
  1403   000306                     SMT1CPWL        equ	774	;# 
  1404   000307                     SMT1CPWH        equ	775	;# 
  1405   000308                     SMT1CPWU        equ	776	;# 
  1406   000309                     SMT1PR          equ	777	;# 
  1407   000309                     SMT1PRL         equ	777	;# 
  1408   00030A                     SMT1PRH         equ	778	;# 
  1409   00030B                     SMT1PRU         equ	779	;# 
  1410   00030C                     SMT1CON0        equ	780	;# 
  1411   00030D                     SMT1CON1        equ	781	;# 
  1412   00030E                     SMT1STAT        equ	782	;# 
  1413   00030F                     SMT1CLK         equ	783	;# 
  1414   000310                     SMT1SIG         equ	784	;# 
  1415   000311                     SMT1WIN         equ	785	;# 
  1416   000318                     TMR0L           equ	792	;# 
  1417   000318                     TMR0            equ	792	;# 
  1418   000319                     TMR0H           equ	793	;# 
  1419   000319                     PR0             equ	793	;# 
  1420   00031A                     T0CON0          equ	794	;# 
  1421   00031B                     T0CON1          equ	795	;# 
  1422   00031C                     TMR1            equ	796	;# 
  1423   00031C                     TMR1L           equ	796	;# 
  1424   00031D                     TMR1H           equ	797	;# 
  1425   00031E                     T1CON           equ	798	;# 
  1426   00031E                     TMR1CON         equ	798	;# 
  1427   00031F                     T1GCON          equ	799	;# 
  1428   00031F                     TMR1GCON        equ	799	;# 
  1429   000320                     T1GATE          equ	800	;# 
  1430   000320                     TMR1GATE        equ	800	;# 
  1431   000321                     T1CLK           equ	801	;# 
  1432   000321                     TMR1CLK         equ	801	;# 
  1433   000321                     PR1             equ	801	;# 
  1434   000322                     T2TMR           equ	802	;# 
  1435   000322                     TMR2            equ	802	;# 
  1436   000323                     T2PR            equ	803	;# 
  1437   000323                     PR2             equ	803	;# 
  1438   000324                     T2CON           equ	804	;# 
  1439   000325                     T2HLT           equ	805	;# 
  1440   000326                     T2CLKCON        equ	806	;# 
  1441   000326                     T2CLK           equ	806	;# 
  1442   000327                     T2RST           equ	807	;# 
  1443   000328                     TMR3            equ	808	;# 
  1444   000328                     TMR3L           equ	808	;# 
  1445   000329                     TMR3H           equ	809	;# 
  1446   00032A                     T3CON           equ	810	;# 
  1447   00032A                     TMR3CON         equ	810	;# 
  1448   00032B                     T3GCON          equ	811	;# 
  1449   00032B                     TMR3GCON        equ	811	;# 
  1450   00032C                     T3GATE          equ	812	;# 
  1451   00032C                     TMR3GATE        equ	812	;# 
  1452   00032D                     T3CLK           equ	813	;# 
  1453   00032D                     TMR3CLK         equ	813	;# 
  1454   00032D                     PR3             equ	813	;# 
  1455   00032E                     T4TMR           equ	814	;# 
  1456   00032E                     TMR4            equ	814	;# 
  1457   00032F                     T4PR            equ	815	;# 
  1458   00032F                     PR4             equ	815	;# 
  1459   000330                     T4CON           equ	816	;# 
  1460   000331                     T4HLT           equ	817	;# 
  1461   000332                     T4CLKCON        equ	818	;# 
  1462   000332                     T4CLK           equ	818	;# 
  1463   000333                     T4RST           equ	819	;# 
  1464   000334                     TMR5            equ	820	;# 
  1465   000334                     TMR5L           equ	820	;# 
  1466   000335                     TMR5H           equ	821	;# 
  1467   000336                     T5CON           equ	822	;# 
  1468   000336                     TMR5CON         equ	822	;# 
  1469   000337                     T5GCON          equ	823	;# 
  1470   000337                     TMR5GCON        equ	823	;# 
  1471   000338                     T5GATE          equ	824	;# 
  1472   000338                     TMR5GATE        equ	824	;# 
  1473   000339                     T5CLK           equ	825	;# 
  1474   000339                     TMR5CLK         equ	825	;# 
  1475   000339                     PR5             equ	825	;# 
  1476   00033A                     T6TMR           equ	826	;# 
  1477   00033A                     TMR6            equ	826	;# 
  1478   00033B                     T6PR            equ	827	;# 
  1479   00033B                     PR6             equ	827	;# 
  1480   00033C                     T6CON           equ	828	;# 
  1481   00033D                     T6HLT           equ	829	;# 
  1482   00033E                     T6CLKCON        equ	830	;# 
  1483   00033E                     T6CLK           equ	830	;# 
  1484   00033F                     T6RST           equ	831	;# 
  1485   000340                     CCPR1           equ	832	;# 
  1486   000340                     CCPR1L          equ	832	;# 
  1487   000341                     CCPR1H          equ	833	;# 
  1488   000342                     CCP1CON         equ	834	;# 
  1489   000343                     CCP1CAP         equ	835	;# 
  1490   000344                     CCPR2           equ	836	;# 
  1491   000344                     CCPR2L          equ	836	;# 
  1492   000345                     CCPR2H          equ	837	;# 
  1493   000346                     CCP2CON         equ	838	;# 
  1494   000347                     CCP2CAP         equ	839	;# 
  1495   000348                     CCPR3           equ	840	;# 
  1496   000348                     CCPR3L          equ	840	;# 
  1497   000349                     CCPR3H          equ	841	;# 
  1498   00034A                     CCP3CON         equ	842	;# 
  1499   00034B                     CCP3CAP         equ	843	;# 
  1500   00034C                     CCPTMRS0        equ	844	;# 
  1501   00034F                     CRCDATA         equ	847	;# 
  1502   00034F                     CRCDATL         equ	847	;# 
  1503   000350                     CRCDATH         equ	848	;# 
  1504   000351                     CRCACC          equ	849	;# 
  1505   000351                     CRCACCL         equ	849	;# 
  1506   000352                     CRCACCH         equ	850	;# 
  1507   000353                     CRCSHFT         equ	851	;# 
  1508   000353                     CRCSHIFTL       equ	851	;# 
  1509   000354                     CRCSHIFTH       equ	852	;# 
  1510   000355                     CRCXOR          equ	853	;# 
  1511   000355                     CRCXORL         equ	853	;# 
  1512   000356                     CRCXORH         equ	854	;# 
  1513   000357                     CRCCON0         equ	855	;# 
  1514   000358                     CRCCON1         equ	856	;# 
  1515   00035A                     SCANLADR        equ	858	;# 
  1516   00035A                     SCANLADRL       equ	858	;# 
  1517   00035B                     SCANLADRH       equ	859	;# 
  1518   00035C                     SCANLADRU       equ	860	;# 
  1519   00035D                     SCANHADR        equ	861	;# 
  1520   00035D                     SCANHADRL       equ	861	;# 
  1521   00035E                     SCANHADRH       equ	862	;# 
  1522   00035F                     SCANHADRU       equ	863	;# 
  1523   000360                     SCANCON0        equ	864	;# 
  1524   000361                     SCANTRIG        equ	865	;# 
  1525   000362                     IPR0            equ	866	;# 
  1526   000363                     IPR1            equ	867	;# 
  1527   000364                     IPR2            equ	868	;# 
  1528   000365                     IPR3            equ	869	;# 
  1529   000366                     IPR4            equ	870	;# 
  1530   000367                     IPR5            equ	871	;# 
  1531   000368                     IPR6            equ	872	;# 
  1532   000369                     IPR7            equ	873	;# 
  1533   00036A                     IPR8            equ	874	;# 
  1534   00036B                     IPR9            equ	875	;# 
  1535   00036C                     IPR10           equ	876	;# 
  1536   00036D                     IPR11           equ	877	;# 
  1537   00036E                     IPR12           equ	878	;# 
  1538   00036F                     IPR13           equ	879	;# 
  1539   000370                     IPR14           equ	880	;# 
  1540   000371                     IPR15           equ	881	;# 
  1541   000373                     STATUS_CSHAD    equ	883	;# 
  1542   000374                     WREG_CSHAD      equ	884	;# 
  1543   000375                     BSR_CSHAD       equ	885	;# 
  1544   000376                     SHADCON         equ	886	;# 
  1545   000377                     STATUS_SHAD     equ	887	;# 
  1546   000378                     WREG_SHAD       equ	888	;# 
  1547   000379                     BSR_SHAD        equ	889	;# 
  1548   00037A                     PCLATH_SHAD     equ	890	;# 
  1549   00037B                     PCLATU_SHAD     equ	891	;# 
  1550   00037C                     FSR0SH          equ	892	;# 
  1551   00037C                     FSR0L_SHAD      equ	892	;# 
  1552   00037D                     FSR0H_SHAD      equ	893	;# 
  1553   00037E                     FSR1SH          equ	894	;# 
  1554   00037E                     FSR1L_SHAD      equ	894	;# 
  1555   00037F                     FSR1H_SHAD      equ	895	;# 
  1556   000380                     FSR2SH          equ	896	;# 
  1557   000380                     FSR2L_SHAD      equ	896	;# 
  1558   000381                     FSR2H_SHAD      equ	897	;# 
  1559   000382                     PRODSH          equ	898	;# 
  1560   000382                     PRODL_SHAD      equ	898	;# 
  1561   000383                     PRODH_SHAD      equ	899	;# 
  1562   0003BC                     CWG1CLK         equ	956	;# 
  1563   0003BC                     CWG1CLKCON      equ	956	;# 
  1564   0003BD                     CWG1ISM         equ	957	;# 
  1565   0003BD                     CWG1DAT         equ	957	;# 
  1566   0003BE                     CWG1DBR         equ	958	;# 
  1567   0003BF                     CWG1DBF         equ	959	;# 
  1568   0003C0                     CWG1CON0        equ	960	;# 
  1569   0003C1                     CWG1CON1        equ	961	;# 
  1570   0003C2                     CWG1AS0         equ	962	;# 
  1571   0003C3                     CWG1AS1         equ	963	;# 
  1572   0003C4                     CWG1STR         equ	964	;# 
  1573   0003C5                     CWG2CLK         equ	965	;# 
  1574   0003C5                     CWG2CLKCON      equ	965	;# 
  1575   0003C6                     CWG2ISM         equ	966	;# 
  1576   0003C6                     CWG2DAT         equ	966	;# 
  1577   0003C7                     CWG2DBR         equ	967	;# 
  1578   0003C8                     CWG2DBF         equ	968	;# 
  1579   0003C9                     CWG2CON0        equ	969	;# 
  1580   0003CA                     CWG2CON1        equ	970	;# 
  1581   0003CB                     CWG2AS0         equ	971	;# 
  1582   0003CC                     CWG2AS1         equ	972	;# 
  1583   0003CD                     CWG2STR         equ	973	;# 
  1584   0003CE                     CWG3CLK         equ	974	;# 
  1585   0003CE                     CWG3CLKCON      equ	974	;# 
  1586   0003CF                     CWG3ISM         equ	975	;# 
  1587   0003CF                     CWG3DAT         equ	975	;# 
  1588   0003D0                     CWG3DBR         equ	976	;# 
  1589   0003D1                     CWG3DBF         equ	977	;# 
  1590   0003D2                     CWG3CON0        equ	978	;# 
  1591   0003D3                     CWG3CON1        equ	979	;# 
  1592   0003D4                     CWG3AS0         equ	980	;# 
  1593   0003D5                     CWG3AS1         equ	981	;# 
  1594   0003D6                     CWG3STR         equ	982	;# 
  1595   0003D7                     FVRCON          equ	983	;# 
  1596   0003D8                     ADCPCON         equ	984	;# 
  1597   0003D8                     ADCP            equ	984	;# 
  1598   0003D9                     ADLTH           equ	985	;# 
  1599   0003D9                     ADLTHL          equ	985	;# 
  1600   0003DA                     ADLTHH          equ	986	;# 
  1601   0003DB                     ADUTH           equ	987	;# 
  1602   0003DB                     ADUTHL          equ	987	;# 
  1603   0003DC                     ADUTHH          equ	988	;# 
  1604   0003DD                     ADERR           equ	989	;# 
  1605   0003DD                     ADERRL          equ	989	;# 
  1606   0003DE                     ADERRH          equ	990	;# 
  1607   0003DF                     ADSTPT          equ	991	;# 
  1608   0003DF                     ADSTPTL         equ	991	;# 
  1609   0003E0                     ADSTPTH         equ	992	;# 
  1610   0003E1                     ADFLTR          equ	993	;# 
  1611   0003E1                     ADFLTRL         equ	993	;# 
  1612   0003E2                     ADFLTRH         equ	994	;# 
  1613   0003E3                     ADACC           equ	995	;# 
  1614   0003E3                     ADACCL          equ	995	;# 
  1615   0003E4                     ADACCH          equ	996	;# 
  1616   0003E5                     ADACCU          equ	997	;# 
  1617   0003E6                     ADCNT           equ	998	;# 
  1618   0003E7                     ADRPT           equ	999	;# 
  1619   0003E8                     ADPREV          equ	1000	;# 
  1620   0003E8                     ADPREVL         equ	1000	;# 
  1621   0003E9                     ADPREVH         equ	1001	;# 
  1622   0003EA                     ADRES           equ	1002	;# 
  1623   0003EA                     ADRESL          equ	1002	;# 
  1624   0003EB                     ADRESH          equ	1003	;# 
  1625   0003EC                     ADPCH           equ	1004	;# 
  1626   0003EE                     ADACQ           equ	1006	;# 
  1627   0003EE                     ADACQL          equ	1006	;# 
  1628   0003EF                     ADACQH          equ	1007	;# 
  1629   0003F0                     ADCAP           equ	1008	;# 
  1630   0003F1                     ADPRE           equ	1009	;# 
  1631   0003F1                     ADPREL          equ	1009	;# 
  1632   0003F2                     ADPREH          equ	1010	;# 
  1633   0003F3                     ADCON0          equ	1011	;# 
  1634   0003F4                     ADCON1          equ	1012	;# 
  1635   0003F5                     ADCON2          equ	1013	;# 
  1636   0003F6                     ADCON3          equ	1014	;# 
  1637   0003F7                     ADSTAT          equ	1015	;# 
  1638   0003F8                     ADREF           equ	1016	;# 
  1639   0003F9                     ADACT           equ	1017	;# 
  1640   0003FA                     ADCLK           equ	1018	;# 
  1641   000400                     ANSELA          equ	1024	;# 
  1642   000401                     WPUA            equ	1025	;# 
  1643   000402                     ODCONA          equ	1026	;# 
  1644   000403                     SLRCONA         equ	1027	;# 
  1645   000404                     INLVLA          equ	1028	;# 
  1646   000405                     IOCAP           equ	1029	;# 
  1647   000406                     IOCAN           equ	1030	;# 
  1648   000407                     IOCAF           equ	1031	;# 
  1649   000408                     ANSELB          equ	1032	;# 
  1650   000409                     WPUB            equ	1033	;# 
  1651   00040A                     ODCONB          equ	1034	;# 
  1652   00040B                     SLRCONB         equ	1035	;# 
  1653   00040C                     INLVLB          equ	1036	;# 
  1654   00040D                     IOCBP           equ	1037	;# 
  1655   00040E                     IOCBN           equ	1038	;# 
  1656   00040F                     IOCBF           equ	1039	;# 
  1657   000410                     ANSELC          equ	1040	;# 
  1658   000411                     WPUC            equ	1041	;# 
  1659   000412                     ODCONC          equ	1042	;# 
  1660   000413                     SLRCONC         equ	1043	;# 
  1661   000414                     INLVLC          equ	1044	;# 
  1662   000415                     IOCCP           equ	1045	;# 
  1663   000416                     IOCCN           equ	1046	;# 
  1664   000417                     IOCCF           equ	1047	;# 
  1665   000418                     ANSELD          equ	1048	;# 
  1666   000419                     WPUD            equ	1049	;# 
  1667   00041A                     ODCOND          equ	1050	;# 
  1668   00041B                     SLRCOND         equ	1051	;# 
  1669   00041C                     INLVLD          equ	1052	;# 
  1670   000420                     ANSELE          equ	1056	;# 
  1671   000421                     WPUE            equ	1057	;# 
  1672   000422                     ODCONE          equ	1058	;# 
  1673   000423                     SLRCONE         equ	1059	;# 
  1674   000424                     INLVLE          equ	1060	;# 
  1675   000425                     IOCEP           equ	1061	;# 
  1676   000426                     IOCEN           equ	1062	;# 
  1677   000427                     IOCEF           equ	1063	;# 
  1678   000428                     ANSELF          equ	1064	;# 
  1679   000429                     WPUF            equ	1065	;# 
  1680   00042A                     ODCONF          equ	1066	;# 
  1681   00042B                     SLRCONF         equ	1067	;# 
  1682   00042C                     INLVLF          equ	1068	;# 
  1683   000440                     NCO1ACC         equ	1088	;# 
  1684   000440                     NCO1ACCL        equ	1088	;# 
  1685   000441                     NCO1ACCH        equ	1089	;# 
  1686   000442                     NCO1ACCU        equ	1090	;# 
  1687   000443                     NCO1INC         equ	1091	;# 
  1688   000443                     NCO1INCL        equ	1091	;# 
  1689   000444                     NCO1INCH        equ	1092	;# 
  1690   000445                     NCO1INCU        equ	1093	;# 
  1691   000446                     NCO1CON         equ	1094	;# 
  1692   000447                     NCO1CLK         equ	1095	;# 
  1693   000448                     NCO2ACC         equ	1096	;# 
  1694   000448                     NCO2ACCL        equ	1096	;# 
  1695   000449                     NCO2ACCH        equ	1097	;# 
  1696   00044A                     NCO2ACCU        equ	1098	;# 
  1697   00044B                     NCO2INC         equ	1099	;# 
  1698   00044B                     NCO2INCL        equ	1099	;# 
  1699   00044C                     NCO2INCH        equ	1100	;# 
  1700   00044D                     NCO2INCU        equ	1101	;# 
  1701   00044E                     NCO2CON         equ	1102	;# 
  1702   00044F                     NCO2CLK         equ	1103	;# 
  1703   000450                     NCO3ACC         equ	1104	;# 
  1704   000450                     NCO3ACCL        equ	1104	;# 
  1705   000451                     NCO3ACCH        equ	1105	;# 
  1706   000452                     NCO3ACCU        equ	1106	;# 
  1707   000453                     NCO3INC         equ	1107	;# 
  1708   000453                     NCO3INCL        equ	1107	;# 
  1709   000454                     NCO3INCH        equ	1108	;# 
  1710   000455                     NCO3INCU        equ	1109	;# 
  1711   000456                     NCO3CON         equ	1110	;# 
  1712   000457                     NCO3CLK         equ	1111	;# 
  1713   000459                     IVTLOCK         equ	1113	;# 
  1714   00045A                     IVTAD           equ	1114	;# 
  1715   00045A                     IVTADL          equ	1114	;# 
  1716   00045B                     IVTADH          equ	1115	;# 
  1717   00045C                     IVTADU          equ	1116	;# 
  1718   00045D                     IVTBASE         equ	1117	;# 
  1719   00045D                     IVTBASEL        equ	1117	;# 
  1720   00045E                     IVTBASEH        equ	1118	;# 
  1721   00045F                     IVTBASEU        equ	1119	;# 
  1722   000460                     PWM1ERS         equ	1120	;# 
  1723   000461                     PWM1CLK         equ	1121	;# 
  1724   000462                     PWM1LDS         equ	1122	;# 
  1725   000463                     PWM1PR          equ	1123	;# 
  1726   000463                     PWM1PRL         equ	1123	;# 
  1727   000464                     PWM1PRH         equ	1124	;# 
  1728   000465                     PWM1CPRE        equ	1125	;# 
  1729   000466                     PWM1PIPOS       equ	1126	;# 
  1730   000467                     PWM1GIR         equ	1127	;# 
  1731   000468                     PWM1GIE         equ	1128	;# 
  1732   000469                     PWM1CON         equ	1129	;# 
  1733   00046A                     PWM1S1CFG       equ	1130	;# 
  1734   00046B                     PWM1S1P1        equ	1131	;# 
  1735   00046B                     PWM1S1P1L       equ	1131	;# 
  1736   00046C                     PWM1S1P1H       equ	1132	;# 
  1737   00046D                     PWM1S1P2        equ	1133	;# 
  1738   00046D                     PWM1S1P2L       equ	1133	;# 
  1739   00046E                     PWM1S1P2H       equ	1134	;# 
  1740   00046F                     PWM2ERS         equ	1135	;# 
  1741   000470                     PWM2CLK         equ	1136	;# 
  1742   000471                     PWM2LDS         equ	1137	;# 
  1743   000472                     PWM2PR          equ	1138	;# 
  1744   000472                     PWM2PRL         equ	1138	;# 
  1745   000473                     PWM2PRH         equ	1139	;# 
  1746   000474                     PWM2CPRE        equ	1140	;# 
  1747   000475                     PWM2PIPOS       equ	1141	;# 
  1748   000476                     PWM2GIR         equ	1142	;# 
  1749   000477                     PWM2GIE         equ	1143	;# 
  1750   000478                     PWM2CON         equ	1144	;# 
  1751   000479                     PWM2S1CFG       equ	1145	;# 
  1752   00047A                     PWM2S1P1        equ	1146	;# 
  1753   00047A                     PWM2S1P1L       equ	1146	;# 
  1754   00047B                     PWM2S1P1H       equ	1147	;# 
  1755   00047C                     PWM2S1P2        equ	1148	;# 
  1756   00047C                     PWM2S1P2L       equ	1148	;# 
  1757   00047D                     PWM2S1P2H       equ	1149	;# 
  1758   00047E                     PWM3ERS         equ	1150	;# 
  1759   00047F                     PWM3CLK         equ	1151	;# 
  1760   000480                     PWM3LDS         equ	1152	;# 
  1761   000481                     PWM3PR          equ	1153	;# 
  1762   000481                     PWM3PRL         equ	1153	;# 
  1763   000482                     PWM3PRH         equ	1154	;# 
  1764   000483                     PWM3CPRE        equ	1155	;# 
  1765   000484                     PWM3PIPOS       equ	1156	;# 
  1766   000485                     PWM3GIR         equ	1157	;# 
  1767   000486                     PWM3GIE         equ	1158	;# 
  1768   000487                     PWM3CON         equ	1159	;# 
  1769   000488                     PWM3S1CFG       equ	1160	;# 
  1770   000489                     PWM3S1P1        equ	1161	;# 
  1771   000489                     PWM3S1P1L       equ	1161	;# 
  1772   00048A                     PWM3S1P1H       equ	1162	;# 
  1773   00048B                     PWM3S1P2        equ	1163	;# 
  1774   00048B                     PWM3S1P2L       equ	1163	;# 
  1775   00048C                     PWM3S1P2H       equ	1164	;# 
  1776   00049C                     PWMLOAD         equ	1180	;# 
  1777   00049D                     PWMEN           equ	1181	;# 
  1778   00049E                     PIE0            equ	1182	;# 
  1779   00049F                     PIE1            equ	1183	;# 
  1780   0004A0                     PIE2            equ	1184	;# 
  1781   0004A1                     PIE3            equ	1185	;# 
  1782   0004A2                     PIE4            equ	1186	;# 
  1783   0004A3                     PIE5            equ	1187	;# 
  1784   0004A4                     PIE6            equ	1188	;# 
  1785   0004A5                     PIE7            equ	1189	;# 
  1786   0004A6                     PIE8            equ	1190	;# 
  1787   0004A7                     PIE9            equ	1191	;# 
  1788   0004A8                     PIE10           equ	1192	;# 
  1789   0004A9                     PIE11           equ	1193	;# 
  1790   0004AA                     PIE12           equ	1194	;# 
  1791   0004AB                     PIE13           equ	1195	;# 
  1792   0004AC                     PIE14           equ	1196	;# 
  1793   0004AD                     PIE15           equ	1197	;# 
  1794   0004AE                     PIR0            equ	1198	;# 
  1795   0004AF                     PIR1            equ	1199	;# 
  1796   0004B0                     PIR2            equ	1200	;# 
  1797   0004B1                     PIR3            equ	1201	;# 
  1798   0004B2                     PIR4            equ	1202	;# 
  1799   0004B3                     PIR5            equ	1203	;# 
  1800   0004B4                     PIR6            equ	1204	;# 
  1801   0004B5                     PIR7            equ	1205	;# 
  1802   0004B6                     PIR8            equ	1206	;# 
  1803   0004B7                     PIR9            equ	1207	;# 
  1804   0004B8                     PIR10           equ	1208	;# 
  1805   0004B9                     PIR11           equ	1209	;# 
  1806   0004BA                     PIR12           equ	1210	;# 
  1807   0004BB                     PIR13           equ	1211	;# 
  1808   0004BC                     PIR14           equ	1212	;# 
  1809   0004BD                     PIR15           equ	1213	;# 
  1810   0004BE                     LATA            equ	1214	;# 
  1811   0004BF                     LATB            equ	1215	;# 
  1812   0004C0                     LATC            equ	1216	;# 
  1813   0004C1                     LATD            equ	1217	;# 
  1814   0004C2                     LATE            equ	1218	;# 
  1815   0004C3                     LATF            equ	1219	;# 
  1816   0004C6                     TRISA           equ	1222	;# 
  1817   0004C7                     TRISB           equ	1223	;# 
  1818   0004C8                     TRISC           equ	1224	;# 
  1819   0004C9                     TRISD           equ	1225	;# 
  1820   0004CA                     TRISE           equ	1226	;# 
  1821   0004CB                     TRISF           equ	1227	;# 
  1822   0004CE                     PORTA           equ	1230	;# 
  1823   0004CF                     PORTB           equ	1231	;# 
  1824   0004D0                     PORTC           equ	1232	;# 
  1825   0004D1                     PORTD           equ	1233	;# 
  1826   0004D2                     PORTE           equ	1234	;# 
  1827   0004D3                     PORTF           equ	1235	;# 
  1828   0004D6                     INTCON0         equ	1238	;# 
  1829   0004D7                     INTCON1         equ	1239	;# 
  1830   0004D8                     STATUS          equ	1240	;# 
  1831   0004D9                     FSR2            equ	1241	;# 
  1832   0004D9                     FSR2L           equ	1241	;# 
  1833   0004DA                     FSR2H           equ	1242	;# 
  1834   0004DB                     PLUSW2          equ	1243	;# 
  1835   0004DC                     PREINC2         equ	1244	;# 
  1836   0004DD                     POSTDEC2        equ	1245	;# 
  1837   0004DE                     POSTINC2        equ	1246	;# 
  1838   0004DF                     INDF2           equ	1247	;# 
  1839   0004E0                     BSR             equ	1248	;# 
  1840   0004E1                     FSR1            equ	1249	;# 
  1841   0004E1                     FSR1L           equ	1249	;# 
  1842   0004E2                     FSR1H           equ	1250	;# 
  1843   0004E3                     PLUSW1          equ	1251	;# 
  1844   0004E4                     PREINC1         equ	1252	;# 
  1845   0004E5                     POSTDEC1        equ	1253	;# 
  1846   0004E6                     POSTINC1        equ	1254	;# 
  1847   0004E7                     INDF1           equ	1255	;# 
  1848   0004E8                     WREG            equ	1256	;# 
  1849   0004E9                     FSR0            equ	1257	;# 
  1850   0004E9                     FSR0L           equ	1257	;# 
  1851   0004EA                     FSR0H           equ	1258	;# 
  1852   0004EB                     PLUSW0          equ	1259	;# 
  1853   0004EC                     PREINC0         equ	1260	;# 
  1854   0004ED                     POSTDEC0        equ	1261	;# 
  1855   0004EE                     POSTINC0        equ	1262	;# 
  1856   0004EF                     INDF0           equ	1263	;# 
  1857   0004F0                     PCON0           equ	1264	;# 
  1858   0004F1                     PCON1           equ	1265	;# 
  1859   0004F2                     CPUDOZE         equ	1266	;# 
  1860   0004F3                     PROD            equ	1267	;# 
  1861   0004F3                     PRODL           equ	1267	;# 
  1862   0004F4                     PRODH           equ	1268	;# 
  1863   0004F5                     TABLAT          equ	1269	;# 
  1864   0004F6                     TBLPTR          equ	1270	;# 
  1865   0004F6                     TBLPTRL         equ	1270	;# 
  1866   0004F7                     TBLPTRH         equ	1271	;# 
  1867   0004F8                     TBLPTRU         equ	1272	;# 
  1868   0004F9                     PCLAT           equ	1273	;# 
  1869   0004F9                     PCL             equ	1273	;# 
  1870   0004FA                     PCLATH          equ	1274	;# 
  1871   0004FB                     PCLATU          equ	1275	;# 
  1872   0004FC                     STKPTR          equ	1276	;# 
  1873   0004FD                     TOS             equ	1277	;# 
  1874   0004FD                     TOSL            equ	1277	;# 
  1875   0004FE                     TOSH            equ	1278	;# 
  1876   0004FF                     TOSU            equ	1279	;# 
  1877   000039                     CLKRCON         equ	57	;# 
  1878   00003A                     CLKRCLK         equ	58	;# 
  1879   000040                     NVMCON0         equ	64	;# 
  1880   000041                     NVMCON1         equ	65	;# 
  1881   000042                     NVMLOCK         equ	66	;# 
  1882   000043                     NVMADR          equ	67	;# 
  1883   000043                     NVMADRL         equ	67	;# 
  1884   000044                     NVMADRH         equ	68	;# 
  1885   000045                     NVMADRU         equ	69	;# 
  1886   000046                     NVMDAT          equ	70	;# 
  1887   000046                     NVMDATL         equ	70	;# 
  1888   000047                     NVMDATH         equ	71	;# 
  1889   000048                     VREGCON         equ	72	;# 
  1890   000049                     BORCON          equ	73	;# 
  1891   00004A                     HLVDCON0        equ	74	;# 
  1892   00004B                     HLVDCON1        equ	75	;# 
  1893   00004C                     ZCDCON          equ	76	;# 
  1894   000060                     PMD0            equ	96	;# 
  1895   000061                     PMD1            equ	97	;# 
  1896   000063                     PMD3            equ	99	;# 
  1897   000064                     PMD4            equ	100	;# 
  1898   000065                     PMD5            equ	101	;# 
  1899   000066                     PMD6            equ	102	;# 
  1900   000067                     PMD7            equ	103	;# 
  1901   000068                     PMD8            equ	104	;# 
  1902   00006A                     MD1CON0         equ	106	;# 
  1903   00006B                     MD1CON1         equ	107	;# 
  1904   00006C                     MD1SRC          equ	108	;# 
  1905   00006D                     MD1CARL         equ	109	;# 
  1906   00006E                     MD1CARH         equ	110	;# 
  1907   00006F                     CMOUT           equ	111	;# 
  1908   000070                     CM1CON0         equ	112	;# 
  1909   000071                     CM1CON1         equ	113	;# 
  1910   000072                     CM1NCH          equ	114	;# 
  1911   000073                     CM1PCH          equ	115	;# 
  1912   000074                     CM2CON0         equ	116	;# 
  1913   000075                     CM2CON1         equ	117	;# 
  1914   000076                     CM2NCH          equ	118	;# 
  1915   000077                     CM2PCH          equ	119	;# 
  1916   000078                     WDTCON0         equ	120	;# 
  1917   000079                     WDTCON1         equ	121	;# 
  1918   00007A                     WDTPS           equ	122	;# 
  1919   00007A                     WDTPSL          equ	122	;# 
  1920   00007B                     WDTPSH          equ	123	;# 
  1921   00007C                     WDTTMR          equ	124	;# 
  1922   00007D                     DAC1DAT         equ	125	;# 
  1923   00007D                     DAC1DATL        equ	125	;# 
  1924   00007F                     DAC1CON         equ	127	;# 
  1925   000080                     SPI1RXB         equ	128	;# 
  1926   000081                     SPI1TXB         equ	129	;# 
  1927   000082                     SPI1TCNT        equ	130	;# 
  1928   000082                     SPI1TCNTL       equ	130	;# 
  1929   000083                     SPI1TCNTH       equ	131	;# 
  1930   000084                     SPI1CON0        equ	132	;# 
  1931   000085                     SPI1CON1        equ	133	;# 
  1932   000086                     SPI1CON2        equ	134	;# 
  1933   000087                     SPI1STATUS      equ	135	;# 
  1934   000088                     SPI1TWIDTH      equ	136	;# 
  1935   000089                     SPI1BAUD        equ	137	;# 
  1936   00008A                     SPI1INTF        equ	138	;# 
  1937   00008B                     SPI1INTE        equ	139	;# 
  1938   00008C                     SPI1CLK         equ	140	;# 
  1939   00008D                     SPI2RXB         equ	141	;# 
  1940   00008E                     SPI2TXB         equ	142	;# 
  1941   00008F                     SPI2TCNT        equ	143	;# 
  1942   00008F                     SPI2TCNTL       equ	143	;# 
  1943   000090                     SPI2TCNTH       equ	144	;# 
  1944   000091                     SPI2CON0        equ	145	;# 
  1945   000092                     SPI2CON1        equ	146	;# 
  1946   000093                     SPI2CON2        equ	147	;# 
  1947   000094                     SPI2STATUS      equ	148	;# 
  1948   000095                     SPI2TWIDTH      equ	149	;# 
  1949   000096                     SPI2BAUD        equ	150	;# 
  1950   000097                     SPI2INTF        equ	151	;# 
  1951   000098                     SPI2INTE        equ	152	;# 
  1952   000099                     SPI2CLK         equ	153	;# 
  1953   0000AC                     ACTCON          equ	172	;# 
  1954   0000AD                     OSCCON1         equ	173	;# 
  1955   0000AE                     OSCCON2         equ	174	;# 
  1956   0000AF                     OSCCON3         equ	175	;# 
  1957   0000B0                     OSCTUNE         equ	176	;# 
  1958   0000B1                     OSCFRQ          equ	177	;# 
  1959   0000B1                     OSCFREQ         equ	177	;# 
  1960   0000B2                     OSCSTAT         equ	178	;# 
  1961   0000B2                     OSCSTAT1        equ	178	;# 
  1962   0000B3                     OSCEN           equ	179	;# 
  1963   0000B4                     PRLOCK          equ	180	;# 
  1964   0000B5                     SCANPR          equ	181	;# 
  1965   0000B6                     DMA1PR          equ	182	;# 
  1966   0000B7                     DMA2PR          equ	183	;# 
  1967   0000B8                     DMA3PR          equ	184	;# 
  1968   0000B9                     DMA4PR          equ	185	;# 
  1969   0000BA                     DMA5PR          equ	186	;# 
  1970   0000BB                     DMA6PR          equ	187	;# 
  1971   0000BE                     MAINPR          equ	190	;# 
  1972   0000BF                     ISRPR           equ	191	;# 
  1973   0000D4                     CLCDATA         equ	212	;# 
  1974   0000D5                     CLCSELECT       equ	213	;# 
  1975   0000D6                     CLCnCON         equ	214	;# 
  1976   0000D7                     CLCnPOL         equ	215	;# 
  1977   0000D8                     CLCnSEL0        equ	216	;# 
  1978   0000D9                     CLCnSEL1        equ	217	;# 
  1979   0000DA                     CLCnSEL2        equ	218	;# 
  1980   0000DB                     CLCnSEL3        equ	219	;# 
  1981   0000DC                     CLCnGLS0        equ	220	;# 
  1982   0000DD                     CLCnGLS1        equ	221	;# 
  1983   0000DE                     CLCnGLS2        equ	222	;# 
  1984   0000DF                     CLCnGLS3        equ	223	;# 
  1985   0000E8                     DMASELECT       equ	232	;# 
  1986   0000E9                     DMAnBUF         equ	233	;# 
  1987   0000EA                     DMAnDCNT        equ	234	;# 
  1988   0000EA                     DMAnDCNTL       equ	234	;# 
  1989   0000EB                     DMAnDCNTH       equ	235	;# 
  1990   0000EC                     DMAnDPTR        equ	236	;# 
  1991   0000EC                     DMAnDPTRL       equ	236	;# 
  1992   0000ED                     DMAnDPTRH       equ	237	;# 
  1993   0000EE                     DMAnDSZ         equ	238	;# 
  1994   0000EE                     DMAnDSZL        equ	238	;# 
  1995   0000EF                     DMAnDSZH        equ	239	;# 
  1996   0000F0                     DMAnDSA         equ	240	;# 
  1997   0000F0                     DMAnDSAL        equ	240	;# 
  1998   0000F1                     DMAnDSAH        equ	241	;# 
  1999   0000F2                     DMAnSCNT        equ	242	;# 
  2000   0000F2                     DMAnSCNTL       equ	242	;# 
  2001   0000F3                     DMAnSCNTH       equ	243	;# 
  2002   0000F4                     DMAnSPTR        equ	244	;# 
  2003   0000F4                     DMAnSPTRL       equ	244	;# 
  2004   0000F5                     DMAnSPTRH       equ	245	;# 
  2005   0000F6                     DMAnSPTRU       equ	246	;# 
  2006   0000F7                     DMAnSSZ         equ	247	;# 
  2007   0000F7                     DMAnSSZL        equ	247	;# 
  2008   0000F8                     DMAnSSZH        equ	248	;# 
  2009   0000F9                     DMAnSSA         equ	249	;# 
  2010   0000F9                     DMAnSSAL        equ	249	;# 
  2011   0000FA                     DMAnSSAH        equ	250	;# 
  2012   0000FB                     DMAnSSAU        equ	251	;# 
  2013   0000FC                     DMAnCON0        equ	252	;# 
  2014   0000FD                     DMAnCON1        equ	253	;# 
  2015   0000FE                     DMAnAIRQ        equ	254	;# 
  2016   0000FF                     DMAnSIRQ        equ	255	;# 
  2017   000200                     PPSLOCK         equ	512	;# 
  2018   000201                     RA0PPS          equ	513	;# 
  2019   000202                     RA1PPS          equ	514	;# 
  2020   000203                     RA2PPS          equ	515	;# 
  2021   000204                     RA3PPS          equ	516	;# 
  2022   000205                     RA4PPS          equ	517	;# 
  2023   000206                     RA5PPS          equ	518	;# 
  2024   000207                     RA6PPS          equ	519	;# 
  2025   000208                     RA7PPS          equ	520	;# 
  2026   000209                     RB0PPS          equ	521	;# 
  2027   00020A                     RB1PPS          equ	522	;# 
  2028   00020B                     RB2PPS          equ	523	;# 
  2029   00020C                     RB3PPS          equ	524	;# 
  2030   00020D                     RB4PPS          equ	525	;# 
  2031   00020E                     RB5PPS          equ	526	;# 
  2032   00020F                     RB6PPS          equ	527	;# 
  2033   000210                     RB7PPS          equ	528	;# 
  2034   000211                     RC0PPS          equ	529	;# 
  2035   000212                     RC1PPS          equ	530	;# 
  2036   000213                     RC2PPS          equ	531	;# 
  2037   000214                     RC3PPS          equ	532	;# 
  2038   000215                     RC4PPS          equ	533	;# 
  2039   000216                     RC5PPS          equ	534	;# 
  2040   000217                     RC6PPS          equ	535	;# 
  2041   000218                     RC7PPS          equ	536	;# 
  2042   000219                     RD0PPS          equ	537	;# 
  2043   00021A                     RD1PPS          equ	538	;# 
  2044   00021B                     RD2PPS          equ	539	;# 
  2045   00021C                     RD3PPS          equ	540	;# 
  2046   00021D                     RD4PPS          equ	541	;# 
  2047   00021E                     RD5PPS          equ	542	;# 
  2048   00021F                     RD6PPS          equ	543	;# 
  2049   000220                     RD7PPS          equ	544	;# 
  2050   000221                     RE0PPS          equ	545	;# 
  2051   000222                     RE1PPS          equ	546	;# 
  2052   000223                     RE2PPS          equ	547	;# 
  2053   000229                     RF0PPS          equ	553	;# 
  2054   00022A                     RF1PPS          equ	554	;# 
  2055   00022B                     RF2PPS          equ	555	;# 
  2056   00022C                     RF3PPS          equ	556	;# 
  2057   00022D                     RF4PPS          equ	557	;# 
  2058   00022E                     RF5PPS          equ	558	;# 
  2059   00022F                     RF6PPS          equ	559	;# 
  2060   000230                     RF7PPS          equ	560	;# 
  2061   00023E                     INT0PPS         equ	574	;# 
  2062   00023F                     INT1PPS         equ	575	;# 
  2063   000240                     INT2PPS         equ	576	;# 
  2064   000241                     T0CKIPPS        equ	577	;# 
  2065   000242                     T1CKIPPS        equ	578	;# 
  2066   000243                     T1GPPS          equ	579	;# 
  2067   000244                     T3CKIPPS        equ	580	;# 
  2068   000245                     T3GPPS          equ	581	;# 
  2069   000246                     T5CKIPPS        equ	582	;# 
  2070   000247                     T5GPPS          equ	583	;# 
  2071   000248                     T2INPPS         equ	584	;# 
  2072   000249                     T4INPPS         equ	585	;# 
  2073   00024A                     T6INPPS         equ	586	;# 
  2074   00024F                     CCP1PPS         equ	591	;# 
  2075   000250                     CCP2PPS         equ	592	;# 
  2076   000251                     CCP3PPS         equ	593	;# 
  2077   000253                     PWM1ERSPPS      equ	595	;# 
  2078   000254                     PWM2ERSPPS      equ	596	;# 
  2079   000255                     PWM3ERSPPS      equ	597	;# 
  2080   000257                     PWMIN0PPS       equ	599	;# 
  2081   000258                     PWMIN1PPS       equ	600	;# 
  2082   000259                     SMT1WINPPS      equ	601	;# 
  2083   00025A                     SMT1SIGPPS      equ	602	;# 
  2084   00025B                     CWG1PPS         equ	603	;# 
  2085   00025B                     CWG1INPPS       equ	603	;# 
  2086   00025C                     CWG2PPS         equ	604	;# 
  2087   00025C                     CWG2INPPS       equ	604	;# 
  2088   00025D                     CWG3PPS         equ	605	;# 
  2089   00025D                     CWG3INPPS       equ	605	;# 
  2090   00025E                     MD1CARLPPS      equ	606	;# 
  2091   00025E                     MDCARLPPS       equ	606	;# 
  2092   00025F                     MD1CARHPPS      equ	607	;# 
  2093   00025F                     MDCARHPPS       equ	607	;# 
  2094   000260                     MD1SRCPPS       equ	608	;# 
  2095   000260                     MDSRCPPS        equ	608	;# 
  2096   000261                     CLCIN0PPS       equ	609	;# 
  2097   000262                     CLCIN1PPS       equ	610	;# 
  2098   000263                     CLCIN2PPS       equ	611	;# 
  2099   000264                     CLCIN3PPS       equ	612	;# 
  2100   000265                     CLCIN4PPS       equ	613	;# 
  2101   000266                     CLCIN5PPS       equ	614	;# 
  2102   000267                     CLCIN6PPS       equ	615	;# 
  2103   000268                     CLCIN7PPS       equ	616	;# 
  2104   000269                     ADACTPPS        equ	617	;# 
  2105   00026A                     SPI1SCKPPS      equ	618	;# 
  2106   00026B                     SPI1SDIPPS      equ	619	;# 
  2107   00026C                     SPI1SSPPS       equ	620	;# 
  2108   00026D                     SPI2SCKPPS      equ	621	;# 
  2109   00026E                     SPI2SDIPPS      equ	622	;# 
  2110   00026F                     SPI2SSPPS       equ	623	;# 
  2111   000270                     I2C1SDAPPS      equ	624	;# 
  2112   000271                     I2C1SCLPPS      equ	625	;# 
  2113   000272                     U1RXPPS         equ	626	;# 
  2114   000273                     U1CTSPPS        equ	627	;# 
  2115   000274                     U2RXPPS         equ	628	;# 
  2116   000275                     U2CTSPPS        equ	629	;# 
  2117   000276                     U3RXPPS         equ	630	;# 
  2118   000277                     U3CTSPPS        equ	631	;# 
  2119   000278                     U4RXPPS         equ	632	;# 
  2120   000279                     U4CTSPPS        equ	633	;# 
  2121   00027A                     U5RXPPS         equ	634	;# 
  2122   00027B                     U5CTSPPS        equ	635	;# 
  2123   000286                     RC4I2C          equ	646	;# 
  2124   000287                     RC3I2C          equ	647	;# 
  2125   000288                     RB2I2C          equ	648	;# 
  2126   000289                     RB1I2C          equ	649	;# 
  2127   00028B                     I2C1RXB         equ	651	;# 
  2128   00028C                     I2C1TXB         equ	652	;# 
  2129   00028D                     I2C1CNT         equ	653	;# 
  2130   00028E                     I2C1ADB0        equ	654	;# 
  2131   00028F                     I2C1ADB1        equ	655	;# 
  2132   000290                     I2C1ADR0        equ	656	;# 
  2133   000291                     I2C1ADR1        equ	657	;# 
  2134   000292                     I2C1ADR2        equ	658	;# 
  2135   000293                     I2C1ADR3        equ	659	;# 
  2136   000294                     I2C1CON0        equ	660	;# 
  2137   000295                     I2C1CON1        equ	661	;# 
  2138   000296                     I2C1CON2        equ	662	;# 
  2139   000297                     I2C1ERR         equ	663	;# 
  2140   000298                     I2C1STAT0       equ	664	;# 
  2141   000299                     I2C1STAT1       equ	665	;# 
  2142   00029A                     I2C1PIR         equ	666	;# 
  2143   00029B                     I2C1PIE         equ	667	;# 
  2144   00029C                     I2C1CLK         equ	668	;# 
  2145   00029D                     I2C1BTO         equ	669	;# 
  2146   0002A1                     U1RXB           equ	673	;# 
  2147   0002A1                     U1RXBL          equ	673	;# 
  2148   0002A2                     U1RXCHK         equ	674	;# 
  2149   0002A3                     U1TXB           equ	675	;# 
  2150   0002A3                     U1TXBL          equ	675	;# 
  2151   0002A4                     U1TXCHK         equ	676	;# 
  2152   0002A5                     U1P1            equ	677	;# 
  2153   0002A5                     U1P1L           equ	677	;# 
  2154   0002A6                     U1P1H           equ	678	;# 
  2155   0002A7                     U1P2            equ	679	;# 
  2156   0002A7                     U1P2L           equ	679	;# 
  2157   0002A8                     U1P2H           equ	680	;# 
  2158   0002A9                     U1P3            equ	681	;# 
  2159   0002A9                     U1P3L           equ	681	;# 
  2160   0002AA                     U1P3H           equ	682	;# 
  2161   0002AB                     U1CON0          equ	683	;# 
  2162   0002AC                     U1CON1          equ	684	;# 
  2163   0002AD                     U1CON2          equ	685	;# 
  2164   0002AE                     U1BRG           equ	686	;# 
  2165   0002AE                     U1BRGL          equ	686	;# 
  2166   0002AF                     U1BRGH          equ	687	;# 
  2167   0002B0                     U1FIFO          equ	688	;# 
  2168   0002B1                     U1UIR           equ	689	;# 
  2169   0002B2                     U1ERRIR         equ	690	;# 
  2170   0002B3                     U1ERRIE         equ	691	;# 
  2171   0002B4                     U2RXB           equ	692	;# 
  2172   0002B4                     U2RXBL          equ	692	;# 
  2173   0002B6                     U2TXB           equ	694	;# 
  2174   0002B6                     U2TXBL          equ	694	;# 
  2175   0002B8                     U2P1            equ	696	;# 
  2176   0002B8                     U2P1L           equ	696	;# 
  2177   0002BA                     U2P2            equ	698	;# 
  2178   0002BA                     U2P2L           equ	698	;# 
  2179   0002BC                     U2P3            equ	700	;# 
  2180   0002BC                     U2P3L           equ	700	;# 
  2181   0002BE                     U2CON0          equ	702	;# 
  2182   0002BF                     U2CON1          equ	703	;# 
  2183   0002C0                     U2CON2          equ	704	;# 
  2184   0002C1                     U2BRG           equ	705	;# 
  2185   0002C1                     U2BRGL          equ	705	;# 
  2186   0002C2                     U2BRGH          equ	706	;# 
  2187   0002C3                     U2FIFO          equ	707	;# 
  2188   0002C4                     U2UIR           equ	708	;# 
  2189   0002C5                     U2ERRIR         equ	709	;# 
  2190   0002C6                     U2ERRIE         equ	710	;# 
  2191   0002C7                     U3RXB           equ	711	;# 
  2192   0002C7                     U3RXBL          equ	711	;# 
  2193   0002C9                     U3TXB           equ	713	;# 
  2194   0002C9                     U3TXBL          equ	713	;# 
  2195   0002CB                     U3P1            equ	715	;# 
  2196   0002CB                     U3P1L           equ	715	;# 
  2197   0002CD                     U3P2            equ	717	;# 
  2198   0002CD                     U3P2L           equ	717	;# 
  2199   0002CF                     U3P3            equ	719	;# 
  2200   0002CF                     U3P3L           equ	719	;# 
  2201   0002D1                     U3CON0          equ	721	;# 
  2202   0002D2                     U3CON1          equ	722	;# 
  2203   0002D3                     U3CON2          equ	723	;# 
  2204   0002D4                     U3BRG           equ	724	;# 
  2205   0002D4                     U3BRGL          equ	724	;# 
  2206   0002D5                     U3BRGH          equ	725	;# 
  2207   0002D6                     U3FIFO          equ	726	;# 
  2208   0002D7                     U3UIR           equ	727	;# 
  2209   0002D8                     U3ERRIR         equ	728	;# 
  2210   0002D9                     U3ERRIE         equ	729	;# 
  2211   0002DA                     U4RXB           equ	730	;# 
  2212   0002DA                     U4RXBL          equ	730	;# 
  2213   0002DC                     U4TXB           equ	732	;# 
  2214   0002DC                     U4TXBL          equ	732	;# 
  2215   0002DE                     U4P1            equ	734	;# 
  2216   0002DE                     U4P1L           equ	734	;# 
  2217   0002E0                     U4P2            equ	736	;# 
  2218   0002E0                     U4P2L           equ	736	;# 
  2219   0002E2                     U4P3            equ	738	;# 
  2220   0002E2                     U4P3L           equ	738	;# 
  2221   0002E4                     U4CON0          equ	740	;# 
  2222   0002E5                     U4CON1          equ	741	;# 
  2223   0002E6                     U4CON2          equ	742	;# 
  2224   0002E7                     U4BRG           equ	743	;# 
  2225   0002E7                     U4BRGL          equ	743	;# 
  2226   0002E8                     U4BRGH          equ	744	;# 
  2227   0002E9                     U4FIFO          equ	745	;# 
  2228   0002EA                     U4UIR           equ	746	;# 
  2229   0002EB                     U4ERRIR         equ	747	;# 
  2230   0002EC                     U4ERRIE         equ	748	;# 
  2231   0002ED                     U5RXB           equ	749	;# 
  2232   0002ED                     U5RXBL          equ	749	;# 
  2233   0002EF                     U5TXB           equ	751	;# 
  2234   0002EF                     U5TXBL          equ	751	;# 
  2235   0002F1                     U5P1            equ	753	;# 
  2236   0002F1                     U5P1L           equ	753	;# 
  2237   0002F3                     U5P2            equ	755	;# 
  2238   0002F3                     U5P2L           equ	755	;# 
  2239   0002F5                     U5P3            equ	757	;# 
  2240   0002F5                     U5P3L           equ	757	;# 
  2241   0002F7                     U5CON0          equ	759	;# 
  2242   0002F8                     U5CON1          equ	760	;# 
  2243   0002F9                     U5CON2          equ	761	;# 
  2244   0002FA                     U5BRG           equ	762	;# 
  2245   0002FA                     U5BRGL          equ	762	;# 
  2246   0002FB                     U5BRGH          equ	763	;# 
  2247   0002FC                     U5FIFO          equ	764	;# 
  2248   0002FD                     U5UIR           equ	765	;# 
  2249   0002FE                     U5ERRIR         equ	766	;# 
  2250   0002FF                     U5ERRIE         equ	767	;# 
  2251   000300                     SMT1TMR         equ	768	;# 
  2252   000300                     SMT1TMRL        equ	768	;# 
  2253   000301                     SMT1TMRH        equ	769	;# 
  2254   000302                     SMT1TMRU        equ	770	;# 
  2255   000303                     SMT1CPR         equ	771	;# 
  2256   000303                     SMT1CPRL        equ	771	;# 
  2257   000304                     SMT1CPRH        equ	772	;# 
  2258   000305                     SMT1CPRU        equ	773	;# 
  2259   000306                     SMT1CPW         equ	774	;# 
  2260   000306                     SMT1CPWL        equ	774	;# 
  2261   000307                     SMT1CPWH        equ	775	;# 
  2262   000308                     SMT1CPWU        equ	776	;# 
  2263   000309                     SMT1PR          equ	777	;# 
  2264   000309                     SMT1PRL         equ	777	;# 
  2265   00030A                     SMT1PRH         equ	778	;# 
  2266   00030B                     SMT1PRU         equ	779	;# 
  2267   00030C                     SMT1CON0        equ	780	;# 
  2268   00030D                     SMT1CON1        equ	781	;# 
  2269   00030E                     SMT1STAT        equ	782	;# 
  2270   00030F                     SMT1CLK         equ	783	;# 
  2271   000310                     SMT1SIG         equ	784	;# 
  2272   000311                     SMT1WIN         equ	785	;# 
  2273   000318                     TMR0L           equ	792	;# 
  2274   000318                     TMR0            equ	792	;# 
  2275   000319                     TMR0H           equ	793	;# 
  2276   000319                     PR0             equ	793	;# 
  2277   00031A                     T0CON0          equ	794	;# 
  2278   00031B                     T0CON1          equ	795	;# 
  2279   00031C                     TMR1            equ	796	;# 
  2280   00031C                     TMR1L           equ	796	;# 
  2281   00031D                     TMR1H           equ	797	;# 
  2282   00031E                     T1CON           equ	798	;# 
  2283   00031E                     TMR1CON         equ	798	;# 
  2284   00031F                     T1GCON          equ	799	;# 
  2285   00031F                     TMR1GCON        equ	799	;# 
  2286   000320                     T1GATE          equ	800	;# 
  2287   000320                     TMR1GATE        equ	800	;# 
  2288   000321                     T1CLK           equ	801	;# 
  2289   000321                     TMR1CLK         equ	801	;# 
  2290   000321                     PR1             equ	801	;# 
  2291   000322                     T2TMR           equ	802	;# 
  2292   000322                     TMR2            equ	802	;# 
  2293   000323                     T2PR            equ	803	;# 
  2294   000323                     PR2             equ	803	;# 
  2295   000324                     T2CON           equ	804	;# 
  2296   000325                     T2HLT           equ	805	;# 
  2297   000326                     T2CLKCON        equ	806	;# 
  2298   000326                     T2CLK           equ	806	;# 
  2299   000327                     T2RST           equ	807	;# 
  2300   000328                     TMR3            equ	808	;# 
  2301   000328                     TMR3L           equ	808	;# 
  2302   000329                     TMR3H           equ	809	;# 
  2303   00032A                     T3CON           equ	810	;# 
  2304   00032A                     TMR3CON         equ	810	;# 
  2305   00032B                     T3GCON          equ	811	;# 
  2306   00032B                     TMR3GCON        equ	811	;# 
  2307   00032C                     T3GATE          equ	812	;# 
  2308   00032C                     TMR3GATE        equ	812	;# 
  2309   00032D                     T3CLK           equ	813	;# 
  2310   00032D                     TMR3CLK         equ	813	;# 
  2311   00032D                     PR3             equ	813	;# 
  2312   00032E                     T4TMR           equ	814	;# 
  2313   00032E                     TMR4            equ	814	;# 
  2314   00032F                     T4PR            equ	815	;# 
  2315   00032F                     PR4             equ	815	;# 
  2316   000330                     T4CON           equ	816	;# 
  2317   000331                     T4HLT           equ	817	;# 
  2318   000332                     T4CLKCON        equ	818	;# 
  2319   000332                     T4CLK           equ	818	;# 
  2320   000333                     T4RST           equ	819	;# 
  2321   000334                     TMR5            equ	820	;# 
  2322   000334                     TMR5L           equ	820	;# 
  2323   000335                     TMR5H           equ	821	;# 
  2324   000336                     T5CON           equ	822	;# 
  2325   000336                     TMR5CON         equ	822	;# 
  2326   000337                     T5GCON          equ	823	;# 
  2327   000337                     TMR5GCON        equ	823	;# 
  2328   000338                     T5GATE          equ	824	;# 
  2329   000338                     TMR5GATE        equ	824	;# 
  2330   000339                     T5CLK           equ	825	;# 
  2331   000339                     TMR5CLK         equ	825	;# 
  2332   000339                     PR5             equ	825	;# 
  2333   00033A                     T6TMR           equ	826	;# 
  2334   00033A                     TMR6            equ	826	;# 
  2335   00033B                     T6PR            equ	827	;# 
  2336   00033B                     PR6             equ	827	;# 
  2337   00033C                     T6CON           equ	828	;# 
  2338   00033D                     T6HLT           equ	829	;# 
  2339   00033E                     T6CLKCON        equ	830	;# 
  2340   00033E                     T6CLK           equ	830	;# 
  2341   00033F                     T6RST           equ	831	;# 
  2342   000340                     CCPR1           equ	832	;# 
  2343   000340                     CCPR1L          equ	832	;# 
  2344   000341                     CCPR1H          equ	833	;# 
  2345   000342                     CCP1CON         equ	834	;# 
  2346   000343                     CCP1CAP         equ	835	;# 
  2347   000344                     CCPR2           equ	836	;# 
  2348   000344                     CCPR2L          equ	836	;# 
  2349   000345                     CCPR2H          equ	837	;# 
  2350   000346                     CCP2CON         equ	838	;# 
  2351   000347                     CCP2CAP         equ	839	;# 
  2352   000348                     CCPR3           equ	840	;# 
  2353   000348                     CCPR3L          equ	840	;# 
  2354   000349                     CCPR3H          equ	841	;# 
  2355   00034A                     CCP3CON         equ	842	;# 
  2356   00034B                     CCP3CAP         equ	843	;# 
  2357   00034C                     CCPTMRS0        equ	844	;# 
  2358   00034F                     CRCDATA         equ	847	;# 
  2359   00034F                     CRCDATL         equ	847	;# 
  2360   000350                     CRCDATH         equ	848	;# 
  2361   000351                     CRCACC          equ	849	;# 
  2362   000351                     CRCACCL         equ	849	;# 
  2363   000352                     CRCACCH         equ	850	;# 
  2364   000353                     CRCSHFT         equ	851	;# 
  2365   000353                     CRCSHIFTL       equ	851	;# 
  2366   000354                     CRCSHIFTH       equ	852	;# 
  2367   000355                     CRCXOR          equ	853	;# 
  2368   000355                     CRCXORL         equ	853	;# 
  2369   000356                     CRCXORH         equ	854	;# 
  2370   000357                     CRCCON0         equ	855	;# 
  2371   000358                     CRCCON1         equ	856	;# 
  2372   00035A                     SCANLADR        equ	858	;# 
  2373   00035A                     SCANLADRL       equ	858	;# 
  2374   00035B                     SCANLADRH       equ	859	;# 
  2375   00035C                     SCANLADRU       equ	860	;# 
  2376   00035D                     SCANHADR        equ	861	;# 
  2377   00035D                     SCANHADRL       equ	861	;# 
  2378   00035E                     SCANHADRH       equ	862	;# 
  2379   00035F                     SCANHADRU       equ	863	;# 
  2380   000360                     SCANCON0        equ	864	;# 
  2381   000361                     SCANTRIG        equ	865	;# 
  2382   000362                     IPR0            equ	866	;# 
  2383   000363                     IPR1            equ	867	;# 
  2384   000364                     IPR2            equ	868	;# 
  2385   000365                     IPR3            equ	869	;# 
  2386   000366                     IPR4            equ	870	;# 
  2387   000367                     IPR5            equ	871	;# 
  2388   000368                     IPR6            equ	872	;# 
  2389   000369                     IPR7            equ	873	;# 
  2390   00036A                     IPR8            equ	874	;# 
  2391   00036B                     IPR9            equ	875	;# 
  2392   00036C                     IPR10           equ	876	;# 
  2393   00036D                     IPR11           equ	877	;# 
  2394   00036E                     IPR12           equ	878	;# 
  2395   00036F                     IPR13           equ	879	;# 
  2396   000370                     IPR14           equ	880	;# 
  2397   000371                     IPR15           equ	881	;# 
  2398   000373                     STATUS_CSHAD    equ	883	;# 
  2399   000374                     WREG_CSHAD      equ	884	;# 
  2400   000375                     BSR_CSHAD       equ	885	;# 
  2401   000376                     SHADCON         equ	886	;# 
  2402   000377                     STATUS_SHAD     equ	887	;# 
  2403   000378                     WREG_SHAD       equ	888	;# 
  2404   000379                     BSR_SHAD        equ	889	;# 
  2405   00037A                     PCLATH_SHAD     equ	890	;# 
  2406   00037B                     PCLATU_SHAD     equ	891	;# 
  2407   00037C                     FSR0SH          equ	892	;# 
  2408   00037C                     FSR0L_SHAD      equ	892	;# 
  2409   00037D                     FSR0H_SHAD      equ	893	;# 
  2410   00037E                     FSR1SH          equ	894	;# 
  2411   00037E                     FSR1L_SHAD      equ	894	;# 
  2412   00037F                     FSR1H_SHAD      equ	895	;# 
  2413   000380                     FSR2SH          equ	896	;# 
  2414   000380                     FSR2L_SHAD      equ	896	;# 
  2415   000381                     FSR2H_SHAD      equ	897	;# 
  2416   000382                     PRODSH          equ	898	;# 
  2417   000382                     PRODL_SHAD      equ	898	;# 
  2418   000383                     PRODH_SHAD      equ	899	;# 
  2419   0003BC                     CWG1CLK         equ	956	;# 
  2420   0003BC                     CWG1CLKCON      equ	956	;# 
  2421   0003BD                     CWG1ISM         equ	957	;# 
  2422   0003BD                     CWG1DAT         equ	957	;# 
  2423   0003BE                     CWG1DBR         equ	958	;# 
  2424   0003BF                     CWG1DBF         equ	959	;# 
  2425   0003C0                     CWG1CON0        equ	960	;# 
  2426   0003C1                     CWG1CON1        equ	961	;# 
  2427   0003C2                     CWG1AS0         equ	962	;# 
  2428   0003C3                     CWG1AS1         equ	963	;# 
  2429   0003C4                     CWG1STR         equ	964	;# 
  2430   0003C5                     CWG2CLK         equ	965	;# 
  2431   0003C5                     CWG2CLKCON      equ	965	;# 
  2432   0003C6                     CWG2ISM         equ	966	;# 
  2433   0003C6                     CWG2DAT         equ	966	;# 
  2434   0003C7                     CWG2DBR         equ	967	;# 
  2435   0003C8                     CWG2DBF         equ	968	;# 
  2436   0003C9                     CWG2CON0        equ	969	;# 
  2437   0003CA                     CWG2CON1        equ	970	;# 
  2438   0003CB                     CWG2AS0         equ	971	;# 
  2439   0003CC                     CWG2AS1         equ	972	;# 
  2440   0003CD                     CWG2STR         equ	973	;# 
  2441   0003CE                     CWG3CLK         equ	974	;# 
  2442   0003CE                     CWG3CLKCON      equ	974	;# 
  2443   0003CF                     CWG3ISM         equ	975	;# 
  2444   0003CF                     CWG3DAT         equ	975	;# 
  2445   0003D0                     CWG3DBR         equ	976	;# 
  2446   0003D1                     CWG3DBF         equ	977	;# 
  2447   0003D2                     CWG3CON0        equ	978	;# 
  2448   0003D3                     CWG3CON1        equ	979	;# 
  2449   0003D4                     CWG3AS0         equ	980	;# 
  2450   0003D5                     CWG3AS1         equ	981	;# 
  2451   0003D6                     CWG3STR         equ	982	;# 
  2452   0003D7                     FVRCON          equ	983	;# 
  2453   0003D8                     ADCPCON         equ	984	;# 
  2454   0003D8                     ADCP            equ	984	;# 
  2455   0003D9                     ADLTH           equ	985	;# 
  2456   0003D9                     ADLTHL          equ	985	;# 
  2457   0003DA                     ADLTHH          equ	986	;# 
  2458   0003DB                     ADUTH           equ	987	;# 
  2459   0003DB                     ADUTHL          equ	987	;# 
  2460   0003DC                     ADUTHH          equ	988	;# 
  2461   0003DD                     ADERR           equ	989	;# 
  2462   0003DD                     ADERRL          equ	989	;# 
  2463   0003DE                     ADERRH          equ	990	;# 
  2464   0003DF                     ADSTPT          equ	991	;# 
  2465   0003DF                     ADSTPTL         equ	991	;# 
  2466   0003E0                     ADSTPTH         equ	992	;# 
  2467   0003E1                     ADFLTR          equ	993	;# 
  2468   0003E1                     ADFLTRL         equ	993	;# 
  2469   0003E2                     ADFLTRH         equ	994	;# 
  2470   0003E3                     ADACC           equ	995	;# 
  2471   0003E3                     ADACCL          equ	995	;# 
  2472   0003E4                     ADACCH          equ	996	;# 
  2473   0003E5                     ADACCU          equ	997	;# 
  2474   0003E6                     ADCNT           equ	998	;# 
  2475   0003E7                     ADRPT           equ	999	;# 
  2476   0003E8                     ADPREV          equ	1000	;# 
  2477   0003E8                     ADPREVL         equ	1000	;# 
  2478   0003E9                     ADPREVH         equ	1001	;# 
  2479   0003EA                     ADRES           equ	1002	;# 
  2480   0003EA                     ADRESL          equ	1002	;# 
  2481   0003EB                     ADRESH          equ	1003	;# 
  2482   0003EC                     ADPCH           equ	1004	;# 
  2483   0003EE                     ADACQ           equ	1006	;# 
  2484   0003EE                     ADACQL          equ	1006	;# 
  2485   0003EF                     ADACQH          equ	1007	;# 
  2486   0003F0                     ADCAP           equ	1008	;# 
  2487   0003F1                     ADPRE           equ	1009	;# 
  2488   0003F1                     ADPREL          equ	1009	;# 
  2489   0003F2                     ADPREH          equ	1010	;# 
  2490   0003F3                     ADCON0          equ	1011	;# 
  2491   0003F4                     ADCON1          equ	1012	;# 
  2492   0003F5                     ADCON2          equ	1013	;# 
  2493   0003F6                     ADCON3          equ	1014	;# 
  2494   0003F7                     ADSTAT          equ	1015	;# 
  2495   0003F8                     ADREF           equ	1016	;# 
  2496   0003F9                     ADACT           equ	1017	;# 
  2497   0003FA                     ADCLK           equ	1018	;# 
  2498   000400                     ANSELA          equ	1024	;# 
  2499   000401                     WPUA            equ	1025	;# 
  2500   000402                     ODCONA          equ	1026	;# 
  2501   000403                     SLRCONA         equ	1027	;# 
  2502   000404                     INLVLA          equ	1028	;# 
  2503   000405                     IOCAP           equ	1029	;# 
  2504   000406                     IOCAN           equ	1030	;# 
  2505   000407                     IOCAF           equ	1031	;# 
  2506   000408                     ANSELB          equ	1032	;# 
  2507   000409                     WPUB            equ	1033	;# 
  2508   00040A                     ODCONB          equ	1034	;# 
  2509   00040B                     SLRCONB         equ	1035	;# 
  2510   00040C                     INLVLB          equ	1036	;# 
  2511   00040D                     IOCBP           equ	1037	;# 
  2512   00040E                     IOCBN           equ	1038	;# 
  2513   00040F                     IOCBF           equ	1039	;# 
  2514   000410                     ANSELC          equ	1040	;# 
  2515   000411                     WPUC            equ	1041	;# 
  2516   000412                     ODCONC          equ	1042	;# 
  2517   000413                     SLRCONC         equ	1043	;# 
  2518   000414                     INLVLC          equ	1044	;# 
  2519   000415                     IOCCP           equ	1045	;# 
  2520   000416                     IOCCN           equ	1046	;# 
  2521   000417                     IOCCF           equ	1047	;# 
  2522   000418                     ANSELD          equ	1048	;# 
  2523   000419                     WPUD            equ	1049	;# 
  2524   00041A                     ODCOND          equ	1050	;# 
  2525   00041B                     SLRCOND         equ	1051	;# 
  2526   00041C                     INLVLD          equ	1052	;# 
  2527   000420                     ANSELE          equ	1056	;# 
  2528   000421                     WPUE            equ	1057	;# 
  2529   000422                     ODCONE          equ	1058	;# 
  2530   000423                     SLRCONE         equ	1059	;# 
  2531   000424                     INLVLE          equ	1060	;# 
  2532   000425                     IOCEP           equ	1061	;# 
  2533   000426                     IOCEN           equ	1062	;# 
  2534   000427                     IOCEF           equ	1063	;# 
  2535   000428                     ANSELF          equ	1064	;# 
  2536   000429                     WPUF            equ	1065	;# 
  2537   00042A                     ODCONF          equ	1066	;# 
  2538   00042B                     SLRCONF         equ	1067	;# 
  2539   00042C                     INLVLF          equ	1068	;# 
  2540   000440                     NCO1ACC         equ	1088	;# 
  2541   000440                     NCO1ACCL        equ	1088	;# 
  2542   000441                     NCO1ACCH        equ	1089	;# 
  2543   000442                     NCO1ACCU        equ	1090	;# 
  2544   000443                     NCO1INC         equ	1091	;# 
  2545   000443                     NCO1INCL        equ	1091	;# 
  2546   000444                     NCO1INCH        equ	1092	;# 
  2547   000445                     NCO1INCU        equ	1093	;# 
  2548   000446                     NCO1CON         equ	1094	;# 
  2549   000447                     NCO1CLK         equ	1095	;# 
  2550   000448                     NCO2ACC         equ	1096	;# 
  2551   000448                     NCO2ACCL        equ	1096	;# 
  2552   000449                     NCO2ACCH        equ	1097	;# 
  2553   00044A                     NCO2ACCU        equ	1098	;# 
  2554   00044B                     NCO2INC         equ	1099	;# 
  2555   00044B                     NCO2INCL        equ	1099	;# 
  2556   00044C                     NCO2INCH        equ	1100	;# 
  2557   00044D                     NCO2INCU        equ	1101	;# 
  2558   00044E                     NCO2CON         equ	1102	;# 
  2559   00044F                     NCO2CLK         equ	1103	;# 
  2560   000450                     NCO3ACC         equ	1104	;# 
  2561   000450                     NCO3ACCL        equ	1104	;# 
  2562   000451                     NCO3ACCH        equ	1105	;# 
  2563   000452                     NCO3ACCU        equ	1106	;# 
  2564   000453                     NCO3INC         equ	1107	;# 
  2565   000453                     NCO3INCL        equ	1107	;# 
  2566   000454                     NCO3INCH        equ	1108	;# 
  2567   000455                     NCO3INCU        equ	1109	;# 
  2568   000456                     NCO3CON         equ	1110	;# 
  2569   000457                     NCO3CLK         equ	1111	;# 
  2570   000459                     IVTLOCK         equ	1113	;# 
  2571   00045A                     IVTAD           equ	1114	;# 
  2572   00045A                     IVTADL          equ	1114	;# 
  2573   00045B                     IVTADH          equ	1115	;# 
  2574   00045C                     IVTADU          equ	1116	;# 
  2575   00045D                     IVTBASE         equ	1117	;# 
  2576   00045D                     IVTBASEL        equ	1117	;# 
  2577   00045E                     IVTBASEH        equ	1118	;# 
  2578   00045F                     IVTBASEU        equ	1119	;# 
  2579   000460                     PWM1ERS         equ	1120	;# 
  2580   000461                     PWM1CLK         equ	1121	;# 
  2581   000462                     PWM1LDS         equ	1122	;# 
  2582   000463                     PWM1PR          equ	1123	;# 
  2583   000463                     PWM1PRL         equ	1123	;# 
  2584   000464                     PWM1PRH         equ	1124	;# 
  2585   000465                     PWM1CPRE        equ	1125	;# 
  2586   000466                     PWM1PIPOS       equ	1126	;# 
  2587   000467                     PWM1GIR         equ	1127	;# 
  2588   000468                     PWM1GIE         equ	1128	;# 
  2589   000469                     PWM1CON         equ	1129	;# 
  2590   00046A                     PWM1S1CFG       equ	1130	;# 
  2591   00046B                     PWM1S1P1        equ	1131	;# 
  2592   00046B                     PWM1S1P1L       equ	1131	;# 
  2593   00046C                     PWM1S1P1H       equ	1132	;# 
  2594   00046D                     PWM1S1P2        equ	1133	;# 
  2595   00046D                     PWM1S1P2L       equ	1133	;# 
  2596   00046E                     PWM1S1P2H       equ	1134	;# 
  2597   00046F                     PWM2ERS         equ	1135	;# 
  2598   000470                     PWM2CLK         equ	1136	;# 
  2599   000471                     PWM2LDS         equ	1137	;# 
  2600   000472                     PWM2PR          equ	1138	;# 
  2601   000472                     PWM2PRL         equ	1138	;# 
  2602   000473                     PWM2PRH         equ	1139	;# 
  2603   000474                     PWM2CPRE        equ	1140	;# 
  2604   000475                     PWM2PIPOS       equ	1141	;# 
  2605   000476                     PWM2GIR         equ	1142	;# 
  2606   000477                     PWM2GIE         equ	1143	;# 
  2607   000478                     PWM2CON         equ	1144	;# 
  2608   000479                     PWM2S1CFG       equ	1145	;# 
  2609   00047A                     PWM2S1P1        equ	1146	;# 
  2610   00047A                     PWM2S1P1L       equ	1146	;# 
  2611   00047B                     PWM2S1P1H       equ	1147	;# 
  2612   00047C                     PWM2S1P2        equ	1148	;# 
  2613   00047C                     PWM2S1P2L       equ	1148	;# 
  2614   00047D                     PWM2S1P2H       equ	1149	;# 
  2615   00047E                     PWM3ERS         equ	1150	;# 
  2616   00047F                     PWM3CLK         equ	1151	;# 
  2617   000480                     PWM3LDS         equ	1152	;# 
  2618   000481                     PWM3PR          equ	1153	;# 
  2619   000481                     PWM3PRL         equ	1153	;# 
  2620   000482                     PWM3PRH         equ	1154	;# 
  2621   000483                     PWM3CPRE        equ	1155	;# 
  2622   000484                     PWM3PIPOS       equ	1156	;# 
  2623   000485                     PWM3GIR         equ	1157	;# 
  2624   000486                     PWM3GIE         equ	1158	;# 
  2625   000487                     PWM3CON         equ	1159	;# 
  2626   000488                     PWM3S1CFG       equ	1160	;# 
  2627   000489                     PWM3S1P1        equ	1161	;# 
  2628   000489                     PWM3S1P1L       equ	1161	;# 
  2629   00048A                     PWM3S1P1H       equ	1162	;# 
  2630   00048B                     PWM3S1P2        equ	1163	;# 
  2631   00048B                     PWM3S1P2L       equ	1163	;# 
  2632   00048C                     PWM3S1P2H       equ	1164	;# 
  2633   00049C                     PWMLOAD         equ	1180	;# 
  2634   00049D                     PWMEN           equ	1181	;# 
  2635   00049E                     PIE0            equ	1182	;# 
  2636   00049F                     PIE1            equ	1183	;# 
  2637   0004A0                     PIE2            equ	1184	;# 
  2638   0004A1                     PIE3            equ	1185	;# 
  2639   0004A2                     PIE4            equ	1186	;# 
  2640   0004A3                     PIE5            equ	1187	;# 
  2641   0004A4                     PIE6            equ	1188	;# 
  2642   0004A5                     PIE7            equ	1189	;# 
  2643   0004A6                     PIE8            equ	1190	;# 
  2644   0004A7                     PIE9            equ	1191	;# 
  2645   0004A8                     PIE10           equ	1192	;# 
  2646   0004A9                     PIE11           equ	1193	;# 
  2647   0004AA                     PIE12           equ	1194	;# 
  2648   0004AB                     PIE13           equ	1195	;# 
  2649   0004AC                     PIE14           equ	1196	;# 
  2650   0004AD                     PIE15           equ	1197	;# 
  2651   0004AE                     PIR0            equ	1198	;# 
  2652   0004AF                     PIR1            equ	1199	;# 
  2653   0004B0                     PIR2            equ	1200	;# 
  2654   0004B1                     PIR3            equ	1201	;# 
  2655   0004B2                     PIR4            equ	1202	;# 
  2656   0004B3                     PIR5            equ	1203	;# 
  2657   0004B4                     PIR6            equ	1204	;# 
  2658   0004B5                     PIR7            equ	1205	;# 
  2659   0004B6                     PIR8            equ	1206	;# 
  2660   0004B7                     PIR9            equ	1207	;# 
  2661   0004B8                     PIR10           equ	1208	;# 
  2662   0004B9                     PIR11           equ	1209	;# 
  2663   0004BA                     PIR12           equ	1210	;# 
  2664   0004BB                     PIR13           equ	1211	;# 
  2665   0004BC                     PIR14           equ	1212	;# 
  2666   0004BD                     PIR15           equ	1213	;# 
  2667   0004BE                     LATA            equ	1214	;# 
  2668   0004BF                     LATB            equ	1215	;# 
  2669   0004C0                     LATC            equ	1216	;# 
  2670   0004C1                     LATD            equ	1217	;# 
  2671   0004C2                     LATE            equ	1218	;# 
  2672   0004C3                     LATF            equ	1219	;# 
  2673   0004C6                     TRISA           equ	1222	;# 
  2674   0004C7                     TRISB           equ	1223	;# 
  2675   0004C8                     TRISC           equ	1224	;# 
  2676   0004C9                     TRISD           equ	1225	;# 
  2677   0004CA                     TRISE           equ	1226	;# 
  2678   0004CB                     TRISF           equ	1227	;# 
  2679   0004CE                     PORTA           equ	1230	;# 
  2680   0004CF                     PORTB           equ	1231	;# 
  2681   0004D0                     PORTC           equ	1232	;# 
  2682   0004D1                     PORTD           equ	1233	;# 
  2683   0004D2                     PORTE           equ	1234	;# 
  2684   0004D3                     PORTF           equ	1235	;# 
  2685   0004D6                     INTCON0         equ	1238	;# 
  2686   0004D7                     INTCON1         equ	1239	;# 
  2687   0004D8                     STATUS          equ	1240	;# 
  2688   0004D9                     FSR2            equ	1241	;# 
  2689   0004D9                     FSR2L           equ	1241	;# 
  2690   0004DA                     FSR2H           equ	1242	;# 
  2691   0004DB                     PLUSW2          equ	1243	;# 
  2692   0004DC                     PREINC2         equ	1244	;# 
  2693   0004DD                     POSTDEC2        equ	1245	;# 
  2694   0004DE                     POSTINC2        equ	1246	;# 
  2695   0004DF                     INDF2           equ	1247	;# 
  2696   0004E0                     BSR             equ	1248	;# 
  2697   0004E1                     FSR1            equ	1249	;# 
  2698   0004E1                     FSR1L           equ	1249	;# 
  2699   0004E2                     FSR1H           equ	1250	;# 
  2700   0004E3                     PLUSW1          equ	1251	;# 
  2701   0004E4                     PREINC1         equ	1252	;# 
  2702   0004E5                     POSTDEC1        equ	1253	;# 
  2703   0004E6                     POSTINC1        equ	1254	;# 
  2704   0004E7                     INDF1           equ	1255	;# 
  2705   0004E8                     WREG            equ	1256	;# 
  2706   0004E9                     FSR0            equ	1257	;# 
  2707   0004E9                     FSR0L           equ	1257	;# 
  2708   0004EA                     FSR0H           equ	1258	;# 
  2709   0004EB                     PLUSW0          equ	1259	;# 
  2710   0004EC                     PREINC0         equ	1260	;# 
  2711   0004ED                     POSTDEC0        equ	1261	;# 
  2712   0004EE                     POSTINC0        equ	1262	;# 
  2713   0004EF                     INDF0           equ	1263	;# 
  2714   0004F0                     PCON0           equ	1264	;# 
  2715   0004F1                     PCON1           equ	1265	;# 
  2716   0004F2                     CPUDOZE         equ	1266	;# 
  2717   0004F3                     PROD            equ	1267	;# 
  2718   0004F3                     PRODL           equ	1267	;# 
  2719   0004F4                     PRODH           equ	1268	;# 
  2720   0004F5                     TABLAT          equ	1269	;# 
  2721   0004F6                     TBLPTR          equ	1270	;# 
  2722   0004F6                     TBLPTRL         equ	1270	;# 
  2723   0004F7                     TBLPTRH         equ	1271	;# 
  2724   0004F8                     TBLPTRU         equ	1272	;# 
  2725   0004F9                     PCLAT           equ	1273	;# 
  2726   0004F9                     PCL             equ	1273	;# 
  2727   0004FA                     PCLATH          equ	1274	;# 
  2728   0004FB                     PCLATU          equ	1275	;# 
  2729   0004FC                     STKPTR          equ	1276	;# 
  2730   0004FD                     TOS             equ	1277	;# 
  2731   0004FD                     TOSL            equ	1277	;# 
  2732   0004FE                     TOSH            equ	1278	;# 
  2733   0004FF                     TOSU            equ	1279	;# 
  2734   000039                     CLKRCON         equ	57	;# 
  2735   00003A                     CLKRCLK         equ	58	;# 
  2736   000040                     NVMCON0         equ	64	;# 
  2737   000041                     NVMCON1         equ	65	;# 
  2738   000042                     NVMLOCK         equ	66	;# 
  2739   000043                     NVMADR          equ	67	;# 
  2740   000043                     NVMADRL         equ	67	;# 
  2741   000044                     NVMADRH         equ	68	;# 
  2742   000045                     NVMADRU         equ	69	;# 
  2743   000046                     NVMDAT          equ	70	;# 
  2744   000046                     NVMDATL         equ	70	;# 
  2745   000047                     NVMDATH         equ	71	;# 
  2746   000048                     VREGCON         equ	72	;# 
  2747   000049                     BORCON          equ	73	;# 
  2748   00004A                     HLVDCON0        equ	74	;# 
  2749   00004B                     HLVDCON1        equ	75	;# 
  2750   00004C                     ZCDCON          equ	76	;# 
  2751   000060                     PMD0            equ	96	;# 
  2752   000061                     PMD1            equ	97	;# 
  2753   000063                     PMD3            equ	99	;# 
  2754   000064                     PMD4            equ	100	;# 
  2755   000065                     PMD5            equ	101	;# 
  2756   000066                     PMD6            equ	102	;# 
  2757   000067                     PMD7            equ	103	;# 
  2758   000068                     PMD8            equ	104	;# 
  2759   00006A                     MD1CON0         equ	106	;# 
  2760   00006B                     MD1CON1         equ	107	;# 
  2761   00006C                     MD1SRC          equ	108	;# 
  2762   00006D                     MD1CARL         equ	109	;# 
  2763   00006E                     MD1CARH         equ	110	;# 
  2764   00006F                     CMOUT           equ	111	;# 
  2765   000070                     CM1CON0         equ	112	;# 
  2766   000071                     CM1CON1         equ	113	;# 
  2767   000072                     CM1NCH          equ	114	;# 
  2768   000073                     CM1PCH          equ	115	;# 
  2769   000074                     CM2CON0         equ	116	;# 
  2770   000075                     CM2CON1         equ	117	;# 
  2771   000076                     CM2NCH          equ	118	;# 
  2772   000077                     CM2PCH          equ	119	;# 
  2773   000078                     WDTCON0         equ	120	;# 
  2774   000079                     WDTCON1         equ	121	;# 
  2775   00007A                     WDTPS           equ	122	;# 
  2776   00007A                     WDTPSL          equ	122	;# 
  2777   00007B                     WDTPSH          equ	123	;# 
  2778   00007C                     WDTTMR          equ	124	;# 
  2779   00007D                     DAC1DAT         equ	125	;# 
  2780   00007D                     DAC1DATL        equ	125	;# 
  2781   00007F                     DAC1CON         equ	127	;# 
  2782   000080                     SPI1RXB         equ	128	;# 
  2783   000081                     SPI1TXB         equ	129	;# 
  2784   000082                     SPI1TCNT        equ	130	;# 
  2785   000082                     SPI1TCNTL       equ	130	;# 
  2786   000083                     SPI1TCNTH       equ	131	;# 
  2787   000084                     SPI1CON0        equ	132	;# 
  2788   000085                     SPI1CON1        equ	133	;# 
  2789   000086                     SPI1CON2        equ	134	;# 
  2790   000087                     SPI1STATUS      equ	135	;# 
  2791   000088                     SPI1TWIDTH      equ	136	;# 
  2792   000089                     SPI1BAUD        equ	137	;# 
  2793   00008A                     SPI1INTF        equ	138	;# 
  2794   00008B                     SPI1INTE        equ	139	;# 
  2795   00008C                     SPI1CLK         equ	140	;# 
  2796   00008D                     SPI2RXB         equ	141	;# 
  2797   00008E                     SPI2TXB         equ	142	;# 
  2798   00008F                     SPI2TCNT        equ	143	;# 
  2799   00008F                     SPI2TCNTL       equ	143	;# 
  2800   000090                     SPI2TCNTH       equ	144	;# 
  2801   000091                     SPI2CON0        equ	145	;# 
  2802   000092                     SPI2CON1        equ	146	;# 
  2803   000093                     SPI2CON2        equ	147	;# 
  2804   000094                     SPI2STATUS      equ	148	;# 
  2805   000095                     SPI2TWIDTH      equ	149	;# 
  2806   000096                     SPI2BAUD        equ	150	;# 
  2807   000097                     SPI2INTF        equ	151	;# 
  2808   000098                     SPI2INTE        equ	152	;# 
  2809   000099                     SPI2CLK         equ	153	;# 
  2810   0000AC                     ACTCON          equ	172	;# 
  2811   0000AD                     OSCCON1         equ	173	;# 
  2812   0000AE                     OSCCON2         equ	174	;# 
  2813   0000AF                     OSCCON3         equ	175	;# 
  2814   0000B0                     OSCTUNE         equ	176	;# 
  2815   0000B1                     OSCFRQ          equ	177	;# 
  2816   0000B1                     OSCFREQ         equ	177	;# 
  2817   0000B2                     OSCSTAT         equ	178	;# 
  2818   0000B2                     OSCSTAT1        equ	178	;# 
  2819   0000B3                     OSCEN           equ	179	;# 
  2820   0000B4                     PRLOCK          equ	180	;# 
  2821   0000B5                     SCANPR          equ	181	;# 
  2822   0000B6                     DMA1PR          equ	182	;# 
  2823   0000B7                     DMA2PR          equ	183	;# 
  2824   0000B8                     DMA3PR          equ	184	;# 
  2825   0000B9                     DMA4PR          equ	185	;# 
  2826   0000BA                     DMA5PR          equ	186	;# 
  2827   0000BB                     DMA6PR          equ	187	;# 
  2828   0000BE                     MAINPR          equ	190	;# 
  2829   0000BF                     ISRPR           equ	191	;# 
  2830   0000D4                     CLCDATA         equ	212	;# 
  2831   0000D5                     CLCSELECT       equ	213	;# 
  2832   0000D6                     CLCnCON         equ	214	;# 
  2833   0000D7                     CLCnPOL         equ	215	;# 
  2834   0000D8                     CLCnSEL0        equ	216	;# 
  2835   0000D9                     CLCnSEL1        equ	217	;# 
  2836   0000DA                     CLCnSEL2        equ	218	;# 
  2837   0000DB                     CLCnSEL3        equ	219	;# 
  2838   0000DC                     CLCnGLS0        equ	220	;# 
  2839   0000DD                     CLCnGLS1        equ	221	;# 
  2840   0000DE                     CLCnGLS2        equ	222	;# 
  2841   0000DF                     CLCnGLS3        equ	223	;# 
  2842   0000E8                     DMASELECT       equ	232	;# 
  2843   0000E9                     DMAnBUF         equ	233	;# 
  2844   0000EA                     DMAnDCNT        equ	234	;# 
  2845   0000EA                     DMAnDCNTL       equ	234	;# 
  2846   0000EB                     DMAnDCNTH       equ	235	;# 
  2847   0000EC                     DMAnDPTR        equ	236	;# 
  2848   0000EC                     DMAnDPTRL       equ	236	;# 
  2849   0000ED                     DMAnDPTRH       equ	237	;# 
  2850   0000EE                     DMAnDSZ         equ	238	;# 
  2851   0000EE                     DMAnDSZL        equ	238	;# 
  2852   0000EF                     DMAnDSZH        equ	239	;# 
  2853   0000F0                     DMAnDSA         equ	240	;# 
  2854   0000F0                     DMAnDSAL        equ	240	;# 
  2855   0000F1                     DMAnDSAH        equ	241	;# 
  2856   0000F2                     DMAnSCNT        equ	242	;# 
  2857   0000F2                     DMAnSCNTL       equ	242	;# 
  2858   0000F3                     DMAnSCNTH       equ	243	;# 
  2859   0000F4                     DMAnSPTR        equ	244	;# 
  2860   0000F4                     DMAnSPTRL       equ	244	;# 
  2861   0000F5                     DMAnSPTRH       equ	245	;# 
  2862   0000F6                     DMAnSPTRU       equ	246	;# 
  2863   0000F7                     DMAnSSZ         equ	247	;# 
  2864   0000F7                     DMAnSSZL        equ	247	;# 
  2865   0000F8                     DMAnSSZH        equ	248	;# 
  2866   0000F9                     DMAnSSA         equ	249	;# 
  2867   0000F9                     DMAnSSAL        equ	249	;# 
  2868   0000FA                     DMAnSSAH        equ	250	;# 
  2869   0000FB                     DMAnSSAU        equ	251	;# 
  2870   0000FC                     DMAnCON0        equ	252	;# 
  2871   0000FD                     DMAnCON1        equ	253	;# 
  2872   0000FE                     DMAnAIRQ        equ	254	;# 
  2873   0000FF                     DMAnSIRQ        equ	255	;# 
  2874   000200                     PPSLOCK         equ	512	;# 
  2875   000201                     RA0PPS          equ	513	;# 
  2876   000202                     RA1PPS          equ	514	;# 
  2877   000203                     RA2PPS          equ	515	;# 
  2878   000204                     RA3PPS          equ	516	;# 
  2879   000205                     RA4PPS          equ	517	;# 
  2880   000206                     RA5PPS          equ	518	;# 
  2881   000207                     RA6PPS          equ	519	;# 
  2882   000208                     RA7PPS          equ	520	;# 
  2883   000209                     RB0PPS          equ	521	;# 
  2884   00020A                     RB1PPS          equ	522	;# 
  2885   00020B                     RB2PPS          equ	523	;# 
  2886   00020C                     RB3PPS          equ	524	;# 
  2887   00020D                     RB4PPS          equ	525	;# 
  2888   00020E                     RB5PPS          equ	526	;# 
  2889   00020F                     RB6PPS          equ	527	;# 
  2890   000210                     RB7PPS          equ	528	;# 
  2891   000211                     RC0PPS          equ	529	;# 
  2892   000212                     RC1PPS          equ	530	;# 
  2893   000213                     RC2PPS          equ	531	;# 
  2894   000214                     RC3PPS          equ	532	;# 
  2895   000215                     RC4PPS          equ	533	;# 
  2896   000216                     RC5PPS          equ	534	;# 
  2897   000217                     RC6PPS          equ	535	;# 
  2898   000218                     RC7PPS          equ	536	;# 
  2899   000219                     RD0PPS          equ	537	;# 
  2900   00021A                     RD1PPS          equ	538	;# 
  2901   00021B                     RD2PPS          equ	539	;# 
  2902   00021C                     RD3PPS          equ	540	;# 
  2903   00021D                     RD4PPS          equ	541	;# 
  2904   00021E                     RD5PPS          equ	542	;# 
  2905   00021F                     RD6PPS          equ	543	;# 
  2906   000220                     RD7PPS          equ	544	;# 
  2907   000221                     RE0PPS          equ	545	;# 
  2908   000222                     RE1PPS          equ	546	;# 
  2909   000223                     RE2PPS          equ	547	;# 
  2910   000229                     RF0PPS          equ	553	;# 
  2911   00022A                     RF1PPS          equ	554	;# 
  2912   00022B                     RF2PPS          equ	555	;# 
  2913   00022C                     RF3PPS          equ	556	;# 
  2914   00022D                     RF4PPS          equ	557	;# 
  2915   00022E                     RF5PPS          equ	558	;# 
  2916   00022F                     RF6PPS          equ	559	;# 
  2917   000230                     RF7PPS          equ	560	;# 
  2918   00023E                     INT0PPS         equ	574	;# 
  2919   00023F                     INT1PPS         equ	575	;# 
  2920   000240                     INT2PPS         equ	576	;# 
  2921   000241                     T0CKIPPS        equ	577	;# 
  2922   000242                     T1CKIPPS        equ	578	;# 
  2923   000243                     T1GPPS          equ	579	;# 
  2924   000244                     T3CKIPPS        equ	580	;# 
  2925   000245                     T3GPPS          equ	581	;# 
  2926   000246                     T5CKIPPS        equ	582	;# 
  2927   000247                     T5GPPS          equ	583	;# 
  2928   000248                     T2INPPS         equ	584	;# 
  2929   000249                     T4INPPS         equ	585	;# 
  2930   00024A                     T6INPPS         equ	586	;# 
  2931   00024F                     CCP1PPS         equ	591	;# 
  2932   000250                     CCP2PPS         equ	592	;# 
  2933   000251                     CCP3PPS         equ	593	;# 
  2934   000253                     PWM1ERSPPS      equ	595	;# 
  2935   000254                     PWM2ERSPPS      equ	596	;# 
  2936   000255                     PWM3ERSPPS      equ	597	;# 
  2937   000257                     PWMIN0PPS       equ	599	;# 
  2938   000258                     PWMIN1PPS       equ	600	;# 
  2939   000259                     SMT1WINPPS      equ	601	;# 
  2940   00025A                     SMT1SIGPPS      equ	602	;# 
  2941   00025B                     CWG1PPS         equ	603	;# 
  2942   00025B                     CWG1INPPS       equ	603	;# 
  2943   00025C                     CWG2PPS         equ	604	;# 
  2944   00025C                     CWG2INPPS       equ	604	;# 
  2945   00025D                     CWG3PPS         equ	605	;# 
  2946   00025D                     CWG3INPPS       equ	605	;# 
  2947   00025E                     MD1CARLPPS      equ	606	;# 
  2948   00025E                     MDCARLPPS       equ	606	;# 
  2949   00025F                     MD1CARHPPS      equ	607	;# 
  2950   00025F                     MDCARHPPS       equ	607	;# 
  2951   000260                     MD1SRCPPS       equ	608	;# 
  2952   000260                     MDSRCPPS        equ	608	;# 
  2953   000261                     CLCIN0PPS       equ	609	;# 
  2954   000262                     CLCIN1PPS       equ	610	;# 
  2955   000263                     CLCIN2PPS       equ	611	;# 
  2956   000264                     CLCIN3PPS       equ	612	;# 
  2957   000265                     CLCIN4PPS       equ	613	;# 
  2958   000266                     CLCIN5PPS       equ	614	;# 
  2959   000267                     CLCIN6PPS       equ	615	;# 
  2960   000268                     CLCIN7PPS       equ	616	;# 
  2961   000269                     ADACTPPS        equ	617	;# 
  2962   00026A                     SPI1SCKPPS      equ	618	;# 
  2963   00026B                     SPI1SDIPPS      equ	619	;# 
  2964   00026C                     SPI1SSPPS       equ	620	;# 
  2965   00026D                     SPI2SCKPPS      equ	621	;# 
  2966   00026E                     SPI2SDIPPS      equ	622	;# 
  2967   00026F                     SPI2SSPPS       equ	623	;# 
  2968   000270                     I2C1SDAPPS      equ	624	;# 
  2969   000271                     I2C1SCLPPS      equ	625	;# 
  2970   000272                     U1RXPPS         equ	626	;# 
  2971   000273                     U1CTSPPS        equ	627	;# 
  2972   000274                     U2RXPPS         equ	628	;# 
  2973   000275                     U2CTSPPS        equ	629	;# 
  2974   000276                     U3RXPPS         equ	630	;# 
  2975   000277                     U3CTSPPS        equ	631	;# 
  2976   000278                     U4RXPPS         equ	632	;# 
  2977   000279                     U4CTSPPS        equ	633	;# 
  2978   00027A                     U5RXPPS         equ	634	;# 
  2979   00027B                     U5CTSPPS        equ	635	;# 
  2980   000286                     RC4I2C          equ	646	;# 
  2981   000287                     RC3I2C          equ	647	;# 
  2982   000288                     RB2I2C          equ	648	;# 
  2983   000289                     RB1I2C          equ	649	;# 
  2984   00028B                     I2C1RXB         equ	651	;# 
  2985   00028C                     I2C1TXB         equ	652	;# 
  2986   00028D                     I2C1CNT         equ	653	;# 
  2987   00028E                     I2C1ADB0        equ	654	;# 
  2988   00028F                     I2C1ADB1        equ	655	;# 
  2989   000290                     I2C1ADR0        equ	656	;# 
  2990   000291                     I2C1ADR1        equ	657	;# 
  2991   000292                     I2C1ADR2        equ	658	;# 
  2992   000293                     I2C1ADR3        equ	659	;# 
  2993   000294                     I2C1CON0        equ	660	;# 
  2994   000295                     I2C1CON1        equ	661	;# 
  2995   000296                     I2C1CON2        equ	662	;# 
  2996   000297                     I2C1ERR         equ	663	;# 
  2997   000298                     I2C1STAT0       equ	664	;# 
  2998   000299                     I2C1STAT1       equ	665	;# 
  2999   00029A                     I2C1PIR         equ	666	;# 
  3000   00029B                     I2C1PIE         equ	667	;# 
  3001   00029C                     I2C1CLK         equ	668	;# 
  3002   00029D                     I2C1BTO         equ	669	;# 
  3003   0002A1                     U1RXB           equ	673	;# 
  3004   0002A1                     U1RXBL          equ	673	;# 
  3005   0002A2                     U1RXCHK         equ	674	;# 
  3006   0002A3                     U1TXB           equ	675	;# 
  3007   0002A3                     U1TXBL          equ	675	;# 
  3008   0002A4                     U1TXCHK         equ	676	;# 
  3009   0002A5                     U1P1            equ	677	;# 
  3010   0002A5                     U1P1L           equ	677	;# 
  3011   0002A6                     U1P1H           equ	678	;# 
  3012   0002A7                     U1P2            equ	679	;# 
  3013   0002A7                     U1P2L           equ	679	;# 
  3014   0002A8                     U1P2H           equ	680	;# 
  3015   0002A9                     U1P3            equ	681	;# 
  3016   0002A9                     U1P3L           equ	681	;# 
  3017   0002AA                     U1P3H           equ	682	;# 
  3018   0002AB                     U1CON0          equ	683	;# 
  3019   0002AC                     U1CON1          equ	684	;# 
  3020   0002AD                     U1CON2          equ	685	;# 
  3021   0002AE                     U1BRG           equ	686	;# 
  3022   0002AE                     U1BRGL          equ	686	;# 
  3023   0002AF                     U1BRGH          equ	687	;# 
  3024   0002B0                     U1FIFO          equ	688	;# 
  3025   0002B1                     U1UIR           equ	689	;# 
  3026   0002B2                     U1ERRIR         equ	690	;# 
  3027   0002B3                     U1ERRIE         equ	691	;# 
  3028   0002B4                     U2RXB           equ	692	;# 
  3029   0002B4                     U2RXBL          equ	692	;# 
  3030   0002B6                     U2TXB           equ	694	;# 
  3031   0002B6                     U2TXBL          equ	694	;# 
  3032   0002B8                     U2P1            equ	696	;# 
  3033   0002B8                     U2P1L           equ	696	;# 
  3034   0002BA                     U2P2            equ	698	;# 
  3035   0002BA                     U2P2L           equ	698	;# 
  3036   0002BC                     U2P3            equ	700	;# 
  3037   0002BC                     U2P3L           equ	700	;# 
  3038   0002BE                     U2CON0          equ	702	;# 
  3039   0002BF                     U2CON1          equ	703	;# 
  3040   0002C0                     U2CON2          equ	704	;# 
  3041   0002C1                     U2BRG           equ	705	;# 
  3042   0002C1                     U2BRGL          equ	705	;# 
  3043   0002C2                     U2BRGH          equ	706	;# 
  3044   0002C3                     U2FIFO          equ	707	;# 
  3045   0002C4                     U2UIR           equ	708	;# 
  3046   0002C5                     U2ERRIR         equ	709	;# 
  3047   0002C6                     U2ERRIE         equ	710	;# 
  3048   0002C7                     U3RXB           equ	711	;# 
  3049   0002C7                     U3RXBL          equ	711	;# 
  3050   0002C9                     U3TXB           equ	713	;# 
  3051   0002C9                     U3TXBL          equ	713	;# 
  3052   0002CB                     U3P1            equ	715	;# 
  3053   0002CB                     U3P1L           equ	715	;# 
  3054   0002CD                     U3P2            equ	717	;# 
  3055   0002CD                     U3P2L           equ	717	;# 
  3056   0002CF                     U3P3            equ	719	;# 
  3057   0002CF                     U3P3L           equ	719	;# 
  3058   0002D1                     U3CON0          equ	721	;# 
  3059   0002D2                     U3CON1          equ	722	;# 
  3060   0002D3                     U3CON2          equ	723	;# 
  3061   0002D4                     U3BRG           equ	724	;# 
  3062   0002D4                     U3BRGL          equ	724	;# 
  3063   0002D5                     U3BRGH          equ	725	;# 
  3064   0002D6                     U3FIFO          equ	726	;# 
  3065   0002D7                     U3UIR           equ	727	;# 
  3066   0002D8                     U3ERRIR         equ	728	;# 
  3067   0002D9                     U3ERRIE         equ	729	;# 
  3068   0002DA                     U4RXB           equ	730	;# 
  3069   0002DA                     U4RXBL          equ	730	;# 
  3070   0002DC                     U4TXB           equ	732	;# 
  3071   0002DC                     U4TXBL          equ	732	;# 
  3072   0002DE                     U4P1            equ	734	;# 
  3073   0002DE                     U4P1L           equ	734	;# 
  3074   0002E0                     U4P2            equ	736	;# 
  3075   0002E0                     U4P2L           equ	736	;# 
  3076   0002E2                     U4P3            equ	738	;# 
  3077   0002E2                     U4P3L           equ	738	;# 
  3078   0002E4                     U4CON0          equ	740	;# 
  3079   0002E5                     U4CON1          equ	741	;# 
  3080   0002E6                     U4CON2          equ	742	;# 
  3081   0002E7                     U4BRG           equ	743	;# 
  3082   0002E7                     U4BRGL          equ	743	;# 
  3083   0002E8                     U4BRGH          equ	744	;# 
  3084   0002E9                     U4FIFO          equ	745	;# 
  3085   0002EA                     U4UIR           equ	746	;# 
  3086   0002EB                     U4ERRIR         equ	747	;# 
  3087   0002EC                     U4ERRIE         equ	748	;# 
  3088   0002ED                     U5RXB           equ	749	;# 
  3089   0002ED                     U5RXBL          equ	749	;# 
  3090   0002EF                     U5TXB           equ	751	;# 
  3091   0002EF                     U5TXBL          equ	751	;# 
  3092   0002F1                     U5P1            equ	753	;# 
  3093   0002F1                     U5P1L           equ	753	;# 
  3094   0002F3                     U5P2            equ	755	;# 
  3095   0002F3                     U5P2L           equ	755	;# 
  3096   0002F5                     U5P3            equ	757	;# 
  3097   0002F5                     U5P3L           equ	757	;# 
  3098   0002F7                     U5CON0          equ	759	;# 
  3099   0002F8                     U5CON1          equ	760	;# 
  3100   0002F9                     U5CON2          equ	761	;# 
  3101   0002FA                     U5BRG           equ	762	;# 
  3102   0002FA                     U5BRGL          equ	762	;# 
  3103   0002FB                     U5BRGH          equ	763	;# 
  3104   0002FC                     U5FIFO          equ	764	;# 
  3105   0002FD                     U5UIR           equ	765	;# 
  3106   0002FE                     U5ERRIR         equ	766	;# 
  3107   0002FF                     U5ERRIE         equ	767	;# 
  3108   000300                     SMT1TMR         equ	768	;# 
  3109   000300                     SMT1TMRL        equ	768	;# 
  3110   000301                     SMT1TMRH        equ	769	;# 
  3111   000302                     SMT1TMRU        equ	770	;# 
  3112   000303                     SMT1CPR         equ	771	;# 
  3113   000303                     SMT1CPRL        equ	771	;# 
  3114   000304                     SMT1CPRH        equ	772	;# 
  3115   000305                     SMT1CPRU        equ	773	;# 
  3116   000306                     SMT1CPW         equ	774	;# 
  3117   000306                     SMT1CPWL        equ	774	;# 
  3118   000307                     SMT1CPWH        equ	775	;# 
  3119   000308                     SMT1CPWU        equ	776	;# 
  3120   000309                     SMT1PR          equ	777	;# 
  3121   000309                     SMT1PRL         equ	777	;# 
  3122   00030A                     SMT1PRH         equ	778	;# 
  3123   00030B                     SMT1PRU         equ	779	;# 
  3124   00030C                     SMT1CON0        equ	780	;# 
  3125   00030D                     SMT1CON1        equ	781	;# 
  3126   00030E                     SMT1STAT        equ	782	;# 
  3127   00030F                     SMT1CLK         equ	783	;# 
  3128   000310                     SMT1SIG         equ	784	;# 
  3129   000311                     SMT1WIN         equ	785	;# 
  3130   000318                     TMR0L           equ	792	;# 
  3131   000318                     TMR0            equ	792	;# 
  3132   000319                     TMR0H           equ	793	;# 
  3133   000319                     PR0             equ	793	;# 
  3134   00031A                     T0CON0          equ	794	;# 
  3135   00031B                     T0CON1          equ	795	;# 
  3136   00031C                     TMR1            equ	796	;# 
  3137   00031C                     TMR1L           equ	796	;# 
  3138   00031D                     TMR1H           equ	797	;# 
  3139   00031E                     T1CON           equ	798	;# 
  3140   00031E                     TMR1CON         equ	798	;# 
  3141   00031F                     T1GCON          equ	799	;# 
  3142   00031F                     TMR1GCON        equ	799	;# 
  3143   000320                     T1GATE          equ	800	;# 
  3144   000320                     TMR1GATE        equ	800	;# 
  3145   000321                     T1CLK           equ	801	;# 
  3146   000321                     TMR1CLK         equ	801	;# 
  3147   000321                     PR1             equ	801	;# 
  3148   000322                     T2TMR           equ	802	;# 
  3149   000322                     TMR2            equ	802	;# 
  3150   000323                     T2PR            equ	803	;# 
  3151   000323                     PR2             equ	803	;# 
  3152   000324                     T2CON           equ	804	;# 
  3153   000325                     T2HLT           equ	805	;# 
  3154   000326                     T2CLKCON        equ	806	;# 
  3155   000326                     T2CLK           equ	806	;# 
  3156   000327                     T2RST           equ	807	;# 
  3157   000328                     TMR3            equ	808	;# 
  3158   000328                     TMR3L           equ	808	;# 
  3159   000329                     TMR3H           equ	809	;# 
  3160   00032A                     T3CON           equ	810	;# 
  3161   00032A                     TMR3CON         equ	810	;# 
  3162   00032B                     T3GCON          equ	811	;# 
  3163   00032B                     TMR3GCON        equ	811	;# 
  3164   00032C                     T3GATE          equ	812	;# 
  3165   00032C                     TMR3GATE        equ	812	;# 
  3166   00032D                     T3CLK           equ	813	;# 
  3167   00032D                     TMR3CLK         equ	813	;# 
  3168   00032D                     PR3             equ	813	;# 
  3169   00032E                     T4TMR           equ	814	;# 
  3170   00032E                     TMR4            equ	814	;# 
  3171   00032F                     T4PR            equ	815	;# 
  3172   00032F                     PR4             equ	815	;# 
  3173   000330                     T4CON           equ	816	;# 
  3174   000331                     T4HLT           equ	817	;# 
  3175   000332                     T4CLKCON        equ	818	;# 
  3176   000332                     T4CLK           equ	818	;# 
  3177   000333                     T4RST           equ	819	;# 
  3178   000334                     TMR5            equ	820	;# 
  3179   000334                     TMR5L           equ	820	;# 
  3180   000335                     TMR5H           equ	821	;# 
  3181   000336                     T5CON           equ	822	;# 
  3182   000336                     TMR5CON         equ	822	;# 
  3183   000337                     T5GCON          equ	823	;# 
  3184   000337                     TMR5GCON        equ	823	;# 
  3185   000338                     T5GATE          equ	824	;# 
  3186   000338                     TMR5GATE        equ	824	;# 
  3187   000339                     T5CLK           equ	825	;# 
  3188   000339                     TMR5CLK         equ	825	;# 
  3189   000339                     PR5             equ	825	;# 
  3190   00033A                     T6TMR           equ	826	;# 
  3191   00033A                     TMR6            equ	826	;# 
  3192   00033B                     T6PR            equ	827	;# 
  3193   00033B                     PR6             equ	827	;# 
  3194   00033C                     T6CON           equ	828	;# 
  3195   00033D                     T6HLT           equ	829	;# 
  3196   00033E                     T6CLKCON        equ	830	;# 
  3197   00033E                     T6CLK           equ	830	;# 
  3198   00033F                     T6RST           equ	831	;# 
  3199   000340                     CCPR1           equ	832	;# 
  3200   000340                     CCPR1L          equ	832	;# 
  3201   000341                     CCPR1H          equ	833	;# 
  3202   000342                     CCP1CON         equ	834	;# 
  3203   000343                     CCP1CAP         equ	835	;# 
  3204   000344                     CCPR2           equ	836	;# 
  3205   000344                     CCPR2L          equ	836	;# 
  3206   000345                     CCPR2H          equ	837	;# 
  3207   000346                     CCP2CON         equ	838	;# 
  3208   000347                     CCP2CAP         equ	839	;# 
  3209   000348                     CCPR3           equ	840	;# 
  3210   000348                     CCPR3L          equ	840	;# 
  3211   000349                     CCPR3H          equ	841	;# 
  3212   00034A                     CCP3CON         equ	842	;# 
  3213   00034B                     CCP3CAP         equ	843	;# 
  3214   00034C                     CCPTMRS0        equ	844	;# 
  3215   00034F                     CRCDATA         equ	847	;# 
  3216   00034F                     CRCDATL         equ	847	;# 
  3217   000350                     CRCDATH         equ	848	;# 
  3218   000351                     CRCACC          equ	849	;# 
  3219   000351                     CRCACCL         equ	849	;# 
  3220   000352                     CRCACCH         equ	850	;# 
  3221   000353                     CRCSHFT         equ	851	;# 
  3222   000353                     CRCSHIFTL       equ	851	;# 
  3223   000354                     CRCSHIFTH       equ	852	;# 
  3224   000355                     CRCXOR          equ	853	;# 
  3225   000355                     CRCXORL         equ	853	;# 
  3226   000356                     CRCXORH         equ	854	;# 
  3227   000357                     CRCCON0         equ	855	;# 
  3228   000358                     CRCCON1         equ	856	;# 
  3229   00035A                     SCANLADR        equ	858	;# 
  3230   00035A                     SCANLADRL       equ	858	;# 
  3231   00035B                     SCANLADRH       equ	859	;# 
  3232   00035C                     SCANLADRU       equ	860	;# 
  3233   00035D                     SCANHADR        equ	861	;# 
  3234   00035D                     SCANHADRL       equ	861	;# 
  3235   00035E                     SCANHADRH       equ	862	;# 
  3236   00035F                     SCANHADRU       equ	863	;# 
  3237   000360                     SCANCON0        equ	864	;# 
  3238   000361                     SCANTRIG        equ	865	;# 
  3239   000362                     IPR0            equ	866	;# 
  3240   000363                     IPR1            equ	867	;# 
  3241   000364                     IPR2            equ	868	;# 
  3242   000365                     IPR3            equ	869	;# 
  3243   000366                     IPR4            equ	870	;# 
  3244   000367                     IPR5            equ	871	;# 
  3245   000368                     IPR6            equ	872	;# 
  3246   000369                     IPR7            equ	873	;# 
  3247   00036A                     IPR8            equ	874	;# 
  3248   00036B                     IPR9            equ	875	;# 
  3249   00036C                     IPR10           equ	876	;# 
  3250   00036D                     IPR11           equ	877	;# 
  3251   00036E                     IPR12           equ	878	;# 
  3252   00036F                     IPR13           equ	879	;# 
  3253   000370                     IPR14           equ	880	;# 
  3254   000371                     IPR15           equ	881	;# 
  3255   000373                     STATUS_CSHAD    equ	883	;# 
  3256   000374                     WREG_CSHAD      equ	884	;# 
  3257   000375                     BSR_CSHAD       equ	885	;# 
  3258   000376                     SHADCON         equ	886	;# 
  3259   000377                     STATUS_SHAD     equ	887	;# 
  3260   000378                     WREG_SHAD       equ	888	;# 
  3261   000379                     BSR_SHAD        equ	889	;# 
  3262   00037A                     PCLATH_SHAD     equ	890	;# 
  3263   00037B                     PCLATU_SHAD     equ	891	;# 
  3264   00037C                     FSR0SH          equ	892	;# 
  3265   00037C                     FSR0L_SHAD      equ	892	;# 
  3266   00037D                     FSR0H_SHAD      equ	893	;# 
  3267   00037E                     FSR1SH          equ	894	;# 
  3268   00037E                     FSR1L_SHAD      equ	894	;# 
  3269   00037F                     FSR1H_SHAD      equ	895	;# 
  3270   000380                     FSR2SH          equ	896	;# 
  3271   000380                     FSR2L_SHAD      equ	896	;# 
  3272   000381                     FSR2H_SHAD      equ	897	;# 
  3273   000382                     PRODSH          equ	898	;# 
  3274   000382                     PRODL_SHAD      equ	898	;# 
  3275   000383                     PRODH_SHAD      equ	899	;# 
  3276   0003BC                     CWG1CLK         equ	956	;# 
  3277   0003BC                     CWG1CLKCON      equ	956	;# 
  3278   0003BD                     CWG1ISM         equ	957	;# 
  3279   0003BD                     CWG1DAT         equ	957	;# 
  3280   0003BE                     CWG1DBR         equ	958	;# 
  3281   0003BF                     CWG1DBF         equ	959	;# 
  3282   0003C0                     CWG1CON0        equ	960	;# 
  3283   0003C1                     CWG1CON1        equ	961	;# 
  3284   0003C2                     CWG1AS0         equ	962	;# 
  3285   0003C3                     CWG1AS1         equ	963	;# 
  3286   0003C4                     CWG1STR         equ	964	;# 
  3287   0003C5                     CWG2CLK         equ	965	;# 
  3288   0003C5                     CWG2CLKCON      equ	965	;# 
  3289   0003C6                     CWG2ISM         equ	966	;# 
  3290   0003C6                     CWG2DAT         equ	966	;# 
  3291   0003C7                     CWG2DBR         equ	967	;# 
  3292   0003C8                     CWG2DBF         equ	968	;# 
  3293   0003C9                     CWG2CON0        equ	969	;# 
  3294   0003CA                     CWG2CON1        equ	970	;# 
  3295   0003CB                     CWG2AS0         equ	971	;# 
  3296   0003CC                     CWG2AS1         equ	972	;# 
  3297   0003CD                     CWG2STR         equ	973	;# 
  3298   0003CE                     CWG3CLK         equ	974	;# 
  3299   0003CE                     CWG3CLKCON      equ	974	;# 
  3300   0003CF                     CWG3ISM         equ	975	;# 
  3301   0003CF                     CWG3DAT         equ	975	;# 
  3302   0003D0                     CWG3DBR         equ	976	;# 
  3303   0003D1                     CWG3DBF         equ	977	;# 
  3304   0003D2                     CWG3CON0        equ	978	;# 
  3305   0003D3                     CWG3CON1        equ	979	;# 
  3306   0003D4                     CWG3AS0         equ	980	;# 
  3307   0003D5                     CWG3AS1         equ	981	;# 
  3308   0003D6                     CWG3STR         equ	982	;# 
  3309   0003D7                     FVRCON          equ	983	;# 
  3310   0003D8                     ADCPCON         equ	984	;# 
  3311   0003D8                     ADCP            equ	984	;# 
  3312   0003D9                     ADLTH           equ	985	;# 
  3313   0003D9                     ADLTHL          equ	985	;# 
  3314   0003DA                     ADLTHH          equ	986	;# 
  3315   0003DB                     ADUTH           equ	987	;# 
  3316   0003DB                     ADUTHL          equ	987	;# 
  3317   0003DC                     ADUTHH          equ	988	;# 
  3318   0003DD                     ADERR           equ	989	;# 
  3319   0003DD                     ADERRL          equ	989	;# 
  3320   0003DE                     ADERRH          equ	990	;# 
  3321   0003DF                     ADSTPT          equ	991	;# 
  3322   0003DF                     ADSTPTL         equ	991	;# 
  3323   0003E0                     ADSTPTH         equ	992	;# 
  3324   0003E1                     ADFLTR          equ	993	;# 
  3325   0003E1                     ADFLTRL         equ	993	;# 
  3326   0003E2                     ADFLTRH         equ	994	;# 
  3327   0003E3                     ADACC           equ	995	;# 
  3328   0003E3                     ADACCL          equ	995	;# 
  3329   0003E4                     ADACCH          equ	996	;# 
  3330   0003E5                     ADACCU          equ	997	;# 
  3331   0003E6                     ADCNT           equ	998	;# 
  3332   0003E7                     ADRPT           equ	999	;# 
  3333   0003E8                     ADPREV          equ	1000	;# 
  3334   0003E8                     ADPREVL         equ	1000	;# 
  3335   0003E9                     ADPREVH         equ	1001	;# 
  3336   0003EA                     ADRES           equ	1002	;# 
  3337   0003EA                     ADRESL          equ	1002	;# 
  3338   0003EB                     ADRESH          equ	1003	;# 
  3339   0003EC                     ADPCH           equ	1004	;# 
  3340   0003EE                     ADACQ           equ	1006	;# 
  3341   0003EE                     ADACQL          equ	1006	;# 
  3342   0003EF                     ADACQH          equ	1007	;# 
  3343   0003F0                     ADCAP           equ	1008	;# 
  3344   0003F1                     ADPRE           equ	1009	;# 
  3345   0003F1                     ADPREL          equ	1009	;# 
  3346   0003F2                     ADPREH          equ	1010	;# 
  3347   0003F3                     ADCON0          equ	1011	;# 
  3348   0003F4                     ADCON1          equ	1012	;# 
  3349   0003F5                     ADCON2          equ	1013	;# 
  3350   0003F6                     ADCON3          equ	1014	;# 
  3351   0003F7                     ADSTAT          equ	1015	;# 
  3352   0003F8                     ADREF           equ	1016	;# 
  3353   0003F9                     ADACT           equ	1017	;# 
  3354   0003FA                     ADCLK           equ	1018	;# 
  3355   000400                     ANSELA          equ	1024	;# 
  3356   000401                     WPUA            equ	1025	;# 
  3357   000402                     ODCONA          equ	1026	;# 
  3358   000403                     SLRCONA         equ	1027	;# 
  3359   000404                     INLVLA          equ	1028	;# 
  3360   000405                     IOCAP           equ	1029	;# 
  3361   000406                     IOCAN           equ	1030	;# 
  3362   000407                     IOCAF           equ	1031	;# 
  3363   000408                     ANSELB          equ	1032	;# 
  3364   000409                     WPUB            equ	1033	;# 
  3365   00040A                     ODCONB          equ	1034	;# 
  3366   00040B                     SLRCONB         equ	1035	;# 
  3367   00040C                     INLVLB          equ	1036	;# 
  3368   00040D                     IOCBP           equ	1037	;# 
  3369   00040E                     IOCBN           equ	1038	;# 
  3370   00040F                     IOCBF           equ	1039	;# 
  3371   000410                     ANSELC          equ	1040	;# 
  3372   000411                     WPUC            equ	1041	;# 
  3373   000412                     ODCONC          equ	1042	;# 
  3374   000413                     SLRCONC         equ	1043	;# 
  3375   000414                     INLVLC          equ	1044	;# 
  3376   000415                     IOCCP           equ	1045	;# 
  3377   000416                     IOCCN           equ	1046	;# 
  3378   000417                     IOCCF           equ	1047	;# 
  3379   000418                     ANSELD          equ	1048	;# 
  3380   000419                     WPUD            equ	1049	;# 
  3381   00041A                     ODCOND          equ	1050	;# 
  3382   00041B                     SLRCOND         equ	1051	;# 
  3383   00041C                     INLVLD          equ	1052	;# 
  3384   000420                     ANSELE          equ	1056	;# 
  3385   000421                     WPUE            equ	1057	;# 
  3386   000422                     ODCONE          equ	1058	;# 
  3387   000423                     SLRCONE         equ	1059	;# 
  3388   000424                     INLVLE          equ	1060	;# 
  3389   000425                     IOCEP           equ	1061	;# 
  3390   000426                     IOCEN           equ	1062	;# 
  3391   000427                     IOCEF           equ	1063	;# 
  3392   000428                     ANSELF          equ	1064	;# 
  3393   000429                     WPUF            equ	1065	;# 
  3394   00042A                     ODCONF          equ	1066	;# 
  3395   00042B                     SLRCONF         equ	1067	;# 
  3396   00042C                     INLVLF          equ	1068	;# 
  3397   000440                     NCO1ACC         equ	1088	;# 
  3398   000440                     NCO1ACCL        equ	1088	;# 
  3399   000441                     NCO1ACCH        equ	1089	;# 
  3400   000442                     NCO1ACCU        equ	1090	;# 
  3401   000443                     NCO1INC         equ	1091	;# 
  3402   000443                     NCO1INCL        equ	1091	;# 
  3403   000444                     NCO1INCH        equ	1092	;# 
  3404   000445                     NCO1INCU        equ	1093	;# 
  3405   000446                     NCO1CON         equ	1094	;# 
  3406   000447                     NCO1CLK         equ	1095	;# 
  3407   000448                     NCO2ACC         equ	1096	;# 
  3408   000448                     NCO2ACCL        equ	1096	;# 
  3409   000449                     NCO2ACCH        equ	1097	;# 
  3410   00044A                     NCO2ACCU        equ	1098	;# 
  3411   00044B                     NCO2INC         equ	1099	;# 
  3412   00044B                     NCO2INCL        equ	1099	;# 
  3413   00044C                     NCO2INCH        equ	1100	;# 
  3414   00044D                     NCO2INCU        equ	1101	;# 
  3415   00044E                     NCO2CON         equ	1102	;# 
  3416   00044F                     NCO2CLK         equ	1103	;# 
  3417   000450                     NCO3ACC         equ	1104	;# 
  3418   000450                     NCO3ACCL        equ	1104	;# 
  3419   000451                     NCO3ACCH        equ	1105	;# 
  3420   000452                     NCO3ACCU        equ	1106	;# 
  3421   000453                     NCO3INC         equ	1107	;# 
  3422   000453                     NCO3INCL        equ	1107	;# 
  3423   000454                     NCO3INCH        equ	1108	;# 
  3424   000455                     NCO3INCU        equ	1109	;# 
  3425   000456                     NCO3CON         equ	1110	;# 
  3426   000457                     NCO3CLK         equ	1111	;# 
  3427   000459                     IVTLOCK         equ	1113	;# 
  3428   00045A                     IVTAD           equ	1114	;# 
  3429   00045A                     IVTADL          equ	1114	;# 
  3430   00045B                     IVTADH          equ	1115	;# 
  3431   00045C                     IVTADU          equ	1116	;# 
  3432   00045D                     IVTBASE         equ	1117	;# 
  3433   00045D                     IVTBASEL        equ	1117	;# 
  3434   00045E                     IVTBASEH        equ	1118	;# 
  3435   00045F                     IVTBASEU        equ	1119	;# 
  3436   000460                     PWM1ERS         equ	1120	;# 
  3437   000461                     PWM1CLK         equ	1121	;# 
  3438   000462                     PWM1LDS         equ	1122	;# 
  3439   000463                     PWM1PR          equ	1123	;# 
  3440   000463                     PWM1PRL         equ	1123	;# 
  3441   000464                     PWM1PRH         equ	1124	;# 
  3442   000465                     PWM1CPRE        equ	1125	;# 
  3443   000466                     PWM1PIPOS       equ	1126	;# 
  3444   000467                     PWM1GIR         equ	1127	;# 
  3445   000468                     PWM1GIE         equ	1128	;# 
  3446   000469                     PWM1CON         equ	1129	;# 
  3447   00046A                     PWM1S1CFG       equ	1130	;# 
  3448   00046B                     PWM1S1P1        equ	1131	;# 
  3449   00046B                     PWM1S1P1L       equ	1131	;# 
  3450   00046C                     PWM1S1P1H       equ	1132	;# 
  3451   00046D                     PWM1S1P2        equ	1133	;# 
  3452   00046D                     PWM1S1P2L       equ	1133	;# 
  3453   00046E                     PWM1S1P2H       equ	1134	;# 
  3454   00046F                     PWM2ERS         equ	1135	;# 
  3455   000470                     PWM2CLK         equ	1136	;# 
  3456   000471                     PWM2LDS         equ	1137	;# 
  3457   000472                     PWM2PR          equ	1138	;# 
  3458   000472                     PWM2PRL         equ	1138	;# 
  3459   000473                     PWM2PRH         equ	1139	;# 
  3460   000474                     PWM2CPRE        equ	1140	;# 
  3461   000475                     PWM2PIPOS       equ	1141	;# 
  3462   000476                     PWM2GIR         equ	1142	;# 
  3463   000477                     PWM2GIE         equ	1143	;# 
  3464   000478                     PWM2CON         equ	1144	;# 
  3465   000479                     PWM2S1CFG       equ	1145	;# 
  3466   00047A                     PWM2S1P1        equ	1146	;# 
  3467   00047A                     PWM2S1P1L       equ	1146	;# 
  3468   00047B                     PWM2S1P1H       equ	1147	;# 
  3469   00047C                     PWM2S1P2        equ	1148	;# 
  3470   00047C                     PWM2S1P2L       equ	1148	;# 
  3471   00047D                     PWM2S1P2H       equ	1149	;# 
  3472   00047E                     PWM3ERS         equ	1150	;# 
  3473   00047F                     PWM3CLK         equ	1151	;# 
  3474   000480                     PWM3LDS         equ	1152	;# 
  3475   000481                     PWM3PR          equ	1153	;# 
  3476   000481                     PWM3PRL         equ	1153	;# 
  3477   000482                     PWM3PRH         equ	1154	;# 
  3478   000483                     PWM3CPRE        equ	1155	;# 
  3479   000484                     PWM3PIPOS       equ	1156	;# 
  3480   000485                     PWM3GIR         equ	1157	;# 
  3481   000486                     PWM3GIE         equ	1158	;# 
  3482   000487                     PWM3CON         equ	1159	;# 
  3483   000488                     PWM3S1CFG       equ	1160	;# 
  3484   000489                     PWM3S1P1        equ	1161	;# 
  3485   000489                     PWM3S1P1L       equ	1161	;# 
  3486   00048A                     PWM3S1P1H       equ	1162	;# 
  3487   00048B                     PWM3S1P2        equ	1163	;# 
  3488   00048B                     PWM3S1P2L       equ	1163	;# 
  3489   00048C                     PWM3S1P2H       equ	1164	;# 
  3490   00049C                     PWMLOAD         equ	1180	;# 
  3491   00049D                     PWMEN           equ	1181	;# 
  3492   00049E                     PIE0            equ	1182	;# 
  3493   00049F                     PIE1            equ	1183	;# 
  3494   0004A0                     PIE2            equ	1184	;# 
  3495   0004A1                     PIE3            equ	1185	;# 
  3496   0004A2                     PIE4            equ	1186	;# 
  3497   0004A3                     PIE5            equ	1187	;# 
  3498   0004A4                     PIE6            equ	1188	;# 
  3499   0004A5                     PIE7            equ	1189	;# 
  3500   0004A6                     PIE8            equ	1190	;# 
  3501   0004A7                     PIE9            equ	1191	;# 
  3502   0004A8                     PIE10           equ	1192	;# 
  3503   0004A9                     PIE11           equ	1193	;# 
  3504   0004AA                     PIE12           equ	1194	;# 
  3505   0004AB                     PIE13           equ	1195	;# 
  3506   0004AC                     PIE14           equ	1196	;# 
  3507   0004AD                     PIE15           equ	1197	;# 
  3508   0004AE                     PIR0            equ	1198	;# 
  3509   0004AF                     PIR1            equ	1199	;# 
  3510   0004B0                     PIR2            equ	1200	;# 
  3511   0004B1                     PIR3            equ	1201	;# 
  3512   0004B2                     PIR4            equ	1202	;# 
  3513   0004B3                     PIR5            equ	1203	;# 
  3514   0004B4                     PIR6            equ	1204	;# 
  3515   0004B5                     PIR7            equ	1205	;# 
  3516   0004B6                     PIR8            equ	1206	;# 
  3517   0004B7                     PIR9            equ	1207	;# 
  3518   0004B8                     PIR10           equ	1208	;# 
  3519   0004B9                     PIR11           equ	1209	;# 
  3520   0004BA                     PIR12           equ	1210	;# 
  3521   0004BB                     PIR13           equ	1211	;# 
  3522   0004BC                     PIR14           equ	1212	;# 
  3523   0004BD                     PIR15           equ	1213	;# 
  3524   0004BE                     LATA            equ	1214	;# 
  3525   0004BF                     LATB            equ	1215	;# 
  3526   0004C0                     LATC            equ	1216	;# 
  3527   0004C1                     LATD            equ	1217	;# 
  3528   0004C2                     LATE            equ	1218	;# 
  3529   0004C3                     LATF            equ	1219	;# 
  3530   0004C6                     TRISA           equ	1222	;# 
  3531   0004C7                     TRISB           equ	1223	;# 
  3532   0004C8                     TRISC           equ	1224	;# 
  3533   0004C9                     TRISD           equ	1225	;# 
  3534   0004CA                     TRISE           equ	1226	;# 
  3535   0004CB                     TRISF           equ	1227	;# 
  3536   0004CE                     PORTA           equ	1230	;# 
  3537   0004CF                     PORTB           equ	1231	;# 
  3538   0004D0                     PORTC           equ	1232	;# 
  3539   0004D1                     PORTD           equ	1233	;# 
  3540   0004D2                     PORTE           equ	1234	;# 
  3541   0004D3                     PORTF           equ	1235	;# 
  3542   0004D6                     INTCON0         equ	1238	;# 
  3543   0004D7                     INTCON1         equ	1239	;# 
  3544   0004D8                     STATUS          equ	1240	;# 
  3545   0004D9                     FSR2            equ	1241	;# 
  3546   0004D9                     FSR2L           equ	1241	;# 
  3547   0004DA                     FSR2H           equ	1242	;# 
  3548   0004DB                     PLUSW2          equ	1243	;# 
  3549   0004DC                     PREINC2         equ	1244	;# 
  3550   0004DD                     POSTDEC2        equ	1245	;# 
  3551   0004DE                     POSTINC2        equ	1246	;# 
  3552   0004DF                     INDF2           equ	1247	;# 
  3553   0004E0                     BSR             equ	1248	;# 
  3554   0004E1                     FSR1            equ	1249	;# 
  3555   0004E1                     FSR1L           equ	1249	;# 
  3556   0004E2                     FSR1H           equ	1250	;# 
  3557   0004E3                     PLUSW1          equ	1251	;# 
  3558   0004E4                     PREINC1         equ	1252	;# 
  3559   0004E5                     POSTDEC1        equ	1253	;# 
  3560   0004E6                     POSTINC1        equ	1254	;# 
  3561   0004E7                     INDF1           equ	1255	;# 
  3562   0004E8                     WREG            equ	1256	;# 
  3563   0004E9                     FSR0            equ	1257	;# 
  3564   0004E9                     FSR0L           equ	1257	;# 
  3565   0004EA                     FSR0H           equ	1258	;# 
  3566   0004EB                     PLUSW0          equ	1259	;# 
  3567   0004EC                     PREINC0         equ	1260	;# 
  3568   0004ED                     POSTDEC0        equ	1261	;# 
  3569   0004EE                     POSTINC0        equ	1262	;# 
  3570   0004EF                     INDF0           equ	1263	;# 
  3571   0004F0                     PCON0           equ	1264	;# 
  3572   0004F1                     PCON1           equ	1265	;# 
  3573   0004F2                     CPUDOZE         equ	1266	;# 
  3574   0004F3                     PROD            equ	1267	;# 
  3575   0004F3                     PRODL           equ	1267	;# 
  3576   0004F4                     PRODH           equ	1268	;# 
  3577   0004F5                     TABLAT          equ	1269	;# 
  3578   0004F6                     TBLPTR          equ	1270	;# 
  3579   0004F6                     TBLPTRL         equ	1270	;# 
  3580   0004F7                     TBLPTRH         equ	1271	;# 
  3581   0004F8                     TBLPTRU         equ	1272	;# 
  3582   0004F9                     PCLAT           equ	1273	;# 
  3583   0004F9                     PCL             equ	1273	;# 
  3584   0004FA                     PCLATH          equ	1274	;# 
  3585   0004FB                     PCLATU          equ	1275	;# 
  3586   0004FC                     STKPTR          equ	1276	;# 
  3587   0004FD                     TOS             equ	1277	;# 
  3588   0004FD                     TOSL            equ	1277	;# 
  3589   0004FE                     TOSH            equ	1278	;# 
  3590   0004FF                     TOSU            equ	1279	;# 
  3591   000039                     CLKRCON         equ	57	;# 
  3592   00003A                     CLKRCLK         equ	58	;# 
  3593   000040                     NVMCON0         equ	64	;# 
  3594   000041                     NVMCON1         equ	65	;# 
  3595   000042                     NVMLOCK         equ	66	;# 
  3596   000043                     NVMADR          equ	67	;# 
  3597   000043                     NVMADRL         equ	67	;# 
  3598   000044                     NVMADRH         equ	68	;# 
  3599   000045                     NVMADRU         equ	69	;# 
  3600   000046                     NVMDAT          equ	70	;# 
  3601   000046                     NVMDATL         equ	70	;# 
  3602   000047                     NVMDATH         equ	71	;# 
  3603   000048                     VREGCON         equ	72	;# 
  3604   000049                     BORCON          equ	73	;# 
  3605   00004A                     HLVDCON0        equ	74	;# 
  3606   00004B                     HLVDCON1        equ	75	;# 
  3607   00004C                     ZCDCON          equ	76	;# 
  3608   000060                     PMD0            equ	96	;# 
  3609   000061                     PMD1            equ	97	;# 
  3610   000063                     PMD3            equ	99	;# 
  3611   000064                     PMD4            equ	100	;# 
  3612   000065                     PMD5            equ	101	;# 
  3613   000066                     PMD6            equ	102	;# 
  3614   000067                     PMD7            equ	103	;# 
  3615   000068                     PMD8            equ	104	;# 
  3616   00006A                     MD1CON0         equ	106	;# 
  3617   00006B                     MD1CON1         equ	107	;# 
  3618   00006C                     MD1SRC          equ	108	;# 
  3619   00006D                     MD1CARL         equ	109	;# 
  3620   00006E                     MD1CARH         equ	110	;# 
  3621   00006F                     CMOUT           equ	111	;# 
  3622   000070                     CM1CON0         equ	112	;# 
  3623   000071                     CM1CON1         equ	113	;# 
  3624   000072                     CM1NCH          equ	114	;# 
  3625   000073                     CM1PCH          equ	115	;# 
  3626   000074                     CM2CON0         equ	116	;# 
  3627   000075                     CM2CON1         equ	117	;# 
  3628   000076                     CM2NCH          equ	118	;# 
  3629   000077                     CM2PCH          equ	119	;# 
  3630   000078                     WDTCON0         equ	120	;# 
  3631   000079                     WDTCON1         equ	121	;# 
  3632   00007A                     WDTPS           equ	122	;# 
  3633   00007A                     WDTPSL          equ	122	;# 
  3634   00007B                     WDTPSH          equ	123	;# 
  3635   00007C                     WDTTMR          equ	124	;# 
  3636   00007D                     DAC1DAT         equ	125	;# 
  3637   00007D                     DAC1DATL        equ	125	;# 
  3638   00007F                     DAC1CON         equ	127	;# 
  3639   000080                     SPI1RXB         equ	128	;# 
  3640   000081                     SPI1TXB         equ	129	;# 
  3641   000082                     SPI1TCNT        equ	130	;# 
  3642   000082                     SPI1TCNTL       equ	130	;# 
  3643   000083                     SPI1TCNTH       equ	131	;# 
  3644   000084                     SPI1CON0        equ	132	;# 
  3645   000085                     SPI1CON1        equ	133	;# 
  3646   000086                     SPI1CON2        equ	134	;# 
  3647   000087                     SPI1STATUS      equ	135	;# 
  3648   000088                     SPI1TWIDTH      equ	136	;# 
  3649   000089                     SPI1BAUD        equ	137	;# 
  3650   00008A                     SPI1INTF        equ	138	;# 
  3651   00008B                     SPI1INTE        equ	139	;# 
  3652   00008C                     SPI1CLK         equ	140	;# 
  3653   00008D                     SPI2RXB         equ	141	;# 
  3654   00008E                     SPI2TXB         equ	142	;# 
  3655   00008F                     SPI2TCNT        equ	143	;# 
  3656   00008F                     SPI2TCNTL       equ	143	;# 
  3657   000090                     SPI2TCNTH       equ	144	;# 
  3658   000091                     SPI2CON0        equ	145	;# 
  3659   000092                     SPI2CON1        equ	146	;# 
  3660   000093                     SPI2CON2        equ	147	;# 
  3661   000094                     SPI2STATUS      equ	148	;# 
  3662   000095                     SPI2TWIDTH      equ	149	;# 
  3663   000096                     SPI2BAUD        equ	150	;# 
  3664   000097                     SPI2INTF        equ	151	;# 
  3665   000098                     SPI2INTE        equ	152	;# 
  3666   000099                     SPI2CLK         equ	153	;# 
  3667   0000AC                     ACTCON          equ	172	;# 
  3668   0000AD                     OSCCON1         equ	173	;# 
  3669   0000AE                     OSCCON2         equ	174	;# 
  3670   0000AF                     OSCCON3         equ	175	;# 
  3671   0000B0                     OSCTUNE         equ	176	;# 
  3672   0000B1                     OSCFRQ          equ	177	;# 
  3673   0000B1                     OSCFREQ         equ	177	;# 
  3674   0000B2                     OSCSTAT         equ	178	;# 
  3675   0000B2                     OSCSTAT1        equ	178	;# 
  3676   0000B3                     OSCEN           equ	179	;# 
  3677   0000B4                     PRLOCK          equ	180	;# 
  3678   0000B5                     SCANPR          equ	181	;# 
  3679   0000B6                     DMA1PR          equ	182	;# 
  3680   0000B7                     DMA2PR          equ	183	;# 
  3681   0000B8                     DMA3PR          equ	184	;# 
  3682   0000B9                     DMA4PR          equ	185	;# 
  3683   0000BA                     DMA5PR          equ	186	;# 
  3684   0000BB                     DMA6PR          equ	187	;# 
  3685   0000BE                     MAINPR          equ	190	;# 
  3686   0000BF                     ISRPR           equ	191	;# 
  3687   0000D4                     CLCDATA         equ	212	;# 
  3688   0000D5                     CLCSELECT       equ	213	;# 
  3689   0000D6                     CLCnCON         equ	214	;# 
  3690   0000D7                     CLCnPOL         equ	215	;# 
  3691   0000D8                     CLCnSEL0        equ	216	;# 
  3692   0000D9                     CLCnSEL1        equ	217	;# 
  3693   0000DA                     CLCnSEL2        equ	218	;# 
  3694   0000DB                     CLCnSEL3        equ	219	;# 
  3695   0000DC                     CLCnGLS0        equ	220	;# 
  3696   0000DD                     CLCnGLS1        equ	221	;# 
  3697   0000DE                     CLCnGLS2        equ	222	;# 
  3698   0000DF                     CLCnGLS3        equ	223	;# 
  3699   0000E8                     DMASELECT       equ	232	;# 
  3700   0000E9                     DMAnBUF         equ	233	;# 
  3701   0000EA                     DMAnDCNT        equ	234	;# 
  3702   0000EA                     DMAnDCNTL       equ	234	;# 
  3703   0000EB                     DMAnDCNTH       equ	235	;# 
  3704   0000EC                     DMAnDPTR        equ	236	;# 
  3705   0000EC                     DMAnDPTRL       equ	236	;# 
  3706   0000ED                     DMAnDPTRH       equ	237	;# 
  3707   0000EE                     DMAnDSZ         equ	238	;# 
  3708   0000EE                     DMAnDSZL        equ	238	;# 
  3709   0000EF                     DMAnDSZH        equ	239	;# 
  3710   0000F0                     DMAnDSA         equ	240	;# 
  3711   0000F0                     DMAnDSAL        equ	240	;# 
  3712   0000F1                     DMAnDSAH        equ	241	;# 
  3713   0000F2                     DMAnSCNT        equ	242	;# 
  3714   0000F2                     DMAnSCNTL       equ	242	;# 
  3715   0000F3                     DMAnSCNTH       equ	243	;# 
  3716   0000F4                     DMAnSPTR        equ	244	;# 
  3717   0000F4                     DMAnSPTRL       equ	244	;# 
  3718   0000F5                     DMAnSPTRH       equ	245	;# 
  3719   0000F6                     DMAnSPTRU       equ	246	;# 
  3720   0000F7                     DMAnSSZ         equ	247	;# 
  3721   0000F7                     DMAnSSZL        equ	247	;# 
  3722   0000F8                     DMAnSSZH        equ	248	;# 
  3723   0000F9                     DMAnSSA         equ	249	;# 
  3724   0000F9                     DMAnSSAL        equ	249	;# 
  3725   0000FA                     DMAnSSAH        equ	250	;# 
  3726   0000FB                     DMAnSSAU        equ	251	;# 
  3727   0000FC                     DMAnCON0        equ	252	;# 
  3728   0000FD                     DMAnCON1        equ	253	;# 
  3729   0000FE                     DMAnAIRQ        equ	254	;# 
  3730   0000FF                     DMAnSIRQ        equ	255	;# 
  3731   000200                     PPSLOCK         equ	512	;# 
  3732   000201                     RA0PPS          equ	513	;# 
  3733   000202                     RA1PPS          equ	514	;# 
  3734   000203                     RA2PPS          equ	515	;# 
  3735   000204                     RA3PPS          equ	516	;# 
  3736   000205                     RA4PPS          equ	517	;# 
  3737   000206                     RA5PPS          equ	518	;# 
  3738   000207                     RA6PPS          equ	519	;# 
  3739   000208                     RA7PPS          equ	520	;# 
  3740   000209                     RB0PPS          equ	521	;# 
  3741   00020A                     RB1PPS          equ	522	;# 
  3742   00020B                     RB2PPS          equ	523	;# 
  3743   00020C                     RB3PPS          equ	524	;# 
  3744   00020D                     RB4PPS          equ	525	;# 
  3745   00020E                     RB5PPS          equ	526	;# 
  3746   00020F                     RB6PPS          equ	527	;# 
  3747   000210                     RB7PPS          equ	528	;# 
  3748   000211                     RC0PPS          equ	529	;# 
  3749   000212                     RC1PPS          equ	530	;# 
  3750   000213                     RC2PPS          equ	531	;# 
  3751   000214                     RC3PPS          equ	532	;# 
  3752   000215                     RC4PPS          equ	533	;# 
  3753   000216                     RC5PPS          equ	534	;# 
  3754   000217                     RC6PPS          equ	535	;# 
  3755   000218                     RC7PPS          equ	536	;# 
  3756   000219                     RD0PPS          equ	537	;# 
  3757   00021A                     RD1PPS          equ	538	;# 
  3758   00021B                     RD2PPS          equ	539	;# 
  3759   00021C                     RD3PPS          equ	540	;# 
  3760   00021D                     RD4PPS          equ	541	;# 
  3761   00021E                     RD5PPS          equ	542	;# 
  3762   00021F                     RD6PPS          equ	543	;# 
  3763   000220                     RD7PPS          equ	544	;# 
  3764   000221                     RE0PPS          equ	545	;# 
  3765   000222                     RE1PPS          equ	546	;# 
  3766   000223                     RE2PPS          equ	547	;# 
  3767   000229                     RF0PPS          equ	553	;# 
  3768   00022A                     RF1PPS          equ	554	;# 
  3769   00022B                     RF2PPS          equ	555	;# 
  3770   00022C                     RF3PPS          equ	556	;# 
  3771   00022D                     RF4PPS          equ	557	;# 
  3772   00022E                     RF5PPS          equ	558	;# 
  3773   00022F                     RF6PPS          equ	559	;# 
  3774   000230                     RF7PPS          equ	560	;# 
  3775   00023E                     INT0PPS         equ	574	;# 
  3776   00023F                     INT1PPS         equ	575	;# 
  3777   000240                     INT2PPS         equ	576	;# 
  3778   000241                     T0CKIPPS        equ	577	;# 
  3779   000242                     T1CKIPPS        equ	578	;# 
  3780   000243                     T1GPPS          equ	579	;# 
  3781   000244                     T3CKIPPS        equ	580	;# 
  3782   000245                     T3GPPS          equ	581	;# 
  3783   000246                     T5CKIPPS        equ	582	;# 
  3784   000247                     T5GPPS          equ	583	;# 
  3785   000248                     T2INPPS         equ	584	;# 
  3786   000249                     T4INPPS         equ	585	;# 
  3787   00024A                     T6INPPS         equ	586	;# 
  3788   00024F                     CCP1PPS         equ	591	;# 
  3789   000250                     CCP2PPS         equ	592	;# 
  3790   000251                     CCP3PPS         equ	593	;# 
  3791   000253                     PWM1ERSPPS      equ	595	;# 
  3792   000254                     PWM2ERSPPS      equ	596	;# 
  3793   000255                     PWM3ERSPPS      equ	597	;# 
  3794   000257                     PWMIN0PPS       equ	599	;# 
  3795   000258                     PWMIN1PPS       equ	600	;# 
  3796   000259                     SMT1WINPPS      equ	601	;# 
  3797   00025A                     SMT1SIGPPS      equ	602	;# 
  3798   00025B                     CWG1PPS         equ	603	;# 
  3799   00025B                     CWG1INPPS       equ	603	;# 
  3800   00025C                     CWG2PPS         equ	604	;# 
  3801   00025C                     CWG2INPPS       equ	604	;# 
  3802   00025D                     CWG3PPS         equ	605	;# 
  3803   00025D                     CWG3INPPS       equ	605	;# 
  3804   00025E                     MD1CARLPPS      equ	606	;# 
  3805   00025E                     MDCARLPPS       equ	606	;# 
  3806   00025F                     MD1CARHPPS      equ	607	;# 
  3807   00025F                     MDCARHPPS       equ	607	;# 
  3808   000260                     MD1SRCPPS       equ	608	;# 
  3809   000260                     MDSRCPPS        equ	608	;# 
  3810   000261                     CLCIN0PPS       equ	609	;# 
  3811   000262                     CLCIN1PPS       equ	610	;# 
  3812   000263                     CLCIN2PPS       equ	611	;# 
  3813   000264                     CLCIN3PPS       equ	612	;# 
  3814   000265                     CLCIN4PPS       equ	613	;# 
  3815   000266                     CLCIN5PPS       equ	614	;# 
  3816   000267                     CLCIN6PPS       equ	615	;# 
  3817   000268                     CLCIN7PPS       equ	616	;# 
  3818   000269                     ADACTPPS        equ	617	;# 
  3819   00026A                     SPI1SCKPPS      equ	618	;# 
  3820   00026B                     SPI1SDIPPS      equ	619	;# 
  3821   00026C                     SPI1SSPPS       equ	620	;# 
  3822   00026D                     SPI2SCKPPS      equ	621	;# 
  3823   00026E                     SPI2SDIPPS      equ	622	;# 
  3824   00026F                     SPI2SSPPS       equ	623	;# 
  3825   000270                     I2C1SDAPPS      equ	624	;# 
  3826   000271                     I2C1SCLPPS      equ	625	;# 
  3827   000272                     U1RXPPS         equ	626	;# 
  3828   000273                     U1CTSPPS        equ	627	;# 
  3829   000274                     U2RXPPS         equ	628	;# 
  3830   000275                     U2CTSPPS        equ	629	;# 
  3831   000276                     U3RXPPS         equ	630	;# 
  3832   000277                     U3CTSPPS        equ	631	;# 
  3833   000278                     U4RXPPS         equ	632	;# 
  3834   000279                     U4CTSPPS        equ	633	;# 
  3835   00027A                     U5RXPPS         equ	634	;# 
  3836   00027B                     U5CTSPPS        equ	635	;# 
  3837   000286                     RC4I2C          equ	646	;# 
  3838   000287                     RC3I2C          equ	647	;# 
  3839   000288                     RB2I2C          equ	648	;# 
  3840   000289                     RB1I2C          equ	649	;# 
  3841   00028B                     I2C1RXB         equ	651	;# 
  3842   00028C                     I2C1TXB         equ	652	;# 
  3843   00028D                     I2C1CNT         equ	653	;# 
  3844   00028E                     I2C1ADB0        equ	654	;# 
  3845   00028F                     I2C1ADB1        equ	655	;# 
  3846   000290                     I2C1ADR0        equ	656	;# 
  3847   000291                     I2C1ADR1        equ	657	;# 
  3848   000292                     I2C1ADR2        equ	658	;# 
  3849   000293                     I2C1ADR3        equ	659	;# 
  3850   000294                     I2C1CON0        equ	660	;# 
  3851   000295                     I2C1CON1        equ	661	;# 
  3852   000296                     I2C1CON2        equ	662	;# 
  3853   000297                     I2C1ERR         equ	663	;# 
  3854   000298                     I2C1STAT0       equ	664	;# 
  3855   000299                     I2C1STAT1       equ	665	;# 
  3856   00029A                     I2C1PIR         equ	666	;# 
  3857   00029B                     I2C1PIE         equ	667	;# 
  3858   00029C                     I2C1CLK         equ	668	;# 
  3859   00029D                     I2C1BTO         equ	669	;# 
  3860   0002A1                     U1RXB           equ	673	;# 
  3861   0002A1                     U1RXBL          equ	673	;# 
  3862   0002A2                     U1RXCHK         equ	674	;# 
  3863   0002A3                     U1TXB           equ	675	;# 
  3864   0002A3                     U1TXBL          equ	675	;# 
  3865   0002A4                     U1TXCHK         equ	676	;# 
  3866   0002A5                     U1P1            equ	677	;# 
  3867   0002A5                     U1P1L           equ	677	;# 
  3868   0002A6                     U1P1H           equ	678	;# 
  3869   0002A7                     U1P2            equ	679	;# 
  3870   0002A7                     U1P2L           equ	679	;# 
  3871   0002A8                     U1P2H           equ	680	;# 
  3872   0002A9                     U1P3            equ	681	;# 
  3873   0002A9                     U1P3L           equ	681	;# 
  3874   0002AA                     U1P3H           equ	682	;# 
  3875   0002AB                     U1CON0          equ	683	;# 
  3876   0002AC                     U1CON1          equ	684	;# 
  3877   0002AD                     U1CON2          equ	685	;# 
  3878   0002AE                     U1BRG           equ	686	;# 
  3879   0002AE                     U1BRGL          equ	686	;# 
  3880   0002AF                     U1BRGH          equ	687	;# 
  3881   0002B0                     U1FIFO          equ	688	;# 
  3882   0002B1                     U1UIR           equ	689	;# 
  3883   0002B2                     U1ERRIR         equ	690	;# 
  3884   0002B3                     U1ERRIE         equ	691	;# 
  3885   0002B4                     U2RXB           equ	692	;# 
  3886   0002B4                     U2RXBL          equ	692	;# 
  3887   0002B6                     U2TXB           equ	694	;# 
  3888   0002B6                     U2TXBL          equ	694	;# 
  3889   0002B8                     U2P1            equ	696	;# 
  3890   0002B8                     U2P1L           equ	696	;# 
  3891   0002BA                     U2P2            equ	698	;# 
  3892   0002BA                     U2P2L           equ	698	;# 
  3893   0002BC                     U2P3            equ	700	;# 
  3894   0002BC                     U2P3L           equ	700	;# 
  3895   0002BE                     U2CON0          equ	702	;# 
  3896   0002BF                     U2CON1          equ	703	;# 
  3897   0002C0                     U2CON2          equ	704	;# 
  3898   0002C1                     U2BRG           equ	705	;# 
  3899   0002C1                     U2BRGL          equ	705	;# 
  3900   0002C2                     U2BRGH          equ	706	;# 
  3901   0002C3                     U2FIFO          equ	707	;# 
  3902   0002C4                     U2UIR           equ	708	;# 
  3903   0002C5                     U2ERRIR         equ	709	;# 
  3904   0002C6                     U2ERRIE         equ	710	;# 
  3905   0002C7                     U3RXB           equ	711	;# 
  3906   0002C7                     U3RXBL          equ	711	;# 
  3907   0002C9                     U3TXB           equ	713	;# 
  3908   0002C9                     U3TXBL          equ	713	;# 
  3909   0002CB                     U3P1            equ	715	;# 
  3910   0002CB                     U3P1L           equ	715	;# 
  3911   0002CD                     U3P2            equ	717	;# 
  3912   0002CD                     U3P2L           equ	717	;# 
  3913   0002CF                     U3P3            equ	719	;# 
  3914   0002CF                     U3P3L           equ	719	;# 
  3915   0002D1                     U3CON0          equ	721	;# 
  3916   0002D2                     U3CON1          equ	722	;# 
  3917   0002D3                     U3CON2          equ	723	;# 
  3918   0002D4                     U3BRG           equ	724	;# 
  3919   0002D4                     U3BRGL          equ	724	;# 
  3920   0002D5                     U3BRGH          equ	725	;# 
  3921   0002D6                     U3FIFO          equ	726	;# 
  3922   0002D7                     U3UIR           equ	727	;# 
  3923   0002D8                     U3ERRIR         equ	728	;# 
  3924   0002D9                     U3ERRIE         equ	729	;# 
  3925   0002DA                     U4RXB           equ	730	;# 
  3926   0002DA                     U4RXBL          equ	730	;# 
  3927   0002DC                     U4TXB           equ	732	;# 
  3928   0002DC                     U4TXBL          equ	732	;# 
  3929   0002DE                     U4P1            equ	734	;# 
  3930   0002DE                     U4P1L           equ	734	;# 
  3931   0002E0                     U4P2            equ	736	;# 
  3932   0002E0                     U4P2L           equ	736	;# 
  3933   0002E2                     U4P3            equ	738	;# 
  3934   0002E2                     U4P3L           equ	738	;# 
  3935   0002E4                     U4CON0          equ	740	;# 
  3936   0002E5                     U4CON1          equ	741	;# 
  3937   0002E6                     U4CON2          equ	742	;# 
  3938   0002E7                     U4BRG           equ	743	;# 
  3939   0002E7                     U4BRGL          equ	743	;# 
  3940   0002E8                     U4BRGH          equ	744	;# 
  3941   0002E9                     U4FIFO          equ	745	;# 
  3942   0002EA                     U4UIR           equ	746	;# 
  3943   0002EB                     U4ERRIR         equ	747	;# 
  3944   0002EC                     U4ERRIE         equ	748	;# 
  3945   0002ED                     U5RXB           equ	749	;# 
  3946   0002ED                     U5RXBL          equ	749	;# 
  3947   0002EF                     U5TXB           equ	751	;# 
  3948   0002EF                     U5TXBL          equ	751	;# 
  3949   0002F1                     U5P1            equ	753	;# 
  3950   0002F1                     U5P1L           equ	753	;# 
  3951   0002F3                     U5P2            equ	755	;# 
  3952   0002F3                     U5P2L           equ	755	;# 
  3953   0002F5                     U5P3            equ	757	;# 
  3954   0002F5                     U5P3L           equ	757	;# 
  3955   0002F7                     U5CON0          equ	759	;# 
  3956   0002F8                     U5CON1          equ	760	;# 
  3957   0002F9                     U5CON2          equ	761	;# 
  3958   0002FA                     U5BRG           equ	762	;# 
  3959   0002FA                     U5BRGL          equ	762	;# 
  3960   0002FB                     U5BRGH          equ	763	;# 
  3961   0002FC                     U5FIFO          equ	764	;# 
  3962   0002FD                     U5UIR           equ	765	;# 
  3963   0002FE                     U5ERRIR         equ	766	;# 
  3964   0002FF                     U5ERRIE         equ	767	;# 
  3965   000300                     SMT1TMR         equ	768	;# 
  3966   000300                     SMT1TMRL        equ	768	;# 
  3967   000301                     SMT1TMRH        equ	769	;# 
  3968   000302                     SMT1TMRU        equ	770	;# 
  3969   000303                     SMT1CPR         equ	771	;# 
  3970   000303                     SMT1CPRL        equ	771	;# 
  3971   000304                     SMT1CPRH        equ	772	;# 
  3972   000305                     SMT1CPRU        equ	773	;# 
  3973   000306                     SMT1CPW         equ	774	;# 
  3974   000306                     SMT1CPWL        equ	774	;# 
  3975   000307                     SMT1CPWH        equ	775	;# 
  3976   000308                     SMT1CPWU        equ	776	;# 
  3977   000309                     SMT1PR          equ	777	;# 
  3978   000309                     SMT1PRL         equ	777	;# 
  3979   00030A                     SMT1PRH         equ	778	;# 
  3980   00030B                     SMT1PRU         equ	779	;# 
  3981   00030C                     SMT1CON0        equ	780	;# 
  3982   00030D                     SMT1CON1        equ	781	;# 
  3983   00030E                     SMT1STAT        equ	782	;# 
  3984   00030F                     SMT1CLK         equ	783	;# 
  3985   000310                     SMT1SIG         equ	784	;# 
  3986   000311                     SMT1WIN         equ	785	;# 
  3987   000318                     TMR0L           equ	792	;# 
  3988   000318                     TMR0            equ	792	;# 
  3989   000319                     TMR0H           equ	793	;# 
  3990   000319                     PR0             equ	793	;# 
  3991   00031A                     T0CON0          equ	794	;# 
  3992   00031B                     T0CON1          equ	795	;# 
  3993   00031C                     TMR1            equ	796	;# 
  3994   00031C                     TMR1L           equ	796	;# 
  3995   00031D                     TMR1H           equ	797	;# 
  3996   00031E                     T1CON           equ	798	;# 
  3997   00031E                     TMR1CON         equ	798	;# 
  3998   00031F                     T1GCON          equ	799	;# 
  3999   00031F                     TMR1GCON        equ	799	;# 
  4000   000320                     T1GATE          equ	800	;# 
  4001   000320                     TMR1GATE        equ	800	;# 
  4002   000321                     T1CLK           equ	801	;# 
  4003   000321                     TMR1CLK         equ	801	;# 
  4004   000321                     PR1             equ	801	;# 
  4005   000322                     T2TMR           equ	802	;# 
  4006   000322                     TMR2            equ	802	;# 
  4007   000323                     T2PR            equ	803	;# 
  4008   000323                     PR2             equ	803	;# 
  4009   000324                     T2CON           equ	804	;# 
  4010   000325                     T2HLT           equ	805	;# 
  4011   000326                     T2CLKCON        equ	806	;# 
  4012   000326                     T2CLK           equ	806	;# 
  4013   000327                     T2RST           equ	807	;# 
  4014   000328                     TMR3            equ	808	;# 
  4015   000328                     TMR3L           equ	808	;# 
  4016   000329                     TMR3H           equ	809	;# 
  4017   00032A                     T3CON           equ	810	;# 
  4018   00032A                     TMR3CON         equ	810	;# 
  4019   00032B                     T3GCON          equ	811	;# 
  4020   00032B                     TMR3GCON        equ	811	;# 
  4021   00032C                     T3GATE          equ	812	;# 
  4022   00032C                     TMR3GATE        equ	812	;# 
  4023   00032D                     T3CLK           equ	813	;# 
  4024   00032D                     TMR3CLK         equ	813	;# 
  4025   00032D                     PR3             equ	813	;# 
  4026   00032E                     T4TMR           equ	814	;# 
  4027   00032E                     TMR4            equ	814	;# 
  4028   00032F                     T4PR            equ	815	;# 
  4029   00032F                     PR4             equ	815	;# 
  4030   000330                     T4CON           equ	816	;# 
  4031   000331                     T4HLT           equ	817	;# 
  4032   000332                     T4CLKCON        equ	818	;# 
  4033   000332                     T4CLK           equ	818	;# 
  4034   000333                     T4RST           equ	819	;# 
  4035   000334                     TMR5            equ	820	;# 
  4036   000334                     TMR5L           equ	820	;# 
  4037   000335                     TMR5H           equ	821	;# 
  4038   000336                     T5CON           equ	822	;# 
  4039   000336                     TMR5CON         equ	822	;# 
  4040   000337                     T5GCON          equ	823	;# 
  4041   000337                     TMR5GCON        equ	823	;# 
  4042   000338                     T5GATE          equ	824	;# 
  4043   000338                     TMR5GATE        equ	824	;# 
  4044   000339                     T5CLK           equ	825	;# 
  4045   000339                     TMR5CLK         equ	825	;# 
  4046   000339                     PR5             equ	825	;# 
  4047   00033A                     T6TMR           equ	826	;# 
  4048   00033A                     TMR6            equ	826	;# 
  4049   00033B                     T6PR            equ	827	;# 
  4050   00033B                     PR6             equ	827	;# 
  4051   00033C                     T6CON           equ	828	;# 
  4052   00033D                     T6HLT           equ	829	;# 
  4053   00033E                     T6CLKCON        equ	830	;# 
  4054   00033E                     T6CLK           equ	830	;# 
  4055   00033F                     T6RST           equ	831	;# 
  4056   000340                     CCPR1           equ	832	;# 
  4057   000340                     CCPR1L          equ	832	;# 
  4058   000341                     CCPR1H          equ	833	;# 
  4059   000342                     CCP1CON         equ	834	;# 
  4060   000343                     CCP1CAP         equ	835	;# 
  4061   000344                     CCPR2           equ	836	;# 
  4062   000344                     CCPR2L          equ	836	;# 
  4063   000345                     CCPR2H          equ	837	;# 
  4064   000346                     CCP2CON         equ	838	;# 
  4065   000347                     CCP2CAP         equ	839	;# 
  4066   000348                     CCPR3           equ	840	;# 
  4067   000348                     CCPR3L          equ	840	;# 
  4068   000349                     CCPR3H          equ	841	;# 
  4069   00034A                     CCP3CON         equ	842	;# 
  4070   00034B                     CCP3CAP         equ	843	;# 
  4071   00034C                     CCPTMRS0        equ	844	;# 
  4072   00034F                     CRCDATA         equ	847	;# 
  4073   00034F                     CRCDATL         equ	847	;# 
  4074   000350                     CRCDATH         equ	848	;# 
  4075   000351                     CRCACC          equ	849	;# 
  4076   000351                     CRCACCL         equ	849	;# 
  4077   000352                     CRCACCH         equ	850	;# 
  4078   000353                     CRCSHFT         equ	851	;# 
  4079   000353                     CRCSHIFTL       equ	851	;# 
  4080   000354                     CRCSHIFTH       equ	852	;# 
  4081   000355                     CRCXOR          equ	853	;# 
  4082   000355                     CRCXORL         equ	853	;# 
  4083   000356                     CRCXORH         equ	854	;# 
  4084   000357                     CRCCON0         equ	855	;# 
  4085   000358                     CRCCON1         equ	856	;# 
  4086   00035A                     SCANLADR        equ	858	;# 
  4087   00035A                     SCANLADRL       equ	858	;# 
  4088   00035B                     SCANLADRH       equ	859	;# 
  4089   00035C                     SCANLADRU       equ	860	;# 
  4090   00035D                     SCANHADR        equ	861	;# 
  4091   00035D                     SCANHADRL       equ	861	;# 
  4092   00035E                     SCANHADRH       equ	862	;# 
  4093   00035F                     SCANHADRU       equ	863	;# 
  4094   000360                     SCANCON0        equ	864	;# 
  4095   000361                     SCANTRIG        equ	865	;# 
  4096   000362                     IPR0            equ	866	;# 
  4097   000363                     IPR1            equ	867	;# 
  4098   000364                     IPR2            equ	868	;# 
  4099   000365                     IPR3            equ	869	;# 
  4100   000366                     IPR4            equ	870	;# 
  4101   000367                     IPR5            equ	871	;# 
  4102   000368                     IPR6            equ	872	;# 
  4103   000369                     IPR7            equ	873	;# 
  4104   00036A                     IPR8            equ	874	;# 
  4105   00036B                     IPR9            equ	875	;# 
  4106   00036C                     IPR10           equ	876	;# 
  4107   00036D                     IPR11           equ	877	;# 
  4108   00036E                     IPR12           equ	878	;# 
  4109   00036F                     IPR13           equ	879	;# 
  4110   000370                     IPR14           equ	880	;# 
  4111   000371                     IPR15           equ	881	;# 
  4112   000373                     STATUS_CSHAD    equ	883	;# 
  4113   000374                     WREG_CSHAD      equ	884	;# 
  4114   000375                     BSR_CSHAD       equ	885	;# 
  4115   000376                     SHADCON         equ	886	;# 
  4116   000377                     STATUS_SHAD     equ	887	;# 
  4117   000378                     WREG_SHAD       equ	888	;# 
  4118   000379                     BSR_SHAD        equ	889	;# 
  4119   00037A                     PCLATH_SHAD     equ	890	;# 
  4120   00037B                     PCLATU_SHAD     equ	891	;# 
  4121   00037C                     FSR0SH          equ	892	;# 
  4122   00037C                     FSR0L_SHAD      equ	892	;# 
  4123   00037D                     FSR0H_SHAD      equ	893	;# 
  4124   00037E                     FSR1SH          equ	894	;# 
  4125   00037E                     FSR1L_SHAD      equ	894	;# 
  4126   00037F                     FSR1H_SHAD      equ	895	;# 
  4127   000380                     FSR2SH          equ	896	;# 
  4128   000380                     FSR2L_SHAD      equ	896	;# 
  4129   000381                     FSR2H_SHAD      equ	897	;# 
  4130   000382                     PRODSH          equ	898	;# 
  4131   000382                     PRODL_SHAD      equ	898	;# 
  4132   000383                     PRODH_SHAD      equ	899	;# 
  4133   0003BC                     CWG1CLK         equ	956	;# 
  4134   0003BC                     CWG1CLKCON      equ	956	;# 
  4135   0003BD                     CWG1ISM         equ	957	;# 
  4136   0003BD                     CWG1DAT         equ	957	;# 
  4137   0003BE                     CWG1DBR         equ	958	;# 
  4138   0003BF                     CWG1DBF         equ	959	;# 
  4139   0003C0                     CWG1CON0        equ	960	;# 
  4140   0003C1                     CWG1CON1        equ	961	;# 
  4141   0003C2                     CWG1AS0         equ	962	;# 
  4142   0003C3                     CWG1AS1         equ	963	;# 
  4143   0003C4                     CWG1STR         equ	964	;# 
  4144   0003C5                     CWG2CLK         equ	965	;# 
  4145   0003C5                     CWG2CLKCON      equ	965	;# 
  4146   0003C6                     CWG2ISM         equ	966	;# 
  4147   0003C6                     CWG2DAT         equ	966	;# 
  4148   0003C7                     CWG2DBR         equ	967	;# 
  4149   0003C8                     CWG2DBF         equ	968	;# 
  4150   0003C9                     CWG2CON0        equ	969	;# 
  4151   0003CA                     CWG2CON1        equ	970	;# 
  4152   0003CB                     CWG2AS0         equ	971	;# 
  4153   0003CC                     CWG2AS1         equ	972	;# 
  4154   0003CD                     CWG2STR         equ	973	;# 
  4155   0003CE                     CWG3CLK         equ	974	;# 
  4156   0003CE                     CWG3CLKCON      equ	974	;# 
  4157   0003CF                     CWG3ISM         equ	975	;# 
  4158   0003CF                     CWG3DAT         equ	975	;# 
  4159   0003D0                     CWG3DBR         equ	976	;# 
  4160   0003D1                     CWG3DBF         equ	977	;# 
  4161   0003D2                     CWG3CON0        equ	978	;# 
  4162   0003D3                     CWG3CON1        equ	979	;# 
  4163   0003D4                     CWG3AS0         equ	980	;# 
  4164   0003D5                     CWG3AS1         equ	981	;# 
  4165   0003D6                     CWG3STR         equ	982	;# 
  4166   0003D7                     FVRCON          equ	983	;# 
  4167   0003D8                     ADCPCON         equ	984	;# 
  4168   0003D8                     ADCP            equ	984	;# 
  4169   0003D9                     ADLTH           equ	985	;# 
  4170   0003D9                     ADLTHL          equ	985	;# 
  4171   0003DA                     ADLTHH          equ	986	;# 
  4172   0003DB                     ADUTH           equ	987	;# 
  4173   0003DB                     ADUTHL          equ	987	;# 
  4174   0003DC                     ADUTHH          equ	988	;# 
  4175   0003DD                     ADERR           equ	989	;# 
  4176   0003DD                     ADERRL          equ	989	;# 
  4177   0003DE                     ADERRH          equ	990	;# 
  4178   0003DF                     ADSTPT          equ	991	;# 
  4179   0003DF                     ADSTPTL         equ	991	;# 
  4180   0003E0                     ADSTPTH         equ	992	;# 
  4181   0003E1                     ADFLTR          equ	993	;# 
  4182   0003E1                     ADFLTRL         equ	993	;# 
  4183   0003E2                     ADFLTRH         equ	994	;# 
  4184   0003E3                     ADACC           equ	995	;# 
  4185   0003E3                     ADACCL          equ	995	;# 
  4186   0003E4                     ADACCH          equ	996	;# 
  4187   0003E5                     ADACCU          equ	997	;# 
  4188   0003E6                     ADCNT           equ	998	;# 
  4189   0003E7                     ADRPT           equ	999	;# 
  4190   0003E8                     ADPREV          equ	1000	;# 
  4191   0003E8                     ADPREVL         equ	1000	;# 
  4192   0003E9                     ADPREVH         equ	1001	;# 
  4193   0003EA                     ADRES           equ	1002	;# 
  4194   0003EA                     ADRESL          equ	1002	;# 
  4195   0003EB                     ADRESH          equ	1003	;# 
  4196   0003EC                     ADPCH           equ	1004	;# 
  4197   0003EE                     ADACQ           equ	1006	;# 
  4198   0003EE                     ADACQL          equ	1006	;# 
  4199   0003EF                     ADACQH          equ	1007	;# 
  4200   0003F0                     ADCAP           equ	1008	;# 
  4201   0003F1                     ADPRE           equ	1009	;# 
  4202   0003F1                     ADPREL          equ	1009	;# 
  4203   0003F2                     ADPREH          equ	1010	;# 
  4204   0003F3                     ADCON0          equ	1011	;# 
  4205   0003F4                     ADCON1          equ	1012	;# 
  4206   0003F5                     ADCON2          equ	1013	;# 
  4207   0003F6                     ADCON3          equ	1014	;# 
  4208   0003F7                     ADSTAT          equ	1015	;# 
  4209   0003F8                     ADREF           equ	1016	;# 
  4210   0003F9                     ADACT           equ	1017	;# 
  4211   0003FA                     ADCLK           equ	1018	;# 
  4212   000400                     ANSELA          equ	1024	;# 
  4213   000401                     WPUA            equ	1025	;# 
  4214   000402                     ODCONA          equ	1026	;# 
  4215   000403                     SLRCONA         equ	1027	;# 
  4216   000404                     INLVLA          equ	1028	;# 
  4217   000405                     IOCAP           equ	1029	;# 
  4218   000406                     IOCAN           equ	1030	;# 
  4219   000407                     IOCAF           equ	1031	;# 
  4220   000408                     ANSELB          equ	1032	;# 
  4221   000409                     WPUB            equ	1033	;# 
  4222   00040A                     ODCONB          equ	1034	;# 
  4223   00040B                     SLRCONB         equ	1035	;# 
  4224   00040C                     INLVLB          equ	1036	;# 
  4225   00040D                     IOCBP           equ	1037	;# 
  4226   00040E                     IOCBN           equ	1038	;# 
  4227   00040F                     IOCBF           equ	1039	;# 
  4228   000410                     ANSELC          equ	1040	;# 
  4229   000411                     WPUC            equ	1041	;# 
  4230   000412                     ODCONC          equ	1042	;# 
  4231   000413                     SLRCONC         equ	1043	;# 
  4232   000414                     INLVLC          equ	1044	;# 
  4233   000415                     IOCCP           equ	1045	;# 
  4234   000416                     IOCCN           equ	1046	;# 
  4235   000417                     IOCCF           equ	1047	;# 
  4236   000418                     ANSELD          equ	1048	;# 
  4237   000419                     WPUD            equ	1049	;# 
  4238   00041A                     ODCOND          equ	1050	;# 
  4239   00041B                     SLRCOND         equ	1051	;# 
  4240   00041C                     INLVLD          equ	1052	;# 
  4241   000420                     ANSELE          equ	1056	;# 
  4242   000421                     WPUE            equ	1057	;# 
  4243   000422                     ODCONE          equ	1058	;# 
  4244   000423                     SLRCONE         equ	1059	;# 
  4245   000424                     INLVLE          equ	1060	;# 
  4246   000425                     IOCEP           equ	1061	;# 
  4247   000426                     IOCEN           equ	1062	;# 
  4248   000427                     IOCEF           equ	1063	;# 
  4249   000428                     ANSELF          equ	1064	;# 
  4250   000429                     WPUF            equ	1065	;# 
  4251   00042A                     ODCONF          equ	1066	;# 
  4252   00042B                     SLRCONF         equ	1067	;# 
  4253   00042C                     INLVLF          equ	1068	;# 
  4254   000440                     NCO1ACC         equ	1088	;# 
  4255   000440                     NCO1ACCL        equ	1088	;# 
  4256   000441                     NCO1ACCH        equ	1089	;# 
  4257   000442                     NCO1ACCU        equ	1090	;# 
  4258   000443                     NCO1INC         equ	1091	;# 
  4259   000443                     NCO1INCL        equ	1091	;# 
  4260   000444                     NCO1INCH        equ	1092	;# 
  4261   000445                     NCO1INCU        equ	1093	;# 
  4262   000446                     NCO1CON         equ	1094	;# 
  4263   000447                     NCO1CLK         equ	1095	;# 
  4264   000448                     NCO2ACC         equ	1096	;# 
  4265   000448                     NCO2ACCL        equ	1096	;# 
  4266   000449                     NCO2ACCH        equ	1097	;# 
  4267   00044A                     NCO2ACCU        equ	1098	;# 
  4268   00044B                     NCO2INC         equ	1099	;# 
  4269   00044B                     NCO2INCL        equ	1099	;# 
  4270   00044C                     NCO2INCH        equ	1100	;# 
  4271   00044D                     NCO2INCU        equ	1101	;# 
  4272   00044E                     NCO2CON         equ	1102	;# 
  4273   00044F                     NCO2CLK         equ	1103	;# 
  4274   000450                     NCO3ACC         equ	1104	;# 
  4275   000450                     NCO3ACCL        equ	1104	;# 
  4276   000451                     NCO3ACCH        equ	1105	;# 
  4277   000452                     NCO3ACCU        equ	1106	;# 
  4278   000453                     NCO3INC         equ	1107	;# 
  4279   000453                     NCO3INCL        equ	1107	;# 
  4280   000454                     NCO3INCH        equ	1108	;# 
  4281   000455                     NCO3INCU        equ	1109	;# 
  4282   000456                     NCO3CON         equ	1110	;# 
  4283   000457                     NCO3CLK         equ	1111	;# 
  4284   000459                     IVTLOCK         equ	1113	;# 
  4285   00045A                     IVTAD           equ	1114	;# 
  4286   00045A                     IVTADL          equ	1114	;# 
  4287   00045B                     IVTADH          equ	1115	;# 
  4288   00045C                     IVTADU          equ	1116	;# 
  4289   00045D                     IVTBASE         equ	1117	;# 
  4290   00045D                     IVTBASEL        equ	1117	;# 
  4291   00045E                     IVTBASEH        equ	1118	;# 
  4292   00045F                     IVTBASEU        equ	1119	;# 
  4293   000460                     PWM1ERS         equ	1120	;# 
  4294   000461                     PWM1CLK         equ	1121	;# 
  4295   000462                     PWM1LDS         equ	1122	;# 
  4296   000463                     PWM1PR          equ	1123	;# 
  4297   000463                     PWM1PRL         equ	1123	;# 
  4298   000464                     PWM1PRH         equ	1124	;# 
  4299   000465                     PWM1CPRE        equ	1125	;# 
  4300   000466                     PWM1PIPOS       equ	1126	;# 
  4301   000467                     PWM1GIR         equ	1127	;# 
  4302   000468                     PWM1GIE         equ	1128	;# 
  4303   000469                     PWM1CON         equ	1129	;# 
  4304   00046A                     PWM1S1CFG       equ	1130	;# 
  4305   00046B                     PWM1S1P1        equ	1131	;# 
  4306   00046B                     PWM1S1P1L       equ	1131	;# 
  4307   00046C                     PWM1S1P1H       equ	1132	;# 
  4308   00046D                     PWM1S1P2        equ	1133	;# 
  4309   00046D                     PWM1S1P2L       equ	1133	;# 
  4310   00046E                     PWM1S1P2H       equ	1134	;# 
  4311   00046F                     PWM2ERS         equ	1135	;# 
  4312   000470                     PWM2CLK         equ	1136	;# 
  4313   000471                     PWM2LDS         equ	1137	;# 
  4314   000472                     PWM2PR          equ	1138	;# 
  4315   000472                     PWM2PRL         equ	1138	;# 
  4316   000473                     PWM2PRH         equ	1139	;# 
  4317   000474                     PWM2CPRE        equ	1140	;# 
  4318   000475                     PWM2PIPOS       equ	1141	;# 
  4319   000476                     PWM2GIR         equ	1142	;# 
  4320   000477                     PWM2GIE         equ	1143	;# 
  4321   000478                     PWM2CON         equ	1144	;# 
  4322   000479                     PWM2S1CFG       equ	1145	;# 
  4323   00047A                     PWM2S1P1        equ	1146	;# 
  4324   00047A                     PWM2S1P1L       equ	1146	;# 
  4325   00047B                     PWM2S1P1H       equ	1147	;# 
  4326   00047C                     PWM2S1P2        equ	1148	;# 
  4327   00047C                     PWM2S1P2L       equ	1148	;# 
  4328   00047D                     PWM2S1P2H       equ	1149	;# 
  4329   00047E                     PWM3ERS         equ	1150	;# 
  4330   00047F                     PWM3CLK         equ	1151	;# 
  4331   000480                     PWM3LDS         equ	1152	;# 
  4332   000481                     PWM3PR          equ	1153	;# 
  4333   000481                     PWM3PRL         equ	1153	;# 
  4334   000482                     PWM3PRH         equ	1154	;# 
  4335   000483                     PWM3CPRE        equ	1155	;# 
  4336   000484                     PWM3PIPOS       equ	1156	;# 
  4337   000485                     PWM3GIR         equ	1157	;# 
  4338   000486                     PWM3GIE         equ	1158	;# 
  4339   000487                     PWM3CON         equ	1159	;# 
  4340   000488                     PWM3S1CFG       equ	1160	;# 
  4341   000489                     PWM3S1P1        equ	1161	;# 
  4342   000489                     PWM3S1P1L       equ	1161	;# 
  4343   00048A                     PWM3S1P1H       equ	1162	;# 
  4344   00048B                     PWM3S1P2        equ	1163	;# 
  4345   00048B                     PWM3S1P2L       equ	1163	;# 
  4346   00048C                     PWM3S1P2H       equ	1164	;# 
  4347   00049C                     PWMLOAD         equ	1180	;# 
  4348   00049D                     PWMEN           equ	1181	;# 
  4349   00049E                     PIE0            equ	1182	;# 
  4350   00049F                     PIE1            equ	1183	;# 
  4351   0004A0                     PIE2            equ	1184	;# 
  4352   0004A1                     PIE3            equ	1185	;# 
  4353   0004A2                     PIE4            equ	1186	;# 
  4354   0004A3                     PIE5            equ	1187	;# 
  4355   0004A4                     PIE6            equ	1188	;# 
  4356   0004A5                     PIE7            equ	1189	;# 
  4357   0004A6                     PIE8            equ	1190	;# 
  4358   0004A7                     PIE9            equ	1191	;# 
  4359   0004A8                     PIE10           equ	1192	;# 
  4360   0004A9                     PIE11           equ	1193	;# 
  4361   0004AA                     PIE12           equ	1194	;# 
  4362   0004AB                     PIE13           equ	1195	;# 
  4363   0004AC                     PIE14           equ	1196	;# 
  4364   0004AD                     PIE15           equ	1197	;# 
  4365   0004AE                     PIR0            equ	1198	;# 
  4366   0004AF                     PIR1            equ	1199	;# 
  4367   0004B0                     PIR2            equ	1200	;# 
  4368   0004B1                     PIR3            equ	1201	;# 
  4369   0004B2                     PIR4            equ	1202	;# 
  4370   0004B3                     PIR5            equ	1203	;# 
  4371   0004B4                     PIR6            equ	1204	;# 
  4372   0004B5                     PIR7            equ	1205	;# 
  4373   0004B6                     PIR8            equ	1206	;# 
  4374   0004B7                     PIR9            equ	1207	;# 
  4375   0004B8                     PIR10           equ	1208	;# 
  4376   0004B9                     PIR11           equ	1209	;# 
  4377   0004BA                     PIR12           equ	1210	;# 
  4378   0004BB                     PIR13           equ	1211	;# 
  4379   0004BC                     PIR14           equ	1212	;# 
  4380   0004BD                     PIR15           equ	1213	;# 
  4381   0004BE                     LATA            equ	1214	;# 
  4382   0004BF                     LATB            equ	1215	;# 
  4383   0004C0                     LATC            equ	1216	;# 
  4384   0004C1                     LATD            equ	1217	;# 
  4385   0004C2                     LATE            equ	1218	;# 
  4386   0004C3                     LATF            equ	1219	;# 
  4387   0004C6                     TRISA           equ	1222	;# 
  4388   0004C7                     TRISB           equ	1223	;# 
  4389   0004C8                     TRISC           equ	1224	;# 
  4390   0004C9                     TRISD           equ	1225	;# 
  4391   0004CA                     TRISE           equ	1226	;# 
  4392   0004CB                     TRISF           equ	1227	;# 
  4393   0004CE                     PORTA           equ	1230	;# 
  4394   0004CF                     PORTB           equ	1231	;# 
  4395   0004D0                     PORTC           equ	1232	;# 
  4396   0004D1                     PORTD           equ	1233	;# 
  4397   0004D2                     PORTE           equ	1234	;# 
  4398   0004D3                     PORTF           equ	1235	;# 
  4399   0004D6                     INTCON0         equ	1238	;# 
  4400   0004D7                     INTCON1         equ	1239	;# 
  4401   0004D8                     STATUS          equ	1240	;# 
  4402   0004D9                     FSR2            equ	1241	;# 
  4403   0004D9                     FSR2L           equ	1241	;# 
  4404   0004DA                     FSR2H           equ	1242	;# 
  4405   0004DB                     PLUSW2          equ	1243	;# 
  4406   0004DC                     PREINC2         equ	1244	;# 
  4407   0004DD                     POSTDEC2        equ	1245	;# 
  4408   0004DE                     POSTINC2        equ	1246	;# 
  4409   0004DF                     INDF2           equ	1247	;# 
  4410   0004E0                     BSR             equ	1248	;# 
  4411   0004E1                     FSR1            equ	1249	;# 
  4412   0004E1                     FSR1L           equ	1249	;# 
  4413   0004E2                     FSR1H           equ	1250	;# 
  4414   0004E3                     PLUSW1          equ	1251	;# 
  4415   0004E4                     PREINC1         equ	1252	;# 
  4416   0004E5                     POSTDEC1        equ	1253	;# 
  4417   0004E6                     POSTINC1        equ	1254	;# 
  4418   0004E7                     INDF1           equ	1255	;# 
  4419   0004E8                     WREG            equ	1256	;# 
  4420   0004E9                     FSR0            equ	1257	;# 
  4421   0004E9                     FSR0L           equ	1257	;# 
  4422   0004EA                     FSR0H           equ	1258	;# 
  4423   0004EB                     PLUSW0          equ	1259	;# 
  4424   0004EC                     PREINC0         equ	1260	;# 
  4425   0004ED                     POSTDEC0        equ	1261	;# 
  4426   0004EE                     POSTINC0        equ	1262	;# 
  4427   0004EF                     INDF0           equ	1263	;# 
  4428   0004F0                     PCON0           equ	1264	;# 
  4429   0004F1                     PCON1           equ	1265	;# 
  4430   0004F2                     CPUDOZE         equ	1266	;# 
  4431   0004F3                     PROD            equ	1267	;# 
  4432   0004F3                     PRODL           equ	1267	;# 
  4433   0004F4                     PRODH           equ	1268	;# 
  4434   0004F5                     TABLAT          equ	1269	;# 
  4435   0004F6                     TBLPTR          equ	1270	;# 
  4436   0004F6                     TBLPTRL         equ	1270	;# 
  4437   0004F7                     TBLPTRH         equ	1271	;# 
  4438   0004F8                     TBLPTRU         equ	1272	;# 
  4439   0004F9                     PCLAT           equ	1273	;# 
  4440   0004F9                     PCL             equ	1273	;# 
  4441   0004FA                     PCLATH          equ	1274	;# 
  4442   0004FB                     PCLATU          equ	1275	;# 
  4443   0004FC                     STKPTR          equ	1276	;# 
  4444   0004FD                     TOS             equ	1277	;# 
  4445   0004FD                     TOSL            equ	1277	;# 
  4446   0004FE                     TOSH            equ	1278	;# 
  4447   0004FF                     TOSU            equ	1279	;# 
  4448   000039                     CLKRCON         equ	57	;# 
  4449   00003A                     CLKRCLK         equ	58	;# 
  4450   000040                     NVMCON0         equ	64	;# 
  4451   000041                     NVMCON1         equ	65	;# 
  4452   000042                     NVMLOCK         equ	66	;# 
  4453   000043                     NVMADR          equ	67	;# 
  4454   000043                     NVMADRL         equ	67	;# 
  4455   000044                     NVMADRH         equ	68	;# 
  4456   000045                     NVMADRU         equ	69	;# 
  4457   000046                     NVMDAT          equ	70	;# 
  4458   000046                     NVMDATL         equ	70	;# 
  4459   000047                     NVMDATH         equ	71	;# 
  4460   000048                     VREGCON         equ	72	;# 
  4461   000049                     BORCON          equ	73	;# 
  4462   00004A                     HLVDCON0        equ	74	;# 
  4463   00004B                     HLVDCON1        equ	75	;# 
  4464   00004C                     ZCDCON          equ	76	;# 
  4465   000060                     PMD0            equ	96	;# 
  4466   000061                     PMD1            equ	97	;# 
  4467   000063                     PMD3            equ	99	;# 
  4468   000064                     PMD4            equ	100	;# 
  4469   000065                     PMD5            equ	101	;# 
  4470   000066                     PMD6            equ	102	;# 
  4471   000067                     PMD7            equ	103	;# 
  4472   000068                     PMD8            equ	104	;# 
  4473   00006A                     MD1CON0         equ	106	;# 
  4474   00006B                     MD1CON1         equ	107	;# 
  4475   00006C                     MD1SRC          equ	108	;# 
  4476   00006D                     MD1CARL         equ	109	;# 
  4477   00006E                     MD1CARH         equ	110	;# 
  4478   00006F                     CMOUT           equ	111	;# 
  4479   000070                     CM1CON0         equ	112	;# 
  4480   000071                     CM1CON1         equ	113	;# 
  4481   000072                     CM1NCH          equ	114	;# 
  4482   000073                     CM1PCH          equ	115	;# 
  4483   000074                     CM2CON0         equ	116	;# 
  4484   000075                     CM2CON1         equ	117	;# 
  4485   000076                     CM2NCH          equ	118	;# 
  4486   000077                     CM2PCH          equ	119	;# 
  4487   000078                     WDTCON0         equ	120	;# 
  4488   000079                     WDTCON1         equ	121	;# 
  4489   00007A                     WDTPS           equ	122	;# 
  4490   00007A                     WDTPSL          equ	122	;# 
  4491   00007B                     WDTPSH          equ	123	;# 
  4492   00007C                     WDTTMR          equ	124	;# 
  4493   00007D                     DAC1DAT         equ	125	;# 
  4494   00007D                     DAC1DATL        equ	125	;# 
  4495   00007F                     DAC1CON         equ	127	;# 
  4496   000080                     SPI1RXB         equ	128	;# 
  4497   000081                     SPI1TXB         equ	129	;# 
  4498   000082                     SPI1TCNT        equ	130	;# 
  4499   000082                     SPI1TCNTL       equ	130	;# 
  4500   000083                     SPI1TCNTH       equ	131	;# 
  4501   000084                     SPI1CON0        equ	132	;# 
  4502   000085                     SPI1CON1        equ	133	;# 
  4503   000086                     SPI1CON2        equ	134	;# 
  4504   000087                     SPI1STATUS      equ	135	;# 
  4505   000088                     SPI1TWIDTH      equ	136	;# 
  4506   000089                     SPI1BAUD        equ	137	;# 
  4507   00008A                     SPI1INTF        equ	138	;# 
  4508   00008B                     SPI1INTE        equ	139	;# 
  4509   00008C                     SPI1CLK         equ	140	;# 
  4510   00008D                     SPI2RXB         equ	141	;# 
  4511   00008E                     SPI2TXB         equ	142	;# 
  4512   00008F                     SPI2TCNT        equ	143	;# 
  4513   00008F                     SPI2TCNTL       equ	143	;# 
  4514   000090                     SPI2TCNTH       equ	144	;# 
  4515   000091                     SPI2CON0        equ	145	;# 
  4516   000092                     SPI2CON1        equ	146	;# 
  4517   000093                     SPI2CON2        equ	147	;# 
  4518   000094                     SPI2STATUS      equ	148	;# 
  4519   000095                     SPI2TWIDTH      equ	149	;# 
  4520   000096                     SPI2BAUD        equ	150	;# 
  4521   000097                     SPI2INTF        equ	151	;# 
  4522   000098                     SPI2INTE        equ	152	;# 
  4523   000099                     SPI2CLK         equ	153	;# 
  4524   0000AC                     ACTCON          equ	172	;# 
  4525   0000AD                     OSCCON1         equ	173	;# 
  4526   0000AE                     OSCCON2         equ	174	;# 
  4527   0000AF                     OSCCON3         equ	175	;# 
  4528   0000B0                     OSCTUNE         equ	176	;# 
  4529   0000B1                     OSCFRQ          equ	177	;# 
  4530   0000B1                     OSCFREQ         equ	177	;# 
  4531   0000B2                     OSCSTAT         equ	178	;# 
  4532   0000B2                     OSCSTAT1        equ	178	;# 
  4533   0000B3                     OSCEN           equ	179	;# 
  4534   0000B4                     PRLOCK          equ	180	;# 
  4535   0000B5                     SCANPR          equ	181	;# 
  4536   0000B6                     DMA1PR          equ	182	;# 
  4537   0000B7                     DMA2PR          equ	183	;# 
  4538   0000B8                     DMA3PR          equ	184	;# 
  4539   0000B9                     DMA4PR          equ	185	;# 
  4540   0000BA                     DMA5PR          equ	186	;# 
  4541   0000BB                     DMA6PR          equ	187	;# 
  4542   0000BE                     MAINPR          equ	190	;# 
  4543   0000BF                     ISRPR           equ	191	;# 
  4544   0000D4                     CLCDATA         equ	212	;# 
  4545   0000D5                     CLCSELECT       equ	213	;# 
  4546   0000D6                     CLCnCON         equ	214	;# 
  4547   0000D7                     CLCnPOL         equ	215	;# 
  4548   0000D8                     CLCnSEL0        equ	216	;# 
  4549   0000D9                     CLCnSEL1        equ	217	;# 
  4550   0000DA                     CLCnSEL2        equ	218	;# 
  4551   0000DB                     CLCnSEL3        equ	219	;# 
  4552   0000DC                     CLCnGLS0        equ	220	;# 
  4553   0000DD                     CLCnGLS1        equ	221	;# 
  4554   0000DE                     CLCnGLS2        equ	222	;# 
  4555   0000DF                     CLCnGLS3        equ	223	;# 
  4556   0000E8                     DMASELECT       equ	232	;# 
  4557   0000E9                     DMAnBUF         equ	233	;# 
  4558   0000EA                     DMAnDCNT        equ	234	;# 
  4559   0000EA                     DMAnDCNTL       equ	234	;# 
  4560   0000EB                     DMAnDCNTH       equ	235	;# 
  4561   0000EC                     DMAnDPTR        equ	236	;# 
  4562   0000EC                     DMAnDPTRL       equ	236	;# 
  4563   0000ED                     DMAnDPTRH       equ	237	;# 
  4564   0000EE                     DMAnDSZ         equ	238	;# 
  4565   0000EE                     DMAnDSZL        equ	238	;# 
  4566   0000EF                     DMAnDSZH        equ	239	;# 
  4567   0000F0                     DMAnDSA         equ	240	;# 
  4568   0000F0                     DMAnDSAL        equ	240	;# 
  4569   0000F1                     DMAnDSAH        equ	241	;# 
  4570   0000F2                     DMAnSCNT        equ	242	;# 
  4571   0000F2                     DMAnSCNTL       equ	242	;# 
  4572   0000F3                     DMAnSCNTH       equ	243	;# 
  4573   0000F4                     DMAnSPTR        equ	244	;# 
  4574   0000F4                     DMAnSPTRL       equ	244	;# 
  4575   0000F5                     DMAnSPTRH       equ	245	;# 
  4576   0000F6                     DMAnSPTRU       equ	246	;# 
  4577   0000F7                     DMAnSSZ         equ	247	;# 
  4578   0000F7                     DMAnSSZL        equ	247	;# 
  4579   0000F8                     DMAnSSZH        equ	248	;# 
  4580   0000F9                     DMAnSSA         equ	249	;# 
  4581   0000F9                     DMAnSSAL        equ	249	;# 
  4582   0000FA                     DMAnSSAH        equ	250	;# 
  4583   0000FB                     DMAnSSAU        equ	251	;# 
  4584   0000FC                     DMAnCON0        equ	252	;# 
  4585   0000FD                     DMAnCON1        equ	253	;# 
  4586   0000FE                     DMAnAIRQ        equ	254	;# 
  4587   0000FF                     DMAnSIRQ        equ	255	;# 
  4588   000200                     PPSLOCK         equ	512	;# 
  4589   000201                     RA0PPS          equ	513	;# 
  4590   000202                     RA1PPS          equ	514	;# 
  4591   000203                     RA2PPS          equ	515	;# 
  4592   000204                     RA3PPS          equ	516	;# 
  4593   000205                     RA4PPS          equ	517	;# 
  4594   000206                     RA5PPS          equ	518	;# 
  4595   000207                     RA6PPS          equ	519	;# 
  4596   000208                     RA7PPS          equ	520	;# 
  4597   000209                     RB0PPS          equ	521	;# 
  4598   00020A                     RB1PPS          equ	522	;# 
  4599   00020B                     RB2PPS          equ	523	;# 
  4600   00020C                     RB3PPS          equ	524	;# 
  4601   00020D                     RB4PPS          equ	525	;# 
  4602   00020E                     RB5PPS          equ	526	;# 
  4603   00020F                     RB6PPS          equ	527	;# 
  4604   000210                     RB7PPS          equ	528	;# 
  4605   000211                     RC0PPS          equ	529	;# 
  4606   000212                     RC1PPS          equ	530	;# 
  4607   000213                     RC2PPS          equ	531	;# 
  4608   000214                     RC3PPS          equ	532	;# 
  4609   000215                     RC4PPS          equ	533	;# 
  4610   000216                     RC5PPS          equ	534	;# 
  4611   000217                     RC6PPS          equ	535	;# 
  4612   000218                     RC7PPS          equ	536	;# 
  4613   000219                     RD0PPS          equ	537	;# 
  4614   00021A                     RD1PPS          equ	538	;# 
  4615   00021B                     RD2PPS          equ	539	;# 
  4616   00021C                     RD3PPS          equ	540	;# 
  4617   00021D                     RD4PPS          equ	541	;# 
  4618   00021E                     RD5PPS          equ	542	;# 
  4619   00021F                     RD6PPS          equ	543	;# 
  4620   000220                     RD7PPS          equ	544	;# 
  4621   000221                     RE0PPS          equ	545	;# 
  4622   000222                     RE1PPS          equ	546	;# 
  4623   000223                     RE2PPS          equ	547	;# 
  4624   000229                     RF0PPS          equ	553	;# 
  4625   00022A                     RF1PPS          equ	554	;# 
  4626   00022B                     RF2PPS          equ	555	;# 
  4627   00022C                     RF3PPS          equ	556	;# 
  4628   00022D                     RF4PPS          equ	557	;# 
  4629   00022E                     RF5PPS          equ	558	;# 
  4630   00022F                     RF6PPS          equ	559	;# 
  4631   000230                     RF7PPS          equ	560	;# 
  4632   00023E                     INT0PPS         equ	574	;# 
  4633   00023F                     INT1PPS         equ	575	;# 
  4634   000240                     INT2PPS         equ	576	;# 
  4635   000241                     T0CKIPPS        equ	577	;# 
  4636   000242                     T1CKIPPS        equ	578	;# 
  4637   000243                     T1GPPS          equ	579	;# 
  4638   000244                     T3CKIPPS        equ	580	;# 
  4639   000245                     T3GPPS          equ	581	;# 
  4640   000246                     T5CKIPPS        equ	582	;# 
  4641   000247                     T5GPPS          equ	583	;# 
  4642   000248                     T2INPPS         equ	584	;# 
  4643   000249                     T4INPPS         equ	585	;# 
  4644   00024A                     T6INPPS         equ	586	;# 
  4645   00024F                     CCP1PPS         equ	591	;# 
  4646   000250                     CCP2PPS         equ	592	;# 
  4647   000251                     CCP3PPS         equ	593	;# 
  4648   000253                     PWM1ERSPPS      equ	595	;# 
  4649   000254                     PWM2ERSPPS      equ	596	;# 
  4650   000255                     PWM3ERSPPS      equ	597	;# 
  4651   000257                     PWMIN0PPS       equ	599	;# 
  4652   000258                     PWMIN1PPS       equ	600	;# 
  4653   000259                     SMT1WINPPS      equ	601	;# 
  4654   00025A                     SMT1SIGPPS      equ	602	;# 
  4655   00025B                     CWG1PPS         equ	603	;# 
  4656   00025B                     CWG1INPPS       equ	603	;# 
  4657   00025C                     CWG2PPS         equ	604	;# 
  4658   00025C                     CWG2INPPS       equ	604	;# 
  4659   00025D                     CWG3PPS         equ	605	;# 
  4660   00025D                     CWG3INPPS       equ	605	;# 
  4661   00025E                     MD1CARLPPS      equ	606	;# 
  4662   00025E                     MDCARLPPS       equ	606	;# 
  4663   00025F                     MD1CARHPPS      equ	607	;# 
  4664   00025F                     MDCARHPPS       equ	607	;# 
  4665   000260                     MD1SRCPPS       equ	608	;# 
  4666   000260                     MDSRCPPS        equ	608	;# 
  4667   000261                     CLCIN0PPS       equ	609	;# 
  4668   000262                     CLCIN1PPS       equ	610	;# 
  4669   000263                     CLCIN2PPS       equ	611	;# 
  4670   000264                     CLCIN3PPS       equ	612	;# 
  4671   000265                     CLCIN4PPS       equ	613	;# 
  4672   000266                     CLCIN5PPS       equ	614	;# 
  4673   000267                     CLCIN6PPS       equ	615	;# 
  4674   000268                     CLCIN7PPS       equ	616	;# 
  4675   000269                     ADACTPPS        equ	617	;# 
  4676   00026A                     SPI1SCKPPS      equ	618	;# 
  4677   00026B                     SPI1SDIPPS      equ	619	;# 
  4678   00026C                     SPI1SSPPS       equ	620	;# 
  4679   00026D                     SPI2SCKPPS      equ	621	;# 
  4680   00026E                     SPI2SDIPPS      equ	622	;# 
  4681   00026F                     SPI2SSPPS       equ	623	;# 
  4682   000270                     I2C1SDAPPS      equ	624	;# 
  4683   000271                     I2C1SCLPPS      equ	625	;# 
  4684   000272                     U1RXPPS         equ	626	;# 
  4685   000273                     U1CTSPPS        equ	627	;# 
  4686   000274                     U2RXPPS         equ	628	;# 
  4687   000275                     U2CTSPPS        equ	629	;# 
  4688   000276                     U3RXPPS         equ	630	;# 
  4689   000277                     U3CTSPPS        equ	631	;# 
  4690   000278                     U4RXPPS         equ	632	;# 
  4691   000279                     U4CTSPPS        equ	633	;# 
  4692   00027A                     U5RXPPS         equ	634	;# 
  4693   00027B                     U5CTSPPS        equ	635	;# 
  4694   000286                     RC4I2C          equ	646	;# 
  4695   000287                     RC3I2C          equ	647	;# 
  4696   000288                     RB2I2C          equ	648	;# 
  4697   000289                     RB1I2C          equ	649	;# 
  4698   00028B                     I2C1RXB         equ	651	;# 
  4699   00028C                     I2C1TXB         equ	652	;# 
  4700   00028D                     I2C1CNT         equ	653	;# 
  4701   00028E                     I2C1ADB0        equ	654	;# 
  4702   00028F                     I2C1ADB1        equ	655	;# 
  4703   000290                     I2C1ADR0        equ	656	;# 
  4704   000291                     I2C1ADR1        equ	657	;# 
  4705   000292                     I2C1ADR2        equ	658	;# 
  4706   000293                     I2C1ADR3        equ	659	;# 
  4707   000294                     I2C1CON0        equ	660	;# 
  4708   000295                     I2C1CON1        equ	661	;# 
  4709   000296                     I2C1CON2        equ	662	;# 
  4710   000297                     I2C1ERR         equ	663	;# 
  4711   000298                     I2C1STAT0       equ	664	;# 
  4712   000299                     I2C1STAT1       equ	665	;# 
  4713   00029A                     I2C1PIR         equ	666	;# 
  4714   00029B                     I2C1PIE         equ	667	;# 
  4715   00029C                     I2C1CLK         equ	668	;# 
  4716   00029D                     I2C1BTO         equ	669	;# 
  4717   0002A1                     U1RXB           equ	673	;# 
  4718   0002A1                     U1RXBL          equ	673	;# 
  4719   0002A2                     U1RXCHK         equ	674	;# 
  4720   0002A3                     U1TXB           equ	675	;# 
  4721   0002A3                     U1TXBL          equ	675	;# 
  4722   0002A4                     U1TXCHK         equ	676	;# 
  4723   0002A5                     U1P1            equ	677	;# 
  4724   0002A5                     U1P1L           equ	677	;# 
  4725   0002A6                     U1P1H           equ	678	;# 
  4726   0002A7                     U1P2            equ	679	;# 
  4727   0002A7                     U1P2L           equ	679	;# 
  4728   0002A8                     U1P2H           equ	680	;# 
  4729   0002A9                     U1P3            equ	681	;# 
  4730   0002A9                     U1P3L           equ	681	;# 
  4731   0002AA                     U1P3H           equ	682	;# 
  4732   0002AB                     U1CON0          equ	683	;# 
  4733   0002AC                     U1CON1          equ	684	;# 
  4734   0002AD                     U1CON2          equ	685	;# 
  4735   0002AE                     U1BRG           equ	686	;# 
  4736   0002AE                     U1BRGL          equ	686	;# 
  4737   0002AF                     U1BRGH          equ	687	;# 
  4738   0002B0                     U1FIFO          equ	688	;# 
  4739   0002B1                     U1UIR           equ	689	;# 
  4740   0002B2                     U1ERRIR         equ	690	;# 
  4741   0002B3                     U1ERRIE         equ	691	;# 
  4742   0002B4                     U2RXB           equ	692	;# 
  4743   0002B4                     U2RXBL          equ	692	;# 
  4744   0002B6                     U2TXB           equ	694	;# 
  4745   0002B6                     U2TXBL          equ	694	;# 
  4746   0002B8                     U2P1            equ	696	;# 
  4747   0002B8                     U2P1L           equ	696	;# 
  4748   0002BA                     U2P2            equ	698	;# 
  4749   0002BA                     U2P2L           equ	698	;# 
  4750   0002BC                     U2P3            equ	700	;# 
  4751   0002BC                     U2P3L           equ	700	;# 
  4752   0002BE                     U2CON0          equ	702	;# 
  4753   0002BF                     U2CON1          equ	703	;# 
  4754   0002C0                     U2CON2          equ	704	;# 
  4755   0002C1                     U2BRG           equ	705	;# 
  4756   0002C1                     U2BRGL          equ	705	;# 
  4757   0002C2                     U2BRGH          equ	706	;# 
  4758   0002C3                     U2FIFO          equ	707	;# 
  4759   0002C4                     U2UIR           equ	708	;# 
  4760   0002C5                     U2ERRIR         equ	709	;# 
  4761   0002C6                     U2ERRIE         equ	710	;# 
  4762   0002C7                     U3RXB           equ	711	;# 
  4763   0002C7                     U3RXBL          equ	711	;# 
  4764   0002C9                     U3TXB           equ	713	;# 
  4765   0002C9                     U3TXBL          equ	713	;# 
  4766   0002CB                     U3P1            equ	715	;# 
  4767   0002CB                     U3P1L           equ	715	;# 
  4768   0002CD                     U3P2            equ	717	;# 
  4769   0002CD                     U3P2L           equ	717	;# 
  4770   0002CF                     U3P3            equ	719	;# 
  4771   0002CF                     U3P3L           equ	719	;# 
  4772   0002D1                     U3CON0          equ	721	;# 
  4773   0002D2                     U3CON1          equ	722	;# 
  4774   0002D3                     U3CON2          equ	723	;# 
  4775   0002D4                     U3BRG           equ	724	;# 
  4776   0002D4                     U3BRGL          equ	724	;# 
  4777   0002D5                     U3BRGH          equ	725	;# 
  4778   0002D6                     U3FIFO          equ	726	;# 
  4779   0002D7                     U3UIR           equ	727	;# 
  4780   0002D8                     U3ERRIR         equ	728	;# 
  4781   0002D9                     U3ERRIE         equ	729	;# 
  4782   0002DA                     U4RXB           equ	730	;# 
  4783   0002DA                     U4RXBL          equ	730	;# 
  4784   0002DC                     U4TXB           equ	732	;# 
  4785   0002DC                     U4TXBL          equ	732	;# 
  4786   0002DE                     U4P1            equ	734	;# 
  4787   0002DE                     U4P1L           equ	734	;# 
  4788   0002E0                     U4P2            equ	736	;# 
  4789   0002E0                     U4P2L           equ	736	;# 
  4790   0002E2                     U4P3            equ	738	;# 
  4791   0002E2                     U4P3L           equ	738	;# 
  4792   0002E4                     U4CON0          equ	740	;# 
  4793   0002E5                     U4CON1          equ	741	;# 
  4794   0002E6                     U4CON2          equ	742	;# 
  4795   0002E7                     U4BRG           equ	743	;# 
  4796   0002E7                     U4BRGL          equ	743	;# 
  4797   0002E8                     U4BRGH          equ	744	;# 
  4798   0002E9                     U4FIFO          equ	745	;# 
  4799   0002EA                     U4UIR           equ	746	;# 
  4800   0002EB                     U4ERRIR         equ	747	;# 
  4801   0002EC                     U4ERRIE         equ	748	;# 
  4802   0002ED                     U5RXB           equ	749	;# 
  4803   0002ED                     U5RXBL          equ	749	;# 
  4804   0002EF                     U5TXB           equ	751	;# 
  4805   0002EF                     U5TXBL          equ	751	;# 
  4806   0002F1                     U5P1            equ	753	;# 
  4807   0002F1                     U5P1L           equ	753	;# 
  4808   0002F3                     U5P2            equ	755	;# 
  4809   0002F3                     U5P2L           equ	755	;# 
  4810   0002F5                     U5P3            equ	757	;# 
  4811   0002F5                     U5P3L           equ	757	;# 
  4812   0002F7                     U5CON0          equ	759	;# 
  4813   0002F8                     U5CON1          equ	760	;# 
  4814   0002F9                     U5CON2          equ	761	;# 
  4815   0002FA                     U5BRG           equ	762	;# 
  4816   0002FA                     U5BRGL          equ	762	;# 
  4817   0002FB                     U5BRGH          equ	763	;# 
  4818   0002FC                     U5FIFO          equ	764	;# 
  4819   0002FD                     U5UIR           equ	765	;# 
  4820   0002FE                     U5ERRIR         equ	766	;# 
  4821   0002FF                     U5ERRIE         equ	767	;# 
  4822   000300                     SMT1TMR         equ	768	;# 
  4823   000300                     SMT1TMRL        equ	768	;# 
  4824   000301                     SMT1TMRH        equ	769	;# 
  4825   000302                     SMT1TMRU        equ	770	;# 
  4826   000303                     SMT1CPR         equ	771	;# 
  4827   000303                     SMT1CPRL        equ	771	;# 
  4828   000304                     SMT1CPRH        equ	772	;# 
  4829   000305                     SMT1CPRU        equ	773	;# 
  4830   000306                     SMT1CPW         equ	774	;# 
  4831   000306                     SMT1CPWL        equ	774	;# 
  4832   000307                     SMT1CPWH        equ	775	;# 
  4833   000308                     SMT1CPWU        equ	776	;# 
  4834   000309                     SMT1PR          equ	777	;# 
  4835   000309                     SMT1PRL         equ	777	;# 
  4836   00030A                     SMT1PRH         equ	778	;# 
  4837   00030B                     SMT1PRU         equ	779	;# 
  4838   00030C                     SMT1CON0        equ	780	;# 
  4839   00030D                     SMT1CON1        equ	781	;# 
  4840   00030E                     SMT1STAT        equ	782	;# 
  4841   00030F                     SMT1CLK         equ	783	;# 
  4842   000310                     SMT1SIG         equ	784	;# 
  4843   000311                     SMT1WIN         equ	785	;# 
  4844   000318                     TMR0L           equ	792	;# 
  4845   000318                     TMR0            equ	792	;# 
  4846   000319                     TMR0H           equ	793	;# 
  4847   000319                     PR0             equ	793	;# 
  4848   00031A                     T0CON0          equ	794	;# 
  4849   00031B                     T0CON1          equ	795	;# 
  4850   00031C                     TMR1            equ	796	;# 
  4851   00031C                     TMR1L           equ	796	;# 
  4852   00031D                     TMR1H           equ	797	;# 
  4853   00031E                     T1CON           equ	798	;# 
  4854   00031E                     TMR1CON         equ	798	;# 
  4855   00031F                     T1GCON          equ	799	;# 
  4856   00031F                     TMR1GCON        equ	799	;# 
  4857   000320                     T1GATE          equ	800	;# 
  4858   000320                     TMR1GATE        equ	800	;# 
  4859   000321                     T1CLK           equ	801	;# 
  4860   000321                     TMR1CLK         equ	801	;# 
  4861   000321                     PR1             equ	801	;# 
  4862   000322                     T2TMR           equ	802	;# 
  4863   000322                     TMR2            equ	802	;# 
  4864   000323                     T2PR            equ	803	;# 
  4865   000323                     PR2             equ	803	;# 
  4866   000324                     T2CON           equ	804	;# 
  4867   000325                     T2HLT           equ	805	;# 
  4868   000326                     T2CLKCON        equ	806	;# 
  4869   000326                     T2CLK           equ	806	;# 
  4870   000327                     T2RST           equ	807	;# 
  4871   000328                     TMR3            equ	808	;# 
  4872   000328                     TMR3L           equ	808	;# 
  4873   000329                     TMR3H           equ	809	;# 
  4874   00032A                     T3CON           equ	810	;# 
  4875   00032A                     TMR3CON         equ	810	;# 
  4876   00032B                     T3GCON          equ	811	;# 
  4877   00032B                     TMR3GCON        equ	811	;# 
  4878   00032C                     T3GATE          equ	812	;# 
  4879   00032C                     TMR3GATE        equ	812	;# 
  4880   00032D                     T3CLK           equ	813	;# 
  4881   00032D                     TMR3CLK         equ	813	;# 
  4882   00032D                     PR3             equ	813	;# 
  4883   00032E                     T4TMR           equ	814	;# 
  4884   00032E                     TMR4            equ	814	;# 
  4885   00032F                     T4PR            equ	815	;# 
  4886   00032F                     PR4             equ	815	;# 
  4887   000330                     T4CON           equ	816	;# 
  4888   000331                     T4HLT           equ	817	;# 
  4889   000332                     T4CLKCON        equ	818	;# 
  4890   000332                     T4CLK           equ	818	;# 
  4891   000333                     T4RST           equ	819	;# 
  4892   000334                     TMR5            equ	820	;# 
  4893   000334                     TMR5L           equ	820	;# 
  4894   000335                     TMR5H           equ	821	;# 
  4895   000336                     T5CON           equ	822	;# 
  4896   000336                     TMR5CON         equ	822	;# 
  4897   000337                     T5GCON          equ	823	;# 
  4898   000337                     TMR5GCON        equ	823	;# 
  4899   000338                     T5GATE          equ	824	;# 
  4900   000338                     TMR5GATE        equ	824	;# 
  4901   000339                     T5CLK           equ	825	;# 
  4902   000339                     TMR5CLK         equ	825	;# 
  4903   000339                     PR5             equ	825	;# 
  4904   00033A                     T6TMR           equ	826	;# 
  4905   00033A                     TMR6            equ	826	;# 
  4906   00033B                     T6PR            equ	827	;# 
  4907   00033B                     PR6             equ	827	;# 
  4908   00033C                     T6CON           equ	828	;# 
  4909   00033D                     T6HLT           equ	829	;# 
  4910   00033E                     T6CLKCON        equ	830	;# 
  4911   00033E                     T6CLK           equ	830	;# 
  4912   00033F                     T6RST           equ	831	;# 
  4913   000340                     CCPR1           equ	832	;# 
  4914   000340                     CCPR1L          equ	832	;# 
  4915   000341                     CCPR1H          equ	833	;# 
  4916   000342                     CCP1CON         equ	834	;# 
  4917   000343                     CCP1CAP         equ	835	;# 
  4918   000344                     CCPR2           equ	836	;# 
  4919   000344                     CCPR2L          equ	836	;# 
  4920   000345                     CCPR2H          equ	837	;# 
  4921   000346                     CCP2CON         equ	838	;# 
  4922   000347                     CCP2CAP         equ	839	;# 
  4923   000348                     CCPR3           equ	840	;# 
  4924   000348                     CCPR3L          equ	840	;# 
  4925   000349                     CCPR3H          equ	841	;# 
  4926   00034A                     CCP3CON         equ	842	;# 
  4927   00034B                     CCP3CAP         equ	843	;# 
  4928   00034C                     CCPTMRS0        equ	844	;# 
  4929   00034F                     CRCDATA         equ	847	;# 
  4930   00034F                     CRCDATL         equ	847	;# 
  4931   000350                     CRCDATH         equ	848	;# 
  4932   000351                     CRCACC          equ	849	;# 
  4933   000351                     CRCACCL         equ	849	;# 
  4934   000352                     CRCACCH         equ	850	;# 
  4935   000353                     CRCSHFT         equ	851	;# 
  4936   000353                     CRCSHIFTL       equ	851	;# 
  4937   000354                     CRCSHIFTH       equ	852	;# 
  4938   000355                     CRCXOR          equ	853	;# 
  4939   000355                     CRCXORL         equ	853	;# 
  4940   000356                     CRCXORH         equ	854	;# 
  4941   000357                     CRCCON0         equ	855	;# 
  4942   000358                     CRCCON1         equ	856	;# 
  4943   00035A                     SCANLADR        equ	858	;# 
  4944   00035A                     SCANLADRL       equ	858	;# 
  4945   00035B                     SCANLADRH       equ	859	;# 
  4946   00035C                     SCANLADRU       equ	860	;# 
  4947   00035D                     SCANHADR        equ	861	;# 
  4948   00035D                     SCANHADRL       equ	861	;# 
  4949   00035E                     SCANHADRH       equ	862	;# 
  4950   00035F                     SCANHADRU       equ	863	;# 
  4951   000360                     SCANCON0        equ	864	;# 
  4952   000361                     SCANTRIG        equ	865	;# 
  4953   000362                     IPR0            equ	866	;# 
  4954   000363                     IPR1            equ	867	;# 
  4955   000364                     IPR2            equ	868	;# 
  4956   000365                     IPR3            equ	869	;# 
  4957   000366                     IPR4            equ	870	;# 
  4958   000367                     IPR5            equ	871	;# 
  4959   000368                     IPR6            equ	872	;# 
  4960   000369                     IPR7            equ	873	;# 
  4961   00036A                     IPR8            equ	874	;# 
  4962   00036B                     IPR9            equ	875	;# 
  4963   00036C                     IPR10           equ	876	;# 
  4964   00036D                     IPR11           equ	877	;# 
  4965   00036E                     IPR12           equ	878	;# 
  4966   00036F                     IPR13           equ	879	;# 
  4967   000370                     IPR14           equ	880	;# 
  4968   000371                     IPR15           equ	881	;# 
  4969   000373                     STATUS_CSHAD    equ	883	;# 
  4970   000374                     WREG_CSHAD      equ	884	;# 
  4971   000375                     BSR_CSHAD       equ	885	;# 
  4972   000376                     SHADCON         equ	886	;# 
  4973   000377                     STATUS_SHAD     equ	887	;# 
  4974   000378                     WREG_SHAD       equ	888	;# 
  4975   000379                     BSR_SHAD        equ	889	;# 
  4976   00037A                     PCLATH_SHAD     equ	890	;# 
  4977   00037B                     PCLATU_SHAD     equ	891	;# 
  4978   00037C                     FSR0SH          equ	892	;# 
  4979   00037C                     FSR0L_SHAD      equ	892	;# 
  4980   00037D                     FSR0H_SHAD      equ	893	;# 
  4981   00037E                     FSR1SH          equ	894	;# 
  4982   00037E                     FSR1L_SHAD      equ	894	;# 
  4983   00037F                     FSR1H_SHAD      equ	895	;# 
  4984   000380                     FSR2SH          equ	896	;# 
  4985   000380                     FSR2L_SHAD      equ	896	;# 
  4986   000381                     FSR2H_SHAD      equ	897	;# 
  4987   000382                     PRODSH          equ	898	;# 
  4988   000382                     PRODL_SHAD      equ	898	;# 
  4989   000383                     PRODH_SHAD      equ	899	;# 
  4990   0003BC                     CWG1CLK         equ	956	;# 
  4991   0003BC                     CWG1CLKCON      equ	956	;# 
  4992   0003BD                     CWG1ISM         equ	957	;# 
  4993   0003BD                     CWG1DAT         equ	957	;# 
  4994   0003BE                     CWG1DBR         equ	958	;# 
  4995   0003BF                     CWG1DBF         equ	959	;# 
  4996   0003C0                     CWG1CON0        equ	960	;# 
  4997   0003C1                     CWG1CON1        equ	961	;# 
  4998   0003C2                     CWG1AS0         equ	962	;# 
  4999   0003C3                     CWG1AS1         equ	963	;# 
  5000   0003C4                     CWG1STR         equ	964	;# 
  5001   0003C5                     CWG2CLK         equ	965	;# 
  5002   0003C5                     CWG2CLKCON      equ	965	;# 
  5003   0003C6                     CWG2ISM         equ	966	;# 
  5004   0003C6                     CWG2DAT         equ	966	;# 
  5005   0003C7                     CWG2DBR         equ	967	;# 
  5006   0003C8                     CWG2DBF         equ	968	;# 
  5007   0003C9                     CWG2CON0        equ	969	;# 
  5008   0003CA                     CWG2CON1        equ	970	;# 
  5009   0003CB                     CWG2AS0         equ	971	;# 
  5010   0003CC                     CWG2AS1         equ	972	;# 
  5011   0003CD                     CWG2STR         equ	973	;# 
  5012   0003CE                     CWG3CLK         equ	974	;# 
  5013   0003CE                     CWG3CLKCON      equ	974	;# 
  5014   0003CF                     CWG3ISM         equ	975	;# 
  5015   0003CF                     CWG3DAT         equ	975	;# 
  5016   0003D0                     CWG3DBR         equ	976	;# 
  5017   0003D1                     CWG3DBF         equ	977	;# 
  5018   0003D2                     CWG3CON0        equ	978	;# 
  5019   0003D3                     CWG3CON1        equ	979	;# 
  5020   0003D4                     CWG3AS0         equ	980	;# 
  5021   0003D5                     CWG3AS1         equ	981	;# 
  5022   0003D6                     CWG3STR         equ	982	;# 
  5023   0003D7                     FVRCON          equ	983	;# 
  5024   0003D8                     ADCPCON         equ	984	;# 
  5025   0003D8                     ADCP            equ	984	;# 
  5026   0003D9                     ADLTH           equ	985	;# 
  5027   0003D9                     ADLTHL          equ	985	;# 
  5028   0003DA                     ADLTHH          equ	986	;# 
  5029   0003DB                     ADUTH           equ	987	;# 
  5030   0003DB                     ADUTHL          equ	987	;# 
  5031   0003DC                     ADUTHH          equ	988	;# 
  5032   0003DD                     ADERR           equ	989	;# 
  5033   0003DD                     ADERRL          equ	989	;# 
  5034   0003DE                     ADERRH          equ	990	;# 
  5035   0003DF                     ADSTPT          equ	991	;# 
  5036   0003DF                     ADSTPTL         equ	991	;# 
  5037   0003E0                     ADSTPTH         equ	992	;# 
  5038   0003E1                     ADFLTR          equ	993	;# 
  5039   0003E1                     ADFLTRL         equ	993	;# 
  5040   0003E2                     ADFLTRH         equ	994	;# 
  5041   0003E3                     ADACC           equ	995	;# 
  5042   0003E3                     ADACCL          equ	995	;# 
  5043   0003E4                     ADACCH          equ	996	;# 
  5044   0003E5                     ADACCU          equ	997	;# 
  5045   0003E6                     ADCNT           equ	998	;# 
  5046   0003E7                     ADRPT           equ	999	;# 
  5047   0003E8                     ADPREV          equ	1000	;# 
  5048   0003E8                     ADPREVL         equ	1000	;# 
  5049   0003E9                     ADPREVH         equ	1001	;# 
  5050   0003EA                     ADRES           equ	1002	;# 
  5051   0003EA                     ADRESL          equ	1002	;# 
  5052   0003EB                     ADRESH          equ	1003	;# 
  5053   0003EC                     ADPCH           equ	1004	;# 
  5054   0003EE                     ADACQ           equ	1006	;# 
  5055   0003EE                     ADACQL          equ	1006	;# 
  5056   0003EF                     ADACQH          equ	1007	;# 
  5057   0003F0                     ADCAP           equ	1008	;# 
  5058   0003F1                     ADPRE           equ	1009	;# 
  5059   0003F1                     ADPREL          equ	1009	;# 
  5060   0003F2                     ADPREH          equ	1010	;# 
  5061   0003F3                     ADCON0          equ	1011	;# 
  5062   0003F4                     ADCON1          equ	1012	;# 
  5063   0003F5                     ADCON2          equ	1013	;# 
  5064   0003F6                     ADCON3          equ	1014	;# 
  5065   0003F7                     ADSTAT          equ	1015	;# 
  5066   0003F8                     ADREF           equ	1016	;# 
  5067   0003F9                     ADACT           equ	1017	;# 
  5068   0003FA                     ADCLK           equ	1018	;# 
  5069   000400                     ANSELA          equ	1024	;# 
  5070   000401                     WPUA            equ	1025	;# 
  5071   000402                     ODCONA          equ	1026	;# 
  5072   000403                     SLRCONA         equ	1027	;# 
  5073   000404                     INLVLA          equ	1028	;# 
  5074   000405                     IOCAP           equ	1029	;# 
  5075   000406                     IOCAN           equ	1030	;# 
  5076   000407                     IOCAF           equ	1031	;# 
  5077   000408                     ANSELB          equ	1032	;# 
  5078   000409                     WPUB            equ	1033	;# 
  5079   00040A                     ODCONB          equ	1034	;# 
  5080   00040B                     SLRCONB         equ	1035	;# 
  5081   00040C                     INLVLB          equ	1036	;# 
  5082   00040D                     IOCBP           equ	1037	;# 
  5083   00040E                     IOCBN           equ	1038	;# 
  5084   00040F                     IOCBF           equ	1039	;# 
  5085   000410                     ANSELC          equ	1040	;# 
  5086   000411                     WPUC            equ	1041	;# 
  5087   000412                     ODCONC          equ	1042	;# 
  5088   000413                     SLRCONC         equ	1043	;# 
  5089   000414                     INLVLC          equ	1044	;# 
  5090   000415                     IOCCP           equ	1045	;# 
  5091   000416                     IOCCN           equ	1046	;# 
  5092   000417                     IOCCF           equ	1047	;# 
  5093   000418                     ANSELD          equ	1048	;# 
  5094   000419                     WPUD            equ	1049	;# 
  5095   00041A                     ODCOND          equ	1050	;# 
  5096   00041B                     SLRCOND         equ	1051	;# 
  5097   00041C                     INLVLD          equ	1052	;# 
  5098   000420                     ANSELE          equ	1056	;# 
  5099   000421                     WPUE            equ	1057	;# 
  5100   000422                     ODCONE          equ	1058	;# 
  5101   000423                     SLRCONE         equ	1059	;# 
  5102   000424                     INLVLE          equ	1060	;# 
  5103   000425                     IOCEP           equ	1061	;# 
  5104   000426                     IOCEN           equ	1062	;# 
  5105   000427                     IOCEF           equ	1063	;# 
  5106   000428                     ANSELF          equ	1064	;# 
  5107   000429                     WPUF            equ	1065	;# 
  5108   00042A                     ODCONF          equ	1066	;# 
  5109   00042B                     SLRCONF         equ	1067	;# 
  5110   00042C                     INLVLF          equ	1068	;# 
  5111   000440                     NCO1ACC         equ	1088	;# 
  5112   000440                     NCO1ACCL        equ	1088	;# 
  5113   000441                     NCO1ACCH        equ	1089	;# 
  5114   000442                     NCO1ACCU        equ	1090	;# 
  5115   000443                     NCO1INC         equ	1091	;# 
  5116   000443                     NCO1INCL        equ	1091	;# 
  5117   000444                     NCO1INCH        equ	1092	;# 
  5118   000445                     NCO1INCU        equ	1093	;# 
  5119   000446                     NCO1CON         equ	1094	;# 
  5120   000447                     NCO1CLK         equ	1095	;# 
  5121   000448                     NCO2ACC         equ	1096	;# 
  5122   000448                     NCO2ACCL        equ	1096	;# 
  5123   000449                     NCO2ACCH        equ	1097	;# 
  5124   00044A                     NCO2ACCU        equ	1098	;# 
  5125   00044B                     NCO2INC         equ	1099	;# 
  5126   00044B                     NCO2INCL        equ	1099	;# 
  5127   00044C                     NCO2INCH        equ	1100	;# 
  5128   00044D                     NCO2INCU        equ	1101	;# 
  5129   00044E                     NCO2CON         equ	1102	;# 
  5130   00044F                     NCO2CLK         equ	1103	;# 
  5131   000450                     NCO3ACC         equ	1104	;# 
  5132   000450                     NCO3ACCL        equ	1104	;# 
  5133   000451                     NCO3ACCH        equ	1105	;# 
  5134   000452                     NCO3ACCU        equ	1106	;# 
  5135   000453                     NCO3INC         equ	1107	;# 
  5136   000453                     NCO3INCL        equ	1107	;# 
  5137   000454                     NCO3INCH        equ	1108	;# 
  5138   000455                     NCO3INCU        equ	1109	;# 
  5139   000456                     NCO3CON         equ	1110	;# 
  5140   000457                     NCO3CLK         equ	1111	;# 
  5141   000459                     IVTLOCK         equ	1113	;# 
  5142   00045A                     IVTAD           equ	1114	;# 
  5143   00045A                     IVTADL          equ	1114	;# 
  5144   00045B                     IVTADH          equ	1115	;# 
  5145   00045C                     IVTADU          equ	1116	;# 
  5146   00045D                     IVTBASE         equ	1117	;# 
  5147   00045D                     IVTBASEL        equ	1117	;# 
  5148   00045E                     IVTBASEH        equ	1118	;# 
  5149   00045F                     IVTBASEU        equ	1119	;# 
  5150   000460                     PWM1ERS         equ	1120	;# 
  5151   000461                     PWM1CLK         equ	1121	;# 
  5152   000462                     PWM1LDS         equ	1122	;# 
  5153   000463                     PWM1PR          equ	1123	;# 
  5154   000463                     PWM1PRL         equ	1123	;# 
  5155   000464                     PWM1PRH         equ	1124	;# 
  5156   000465                     PWM1CPRE        equ	1125	;# 
  5157   000466                     PWM1PIPOS       equ	1126	;# 
  5158   000467                     PWM1GIR         equ	1127	;# 
  5159   000468                     PWM1GIE         equ	1128	;# 
  5160   000469                     PWM1CON         equ	1129	;# 
  5161   00046A                     PWM1S1CFG       equ	1130	;# 
  5162   00046B                     PWM1S1P1        equ	1131	;# 
  5163   00046B                     PWM1S1P1L       equ	1131	;# 
  5164   00046C                     PWM1S1P1H       equ	1132	;# 
  5165   00046D                     PWM1S1P2        equ	1133	;# 
  5166   00046D                     PWM1S1P2L       equ	1133	;# 
  5167   00046E                     PWM1S1P2H       equ	1134	;# 
  5168   00046F                     PWM2ERS         equ	1135	;# 
  5169   000470                     PWM2CLK         equ	1136	;# 
  5170   000471                     PWM2LDS         equ	1137	;# 
  5171   000472                     PWM2PR          equ	1138	;# 
  5172   000472                     PWM2PRL         equ	1138	;# 
  5173   000473                     PWM2PRH         equ	1139	;# 
  5174   000474                     PWM2CPRE        equ	1140	;# 
  5175   000475                     PWM2PIPOS       equ	1141	;# 
  5176   000476                     PWM2GIR         equ	1142	;# 
  5177   000477                     PWM2GIE         equ	1143	;# 
  5178   000478                     PWM2CON         equ	1144	;# 
  5179   000479                     PWM2S1CFG       equ	1145	;# 
  5180   00047A                     PWM2S1P1        equ	1146	;# 
  5181   00047A                     PWM2S1P1L       equ	1146	;# 
  5182   00047B                     PWM2S1P1H       equ	1147	;# 
  5183   00047C                     PWM2S1P2        equ	1148	;# 
  5184   00047C                     PWM2S1P2L       equ	1148	;# 
  5185   00047D                     PWM2S1P2H       equ	1149	;# 
  5186   00047E                     PWM3ERS         equ	1150	;# 
  5187   00047F                     PWM3CLK         equ	1151	;# 
  5188   000480                     PWM3LDS         equ	1152	;# 
  5189   000481                     PWM3PR          equ	1153	;# 
  5190   000481                     PWM3PRL         equ	1153	;# 
  5191   000482                     PWM3PRH         equ	1154	;# 
  5192   000483                     PWM3CPRE        equ	1155	;# 
  5193   000484                     PWM3PIPOS       equ	1156	;# 
  5194   000485                     PWM3GIR         equ	1157	;# 
  5195   000486                     PWM3GIE         equ	1158	;# 
  5196   000487                     PWM3CON         equ	1159	;# 
  5197   000488                     PWM3S1CFG       equ	1160	;# 
  5198   000489                     PWM3S1P1        equ	1161	;# 
  5199   000489                     PWM3S1P1L       equ	1161	;# 
  5200   00048A                     PWM3S1P1H       equ	1162	;# 
  5201   00048B                     PWM3S1P2        equ	1163	;# 
  5202   00048B                     PWM3S1P2L       equ	1163	;# 
  5203   00048C                     PWM3S1P2H       equ	1164	;# 
  5204   00049C                     PWMLOAD         equ	1180	;# 
  5205   00049D                     PWMEN           equ	1181	;# 
  5206   00049E                     PIE0            equ	1182	;# 
  5207   00049F                     PIE1            equ	1183	;# 
  5208   0004A0                     PIE2            equ	1184	;# 
  5209   0004A1                     PIE3            equ	1185	;# 
  5210   0004A2                     PIE4            equ	1186	;# 
  5211   0004A3                     PIE5            equ	1187	;# 
  5212   0004A4                     PIE6            equ	1188	;# 
  5213   0004A5                     PIE7            equ	1189	;# 
  5214   0004A6                     PIE8            equ	1190	;# 
  5215   0004A7                     PIE9            equ	1191	;# 
  5216   0004A8                     PIE10           equ	1192	;# 
  5217   0004A9                     PIE11           equ	1193	;# 
  5218   0004AA                     PIE12           equ	1194	;# 
  5219   0004AB                     PIE13           equ	1195	;# 
  5220   0004AC                     PIE14           equ	1196	;# 
  5221   0004AD                     PIE15           equ	1197	;# 
  5222   0004AE                     PIR0            equ	1198	;# 
  5223   0004AF                     PIR1            equ	1199	;# 
  5224   0004B0                     PIR2            equ	1200	;# 
  5225   0004B1                     PIR3            equ	1201	;# 
  5226   0004B2                     PIR4            equ	1202	;# 
  5227   0004B3                     PIR5            equ	1203	;# 
  5228   0004B4                     PIR6            equ	1204	;# 
  5229   0004B5                     PIR7            equ	1205	;# 
  5230   0004B6                     PIR8            equ	1206	;# 
  5231   0004B7                     PIR9            equ	1207	;# 
  5232   0004B8                     PIR10           equ	1208	;# 
  5233   0004B9                     PIR11           equ	1209	;# 
  5234   0004BA                     PIR12           equ	1210	;# 
  5235   0004BB                     PIR13           equ	1211	;# 
  5236   0004BC                     PIR14           equ	1212	;# 
  5237   0004BD                     PIR15           equ	1213	;# 
  5238   0004BE                     LATA            equ	1214	;# 
  5239   0004BF                     LATB            equ	1215	;# 
  5240   0004C0                     LATC            equ	1216	;# 
  5241   0004C1                     LATD            equ	1217	;# 
  5242   0004C2                     LATE            equ	1218	;# 
  5243   0004C3                     LATF            equ	1219	;# 
  5244   0004C6                     TRISA           equ	1222	;# 
  5245   0004C7                     TRISB           equ	1223	;# 
  5246   0004C8                     TRISC           equ	1224	;# 
  5247   0004C9                     TRISD           equ	1225	;# 
  5248   0004CA                     TRISE           equ	1226	;# 
  5249   0004CB                     TRISF           equ	1227	;# 
  5250   0004CE                     PORTA           equ	1230	;# 
  5251   0004CF                     PORTB           equ	1231	;# 
  5252   0004D0                     PORTC           equ	1232	;# 
  5253   0004D1                     PORTD           equ	1233	;# 
  5254   0004D2                     PORTE           equ	1234	;# 
  5255   0004D3                     PORTF           equ	1235	;# 
  5256   0004D6                     INTCON0         equ	1238	;# 
  5257   0004D7                     INTCON1         equ	1239	;# 
  5258   0004D8                     STATUS          equ	1240	;# 
  5259   0004D9                     FSR2            equ	1241	;# 
  5260   0004D9                     FSR2L           equ	1241	;# 
  5261   0004DA                     FSR2H           equ	1242	;# 
  5262   0004DB                     PLUSW2          equ	1243	;# 
  5263   0004DC                     PREINC2         equ	1244	;# 
  5264   0004DD                     POSTDEC2        equ	1245	;# 
  5265   0004DE                     POSTINC2        equ	1246	;# 
  5266   0004DF                     INDF2           equ	1247	;# 
  5267   0004E0                     BSR             equ	1248	;# 
  5268   0004E1                     FSR1            equ	1249	;# 
  5269   0004E1                     FSR1L           equ	1249	;# 
  5270   0004E2                     FSR1H           equ	1250	;# 
  5271   0004E3                     PLUSW1          equ	1251	;# 
  5272   0004E4                     PREINC1         equ	1252	;# 
  5273   0004E5                     POSTDEC1        equ	1253	;# 
  5274   0004E6                     POSTINC1        equ	1254	;# 
  5275   0004E7                     INDF1           equ	1255	;# 
  5276   0004E8                     WREG            equ	1256	;# 
  5277   0004E9                     FSR0            equ	1257	;# 
  5278   0004E9                     FSR0L           equ	1257	;# 
  5279   0004EA                     FSR0H           equ	1258	;# 
  5280   0004EB                     PLUSW0          equ	1259	;# 
  5281   0004EC                     PREINC0         equ	1260	;# 
  5282   0004ED                     POSTDEC0        equ	1261	;# 
  5283   0004EE                     POSTINC0        equ	1262	;# 
  5284   0004EF                     INDF0           equ	1263	;# 
  5285   0004F0                     PCON0           equ	1264	;# 
  5286   0004F1                     PCON1           equ	1265	;# 
  5287   0004F2                     CPUDOZE         equ	1266	;# 
  5288   0004F3                     PROD            equ	1267	;# 
  5289   0004F3                     PRODL           equ	1267	;# 
  5290   0004F4                     PRODH           equ	1268	;# 
  5291   0004F5                     TABLAT          equ	1269	;# 
  5292   0004F6                     TBLPTR          equ	1270	;# 
  5293   0004F6                     TBLPTRL         equ	1270	;# 
  5294   0004F7                     TBLPTRH         equ	1271	;# 
  5295   0004F8                     TBLPTRU         equ	1272	;# 
  5296   0004F9                     PCLAT           equ	1273	;# 
  5297   0004F9                     PCL             equ	1273	;# 
  5298   0004FA                     PCLATH          equ	1274	;# 
  5299   0004FB                     PCLATU          equ	1275	;# 
  5300   0004FC                     STKPTR          equ	1276	;# 
  5301   0004FD                     TOS             equ	1277	;# 
  5302   0004FD                     TOSL            equ	1277	;# 
  5303   0004FE                     TOSH            equ	1278	;# 
  5304   0004FF                     TOSU            equ	1279	;# 
  5305                           
  5306 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  5307   000000                     _I2C1_DO_IDLE   equ	0
  5308                           
  5309 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  5310   000000                     _I2C1_DO_SEND_ADR_READ equ	0
  5311                           
  5312 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  5313   000000                     _I2C1_DO_SEND_ADR_WRITE equ	0
  5314                           
  5315 ;; Function _I2C1_DO_TX is unused but had its address taken
  5316   000000                     _I2C1_DO_TX     equ	0
  5317                           
  5318 ;; Function _I2C1_DO_RX is unused but had its address taken
  5319   000000                     _I2C1_DO_RX     equ	0
  5320                           
  5321 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  5322   000000                     _I2C1_DO_TX_EMPTY equ	0
  5323                           
  5324 ;; Function _I2C1_DO_RX_EMPTY is unused but had its address taken
  5325   000000                     _I2C1_DO_RX_EMPTY equ	0
  5326                           
  5327 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  5328   000000                     _I2C1_DO_SEND_RESTART_READ equ	0
  5329                           
  5330 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  5331   000000                     _I2C1_DO_SEND_RESTART_WRITE equ	0
  5332                           
  5333 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  5334   000000                     _I2C1_DO_SEND_RESTART equ	0
  5335                           
  5336 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  5337   000000                     _I2C1_DO_SEND_STOP equ	0
  5338                           
  5339 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  5340   000000                     _I2C1_DO_RX_ACK equ	0
  5341                           
  5342 ;; Function _I2C1_DO_TX_ACK is unused but had its address taken
  5343   000000                     _I2C1_DO_TX_ACK equ	0
  5344                           
  5345 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  5346   000000                     _I2C1_DO_RX_NACK_STOP equ	0
  5347                           
  5348 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  5349   000000                     _I2C1_DO_RX_NACK_RESTART equ	0
  5350                           
  5351 ;; Function _I2C1_DO_RESET is unused but had its address taken
  5352   000000                     _I2C1_DO_RESET  equ	0
  5353                           
  5354 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  5355   000000                     _I2C1_DO_ADDRESS_NACK equ	0
  5356                           
  5357 ;; Function _I2C1_DO_BUS_COLLISION is unused but had its address taken
  5358   000000                     _I2C1_DO_BUS_COLLISION equ	0
  5359                           
  5360 ;; Function _I2C1_DO_BUS_ERROR is unused but had its address taken
  5361   000000                     _I2C1_DO_BUS_ERROR equ	0
  5362                           
  5363 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  5364   000000                     _I2C1_CallbackReturnStop equ	0
  5365                           
  5366 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  5367   000000                     _I2C1_CallbackReturnReset equ	0
  5368                           
  5369 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  5370   000000                     _rd1RegCompleteHandler equ	0
  5371                           
  5372 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  5373   000000                     _rd2RegCompleteHandler equ	0
  5374                           
  5375 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  5376   000000                     _wr1RegCompleteHandler equ	0
  5377                           
  5378 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  5379   000000                     _wr2RegCompleteHandler equ	0
  5380                           
  5381 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  5382   000000                     _rdBlkRegCompleteHandler equ	0
  5383                           
  5384                           	psect	idataCOMRAM
  5385   016F4A                     __pidataCOMRAM:
  5386                           	callstack 0
  5387                           
  5388                           ;initializer for _current_i2c_speed
  5389   016F4A  01                 	db	1
  5390                           
  5391                           	psect	mediumconst
  5392   00FE48                     __pmediumconst:
  5393                           	callstack 0
  5394   00FE48  00                 	db	0
  5395   00FE49                     _i2c1_fsmStateTable:
  5396                           	callstack 0
  5397   00FE49  00                 	db	0
  5398   00FE4A  00                 	db	0
  5399   00FE4B  00                 	db	0
  5400   00FE4C  00                 	db	0
  5401   00FE4D  00                 	db	0
  5402   00FE4E  00                 	db	0
  5403   00FE4F  00                 	db	0
  5404   00FE50  00                 	db	0
  5405   00FE51  00                 	db	0
  5406   00FE52  00                 	db	0
  5407   00FE53  00                 	db	0
  5408   00FE54  00                 	db	0
  5409   00FE55  00                 	db	0
  5410   00FE56  00                 	db	0
  5411   00FE57  00                 	db	0
  5412   00FE58  00                 	db	0
  5413   00FE59  00                 	db	0
  5414   00FE5A  00                 	db	0
  5415   00FE5B  00                 	db	0
  5416   00FE5C  00                 	db	0
  5417   00FE5D  00                 	db	0
  5418   00FE5E  00                 	db	0
  5419   00FE5F  00                 	db	0
  5420   00FE60  00                 	db	0
  5421   00FE61  00                 	db	0
  5422   00FE62  00                 	db	0
  5423   00FE63  00                 	db	0
  5424   00FE64  00                 	db	0
  5425   00FE65  00                 	db	0
  5426   00FE66  00                 	db	0
  5427   00FE67  00                 	db	0
  5428   00FE68  00                 	db	0
  5429   00FE69  00                 	db	0
  5430   00FE6A  00                 	db	0
  5431   00FE6B  00                 	db	0
  5432   00FE6C  00                 	db	0
  5433   00FE6D  00                 	db	0
  5434   00FE6E  00                 	db	0
  5435   00FE6F  00                 	db	0
  5436   00FE70  00                 	db	0
  5437   00FE71  00                 	db	0
  5438   00FE72  00                 	db	0
  5439   00FE73  00                 	db	0
  5440   00FE74  00                 	db	0
  5441   00FE75  00                 	db	0
  5442   00FE76  00                 	db	0
  5443   00FE77  00                 	db	0
  5444   00FE78  00                 	db	0
  5445   00FE79  00                 	db	0
  5446   00FE7A  00                 	db	0
  5447   00FE7B  00                 	db	0
  5448   00FE7C  00                 	db	0
  5449   00FE7D  00                 	db	0
  5450   00FE7E  00                 	db	0
  5451   00FE7F  00                 	db	0
  5452   00FE80  00                 	db	0
  5453   00FE81  00                 	db	0
  5454   00FE82                     __end_of_i2c1_fsmStateTable:
  5455                           	callstack 0
  5456   00FE82                     _atanlo:
  5457                           	callstack 0
  5458   00FE82  3769               	dw	14185
  5459   00FE84  31AC               	dw	12716
  5460   00FE86  2168               	dw	8552
  5461   00FE88  3322               	dw	13090
  5462   00FE8A  0FB4               	dw	4020
  5463   00FE8C  3314               	dw	13076
  5464   00FE8E  2168               	dw	8552
  5465   00FE90  33A2               	dw	13218
  5466   00FE92                     __end_of_atanlo:
  5467                           	callstack 0
  5468   00FE92                     _atanhi:
  5469                           	callstack 0
  5470   00FE92  6338               	dw	25400
  5471   00FE94  3EED               	dw	16109
  5472   00FE96  0FDA               	dw	4058
  5473   00FE98  3F49               	dw	16201
  5474   00FE9A  985E               	dw	39006
  5475   00FE9C  3F7B               	dw	16251
  5476   00FE9E  0FDA               	dw	4058
  5477   00FEA0  3FC9               	dw	16329
  5478   00FEA2                     __end_of_atanhi:
  5479                           	callstack 0
  5480   00FEA2  0FDB               	dw	4059
  5481   00FEA4  40C9               	dw	16585
  5482   00FEA6                     __end_of_s4pio2:
  5483                           	callstack 0
  5484   00FEA6  CBE4               	dw	52196
  5485   00FEA8  4096               	dw	16534
  5486   00FEAA                     __end_of_s3pio2:
  5487                           	callstack 0
  5488   00FEAA  0FDB               	dw	4059
  5489   00FEAC  4049               	dw	16457
  5490   00FEAE                     __end_of_s2pio2:
  5491                           	callstack 0
  5492   00FEAE  0FDB               	dw	4059
  5493   00FEB0  3FC9               	dw	16329
  5494   00FEB2                     __end_of_s1pio2:
  5495                           	callstack 0
  5496   00FEB2  6C3C               	dw	27708
  5497   00FEB4  3636               	dw	13878
  5498   00FEB6                     __end_of_S4:
  5499                           	callstack 0
  5500   00FEB6  07CF               	dw	1999
  5501   00FEB8  B950               	dw	47440
  5502   00FEBA                     __end_of_S3:
  5503                           	callstack 0
  5504   00FEBA  8884               	dw	34948
  5505   00FEBC  3C08               	dw	15368
  5506   00FEBE                     __end_of_S2:
  5507                           	callstack 0
  5508   00FEBE  AAAB               	dw	43691
  5509   00FEC0  BE2A               	dw	48682
  5510   00FEC2                     __end_of_S1:
  5511                           	callstack 0
  5512   00FEC2  85A3               	dw	34211
  5513   00FEC4  3288               	dw	12936
  5514   00FEC6                     __end_of_pio2_1t:
  5515                           	callstack 0
  5516   00FEC6  0FDA               	dw	4058
  5517   00FEC8  3FC9               	dw	16329
  5518   00FECA                     __end_of_pio2_1:
  5519                           	callstack 0
  5520   00FECA  F983               	dw	63875
  5521   00FECC  3F22               	dw	16162
  5522   00FECE                     __end_of_invpio2:
  5523                           	callstack 0
  5524   00FECE  0000               	dw	0
  5525   00FED0  3F00               	dw	16128
  5526   00FED2                     __end_of_half:
  5527                           	callstack 0
  5528   00FED2  9A17               	dw	39447
  5529   00FED4  37CC               	dw	14284
  5530   00FED6                     __end_of_C3:
  5531                           	callstack 0
  5532   00FED6  043F               	dw	1087
  5533   00FED8  BAB6               	dw	47798
  5534   00FEDA                     __end_of_C2:
  5535                           	callstack 0
  5536   00FEDA  AA9F               	dw	43679
  5537   00FEDC  3D2A               	dw	15658
  5538   00FEDE                     __end_of_C1:
  5539                           	callstack 0
  5540   00FEDE  0000               	dw	0
  5541   00FEE0  BF00               	dw	48896
  5542   00FEE2                     __end_of_C0:
  5543                           	callstack 0
  5544   00FEE2  0FDB               	dw	4059
  5545   00FEE4  40C9               	dw	16585
  5546   00FEE6                     __end_of_c4pio2:
  5547                           	callstack 0
  5548   00FEE6  CBE4               	dw	52196
  5549   00FEE8  4096               	dw	16534
  5550   00FEEA                     __end_of_c3pio2:
  5551                           	callstack 0
  5552   00FEEA  0FDB               	dw	4059
  5553   00FEEC  4049               	dw	16457
  5554   00FEEE                     __end_of_c2pio2:
  5555                           	callstack 0
  5556   00FEEE  0FDB               	dw	4059
  5557   00FEF0  3FC9               	dw	16329
  5558   00FEF2                     __end_of_c1pio2:
  5559                           	callstack 0
  5560   00FEF2  AC25               	dw	44069
  5561   00FEF4  3D7C               	dw	15740
  5562   00FEF6                     __end_of_aT4:
  5563                           	callstack 0
  5564   00FEF6  1247               	dw	4679
  5565   00FEF8  BDDA               	dw	48602
  5566   00FEFA                     __end_of_aT3:
  5567                           	callstack 0
  5568   00FEFA  F50D               	dw	62733
  5569   00FEFC  3E11               	dw	15889
  5570   00FEFE                     __end_of_aT2:
  5571                           	callstack 0
  5572   00FEFE  CA98               	dw	51864
  5573   00FF00  BE4C               	dw	48716
  5574   00FF02                     __end_of_aT1:
  5575                           	callstack 0
  5576   00FF02  AAA9               	dw	43689
  5577   00FF04  3EAA               	dw	16042
  5578   00FF06                     __end_of_aT0:
  5579                           	callstack 0
  5580   00FF06  BD2E               	dw	48430
  5581   00FF08  B3BB               	dw	46011
  5582   00FF0A                     __end_of_pi_lo:
  5583                           	callstack 0
  5584   00FF0A  0FDB               	dw	4059
  5585   00FF0C  4049               	dw	16457
  5586   00FF0E                     __end_of_pi:
  5587                           	callstack 0
  5588   0000AF                     _OSCCON3        set	175
  5589   0000B3                     _OSCEN          set	179
  5590   0000AD                     _OSCCON1        set	173
  5591   0000B1                     _OSCFRQ         set	177
  5592   000272                     _U1RXPPS        set	626
  5593   000213                     _RC2PPS         set	531
  5594   000217                     _RC6PPS         set	535
  5595   000216                     _RC5PPS         set	534
  5596   000271                     _I2C1SCLPPS     set	625
  5597   000270                     _I2C1SDAPPS     set	624
  5598   00029B                     _I2C1PIEbits    set	667
  5599   00029A                     _I2C1PIRbits    set	666
  5600   000297                     _I2C1ERRbits    set	663
  5601   000295                     _I2C1CON1bits   set	661
  5602   00028C                     _I2C1TXB        set	652
  5603   00028B                     _I2C1RXB        set	651
  5604   000299                     _I2C1STAT1bits  set	665
  5605   000294                     _I2C1CON0bits   set	660
  5606   00028D                     _I2C1CNT        set	653
  5607   000297                     _I2C1ERR        set	663
  5608   00029B                     _I2C1PIE        set	667
  5609   00029A                     _I2C1PIR        set	666
  5610   00029C                     _I2C1CLK        set	668
  5611   000296                     _I2C1CON2       set	662
  5612   000295                     _I2C1CON1       set	661
  5613   000294                     _I2C1CON0       set	660
  5614   000409                     _WPUBbits       set	1033
  5615   000412                     _ODCONCbits     set	1042
  5616   000411                     _WPUCbits       set	1041
  5617   000410                     _ANSELCbits     set	1040
  5618   000428                     _ANSELFbits     set	1064
  5619   000419                     _WPUDbits       set	1049
  5620   000419                     _WPUD           set	1049
  5621   000418                     _ANSELD         set	1048
  5622   00040A                     _ODCONBbits     set	1034
  5623   000408                     _ANSELBbits     set	1032
  5624   0004D1                     _PORTD          set	1233
  5625   0004C8                     _TRISCbits      set	1224
  5626   0004C3                     _LATFbits       set	1219
  5627   0004CB                     _TRISFbits      set	1227
  5628   0004C1                     _LATDbits       set	1217
  5629   0004C1                     _LATD           set	1217
  5630   0004C9                     _TRISDbits      set	1225
  5631   0004C9                     _TRISD          set	1225
  5632   0004CF                     _PORTBbits      set	1231
  5633   0004BF                     _LATBbits       set	1215
  5634   0004C7                     _TRISBbits      set	1223
  5635   0004B5                     _PIR7bits       set	1205
  5636   0004A5                     _PIE7bits       set	1189
  5637   00FF0E  49                 	db	73	;'I'
  5638   00FF0F  6E                 	db	110	;'n'
  5639   00FF10  63                 	db	99	;'c'
  5640   00FF11  6C                 	db	108	;'l'
  5641   00FF12  69                 	db	105	;'i'
  5642   00FF13  6E                 	db	110	;'n'
  5643   00FF14  61                 	db	97	;'a'
  5644   00FF15  63                 	db	99	;'c'
  5645   00FF16  69                 	db	105	;'i'
  5646   00FF17  6F                 	db	111	;'o'
  5647   00FF18  6E                 	db	110	;'n'
  5648   00FF19  20                 	db	32
  5649   00FF1A  69                 	db	105	;'i'
  5650   00FF1B  7A                 	db	122	;'z'
  5651   00FF1C  71                 	db	113	;'q'
  5652   00FF1D  75                 	db	117	;'u'
  5653   00FF1E  69                 	db	105	;'i'
  5654   00FF1F  65                 	db	101	;'e'
  5655   00FF20  72                 	db	114	;'r'
  5656   00FF21  64                 	db	100	;'d'
  5657   00FF22  61                 	db	97	;'a'
  5658   00FF23  00                 	db	0
  5659   00FF24                     STR_19:
  5660   00FF24  45                 	db	69	;'E'
  5661   00FF25  73                 	db	115	;'s'
  5662   00FF26  70                 	db	112	;'p'
  5663   00FF27  65                 	db	101	;'e'
  5664   00FF28  72                 	db	114	;'r'
  5665   00FF29  61                 	db	97	;'a'
  5666   00FF2A  6E                 	db	110	;'n'
  5667   00FF2B  64                 	db	100	;'d'
  5668   00FF2C  6F                 	db	111	;'o'
  5669   00FF2D  20                 	db	32
  5670   00FF2E  6D                 	db	109	;'m'
  5671   00FF2F  6F                 	db	111	;'o'
  5672   00FF30  76                 	db	118	;'v'
  5673   00FF31  69                 	db	105	;'i'
  5674   00FF32  6D                 	db	109	;'m'
  5675   00FF33  69                 	db	105	;'i'
  5676   00FF34  65                 	db	101	;'e'
  5677   00FF35  6E                 	db	110	;'n'
  5678   00FF36  74                 	db	116	;'t'
  5679   00FF37  6F                 	db	111	;'o'
  5680   00FF38  00                 	db	0
  5681   00FF39  49                 	db	73	;'I'
  5682   00FF3A  6E                 	db	110	;'n'
  5683   00FF3B  63                 	db	99	;'c'
  5684   00FF3C  6C                 	db	108	;'l'
  5685   00FF3D  69                 	db	105	;'i'
  5686   00FF3E  6E                 	db	110	;'n'
  5687   00FF3F  61                 	db	97	;'a'
  5688   00FF40  63                 	db	99	;'c'
  5689   00FF41  69                 	db	105	;'i'
  5690   00FF42  6F                 	db	111	;'o'
  5691   00FF43  6E                 	db	110	;'n'
  5692   00FF44  20                 	db	32
  5693   00FF45  61                 	db	97	;'a'
  5694   00FF46  64                 	db	100	;'d'
  5695   00FF47  65                 	db	101	;'e'
  5696   00FF48  6C                 	db	108	;'l'
  5697   00FF49  61                 	db	97	;'a'
  5698   00FF4A  6E                 	db	110	;'n'
  5699   00FF4B  74                 	db	116	;'t'
  5700   00FF4C  65                 	db	101	;'e'
  5701   00FF4D  00                 	db	0
  5702   00FF4E  49                 	db	73	;'I'
  5703   00FF4F  6E                 	db	110	;'n'
  5704   00FF50  63                 	db	99	;'c'
  5705   00FF51  6C                 	db	108	;'l'
  5706   00FF52  69                 	db	105	;'i'
  5707   00FF53  6E                 	db	110	;'n'
  5708   00FF54  61                 	db	97	;'a'
  5709   00FF55  63                 	db	99	;'c'
  5710   00FF56  69                 	db	105	;'i'
  5711   00FF57  6F                 	db	111	;'o'
  5712   00FF58  6E                 	db	110	;'n'
  5713   00FF59  20                 	db	32
  5714   00FF5A  64                 	db	100	;'d'
  5715   00FF5B  65                 	db	101	;'e'
  5716   00FF5C  72                 	db	114	;'r'
  5717   00FF5D  65                 	db	101	;'e'
  5718   00FF5E  63                 	db	99	;'c'
  5719   00FF5F  68                 	db	104	;'h'
  5720   00FF60  61                 	db	97	;'a'
  5721   00FF61  00                 	db	0
  5722   00FF62  49                 	db	73	;'I'
  5723   00FF63  6E                 	db	110	;'n'
  5724   00FF64  63                 	db	99	;'c'
  5725   00FF65  6C                 	db	108	;'l'
  5726   00FF66  69                 	db	105	;'i'
  5727   00FF67  6E                 	db	110	;'n'
  5728   00FF68  61                 	db	97	;'a'
  5729   00FF69  63                 	db	99	;'c'
  5730   00FF6A  69                 	db	105	;'i'
  5731   00FF6B  6F                 	db	111	;'o'
  5732   00FF6C  6E                 	db	110	;'n'
  5733   00FF6D  20                 	db	32
  5734   00FF6E  61                 	db	97	;'a'
  5735   00FF6F  74                 	db	116	;'t'
  5736   00FF70  72                 	db	114	;'r'
  5737   00FF71  61                 	db	97	;'a'
  5738   00FF72  73                 	db	115	;'s'
  5739   00FF73  00                 	db	0
  5740   00FF74                     STR_14:
  5741   00FF74  50                 	db	80	;'P'
  5742   00FF75  3A                 	db	58	;':'
  5743   00FF76  20                 	db	32
  5744   00FF77  25                 	db	37
  5745   00FF78  2E                 	db	46
  5746   00FF79  31                 	db	49	;'1'
  5747   00FF7A  66                 	db	102	;'f'
  5748   00FF7B  20                 	db	32
  5749   00FF7C  52                 	db	82	;'R'
  5750   00FF7D  3A                 	db	58	;':'
  5751   00FF7E  20                 	db	32
  5752   00FF7F  25                 	db	37
  5753   00FF80  2E                 	db	46
  5754   00FF81  31                 	db	49	;'1'
  5755   00FF82  66                 	db	102	;'f'
  5756   00FF83  00                 	db	0
  5757   00FF84  53                 	db	83	;'S'
  5758   00FF85  69                 	db	105	;'i'
  5759   00FF86  6E                 	db	110	;'n'
  5760   00FF87  20                 	db	32
  5761   00FF88  6D                 	db	109	;'m'
  5762   00FF89  6F                 	db	111	;'o'
  5763   00FF8A  76                 	db	118	;'v'
  5764   00FF8B  69                 	db	105	;'i'
  5765   00FF8C  6D                 	db	109	;'m'
  5766   00FF8D  69                 	db	105	;'i'
  5767   00FF8E  65                 	db	101	;'e'
  5768   00FF8F  6E                 	db	110	;'n'
  5769   00FF90  74                 	db	116	;'t'
  5770   00FF91  6F                 	db	111	;'o'
  5771   00FF92  00                 	db	0
  5772   00FF93                     STR_18:
  5773   00FF93  47                 	db	71	;'G'
  5774   00FF94  72                 	db	114	;'r'
  5775   00FF95  61                 	db	97	;'a'
  5776   00FF96  63                 	db	99	;'c'
  5777   00FF97  69                 	db	105	;'i'
  5778   00FF98  61                 	db	97	;'a'
  5779   00FF99  73                 	db	115	;'s'
  5780   00FF9A  20                 	db	32
  5781   00FF9B  20                 	db	32
  5782   00FF9C  20                 	db	32
  5783   00FF9D  20                 	db	32
  5784   00FF9E  20                 	db	32
  5785   00FF9F  00                 	db	0
  5786   00FFA0  44                 	db	68	;'D'
  5787   00FFA1  65                 	db	101	;'e'
  5788   00FFA2  73                 	db	115	;'s'
  5789   00FFA3  63                 	db	99	;'c'
  5790   00FFA4  6F                 	db	111	;'o'
  5791   00FFA5  6E                 	db	110	;'n'
  5792   00FFA6  6F                 	db	111	;'o'
  5793   00FFA7  63                 	db	99	;'c'
  5794   00FFA8  69                 	db	105	;'i'
  5795   00FFA9  64                 	db	100	;'d'
  5796   00FFAA  6F                 	db	111	;'o'
  5797   00FFAB  00                 	db	0
  5798   00FFAC  49                 	db	73	;'I'
  5799   00FFAD  7A                 	db	122	;'z'
  5800   00FFAE  71                 	db	113	;'q'
  5801   00FFAF  75                 	db	117	;'u'
  5802   00FFB0  69                 	db	105	;'i'
  5803   00FFB1  65                 	db	101	;'e'
  5804   00FFB2  72                 	db	114	;'r'
  5805   00FFB3  64                 	db	100	;'d'
  5806   00FFB4  61                 	db	97	;'a'
  5807   00FFB5  00                 	db	0
  5808   00FFB6                     STR_17:
  5809   00FFB6  48                 	db	72	;'H'
  5810   00FFB7  6F                 	db	111	;'o'
  5811   00FFB8  6C                 	db	108	;'l'
  5812   00FFB9  61                 	db	97	;'a'
  5813   00FFBA  20                 	db	32
  5814   00FFBB  20                 	db	32
  5815   00FFBC  20                 	db	32
  5816   00FFBD  20                 	db	32
  5817   00FFBE  00                 	db	0
  5818   00FFBF  53                 	db	83	;'S'
  5819   00FFC0  61                 	db	97	;'a'
  5820   00FFC1  63                 	db	99	;'c'
  5821   00FFC2  75                 	db	117	;'u'
  5822   00FFC3  64                 	db	100	;'d'
  5823   00FFC4  69                 	db	105	;'i'
  5824   00FFC5  64                 	db	100	;'d'
  5825   00FFC6  61                 	db	97	;'a'
  5826   00FFC7  00                 	db	0
  5827   00FFC8  41                 	db	65	;'A'
  5828   00FFC9  64                 	db	100	;'d'
  5829   00FFCA  65                 	db	101	;'e'
  5830   00FFCB  6C                 	db	108	;'l'
  5831   00FFCC  61                 	db	97	;'a'
  5832   00FFCD  6E                 	db	110	;'n'
  5833   00FFCE  74                 	db	116	;'t'
  5834   00FFCF  65                 	db	101	;'e'
  5835   00FFD0  00                 	db	0
  5836   00FFD1  44                 	db	68	;'D'
  5837   00FFD2  65                 	db	101	;'e'
  5838   00FFD3  72                 	db	114	;'r'
  5839   00FFD4  65                 	db	101	;'e'
  5840   00FFD5  63                 	db	99	;'c'
  5841   00FFD6  68                 	db	104	;'h'
  5842   00FFD7  61                 	db	97	;'a'
  5843   00FFD8  00                 	db	0
  5844   00FFD9                     STR_13:
  5845   00FFD9  4D                 	db	77	;'M'
  5846   00FFDA  50                 	db	80	;'P'
  5847   00FFDB  55                 	db	85	;'U'
  5848   00FFDC  20                 	db	32
  5849   00FFDD  4F                 	db	79	;'O'
  5850   00FFDE  4B                 	db	75	;'K'
  5851   00FFDF  00                 	db	0
  5852   00FFE0                     STR_15:
  5853   00FFE0  4E                 	db	78	;'N'
  5854   00FFE1  6F                 	db	111	;'o'
  5855   00FFE2  20                 	db	32
  5856   00FFE3  20                 	db	32
  5857   00FFE4  20                 	db	32
  5858   00FFE5  00                 	db	0
  5859   00FFE6  47                 	db	71	;'G'
  5860   00FFE7  6F                 	db	111	;'o'
  5861   00FFE8  6C                 	db	108	;'l'
  5862   00FFE9  70                 	db	112	;'p'
  5863   00FFEA  65                 	db	101	;'e'
  5864   00FFEB  00                 	db	0
  5865   00FFEC  41                 	db	65	;'A'
  5866   00FFED  74                 	db	116	;'t'
  5867   00FFEE  72                 	db	114	;'r'
  5868   00FFEF  61                 	db	97	;'a'
  5869   00FFF0  73                 	db	115	;'s'
  5870   00FFF1  00                 	db	0
  5871   00FFF2                     STR_20:
  5872   00FFF2  69                 	db	105	;'i'
  5873   00FFF3  6E                 	db	110	;'n'
  5874   00FFF4  66                 	db	102	;'f'
  5875   00FFF5  00                 	db	0
  5876   00FFF6                     STR_23:
  5877   00FFF6  6E                 	db	110	;'n'
  5878   00FFF7  61                 	db	97	;'a'
  5879   00FFF8  6E                 	db	110	;'n'
  5880   00FFF9  00                 	db	0
  5881   00FFFA                     STR_16:
  5882   00FFFA  53                 	db	83	;'S'
  5883   00FFFB  69                 	db	105	;'i'
  5884   00FFFC  20                 	db	32
  5885   00FFFD  00                 	db	0
  5886   00FFF6                     STR_24          equ	STR_23
  5887   00FFF6                     STR_25          equ	STR_23
  5888   00FFF2                     STR_21          equ	STR_20
  5889   00FFF2                     STR_22          equ	STR_20
  5890   00FFFE  00                 	db	0	; dummy byte at the end
  5891   000003                     __activetblptr  equ	3
  5892                           
  5893                           ; #config settings
  5894                           
  5895                           	psect	cinit
  5896   016C36                     __pcinit:
  5897                           	callstack 0
  5898   016C36                     start_initialization:
  5899                           	callstack 0
  5900   016C36                     __initialization:
  5901                           	callstack 0
  5902                           
  5903                           ; Initialize objects allocated to COMRAM (1 bytes)
  5904                           ; load TBLPTR registers with __pidataCOMRAM
  5905   016C36  0E4A               	movlw	low __pidataCOMRAM
  5906   016C38  6EF6               	movwf	tblptrl,c
  5907   016C3A  0E6F               	movlw	high __pidataCOMRAM
  5908   016C3C  6EF7               	movwf	tblptrh,c
  5909   016C3E  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  5910   016C40  6EF8               	movwf	tblptru,c
  5911   016C42  0009               	tblrd		*+	;fetch initializer
  5912   016C44  C4F5 F55F          	movff	tablat,__pdataCOMRAM
  5913                           
  5914                           ; Clear objects allocated to BANK8 (80 bytes)
  5915   016C48  EE02  F000         	lfsr	0,__pbssBANK8
  5916   016C4C  0E50               	movlw	80
  5917   016C4E                     clear_0:
  5918   016C4E  6AEE               	clrf	postinc0,c
  5919   016C50  06E8               	decf	wreg,f,c
  5920   016C52  E1FD               	bnz	clear_0
  5921                           
  5922                           ; Clear objects allocated to BANK7 (231 bytes)
  5923   016C54  EE01  F300         	lfsr	0,__pbssBANK7
  5924   016C58  0EE7               	movlw	231
  5925   016C5A                     clear_1:
  5926   016C5A  6AEE               	clrf	postinc0,c
  5927   016C5C  06E8               	decf	wreg,f,c
  5928   016C5E  E1FD               	bnz	clear_1
  5929                           
  5930                           ; Clear objects allocated to BANK6 (80 bytes)
  5931   016C60  EE01  F2AF         	lfsr	0,__pbssBANK6
  5932   016C64  0E50               	movlw	80
  5933   016C66                     clear_2:
  5934   016C66  6AEE               	clrf	postinc0,c
  5935   016C68  06E8               	decf	wreg,f,c
  5936   016C6A  E1FD               	bnz	clear_2
  5937   016C6C                     end_of_initialization:
  5938                           	callstack 0
  5939   016C6C                     __end_of__initialization:
  5940                           	callstack 0
  5941   016C6C  0100               	movlb	0
  5942   016C6E  EF5D  F0A6         	goto	_main	;jump to C main() function
  5943                           
  5944                           	psect	dataCOMRAM
  5945   00055F                     __pdataCOMRAM:
  5946                           	callstack 0
  5947   00055F                     _current_i2c_speed:
  5948                           	callstack 0
  5949   00055F                     	ds	1
  5950                           
  5951                           	psect	bssBANK6
  5952   0006AF                     __pbssBANK6:
  5953                           	callstack 0
  5954   0006AF                     _I2C1_Status:
  5955                           	callstack 0
  5956   0006AF                     	ds	42
  5957   0006D9                     _gyro_offset:
  5958                           	callstack 0
  5959   0006D9                     	ds	12
  5960   0006E5                     _accel_offset:
  5961                           	callstack 0
  5962   0006E5                     	ds	12
  5963   0006F1                     MPU6050_DMP_GetData@yaw_integral:
  5964                           	callstack 0
  5965   0006F1                     	ds	4
  5966   0006F5                     _width:
  5967                           	callstack 0
  5968   0006F5                     	ds	2
  5969   0006F7                     _prec:
  5970                           	callstack 0
  5971   0006F7                     	ds	2
  5972   0006F9                     GetTimestamp_ms@timestamp:
  5973                           	callstack 0
  5974   0006F9                     	ds	2
  5975   0006FB                     MPU6050_DMP_GetData@last_read_time:
  5976                           	callstack 0
  5977   0006FB                     	ds	2
  5978   0006FD                     _flags:
  5979                           	callstack 0
  5980   0006FD                     	ds	1
  5981   0006FE                     _mpu6050_initialized:
  5982                           	callstack 0
  5983   0006FE                     	ds	1
  5984                           
  5985                           	psect	bssBANK7
  5986   000700                     __pbssBANK7:
  5987                           	callstack 0
  5988   000700                     floorf@F521:
  5989                           	callstack 0
  5990   000700                     	ds	4
  5991   000704                     fabsf@F465:
  5992                           	callstack 0
  5993   000704                     	ds	4
  5994   000708                     ___rem_pio2f@F526:
  5995                           	callstack 0
  5996   000708                     	ds	4
  5997   00070C                     ___fpclassifyf@F465:
  5998                           	callstack 0
  5999   00070C                     	ds	4
  6000   000710                     _errno:
  6001                           	callstack 0
  6002   000710                     	ds	2
  6003   000712                     	ds	2
  6004   000714                     _movement_detector:
  6005                           	callstack 0
  6006   000714                     	ds	211
  6007                           
  6008                           	psect	bssBANK8
  6009   000800                     __pbssBANK8:
  6010                           	callstack 0
  6011   000800                     _dbuf:
  6012                           	callstack 0
  6013   000800                     	ds	80
  6014                           
  6015                           	psect	cstackBANK6
  6016   000600                     __pcstackBANK6:
  6017                           	callstack 0
  6018   000600                     MPU6050_DMP_GetData@dt:
  6019                           	callstack 0
  6020                           
  6021                           ; 4 bytes @ 0x0
  6022   000600                     	ds	4
  6023   000604                     _MPU6050_DMP_GetData$3466:
  6024                           	callstack 0
  6025                           
  6026                           ; 4 bytes @ 0x4
  6027   000604                     	ds	4
  6028   000608                     _MPU6050_DMP_GetData$3467:
  6029                           	callstack 0
  6030                           
  6031                           ; 4 bytes @ 0x8
  6032   000608                     	ds	4
  6033   00060C                     _MPU6050_DMP_GetData$3468:
  6034                           	callstack 0
  6035                           
  6036                           ; 4 bytes @ 0xC
  6037   00060C                     	ds	4
  6038   000610                     _MPU6050_DMP_GetData$3478:
  6039                           	callstack 0
  6040                           
  6041                           ; 4 bytes @ 0x10
  6042   000610                     	ds	4
  6043   000614                     _MPU6050_DMP_GetData$3479:
  6044                           	callstack 0
  6045                           
  6046                           ; 4 bytes @ 0x14
  6047   000614                     	ds	4
  6048   000618                     _MPU6050_DMP_GetData$3480:
  6049                           	callstack 0
  6050                           
  6051                           ; 4 bytes @ 0x18
  6052   000618                     	ds	4
  6053   00061C                     _MPU6050_DMP_GetData$3481:
  6054                           	callstack 0
  6055                           
  6056                           ; 4 bytes @ 0x1C
  6057   00061C                     	ds	4
  6058   000620                     _MPU6050_DMP_GetData$3482:
  6059                           	callstack 0
  6060                           
  6061                           ; 4 bytes @ 0x20
  6062   000620                     	ds	4
  6063   000624                     _MPU6050_DMP_GetData$3483:
  6064                           	callstack 0
  6065                           
  6066                           ; 4 bytes @ 0x24
  6067   000624                     	ds	4
  6068   000628                     _MPU6050_DMP_GetData$3465:
  6069                           	callstack 0
  6070                           
  6071                           ; 4 bytes @ 0x28
  6072   000628                     	ds	4
  6073   00062C                     MPU6050_DMP_GetData@current_time:
  6074                           	callstack 0
  6075                           
  6076                           ; 2 bytes @ 0x2C
  6077   00062C                     	ds	2
  6078   00062E                     _MPU6050_DMP_GetData$3469:
  6079                           	callstack 0
  6080                           
  6081                           ; 4 bytes @ 0x2E
  6082   00062E                     	ds	4
  6083   000632                     _MPU6050_DMP_GetData$3470:
  6084                           	callstack 0
  6085                           
  6086                           ; 4 bytes @ 0x32
  6087   000632                     	ds	4
  6088   000636                     _MPU6050_DMP_GetData$3471:
  6089                           	callstack 0
  6090                           
  6091                           ; 4 bytes @ 0x36
  6092   000636                     	ds	4
  6093   00063A                     _MPU6050_DMP_GetData$3472:
  6094                           	callstack 0
  6095                           
  6096                           ; 4 bytes @ 0x3A
  6097   00063A                     	ds	4
  6098   00063E                     _MPU6050_DMP_GetData$3474:
  6099                           	callstack 0
  6100                           
  6101                           ; 4 bytes @ 0x3E
  6102   00063E                     	ds	4
  6103   000642                     _MPU6050_DMP_GetData$3475:
  6104                           	callstack 0
  6105                           
  6106                           ; 4 bytes @ 0x42
  6107   000642                     	ds	4
  6108   000646                     _MPU6050_DMP_GetData$3476:
  6109                           	callstack 0
  6110                           
  6111                           ; 4 bytes @ 0x46
  6112   000646                     	ds	4
  6113   00064A                     _MPU6050_DMP_GetData$3473:
  6114                           	callstack 0
  6115                           
  6116                           ; 4 bytes @ 0x4A
  6117   00064A                     	ds	4
  6118   00064E                     _MPU6050_DMP_GetData$3477:
  6119                           	callstack 0
  6120                           
  6121                           ; 4 bytes @ 0x4E
  6122   00064E                     	ds	4
  6123   000652                     MPU6050_DMP_GetData@roll_rad:
  6124                           	callstack 0
  6125                           
  6126                           ; 4 bytes @ 0x52
  6127   000652                     	ds	4
  6128   000656                     MPU6050_DMP_GetData@pitch_rad:
  6129                           	callstack 0
  6130                           
  6131                           ; 4 bytes @ 0x56
  6132   000656                     	ds	4
  6133   00065A                     MPU6050_DMP_GetData@yaw_rad:
  6134                           	callstack 0
  6135                           
  6136                           ; 4 bytes @ 0x5A
  6137   00065A                     	ds	4
  6138   00065E                     MPU6050_DMP_GetData@sensor_data:
  6139                           	callstack 0
  6140                           
  6141                           ; 43 bytes @ 0x5E
  6142   00065E                     	ds	43
  6143   000689                     ??_main:
  6144                           
  6145                           ; 1 bytes @ 0x89
  6146   000689                     	ds	2
  6147   00068B                     main@buffer1:
  6148                           	callstack 0
  6149                           
  6150                           ; 16 bytes @ 0x8B
  6151   00068B                     	ds	16
  6152   00069B                     main@pitch:
  6153                           	callstack 0
  6154                           
  6155                           ; 4 bytes @ 0x9B
  6156   00069B                     	ds	4
  6157   00069F                     main@roll:
  6158                           	callstack 0
  6159                           
  6160                           ; 4 bytes @ 0x9F
  6161   00069F                     	ds	4
  6162   0006A3                     main@ypr:
  6163                           	callstack 0
  6164                           
  6165                           ; 12 bytes @ 0xA3
  6166   0006A3                     	ds	12
  6167                           
  6168                           	psect	cstackBANK5
  6169   000560                     __pcstackBANK5:
  6170                           	callstack 0
  6171   000560                     ___fldiv@rem:
  6172                           	callstack 0
  6173                           
  6174                           ; 4 bytes @ 0x0
  6175   000560                     	ds	4
  6176   000564                     ___fldiv@sign:
  6177                           	callstack 0
  6178                           
  6179                           ; 1 bytes @ 0x4
  6180   000564                     	ds	1
  6181   000565                     ___fldiv@new_exp:
  6182                           	callstack 0
  6183                           
  6184                           ; 2 bytes @ 0x5
  6185   000565                     	ds	2
  6186   000567                     ___fldiv@grs:
  6187                           	callstack 0
  6188                           
  6189                           ; 4 bytes @ 0x7
  6190   000567                     	ds	4
  6191   00056B                     ___fldiv@bexp:
  6192                           	callstack 0
  6193                           
  6194                           ; 1 bytes @ 0xB
  6195   00056B                     	ds	1
  6196   00056C                     ___fldiv@aexp:
  6197                           	callstack 0
  6198                           
  6199                           ; 1 bytes @ 0xC
  6200   00056C                     	ds	1
  6201   00056D                     ?_fabsf:
  6202                           	callstack 0
  6203   00056D                     ?___flsub:
  6204                           	callstack 0
  6205   00056D                     ?_floorf:
  6206                           	callstack 0
  6207   00056D                     ___flsub@b:
  6208                           	callstack 0
  6209   00056D                     fabsf@x:
  6210                           	callstack 0
  6211   00056D                     floorf@x:
  6212                           	callstack 0
  6213                           
  6214                           ; 4 bytes @ 0xD
  6215   00056D                     	ds	4
  6216   000571                     ___flsub@a:
  6217                           	callstack 0
  6218   000571                     fabsf@u:
  6219                           	callstack 0
  6220   000571                     ??_floorf:
  6221                           
  6222                           ; 1 bytes @ 0x11
  6223   000571                     	ds	4
  6224   000575                     ?___rem_pio2f:
  6225                           	callstack 0
  6226   000575                     ?_atanf:
  6227                           	callstack 0
  6228   000575                     ?___sindf:
  6229                           	callstack 0
  6230   000575                     atanf@x:
  6231                           	callstack 0
  6232   000575                     ___rem_pio2f@x:
  6233                           	callstack 0
  6234   000575                     ___sindf@x:
  6235                           	callstack 0
  6236                           
  6237                           ; 4 bytes @ 0x15
  6238   000575                     	ds	2
  6239   000577                     floorf@m:
  6240                           	callstack 0
  6241                           
  6242                           ; 4 bytes @ 0x17
  6243   000577                     	ds	2
  6244   000579                     ___rem_pio2f@y:
  6245                           	callstack 0
  6246   000579                     ___sindf@r:
  6247                           	callstack 0
  6248   000579                     _atanf$3493:
  6249                           	callstack 0
  6250                           
  6251                           ; 4 bytes @ 0x19
  6252   000579                     	ds	2
  6253   00057B                     floorf@e:
  6254                           	callstack 0
  6255   00057B                     ??___rem_pio2f:
  6256                           
  6257                           ; 1 bytes @ 0x1B
  6258   00057B                     	ds	2
  6259   00057D                     ___rem_pio2f@ty:
  6260                           	callstack 0
  6261   00057D                     ___sindf@w:
  6262                           	callstack 0
  6263   00057D                     floorf@u:
  6264                           	callstack 0
  6265   00057D                     _atanf$3495:
  6266                           	callstack 0
  6267                           
  6268                           ; 4 bytes @ 0x1D
  6269   00057D                     	ds	4
  6270   000581                     efgtoa@fp:
  6271                           	callstack 0
  6272   000581                     _atanf$3496:
  6273                           	callstack 0
  6274   000581                     ___rem_pio2f$3501:
  6275                           	callstack 0
  6276   000581                     ___sindf$3502:
  6277                           	callstack 0
  6278                           
  6279                           ; 4 bytes @ 0x21
  6280   000581                     	ds	2
  6281   000583                     efgtoa@f:
  6282                           	callstack 0
  6283                           
  6284                           ; 4 bytes @ 0x23
  6285   000583                     	ds	2
  6286   000585                     ___rem_pio2f@sign:
  6287                           	callstack 0
  6288   000585                     atanf@s1:
  6289                           	callstack 0
  6290   000585                     ___sindf$3503:
  6291                           	callstack 0
  6292                           
  6293                           ; 4 bytes @ 0x25
  6294   000585                     	ds	1
  6295   000586                     ___rem_pio2f@ux:
  6296                           	callstack 0
  6297                           
  6298                           ; 4 bytes @ 0x26
  6299   000586                     	ds	1
  6300   000587                     efgtoa@c:
  6301                           	callstack 0
  6302                           
  6303                           ; 1 bytes @ 0x27
  6304   000587                     	ds	1
  6305   000588                     ??_efgtoa:
  6306                           
  6307                           ; 1 bytes @ 0x28
  6308   000588                     	ds	1
  6309   000589                     atanf@s2:
  6310                           	callstack 0
  6311   000589                     ___sindf$3504:
  6312                           	callstack 0
  6313                           
  6314                           ; 4 bytes @ 0x29
  6315   000589                     	ds	1
  6316   00058A                     efgtoa@ne:
  6317                           	callstack 0
  6318   00058A                     ___rem_pio2f@fn:
  6319                           	callstack 0
  6320                           
  6321                           ; 4 bytes @ 0x2A
  6322   00058A                     	ds	2
  6323   00058C                     efgtoa@p:
  6324                           	callstack 0
  6325                           
  6326                           ; 2 bytes @ 0x2C
  6327   00058C                     	ds	1
  6328   00058D                     ___sindf@s:
  6329                           	callstack 0
  6330   00058D                     _atanf$3492:
  6331                           	callstack 0
  6332                           
  6333                           ; 4 bytes @ 0x2D
  6334   00058D                     	ds	1
  6335   00058E                     efgtoa@t:
  6336                           	callstack 0
  6337   00058E                     ___rem_pio2f@t:
  6338                           	callstack 0
  6339                           
  6340                           ; 4 bytes @ 0x2E
  6341   00058E                     	ds	2
  6342   000590                     _efgtoa$2955:
  6343                           	callstack 0
  6344                           
  6345                           ; 2 bytes @ 0x30
  6346   000590                     	ds	1
  6347   000591                     ___sindf@z:
  6348                           	callstack 0
  6349   000591                     _atanf$3494:
  6350                           	callstack 0
  6351                           
  6352                           ; 4 bytes @ 0x31
  6353   000591                     	ds	1
  6354   000592                     efgtoa@pp:
  6355                           	callstack 0
  6356   000592                     ___rem_pio2f@n:
  6357                           	callstack 0
  6358                           
  6359                           ; 4 bytes @ 0x32
  6360   000592                     	ds	1
  6361   000593                     efgtoa@mode:
  6362                           	callstack 0
  6363                           
  6364                           ; 1 bytes @ 0x33
  6365   000593                     	ds	1
  6366   000594                     efgtoa@nmode:
  6367                           	callstack 0
  6368                           
  6369                           ; 1 bytes @ 0x34
  6370   000594                     	ds	1
  6371   000595                     atanf@sign:
  6372                           	callstack 0
  6373   000595                     efgtoa@d:
  6374                           	callstack 0
  6375                           
  6376                           ; 2 bytes @ 0x35
  6377   000595                     	ds	1
  6378   000596                     ?_cosf:
  6379                           	callstack 0
  6380   000596                     ?_sinf:
  6381                           	callstack 0
  6382   000596                     atanf@w:
  6383                           	callstack 0
  6384   000596                     cosf@x:
  6385                           	callstack 0
  6386   000596                     sinf@x:
  6387                           	callstack 0
  6388                           
  6389                           ; 4 bytes @ 0x36
  6390   000596                     	ds	1
  6391   000597                     efgtoa@m:
  6392                           	callstack 0
  6393                           
  6394                           ; 2 bytes @ 0x37
  6395   000597                     	ds	2
  6396   000599                     efgtoa@e:
  6397                           	callstack 0
  6398                           
  6399                           ; 2 bytes @ 0x39
  6400   000599                     	ds	1
  6401   00059A                     atanf@id:
  6402                           	callstack 0
  6403   00059A                     _cosf$2780:
  6404                           	callstack 0
  6405   00059A                     _sinf$3068:
  6406                           	callstack 0
  6407                           
  6408                           ; 4 bytes @ 0x3A
  6409   00059A                     	ds	1
  6410   00059B                     efgtoa@w:
  6411                           	callstack 0
  6412   00059B                     atanf@z:
  6413                           	callstack 0
  6414                           
  6415                           ; 4 bytes @ 0x3B
  6416   00059B                     	ds	2
  6417   00059D                     efgtoa@ou:
  6418                           	callstack 0
  6419                           
  6420                           ; 4 bytes @ 0x3D
  6421   00059D                     	ds	1
  6422   00059E                     _cosf$2781:
  6423                           	callstack 0
  6424   00059E                     _sinf$3069:
  6425                           	callstack 0
  6426                           
  6427                           ; 4 bytes @ 0x3E
  6428   00059E                     	ds	1
  6429   00059F                     atanf@ix:
  6430                           	callstack 0
  6431                           
  6432                           ; 4 bytes @ 0x3F
  6433   00059F                     	ds	2
  6434   0005A1                     efgtoa@i:
  6435                           	callstack 0
  6436                           
  6437                           ; 2 bytes @ 0x41
  6438   0005A1                     	ds	1
  6439   0005A2                     cosf@n:
  6440                           	callstack 0
  6441   0005A2                     sinf@n:
  6442                           	callstack 0
  6443                           
  6444                           ; 1 bytes @ 0x42
  6445   0005A2                     	ds	1
  6446   0005A3                     ?_atan2f:
  6447                           	callstack 0
  6448   0005A3                     sinf@sign:
  6449                           	callstack 0
  6450   0005A3                     atan2f@y:
  6451                           	callstack 0
  6452   0005A3                     efgtoa@h:
  6453                           	callstack 0
  6454   0005A3                     _cosf$3497:
  6455                           	callstack 0
  6456                           
  6457                           ; 4 bytes @ 0x43
  6458   0005A3                     	ds	1
  6459   0005A4                     _sinf$3505:
  6460                           	callstack 0
  6461                           
  6462                           ; 4 bytes @ 0x44
  6463   0005A4                     	ds	3
  6464   0005A7                     cosf@sign:
  6465                           	callstack 0
  6466   0005A7                     atan2f@x:
  6467                           	callstack 0
  6468   0005A7                     efgtoa@l:
  6469                           	callstack 0
  6470                           
  6471                           ; 4 bytes @ 0x47
  6472   0005A7                     	ds	1
  6473   0005A8                     cosf@y:
  6474                           	callstack 0
  6475   0005A8                     sinf@y:
  6476                           	callstack 0
  6477                           
  6478                           ; 4 bytes @ 0x48
  6479   0005A8                     	ds	3
  6480   0005AB                     efgtoa@sign:
  6481                           	callstack 0
  6482   0005AB                     ??_atan2f:
  6483                           
  6484                           ; 1 bytes @ 0x4B
  6485   0005AB                     	ds	1
  6486   0005AC                     efgtoa@n:
  6487                           	callstack 0
  6488   0005AC                     cosf@ix:
  6489                           	callstack 0
  6490   0005AC                     sinf@ux:
  6491                           	callstack 0
  6492                           
  6493                           ; 4 bytes @ 0x4C
  6494   0005AC                     	ds	2
  6495   0005AE                     efgtoa@g:
  6496                           	callstack 0
  6497                           
  6498                           ; 4 bytes @ 0x4E
  6499   0005AE                     	ds	4
  6500   0005B2                     efgtoa@u:
  6501                           	callstack 0
  6502                           
  6503                           ; 4 bytes @ 0x52
  6504   0005B2                     	ds	1
  6505   0005B3                     _atan2f$3489:
  6506                           	callstack 0
  6507                           
  6508                           ; 4 bytes @ 0x53
  6509   0005B3                     	ds	3
  6510   0005B6                     vfpfcnvrt@fp:
  6511                           	callstack 0
  6512                           
  6513                           ; 2 bytes @ 0x56
  6514   0005B6                     	ds	1
  6515   0005B7                     _atan2f$3490:
  6516                           	callstack 0
  6517                           
  6518                           ; 4 bytes @ 0x57
  6519   0005B7                     	ds	1
  6520   0005B8                     vfpfcnvrt@fmt:
  6521                           	callstack 0
  6522                           
  6523                           ; 2 bytes @ 0x58
  6524   0005B8                     	ds	2
  6525   0005BA                     vfpfcnvrt@ap:
  6526                           	callstack 0
  6527                           
  6528                           ; 2 bytes @ 0x5A
  6529   0005BA                     	ds	1
  6530   0005BB                     _atan2f$3491:
  6531                           	callstack 0
  6532                           
  6533                           ; 4 bytes @ 0x5B
  6534   0005BB                     	ds	1
  6535   0005BC                     ??_vfpfcnvrt:
  6536                           
  6537                           ; 1 bytes @ 0x5C
  6538   0005BC                     	ds	2
  6539   0005BE                     vfpfcnvrt@convarg:
  6540                           	callstack 0
  6541                           
  6542                           ; 4 bytes @ 0x5E
  6543   0005BE                     	ds	1
  6544   0005BF                     atan2f@z:
  6545                           	callstack 0
  6546                           
  6547                           ; 4 bytes @ 0x5F
  6548   0005BF                     	ds	3
  6549   0005C2                     vfpfcnvrt@c:
  6550                           	callstack 0
  6551                           
  6552                           ; 1 bytes @ 0x62
  6553   0005C2                     	ds	1
  6554   0005C3                     vfpfcnvrt@cp:
  6555                           	callstack 0
  6556   0005C3                     atan2f@ix:
  6557                           	callstack 0
  6558                           
  6559                           ; 4 bytes @ 0x63
  6560   0005C3                     	ds	2
  6561   0005C5                     ?_vfprintf:
  6562                           	callstack 0
  6563   0005C5                     vfprintf@fp:
  6564                           	callstack 0
  6565                           
  6566                           ; 2 bytes @ 0x65
  6567   0005C5                     	ds	2
  6568   0005C7                     vfprintf@fmt:
  6569                           	callstack 0
  6570   0005C7                     atan2f@iy:
  6571                           	callstack 0
  6572                           
  6573                           ; 4 bytes @ 0x67
  6574   0005C7                     	ds	2
  6575   0005C9                     vfprintf@ap:
  6576                           	callstack 0
  6577                           
  6578                           ; 2 bytes @ 0x69
  6579   0005C9                     	ds	2
  6580   0005CB                     atan2f@m:
  6581                           	callstack 0
  6582   0005CB                     vfprintf@cfmt:
  6583                           	callstack 0
  6584                           
  6585                           ; 2 bytes @ 0x6B
  6586   0005CB                     	ds	1
  6587   0005CC                     MPU6050_ReadAll@data:
  6588                           	callstack 0
  6589                           
  6590                           ; 2 bytes @ 0x6C
  6591   0005CC                     	ds	1
  6592   0005CD                     ?_sprintf:
  6593                           	callstack 0
  6594   0005CD                     sprintf@s:
  6595                           	callstack 0
  6596                           
  6597                           ; 2 bytes @ 0x6D
  6598   0005CD                     	ds	1
  6599   0005CE                     _MPU6050_ReadAll$3485:
  6600                           	callstack 0
  6601                           
  6602                           ; 4 bytes @ 0x6E
  6603   0005CE                     	ds	1
  6604   0005CF                     sprintf@fmt:
  6605                           	callstack 0
  6606                           
  6607                           ; 2 bytes @ 0x6F
  6608   0005CF                     	ds	3
  6609   0005D2                     _MPU6050_ReadAll$3486:
  6610                           	callstack 0
  6611                           
  6612                           ; 4 bytes @ 0x72
  6613   0005D2                     	ds	4
  6614   0005D6                     _MPU6050_ReadAll$3487:
  6615                           	callstack 0
  6616                           
  6617                           ; 4 bytes @ 0x76
  6618   0005D6                     	ds	3
  6619   0005D9                     sprintf@ap:
  6620                           	callstack 0
  6621                           
  6622                           ; 2 bytes @ 0x79
  6623   0005D9                     	ds	1
  6624   0005DA                     MPU6050_ReadAll@raw_data:
  6625                           	callstack 0
  6626                           
  6627                           ; 14 bytes @ 0x7A
  6628   0005DA                     	ds	1
  6629   0005DB                     sprintf@f:
  6630                           	callstack 0
  6631                           
  6632                           ; 11 bytes @ 0x7B
  6633   0005DB                     	ds	13
  6634   0005E8                     MPU6050_ReadAll@raw_ax:
  6635                           	callstack 0
  6636                           
  6637                           ; 2 bytes @ 0x88
  6638   0005E8                     	ds	2
  6639   0005EA                     MPU6050_ReadAll@raw_ay:
  6640                           	callstack 0
  6641                           
  6642                           ; 2 bytes @ 0x8A
  6643   0005EA                     	ds	2
  6644   0005EC                     MPU6050_ReadAll@raw_az:
  6645                           	callstack 0
  6646                           
  6647                           ; 2 bytes @ 0x8C
  6648   0005EC                     	ds	2
  6649   0005EE                     MPU6050_ReadAll@raw_temp:
  6650                           	callstack 0
  6651                           
  6652                           ; 2 bytes @ 0x8E
  6653   0005EE                     	ds	2
  6654   0005F0                     MPU6050_ReadAll@raw_gx:
  6655                           	callstack 0
  6656                           
  6657                           ; 2 bytes @ 0x90
  6658   0005F0                     	ds	2
  6659   0005F2                     MPU6050_ReadAll@raw_gy:
  6660                           	callstack 0
  6661                           
  6662                           ; 2 bytes @ 0x92
  6663   0005F2                     	ds	2
  6664   0005F4                     MPU6050_ReadAll@raw_gz:
  6665                           	callstack 0
  6666                           
  6667                           ; 2 bytes @ 0x94
  6668   0005F4                     	ds	2
  6669   0005F6                     _MPU6050_ReadAll$3484:
  6670                           	callstack 0
  6671                           
  6672                           ; 4 bytes @ 0x96
  6673   0005F6                     	ds	4
  6674   0005FA                     MPU6050_DMP_GetData@ypr:
  6675                           	callstack 0
  6676                           
  6677                           ; 2 bytes @ 0x9A
  6678   0005FA                     	ds	2
  6679   0005FC                     MPU6050_DMP_GetData@quat:
  6680                           	callstack 0
  6681                           
  6682                           ; 2 bytes @ 0x9C
  6683   0005FC                     	ds	2
  6684   0005FE                     ??_MPU6050_DMP_GetData:
  6685                           
  6686                           ; 1 bytes @ 0x9E
  6687   0005FE                     	ds	2
  6688                           
  6689                           	psect	cstackCOMRAM
  6690   000501                     __pcstackCOMRAM:
  6691                           	callstack 0
  6692   000501                     ?_GetTimestamp_ms:
  6693                           	callstack 0
  6694   000501                     ?_MPU6050_CombineBytes:
  6695                           	callstack 0
  6696   000501                     ?___fpclassifyf:
  6697                           	callstack 0
  6698   000501                     ?_read_prec_or_width:
  6699                           	callstack 0
  6700   000501                     ?_labs:
  6701                           	callstack 0
  6702   000501                     ?___flneg:
  6703                           	callstack 0
  6704   000501                     ?___xxtofl:
  6705                           	callstack 0
  6706   000501                     MPU6050_CombineBytes@low:
  6707                           	callstack 0
  6708   000501                     _SW_I2C_IsBusFree$1645:
  6709                           	callstack 0
  6710   000501                     ENVIA_NIBBLE@dato:
  6711                           	callstack 0
  6712   000501                     LEER_LCD@aux:
  6713                           	callstack 0
  6714   000501                     MovingAverage_Reset@filter:
  6715                           	callstack 0
  6716   000501                     read_prec_or_width@fmt:
  6717                           	callstack 0
  6718   000501                     memcpy@d1:
  6719                           	callstack 0
  6720   000501                     fputc@c:
  6721                           	callstack 0
  6722   000501                     strcpy@dest:
  6723                           	callstack 0
  6724   000501                     ___fleq@ff1:
  6725                           	callstack 0
  6726   000501                     ___flneg@f1:
  6727                           	callstack 0
  6728   000501                     ___xxtofl@val:
  6729                           	callstack 0
  6730   000501                     ___fpclassifyf@x:
  6731                           	callstack 0
  6732   000501                     labs@a:
  6733                           	callstack 0
  6734   000501                     ??_SW_I2C_SendAck:
  6735   000501                     ??_SW_I2C_SendNack:
  6736   000501                     ??_SW_I2C_Stop:
  6737   000501                     ??_SW_I2C_WriteByte:
  6738                           
  6739                           ; 1 bytes @ 0x0
  6740   000501                     	ds	1
  6741   000502                     ENVIA_CHAR@dato:
  6742                           	callstack 0
  6743   000502                     ENVIA_LCD_CMD@dato:
  6744                           	callstack 0
  6745   000502                     ??_SW_I2C_Start:
  6746                           
  6747                           ; 1 bytes @ 0x1
  6748   000502                     	ds	1
  6749   000503                     SW_I2C_WriteByte@data:
  6750                           	callstack 0
  6751   000503                     ENVIA_CHAR@aux:
  6752                           	callstack 0
  6753   000503                     ENVIA_LCD_CMD@aux:
  6754                           	callstack 0
  6755   000503                     read_prec_or_width@ap:
  6756                           	callstack 0
  6757   000503                     memcpy@s1:
  6758                           	callstack 0
  6759   000503                     fputc@fp:
  6760                           	callstack 0
  6761   000503                     strcpy@src:
  6762                           	callstack 0
  6763   000503                     ??_MPU6050_CombineBytes:
  6764   000503                     ??_MovingAverage_Reset:
  6765   000503                     ??_SW_I2C_ReadByte:
  6766                           
  6767                           ; 1 bytes @ 0x2
  6768   000503                     	ds	1
  6769   000504                     SW_I2C_WriteByte@ack:
  6770                           	callstack 0
  6771   000504                     POS_CURSOR@columna:
  6772                           	callstack 0
  6773   000504                     CURSOR_ONOFF@estado:
  6774                           	callstack 0
  6775   000504                     ESCRIBE_MENSAJE@cadena:
  6776                           	callstack 0
  6777   000504                     ??_LCD_CONFIG:
  6778                           
  6779                           ; 1 bytes @ 0x3
  6780   000504                     	ds	1
  6781   000505                     ?___flmul:
  6782                           	callstack 0
  6783   000505                     MPU6050_CombineBytes@high:
  6784                           	callstack 0
  6785   000505                     MovingAverage_Reset@i:
  6786                           	callstack 0
  6787   000505                     SW_I2C_WriteByte@i:
  6788                           	callstack 0
  6789   000505                     SW_I2C_ReadByte@ack:
  6790                           	callstack 0
  6791   000505                     POS_CURSOR@fila:
  6792                           	callstack 0
  6793   000505                     memcpy@n:
  6794                           	callstack 0
  6795   000505                     strcpy@d:
  6796                           	callstack 0
  6797   000505                     ___fleq@ff2:
  6798                           	callstack 0
  6799   000505                     ___flmul@b:
  6800                           	callstack 0
  6801   000505                     ??_LCD_init:
  6802   000505                     ??___fpclassifyf:
  6803   000505                     ??_fputc:
  6804   000505                     ??_labs:
  6805   000505                     ??___xxtofl:
  6806   000505                     ??_read_prec_or_width:
  6807                           
  6808                           ; 1 bytes @ 0x4
  6809   000505                     	ds	1
  6810   000506                     SW_I2C_ReadByte@data:
  6811                           	callstack 0
  6812   000506                     SW_I2C_WriteRegister@reg_addr:
  6813                           	callstack 0
  6814   000506                     ESCRIBE_MENSAJE@tam:
  6815                           	callstack 0
  6816   000506                     
  6817                           ; 1 bytes @ 0x5
  6818   000506                     	ds	1
  6819   000507                     SW_I2C_ReadByte@i:
  6820                           	callstack 0
  6821   000507                     SW_I2C_WriteRegister@data:
  6822                           	callstack 0
  6823   000507                     read_prec_or_width@c:
  6824                           	callstack 0
  6825   000507                     memcpy@d:
  6826                           	callstack 0
  6827   000507                     ??_ESCRIBE_MENSAJE:
  6828                           
  6829                           ; 1 bytes @ 0x6
  6830   000507                     	ds	1
  6831   000508                     SW_I2C_WriteRegister@device_addr:
  6832                           	callstack 0
  6833   000508                     SW_I2C_ReadRegister@reg_addr:
  6834                           	callstack 0
  6835   000508                     SW_I2C_ReadBlock@reg_addr:
  6836                           	callstack 0
  6837   000508                     read_prec_or_width@n:
  6838                           	callstack 0
  6839   000508                     
  6840                           ; 1 bytes @ 0x7
  6841   000508                     	ds	1
  6842   000509                     SW_I2C_WriteRegister@result:
  6843                           	callstack 0
  6844   000509                     SW_I2C_ReadRegister@data:
  6845                           	callstack 0
  6846   000509                     ESCRIBE_MENSAJE@i:
  6847                           	callstack 0
  6848   000509                     ___xxtofl@sign:
  6849                           	callstack 0
  6850   000509                     SW_I2C_ReadBlock@data:
  6851                           	callstack 0
  6852   000509                     ___fpclassifyf@e:
  6853                           	callstack 0
  6854   000509                     memcpy@s:
  6855                           	callstack 0
  6856   000509                     ___flmul@a:
  6857                           	callstack 0
  6858   000509                     ??___fleq:
  6859                           
  6860                           ; 1 bytes @ 0x8
  6861   000509                     	ds	1
  6862   00050A                     MPU6050_WriteRegister@data:
  6863                           	callstack 0
  6864   00050A                     SW_I2C_ReadRegister@device_addr:
  6865                           	callstack 0
  6866   00050A                     ___xxtofl@exp:
  6867                           	callstack 0
  6868   00050A                     fputs@s:
  6869                           	callstack 0
  6870                           
  6871                           ; 2 bytes @ 0x9
  6872   00050A                     	ds	1
  6873   00050B                     MPU6050_WriteRegister@reg:
  6874                           	callstack 0
  6875   00050B                     SW_I2C_ReadRegister@result:
  6876                           	callstack 0
  6877   00050B                     SW_I2C_ReadBlock@length:
  6878                           	callstack 0
  6879   00050B                     memcpy@tmp:
  6880                           	callstack 0
  6881   00050B                     ___xxtofl@arg:
  6882                           	callstack 0
  6883   00050B                     ___fpclassifyf@u:
  6884                           	callstack 0
  6885   00050B                     
  6886                           ; 1 bytes @ 0xA
  6887   00050B                     	ds	1
  6888   00050C                     MPU6050_ReadRegister@reg:
  6889                           	callstack 0
  6890   00050C                     fputs@fp:
  6891                           	callstack 0
  6892   00050C                     ??_SW_I2C_ReadBlock:
  6893                           
  6894                           ; 1 bytes @ 0xB
  6895   00050C                     	ds	1
  6896   00050D                     MPU6050_TestConnection@who_am_i:
  6897                           	callstack 0
  6898   00050D                     ??___flmul:
  6899                           
  6900                           ; 1 bytes @ 0xC
  6901   00050D                     	ds	1
  6902   00050E                     fputs@c:
  6903                           	callstack 0
  6904   00050E                     ??_MPU6050_Init:
  6905                           
  6906                           ; 1 bytes @ 0xD
  6907   00050E                     	ds	1
  6908   00050F                     fputs@i:
  6909                           	callstack 0
  6910                           
  6911                           ; 2 bytes @ 0xE
  6912   00050F                     	ds	1
  6913   000510                     SW_I2C_ReadBlock@device_addr:
  6914                           	callstack 0
  6915   000510                     
  6916                           ; 1 bytes @ 0xF
  6917   000510                     	ds	1
  6918   000511                     SW_I2C_ReadBlock@i:
  6919                           	callstack 0
  6920   000511                     ___flmul@sign:
  6921                           	callstack 0
  6922   000511                     pad@fp:
  6923                           	callstack 0
  6924                           
  6925                           ; 2 bytes @ 0x10
  6926   000511                     	ds	1
  6927   000512                     SW_I2C_ReadBlock@result:
  6928                           	callstack 0
  6929   000512                     ___flmul@grs:
  6930                           	callstack 0
  6931                           
  6932                           ; 4 bytes @ 0x11
  6933   000512                     	ds	1
  6934   000513                     MPU6050_ReadRegisters@data:
  6935                           	callstack 0
  6936   000513                     pad@buf:
  6937                           	callstack 0
  6938                           
  6939                           ; 2 bytes @ 0x12
  6940   000513                     	ds	2
  6941   000515                     MPU6050_ReadRegisters@length:
  6942                           	callstack 0
  6943   000515                     pad@p:
  6944                           	callstack 0
  6945                           
  6946                           ; 2 bytes @ 0x14
  6947   000515                     	ds	1
  6948   000516                     MPU6050_ReadRegisters@reg:
  6949                           	callstack 0
  6950   000516                     ___flmul@aexp:
  6951                           	callstack 0
  6952   000516                     
  6953                           ; 1 bytes @ 0x15
  6954   000516                     	ds	1
  6955   000517                     ___flmul@bexp:
  6956                           	callstack 0
  6957   000517                     ??_pad:
  6958                           
  6959                           ; 1 bytes @ 0x16
  6960   000517                     	ds	1
  6961   000518                     pad@i:
  6962                           	callstack 0
  6963   000518                     ___flmul@prod:
  6964                           	callstack 0
  6965                           
  6966                           ; 4 bytes @ 0x17
  6967   000518                     	ds	4
  6968   00051C                     ___flmul@temp:
  6969                           	callstack 0
  6970                           
  6971                           ; 2 bytes @ 0x1B
  6972   00051C                     	ds	2
  6973   00051E                     ?___fladd:
  6974                           	callstack 0
  6975   00051E                     ___flge@ff1:
  6976                           	callstack 0
  6977   00051E                     ___fladd@b:
  6978                           	callstack 0
  6979                           
  6980                           ; 4 bytes @ 0x1D
  6981   00051E                     	ds	4
  6982   000522                     ___flge@ff2:
  6983                           	callstack 0
  6984   000522                     ___fladd@a:
  6985                           	callstack 0
  6986                           
  6987                           ; 4 bytes @ 0x21
  6988   000522                     	ds	4
  6989   000526                     ??___fladd:
  6990   000526                     ??___flge:
  6991                           
  6992                           ; 1 bytes @ 0x25
  6993   000526                     	ds	4
  6994   00052A                     ___fladd@signs:
  6995                           	callstack 0
  6996                           
  6997                           ; 1 bytes @ 0x29
  6998   00052A                     	ds	1
  6999   00052B                     ___fladd@aexp:
  7000                           	callstack 0
  7001                           
  7002                           ; 1 bytes @ 0x2A
  7003   00052B                     	ds	1
  7004   00052C                     ___fladd@bexp:
  7005                           	callstack 0
  7006                           
  7007                           ; 1 bytes @ 0x2B
  7008   00052C                     	ds	1
  7009   00052D                     ___fladd@grs:
  7010                           	callstack 0
  7011                           
  7012                           ; 1 bytes @ 0x2C
  7013   00052D                     	ds	1
  7014   00052E                     ?_sqrtf:
  7015                           	callstack 0
  7016   00052E                     ?___cosdf:
  7017                           	callstack 0
  7018   00052E                     ?___fltol:
  7019                           	callstack 0
  7020   00052E                     ___fltol@f1:
  7021                           	callstack 0
  7022   00052E                     ___cosdf@x:
  7023                           	callstack 0
  7024   00052E                     sqrtf@x:
  7025                           	callstack 0
  7026                           
  7027                           ; 4 bytes @ 0x2D
  7028   00052E                     	ds	4
  7029   000532                     ___cosdf@r:
  7030                           	callstack 0
  7031   000532                     ??_sqrtf:
  7032   000532                     ??___fltol:
  7033                           
  7034                           ; 1 bytes @ 0x31
  7035   000532                     	ds	4
  7036   000536                     ___fltol@sign1:
  7037                           	callstack 0
  7038   000536                     ___cosdf$3498:
  7039                           	callstack 0
  7040                           
  7041                           ; 4 bytes @ 0x35
  7042   000536                     	ds	1
  7043   000537                     ___fltol@exp1:
  7044                           	callstack 0
  7045   000537                     sqrtf@s:
  7046                           	callstack 0
  7047                           
  7048                           ; 4 bytes @ 0x36
  7049   000537                     	ds	3
  7050   00053A                     ___cosdf$3499:
  7051                           	callstack 0
  7052                           
  7053                           ; 4 bytes @ 0x39
  7054   00053A                     	ds	1
  7055   00053B                     sqrtf@i:
  7056                           	callstack 0
  7057                           
  7058                           ; 4 bytes @ 0x3A
  7059   00053B                     	ds	3
  7060   00053E                     ___cosdf$3500:
  7061                           	callstack 0
  7062                           
  7063                           ; 4 bytes @ 0x3D
  7064   00053E                     	ds	1
  7065   00053F                     sqrtf@q:
  7066                           	callstack 0
  7067                           
  7068                           ; 4 bytes @ 0x3E
  7069   00053F                     	ds	3
  7070   000542                     ___cosdf@w:
  7071                           	callstack 0
  7072                           
  7073                           ; 4 bytes @ 0x41
  7074   000542                     	ds	1
  7075   000543                     sqrtf@t:
  7076                           	callstack 0
  7077                           
  7078                           ; 4 bytes @ 0x42
  7079   000543                     	ds	3
  7080   000546                     ___cosdf@z:
  7081                           	callstack 0
  7082                           
  7083                           ; 4 bytes @ 0x45
  7084   000546                     	ds	1
  7085   000547                     sqrtf@m:
  7086                           	callstack 0
  7087                           
  7088                           ; 4 bytes @ 0x46
  7089   000547                     	ds	4
  7090   00054B                     sqrtf@r:
  7091                           	callstack 0
  7092                           
  7093                           ; 4 bytes @ 0x4A
  7094   00054B                     	ds	4
  7095   00054F                     sqrtf@ix:
  7096                           	callstack 0
  7097                           
  7098                           ; 4 bytes @ 0x4E
  7099   00054F                     	ds	4
  7100   000553                     ?___fldiv:
  7101                           	callstack 0
  7102   000553                     ___fldiv@b:
  7103                           	callstack 0
  7104                           
  7105                           ; 4 bytes @ 0x52
  7106   000553                     	ds	4
  7107   000557                     ___fldiv@a:
  7108                           	callstack 0
  7109                           
  7110                           ; 4 bytes @ 0x56
  7111   000557                     	ds	4
  7112   00055B                     ??___fldiv:
  7113                           
  7114                           ; 1 bytes @ 0x5A
  7115   00055B                     	ds	4
  7116   00055F                     
  7117                           ; 1 bytes @ 0x5E
  7118 ;;
  7119 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7120 ;;
  7121 ;; *************** function _main *****************
  7122 ;; Defined at:
  7123 ;;		line 16 in file "p_final.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;		None
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;  buffer1        16  139[BANK6 ] unsigned char [16]
  7128 ;;  roll            4  159[BANK6 ] float 
  7129 ;;  pitch           4  155[BANK6 ] float 
  7130 ;;  abs_roll        4    0        float 
  7131 ;;  abs_pitch       4    0        float 
  7132 ;;  ypr            12  163[BANK6 ] struct .
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  1    wreg      void 
  7135 ;; Registers used:
  7136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7143 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7144 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7145 ;;      Totals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7146 ;;Total ram usage:       38 bytes
  7147 ;; Hardware stack levels required when called: 8
  7148 ;; This function calls:
  7149 ;;		_BORRAR_LCD
  7150 ;;		_ESCRIBE_MENSAJE
  7151 ;;		_I2C1_Initialize
  7152 ;;		_LCD_init
  7153 ;;		_MPU6050_DMP_GetData
  7154 ;;		_MPU6050_DMP_Init
  7155 ;;		_POS_CURSOR
  7156 ;;		___flge
  7157 ;;		___flneg
  7158 ;;		_configuro
  7159 ;;		_fabsf
  7160 ;;		_sprintf
  7161 ;; This function is called by:
  7162 ;;		Startup code after reset
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text0
  7167   014CBA                     __ptext0:
  7168                           	callstack 0
  7169   014CBA                     _main:
  7170                           	callstack 119
  7171   014CBA                     
  7172                           ;p_final.c: 17:     VectorFloat_t ypr;;p_final.c: 19:     configuro();
  7173   014CBA  EC41  F0B7         	call	_configuro	;wreg free
  7174   014CBE                     
  7175                           ;p_final.c: 20:     LCD_init();
  7176   014CBE  EC08  F0B7         	call	_LCD_init	;wreg free
  7177   014CC2                     
  7178                           ;p_final.c: 22:     I2C1_Initialize();
  7179   014CC2  EC4F  F0B7         	call	_I2C1_Initialize	;wreg free
  7180   014CC6                     
  7181                           ;p_final.c: 23:     MPU6050_DMP_Init();
  7182   014CC6  EC78  F0B7         	call	_MPU6050_DMP_Init	;wreg free
  7183   014CCA                     
  7184                           ;p_final.c: 25:     ESCRIBE_MENSAJE("MPU OK", 6);
  7185   014CCA  0ED9               	movlw	low STR_13
  7186   014CCC  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  7187   014CCE  0EFF               	movlw	high STR_13
  7188   014CD0  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
  7189   014CD2  0E06               	movlw	6
  7190   014CD4  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  7191   014CD6  ECAD  F0B5         	call	_ESCRIBE_MENSAJE	;wreg free
  7192   014CDA                     
  7193                           ;p_final.c: 26:     _delay((unsigned long)((1000)*(64000000UL/4000.0)));
  7194   014CDA  0E52               	movlw	82
  7195   014CDC  0106               	movlb	6	; () banked
  7196   014CDE  6F8A               	movwf	(??_main+1)& (0+255),b
  7197   014CE0  0E2B               	movlw	43
  7198   014CE2  6F89               	movwf	??_main& (0+255),b
  7199   014CE4  0E00               	movlw	0
  7200   014CE6                     u8887:
  7201   014CE6  2EE8               	decfsz	wreg,f,c
  7202   014CE8  D7FE               	bra	u8887
  7203   014CEA  2F89               	decfsz	??_main& (0+255),f,b
  7204   014CEC  D7FC               	bra	u8887
  7205   014CEE  2F8A               	decfsz	(??_main+1)& (0+255),f,b
  7206   014CF0  D7FA               	bra	u8887
  7207   014CF2  0000               	nop	
  7208   014CF4                     
  7209                           ;p_final.c: 27:     BORRAR_LCD();
  7210   014CF4  ECA0  F0B7         	call	_BORRAR_LCD	;wreg free
  7211   014CF8                     l10745:
  7212                           
  7213                           ;p_final.c: 30:         MPU6050_DMP_GetData(&ypr, ((void*)0));
  7214   014CF8  0EA3               	movlw	low main@ypr
  7215   014CFA  0105               	movlb	5	; () banked
  7216   014CFC  6FFA               	movwf	MPU6050_DMP_GetData@ypr& (0+255),b
  7217   014CFE  0E06               	movlw	high main@ypr
  7218   014D00  6FFB               	movwf	(MPU6050_DMP_GetData@ypr+1)& (0+255),b
  7219   014D02  0E00               	movlw	0
  7220   014D04  6FFC               	movwf	MPU6050_DMP_GetData@quat& (0+255),b
  7221   014D06  0E00               	movlw	0
  7222   014D08  6FFD               	movwf	(MPU6050_DMP_GetData@quat+1)& (0+255),b
  7223   014D0A  EC00  F080         	call	_MPU6050_DMP_GetData	;wreg free
  7224   014D0E                     
  7225                           ;p_final.c: 32:         float pitch = -ypr.pitch;
  7226   014D0E  C6A7  F501         	movff	main@ypr+4,___flneg@f1
  7227   014D12  C6A8  F502         	movff	main@ypr+5,___flneg@f1+1
  7228   014D16  C6A9  F503         	movff	main@ypr+6,___flneg@f1+2
  7229   014D1A  C6AA  F504         	movff	main@ypr+7,___flneg@f1+3
  7230   014D1E  EC57  F0B6         	call	___flneg	;wreg free
  7231   014D22  C501  F69B         	movff	?___flneg,main@pitch
  7232   014D26  C502  F69C         	movff	?___flneg+1,main@pitch+1
  7233   014D2A  C503  F69D         	movff	?___flneg+2,main@pitch+2
  7234   014D2E  C504  F69E         	movff	?___flneg+3,main@pitch+3
  7235   014D32                     
  7236                           ;p_final.c: 33:         float roll = ypr.roll;
  7237   014D32  C6AB  F69F         	movff	main@ypr+8,main@roll
  7238   014D36  C6AC  F6A0         	movff	main@ypr+9,main@roll+1
  7239   014D3A  C6AD  F6A1         	movff	main@ypr+10,main@roll+2
  7240   014D3E  C6AE  F6A2         	movff	main@ypr+11,main@roll+3
  7241   014D42  C69B  F56D         	movff	main@pitch,fabsf@x
  7242   014D46  C69C  F56E         	movff	main@pitch+1,fabsf@x+1
  7243   014D4A  C69D  F56F         	movff	main@pitch+2,fabsf@x+2
  7244   014D4E  C69E  F570         	movff	main@pitch+3,fabsf@x+3
  7245   014D52  EC73  F0B6         	call	_fabsf	;wreg free
  7246   014D56  C69F  F56D         	movff	main@roll,fabsf@x
  7247   014D5A  C6A0  F56E         	movff	main@roll+1,fabsf@x+1
  7248   014D5E  C6A1  F56F         	movff	main@roll+2,fabsf@x+2
  7249   014D62  C6A2  F570         	movff	main@roll+3,fabsf@x+3
  7250   014D66  EC73  F0B6         	call	_fabsf	;wreg free
  7251   014D6A                     
  7252                           ;p_final.c: 40:         char buffer1[16];;p_final.c: 41:         sprintf(buffer1, "P: %.
      +                          1f R: %.1f", pitch, roll);
  7253   014D6A  0E8B               	movlw	low main@buffer1
  7254   014D6C  0105               	movlb	5	; () banked
  7255   014D6E  6FCD               	movwf	sprintf@s& (0+255),b
  7256   014D70  0E06               	movlw	high main@buffer1
  7257   014D72  6FCE               	movwf	(sprintf@s+1)& (0+255),b
  7258   014D74  0E74               	movlw	low STR_14
  7259   014D76  6FCF               	movwf	sprintf@fmt& (0+255),b
  7260   014D78  0EFF               	movlw	high STR_14
  7261   014D7A  6FD0               	movwf	(sprintf@fmt+1)& (0+255),b
  7262   014D7C  C69B  F5D1         	movff	main@pitch,?_sprintf+4
  7263   014D80  C69C  F5D2         	movff	main@pitch+1,?_sprintf+5
  7264   014D84  C69D  F5D3         	movff	main@pitch+2,?_sprintf+6
  7265   014D88  C69E  F5D4         	movff	main@pitch+3,?_sprintf+7
  7266   014D8C  C69F  F5D5         	movff	main@roll,?_sprintf+8
  7267   014D90  C6A0  F5D6         	movff	main@roll+1,?_sprintf+9
  7268   014D94  C6A1  F5D7         	movff	main@roll+2,?_sprintf+10
  7269   014D98  C6A2  F5D8         	movff	main@roll+3,?_sprintf+11
  7270   014D9C  EC5D  F0B5         	call	_sprintf	;wreg free
  7271   014DA0                     
  7272                           ;p_final.c: 42:         POS_CURSOR(1, 1);
  7273   014DA0  0E01               	movlw	1
  7274   014DA2  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  7275   014DA4  0E01               	movlw	1
  7276   014DA6  ECD3  F0B3         	call	_POS_CURSOR
  7277   014DAA                     
  7278                           ;p_final.c: 43:         ESCRIBE_MENSAJE(buffer1, 16);
  7279   014DAA  0E8B               	movlw	low main@buffer1
  7280   014DAC  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  7281   014DAE  0E06               	movlw	high main@buffer1
  7282   014DB0  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
  7283   014DB2  0E10               	movlw	16
  7284   014DB4  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  7285   014DB6  ECAD  F0B5         	call	_ESCRIBE_MENSAJE	;wreg free
  7286   014DBA                     
  7287                           ;p_final.c: 45:         POS_CURSOR(2, 0);
  7288   014DBA  0E00               	movlw	0
  7289   014DBC  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  7290   014DBE  0E02               	movlw	2
  7291   014DC0  ECD3  F0B3         	call	_POS_CURSOR
  7292   014DC4                     
  7293                           ;p_final.c: 47:         if (roll > 35) {
  7294   014DC4  0E00               	movlw	0
  7295   014DC6  6E1E               	movwf	___flge@ff1^(0+1280),c
  7296   014DC8  0E00               	movlw	0
  7297   014DCA  6E1F               	movwf	(___flge@ff1+1)^(0+1280),c
  7298   014DCC  0E0C               	movlw	12
  7299   014DCE  6E20               	movwf	(___flge@ff1+2)^(0+1280),c
  7300   014DD0  0E42               	movlw	66
  7301   014DD2  6E21               	movwf	(___flge@ff1+3)^(0+1280),c
  7302   014DD4  C69F  F522         	movff	main@roll,___flge@ff2
  7303   014DD8  C6A0  F523         	movff	main@roll+1,___flge@ff2+1
  7304   014DDC  C6A1  F524         	movff	main@roll+2,___flge@ff2+2
  7305   014DE0  C6A2  F525         	movff	main@roll+3,___flge@ff2+3
  7306   014DE4  EC27  F0B0         	call	___flge	;wreg free
  7307   014DE8  B0D8               	btfsc	status,0,c
  7308   014DEA  EFF9  F0A6         	goto	u8841
  7309   014DEE  EFFB  F0A6         	goto	u8840
  7310   014DF2                     u8841:
  7311   014DF2  EF05  F0A7         	goto	l10767
  7312   014DF6                     u8840:
  7313   014DF6                     
  7314                           ;p_final.c: 48:             ESCRIBE_MENSAJE("No   ", 10);
  7315   014DF6  0EE0               	movlw	low STR_15
  7316   014DF8  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  7317   014DFA  0EFF               	movlw	high STR_15
  7318   014DFC  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
  7319   014DFE  0E0A               	movlw	10
  7320   014E00  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  7321   014E02  ECAD  F0B5         	call	_ESCRIBE_MENSAJE	;wreg free
  7322                           
  7323                           ;p_final.c: 49:         } else if (roll < -10) {
  7324   014E06  EF76  F0A7         	goto	l10781
  7325   014E0A                     l10767:
  7326   014E0A  C69F  F51E         	movff	main@roll,___flge@ff1
  7327   014E0E  C6A0  F51F         	movff	main@roll+1,___flge@ff1+1
  7328   014E12  C6A1  F520         	movff	main@roll+2,___flge@ff1+2
  7329   014E16  C6A2  F521         	movff	main@roll+3,___flge@ff1+3
  7330   014E1A  0E00               	movlw	0
  7331   014E1C  6E22               	movwf	___flge@ff2^(0+1280),c
  7332   014E1E  0E00               	movlw	0
  7333   014E20  6E23               	movwf	(___flge@ff2+1)^(0+1280),c
  7334   014E22  0E20               	movlw	32
  7335   014E24  6E24               	movwf	(___flge@ff2+2)^(0+1280),c
  7336   014E26  0EC1               	movlw	193
  7337   014E28  6E25               	movwf	(___flge@ff2+3)^(0+1280),c
  7338   014E2A  EC27  F0B0         	call	___flge	;wreg free
  7339   014E2E  B0D8               	btfsc	status,0,c
  7340   014E30  EF1C  F0A7         	goto	u8851
  7341   014E34  EF1E  F0A7         	goto	u8850
  7342   014E38                     u8851:
  7343   014E38  EF28  F0A7         	goto	l10771
  7344   014E3C                     u8850:
  7345   014E3C                     
  7346                           ;p_final.c: 50:             ESCRIBE_MENSAJE("Si ", 10);
  7347   014E3C  0EFA               	movlw	low STR_16
  7348   014E3E  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  7349   014E40  0EFF               	movlw	high STR_16
  7350   014E42  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
  7351   014E44  0E0A               	movlw	10
  7352   014E46  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  7353   014E48  ECAD  F0B5         	call	_ESCRIBE_MENSAJE	;wreg free
  7354                           
  7355                           ;p_final.c: 51:         } else if (pitch > 73) {
  7356   014E4C  EF76  F0A7         	goto	l10781
  7357   014E50                     l10771:
  7358   014E50  0E00               	movlw	0
  7359   014E52  6E1E               	movwf	___flge@ff1^(0+1280),c
  7360   014E54  0E00               	movlw	0
  7361   014E56  6E1F               	movwf	(___flge@ff1+1)^(0+1280),c
  7362   014E58  0E92               	movlw	146
  7363   014E5A  6E20               	movwf	(___flge@ff1+2)^(0+1280),c
  7364   014E5C  0E42               	movlw	66
  7365   014E5E  6E21               	movwf	(___flge@ff1+3)^(0+1280),c
  7366   014E60  C69B  F522         	movff	main@pitch,___flge@ff2
  7367   014E64  C69C  F523         	movff	main@pitch+1,___flge@ff2+1
  7368   014E68  C69D  F524         	movff	main@pitch+2,___flge@ff2+2
  7369   014E6C  C69E  F525         	movff	main@pitch+3,___flge@ff2+3
  7370   014E70  EC27  F0B0         	call	___flge	;wreg free
  7371   014E74  B0D8               	btfsc	status,0,c
  7372   014E76  EF3F  F0A7         	goto	u8861
  7373   014E7A  EF41  F0A7         	goto	u8860
  7374   014E7E                     u8861:
  7375   014E7E  EF4B  F0A7         	goto	l10775
  7376   014E82                     u8860:
  7377   014E82                     
  7378                           ;p_final.c: 52:             ESCRIBE_MENSAJE("Hola    ", 10);
  7379   014E82  0EB6               	movlw	low STR_17
  7380   014E84  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  7381   014E86  0EFF               	movlw	high STR_17
  7382   014E88  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
  7383   014E8A  0E0A               	movlw	10
  7384   014E8C  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  7385   014E8E  ECAD  F0B5         	call	_ESCRIBE_MENSAJE	;wreg free
  7386                           
  7387                           ;p_final.c: 53:         } else if (pitch < 40) {
  7388   014E92  EF76  F0A7         	goto	l10781
  7389   014E96                     l10775:
  7390   014E96  C69B  F51E         	movff	main@pitch,___flge@ff1
  7391   014E9A  C69C  F51F         	movff	main@pitch+1,___flge@ff1+1
  7392   014E9E  C69D  F520         	movff	main@pitch+2,___flge@ff1+2
  7393   014EA2  C69E  F521         	movff	main@pitch+3,___flge@ff1+3
  7394   014EA6  0E00               	movlw	0
  7395   014EA8  6E22               	movwf	___flge@ff2^(0+1280),c
  7396   014EAA  0E00               	movlw	0
  7397   014EAC  6E23               	movwf	(___flge@ff2+1)^(0+1280),c
  7398   014EAE  0E20               	movlw	32
  7399   014EB0  6E24               	movwf	(___flge@ff2+2)^(0+1280),c
  7400   014EB2  0E42               	movlw	66
  7401   014EB4  6E25               	movwf	(___flge@ff2+3)^(0+1280),c
  7402   014EB6  EC27  F0B0         	call	___flge	;wreg free
  7403   014EBA  B0D8               	btfsc	status,0,c
  7404   014EBC  EF62  F0A7         	goto	u8871
  7405   014EC0  EF64  F0A7         	goto	u8870
  7406   014EC4                     u8871:
  7407   014EC4  EF6E  F0A7         	goto	l10779
  7408   014EC8                     u8870:
  7409   014EC8                     
  7410                           ;p_final.c: 54:             ESCRIBE_MENSAJE("Gracias     ", 10);
  7411   014EC8  0E93               	movlw	low STR_18
  7412   014ECA  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  7413   014ECC  0EFF               	movlw	high STR_18
  7414   014ECE  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
  7415   014ED0  0E0A               	movlw	10
  7416   014ED2  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  7417   014ED4  ECAD  F0B5         	call	_ESCRIBE_MENSAJE	;wreg free
  7418                           
  7419                           ;p_final.c: 55:         } else {
  7420   014ED8  EF76  F0A7         	goto	l10781
  7421   014EDC                     l10779:
  7422                           
  7423                           ;p_final.c: 56:             ESCRIBE_MENSAJE("Esperando movimiento", 20);
  7424   014EDC  0E24               	movlw	low STR_19
  7425   014EDE  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  7426   014EE0  0EFF               	movlw	high STR_19
  7427   014EE2  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
  7428   014EE4  0E14               	movlw	20
  7429   014EE6  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  7430   014EE8  ECAD  F0B5         	call	_ESCRIBE_MENSAJE	;wreg free
  7431   014EEC                     l10781:
  7432                           
  7433                           ;p_final.c: 60:         _delay((unsigned long)((500)*(64000000UL/4000.0)));
  7434   014EEC  0E29               	movlw	41
  7435   014EEE  0106               	movlb	6	; () banked
  7436   014EF0  6F8A               	movwf	(??_main+1)& (0+255),b
  7437   014EF2  0E96               	movlw	150
  7438   014EF4  6F89               	movwf	??_main& (0+255),b
  7439   014EF6  0E7F               	movlw	127
  7440   014EF8                     u8897:
  7441   014EF8  2EE8               	decfsz	wreg,f,c
  7442   014EFA  D7FE               	bra	u8897
  7443   014EFC  2F89               	decfsz	??_main& (0+255),f,b
  7444   014EFE  D7FC               	bra	u8897
  7445   014F00  2F8A               	decfsz	(??_main+1)& (0+255),f,b
  7446   014F02  D7FA               	bra	u8897
  7447   014F04  EF7C  F0A6         	goto	l10745
  7448   014F08  EFFE  F0FF         	goto	start
  7449   014F0C                     __end_of_main:
  7450                           	callstack 0
  7451                           
  7452 ;; *************** function _sprintf *****************
  7453 ;; Defined at:
  7454 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;  s               2  109[BANK5 ] PTR unsigned char 
  7457 ;;		 -> main@buffer1(16), 
  7458 ;;  fmt             2  111[BANK5 ] PTR const unsigned char 
  7459 ;;		 -> STR_14(16), 
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;  f              11  123[BANK5 ] struct _IO_FILE
  7462 ;;  ap              2  121[BANK5 ] PTR void [1]
  7463 ;;		 -> ?_sprintf(2), 
  7464 ;;  ret             2    0        int 
  7465 ;; Return value:  Size  Location     Type
  7466 ;;                  2  109[BANK5 ] int 
  7467 ;; Registers used:
  7468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7469 ;; Tracked objects:
  7470 ;;		On entry : 0/0
  7471 ;;		On exit  : 0/0
  7472 ;;		Unchanged: 0/0
  7473 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7474 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7475 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7477 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7478 ;;Total ram usage:       25 bytes
  7479 ;; Hardware stack levels used: 1
  7480 ;; Hardware stack levels required when called: 7
  7481 ;; This function calls:
  7482 ;;		_vfprintf
  7483 ;; This function is called by:
  7484 ;;		_main
  7485 ;; This function uses a non-reentrant model
  7486 ;;
  7487                           
  7488                           	psect	text1
  7489   016ABA                     __ptext1:
  7490                           	callstack 0
  7491   016ABA                     _sprintf:
  7492                           	callstack 119
  7493   016ABA  0ED1               	movlw	low (?_sprintf+4)
  7494   016ABC  0105               	movlb	5	; () banked
  7495   016ABE  6FD9               	movwf	sprintf@ap& (0+255),b
  7496   016AC0  0E05               	movlw	high (?_sprintf+4)
  7497   016AC2  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  7498   016AC4  C5CD  F5DB         	movff	sprintf@s,sprintf@f
  7499   016AC8  C5CE  F5DC         	movff	sprintf@s+1,sprintf@f+1
  7500   016ACC                     
  7501                           ; BSR set to: 5
  7502   016ACC  0E00               	movlw	0
  7503   016ACE  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  7504   016AD0  0E00               	movlw	0
  7505   016AD2  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  7506   016AD4                     
  7507                           ; BSR set to: 5
  7508   016AD4  0E00               	movlw	0
  7509   016AD6  6FE5               	movwf	(sprintf@f+10)& (0+255),b
  7510   016AD8  0E00               	movlw	0
  7511   016ADA  6FE4               	movwf	(sprintf@f+9)& (0+255),b
  7512   016ADC                     
  7513                           ; BSR set to: 5
  7514   016ADC  0EDB               	movlw	low sprintf@f
  7515   016ADE  6FC5               	movwf	vfprintf@fp& (0+255),b
  7516   016AE0  0E05               	movlw	high sprintf@f
  7517   016AE2  6FC6               	movwf	(vfprintf@fp+1)& (0+255),b
  7518   016AE4  C5CF  F5C7         	movff	sprintf@fmt,vfprintf@fmt
  7519   016AE8  C5D0  F5C8         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7520   016AEC  0ED9               	movlw	low sprintf@ap
  7521   016AEE  6FC9               	movwf	vfprintf@ap& (0+255),b
  7522   016AF0  0E05               	movlw	high sprintf@ap
  7523   016AF2  6FCA               	movwf	(vfprintf@ap+1)& (0+255),b
  7524   016AF4  ECDE  F0B4         	call	_vfprintf	;wreg free
  7525   016AF8  0105               	movlb	5	; () banked
  7526   016AFA  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  7527   016AFC  25CD               	addwf	sprintf@s& (0+255),w,b
  7528   016AFE  6ED9               	movwf	fsr2l,c
  7529   016B00  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  7530   016B02  21CE               	addwfc	(sprintf@s+1)& (0+255),w,b
  7531   016B04  6EDA               	movwf	fsr2h,c
  7532   016B06  6ADF               	clrf	indf2,c
  7533   016B08                     
  7534                           ; BSR set to: 5
  7535   016B08  0012               	return		;funcret
  7536   016B0A                     __end_of_sprintf:
  7537                           	callstack 0
  7538                           
  7539 ;; *************** function _vfprintf *****************
  7540 ;; Defined at:
  7541 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;  fp              2  101[BANK5 ] PTR struct _IO_FILE
  7544 ;;		 -> sprintf@f(11), 
  7545 ;;  fmt             2  103[BANK5 ] PTR const unsigned char 
  7546 ;;		 -> STR_14(16), 
  7547 ;;  ap              2  105[BANK5 ] PTR PTR void 
  7548 ;;		 -> sprintf@ap(2), 
  7549 ;; Auto vars:     Size  Location     Type
  7550 ;;  cfmt            2  107[BANK5 ] PTR unsigned char 
  7551 ;;		 -> STR_14(16), 
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  2  101[BANK5 ] int 
  7554 ;; Registers used:
  7555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7561 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7562 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7564 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7565 ;;Total ram usage:        8 bytes
  7566 ;; Hardware stack levels used: 1
  7567 ;; Hardware stack levels required when called: 6
  7568 ;; This function calls:
  7569 ;;		_vfpfcnvrt
  7570 ;; This function is called by:
  7571 ;;		_sprintf
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           	psect	text2
  7576   0169BC                     __ptext2:
  7577                           	callstack 0
  7578   0169BC                     _vfprintf:
  7579                           	callstack 119
  7580   0169BC                     
  7581                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7582   0169BC  C5C7  F5CB         	movff	vfprintf@fmt,vfprintf@cfmt
  7583   0169C0  C5C8  F5CC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7584                           
  7585                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7586   0169C4  EFF3  F0B4         	goto	l9787
  7587   0169C8                     l9785:
  7588                           
  7589                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  7590   0169C8  C5C5  F5B6         	movff	vfprintf@fp,vfpfcnvrt@fp
  7591   0169CC  C5C6  F5B7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7592   0169D0  0ECB               	movlw	low vfprintf@cfmt
  7593   0169D2  0105               	movlb	5	; () banked
  7594   0169D4  6FB8               	movwf	vfpfcnvrt@fmt& (0+255),b
  7595   0169D6  0E05               	movlw	high vfprintf@cfmt
  7596   0169D8  6FB9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  7597   0169DA  C5C9  F5BA         	movff	vfprintf@ap,vfpfcnvrt@ap
  7598   0169DE  C5CA  F5BB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7599   0169E2  EC86  F0A7         	call	_vfpfcnvrt	;wreg free
  7600   0169E6                     l9787:
  7601                           
  7602                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7603   0169E6  C5CB  F4F6         	movff	vfprintf@cfmt,tblptrl
  7604   0169EA  C5CC  F4F7         	movff	vfprintf@cfmt+1,tblptrh
  7605   0169EE                     	if	0	;tblptru may be non-zero
  7606   0169EE                     	endif
  7607   0169EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7608   0169EE  0E00               	movlw	low (__mediumconst shr (0+16))
  7609   0169F0  6EF8               	movwf	tblptru,c
  7610   0169F2                     	endif
  7611   0169F2  0008               	tblrd		*
  7612   0169F4  50F5               	movf	tablat,w,c
  7613   0169F6  0900               	iorlw	0
  7614   0169F8  A4D8               	btfss	status,2,c
  7615   0169FA  EF01  F0B5         	goto	u7731
  7616   0169FE  EF03  F0B5         	goto	u7730
  7617   016A02                     u7731:
  7618   016A02  EFE4  F0B4         	goto	l9785
  7619   016A06                     u7730:
  7620   016A06                     
  7621                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  7622   016A06  0E00               	movlw	0
  7623   016A08  0105               	movlb	5	; () banked
  7624   016A0A  6FC6               	movwf	(?_vfprintf+1)& (0+255),b
  7625   016A0C  0E00               	movlw	0
  7626   016A0E  6FC5               	movwf	?_vfprintf& (0+255),b
  7627   016A10                     
  7628                           ; BSR set to: 5
  7629   016A10  0012               	return		;funcret
  7630   016A12                     __end_of_vfprintf:
  7631                           	callstack 0
  7632                           
  7633 ;; *************** function _vfpfcnvrt *****************
  7634 ;; Defined at:
  7635 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;  fp              2   86[BANK5 ] PTR struct _IO_FILE
  7638 ;;		 -> sprintf@f(11), 
  7639 ;;  fmt             2   88[BANK5 ] PTR PTR unsigned char 
  7640 ;;		 -> vfprintf@cfmt(2), 
  7641 ;;  ap              2   90[BANK5 ] PTR PTR void 
  7642 ;;		 -> sprintf@ap(2), 
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;  convarg         4   94[BANK5 ] struct .
  7645 ;;  cp              2   99[BANK5 ] PTR unsigned char 
  7646 ;;		 -> STR_14(16), 
  7647 ;;  c               1   98[BANK5 ] unsigned char 
  7648 ;;  done            1    0        _Bool 
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  1    wreg      void 
  7651 ;; Registers used:
  7652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7658 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7659 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7660 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7661 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7662 ;;Total ram usage:       15 bytes
  7663 ;; Hardware stack levels used: 1
  7664 ;; Hardware stack levels required when called: 5
  7665 ;; This function calls:
  7666 ;;		_efgtoa
  7667 ;;		_fputc
  7668 ;;		_read_prec_or_width
  7669 ;; This function is called by:
  7670 ;;		_vfprintf
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           	psect	text3
  7675   014F0C                     __ptext3:
  7676                           	callstack 0
  7677   014F0C                     _vfpfcnvrt:
  7678                           	callstack 119
  7679   014F0C                     
  7680                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  7681   014F0C  C5B8  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7682   014F10  C5B9  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7683   014F14  C4DE F4F6          	movff	postinc2,tblptrl
  7684   014F18  C4DD F4F7          	movff	postdec2,tblptrh
  7685   014F1C                     	if	0	;tblptru may be non-zero
  7686   014F1C                     	endif
  7687   014F1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7688   014F1C  0E00               	movlw	low (__mediumconst shr (0+16))
  7689   014F1E  6EF8               	movwf	tblptru,c
  7690   014F20                     	endif
  7691   014F20  0008               	tblrd		*
  7692   014F22  50F5               	movf	tablat,w,c
  7693   014F24  0A25               	xorlw	37
  7694   014F26  A4D8               	btfss	status,2,c
  7695   014F28  EF98  F0A7         	goto	u7311
  7696   014F2C  EF9A  F0A7         	goto	u7310
  7697   014F30                     u7311:
  7698   014F30  EF92  F0A8         	goto	l9375
  7699   014F34                     u7310:
  7700   014F34                     
  7701                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  7702   014F34  C5B8  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7703   014F38  C5B9  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7704   014F3C  2ADE               	incf	postinc2,f,c
  7705   014F3E  0E00               	movlw	0
  7706   014F40  22DD               	addwfc	postdec2,f,c
  7707   014F42                     
  7708                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  7709   014F42  0E00               	movlw	0
  7710   014F44  0106               	movlb	6	; () banked
  7711   014F46  6FF6               	movwf	(_width+1)& (0+255),b
  7712   014F48  0E00               	movlw	0
  7713   014F4A  6FF5               	movwf	_width& (0+255),b
  7714   014F4C  C6F5  F6FD         	movff	_width,_flags
  7715   014F50                     
  7716                           ; BSR set to: 6
  7717                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  7718   014F50  69F7               	setf	_prec& (0+255),b
  7719   014F52  69F8               	setf	(_prec+1)& (0+255),b
  7720   014F54                     
  7721                           ; BSR set to: 6
  7722                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  7723   014F54  C5B8  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7724   014F58  C5B9  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7725   014F5C  C4DE F4F6          	movff	postinc2,tblptrl
  7726   014F60  C4DD F4F7          	movff	postdec2,tblptrh
  7727   014F64                     	if	0	;tblptru may be non-zero
  7728   014F64                     	endif
  7729   014F64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7730   014F64  0E00               	movlw	low (__mediumconst shr (0+16))
  7731   014F66  6EF8               	movwf	tblptru,c
  7732   014F68                     	endif
  7733   014F68  0008               	tblrd		*
  7734   014F6A  50F5               	movf	tablat,w,c
  7735   014F6C  0A2E               	xorlw	46
  7736   014F6E  A4D8               	btfss	status,2,c
  7737   014F70  EFBC  F0A7         	goto	u7321
  7738   014F74  EFBE  F0A7         	goto	u7320
  7739   014F78                     u7321:
  7740   014F78  EFD3  F0A7         	goto	l9339
  7741   014F7C                     u7320:
  7742   014F7C                     
  7743                           ; BSR set to: 6
  7744                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  7745   014F7C  C5B8  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7746   014F80  C5B9  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7747   014F84  2ADE               	incf	postinc2,f,c
  7748   014F86  0E00               	movlw	0
  7749   014F88  22DD               	addwfc	postdec2,f,c
  7750   014F8A                     
  7751                           ; BSR set to: 6
  7752                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  7753   014F8A  C5B8  F501         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  7754   014F8E  C5B9  F502         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  7755   014F92  C5BA  F503         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  7756   014F96  C5BB  F504         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  7757   014F9A  EC21  F0B2         	call	_read_prec_or_width	;wreg free
  7758   014F9E  C501  F6F7         	movff	?_read_prec_or_width,_prec
  7759   014FA2  C502  F6F8         	movff	?_read_prec_or_width+1,_prec+1
  7760   014FA6                     l9339:
  7761                           
  7762                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  7763   014FA6  C5B8  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7764   014FAA  C5B9  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7765   014FAE  C4DE F5C3          	movff	postinc2,vfpfcnvrt@cp
  7766   014FB2  C4DD F5C4          	movff	postdec2,vfpfcnvrt@cp+1
  7767   014FB6                     
  7768                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  7769   014FB6  C5C3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  7770   014FBA  C5C4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
  7771   014FBE                     	if	0	;tblptru may be non-zero
  7772   014FBE                     	endif
  7773   014FBE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7774   014FBE  0E00               	movlw	low (__mediumconst shr (0+16))
  7775   014FC0  6EF8               	movwf	tblptru,c
  7776   014FC2                     	endif
  7777   014FC2  0008               	tblrd		*
  7778   014FC4  C4F5 F5C2          	movff	tablat,vfpfcnvrt@c
  7779                           
  7780                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  7781   014FC8  EFF1  F0A7         	goto	l9349
  7782   014FCC                     l9343:
  7783                           
  7784                           ; BSR set to: 5
  7785                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  7786   014FCC  4BC3               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  7787   014FCE  2BC4               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  7788                           
  7789                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1696:     break;
  7790   014FD0  EF01  F0A8         	goto	l9351
  7791   014FD4                     l9345:
  7792                           
  7793                           ; BSR set to: 5
  7794                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  7795   014FD4  0E6C               	movlw	108
  7796   014FD6  6FC2               	movwf	vfpfcnvrt@c& (0+255),b
  7797                           
  7798                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1722:     break;
  7799   014FD8  EF01  F0A8         	goto	l9351
  7800   014FDC                     l2365:
  7801                           
  7802                           ; BSR set to: 5
  7803                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  7804   014FDC  6BC2               	clrf	vfpfcnvrt@c& (0+255),b
  7805                           
  7806                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1725:     break;
  7807   014FDE  EF01  F0A8         	goto	l9351
  7808   014FE2                     l9349:
  7809   014FE2  0105               	movlb	5	; () banked
  7810   014FE4  51C2               	movf	vfpfcnvrt@c& (0+255),w,b
  7811                           
  7812                           ; Switch size 1, requested type "simple"
  7813                           ; Number of cases is 3, Range of values is 76 to 108
  7814                           ; switch strategies available:
  7815                           ; Name         Instructions Cycles
  7816                           ; simple_byte           10     6 (average)
  7817                           ;	Chosen strategy is simple_byte
  7818   014FE6  0A4C               	xorlw	76	; case 76
  7819   014FE8  B4D8               	btfsc	status,2,c
  7820   014FEA  EFE6  F0A7         	goto	l9343
  7821   014FEE  0A2A               	xorlw	42	; case 102
  7822   014FF0  B4D8               	btfsc	status,2,c
  7823   014FF2  EFEA  F0A7         	goto	l9345
  7824   014FF6  0A0A               	xorlw	10	; case 108
  7825   014FF8  B4D8               	btfsc	status,2,c
  7826   014FFA  EFE6  F0A7         	goto	l9343
  7827   014FFE  EFEE  F0A7         	goto	l2365
  7828   015002                     l9351:
  7829                           
  7830                           ; BSR set to: 5
  7831   015002  C5C3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  7832   015006  C5C4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
  7833   01500A                     	if	0	;tblptru may be non-zero
  7834   01500A                     	endif
  7835   01500A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7836   01500A  0E00               	movlw	low (__mediumconst shr (0+16))
  7837   01500C  6EF8               	movwf	tblptru,c
  7838   01500E                     	endif
  7839   01500E  0008               	tblrd		*
  7840   015010  50F5               	movf	tablat,w,c
  7841   015012  0A66               	xorlw	102
  7842   015014  A4D8               	btfss	status,2,c
  7843   015016  EF0F  F0A8         	goto	u7331
  7844   01501A  EF11  F0A8         	goto	u7330
  7845   01501E                     u7331:
  7846   01501E  EF89  F0A8         	goto	l9371
  7847   015022                     u7330:
  7848   015022  EF47  F0A8         	goto	l9359
  7849   015026                     l9353:
  7850                           
  7851                           ; BSR set to: 5
  7852                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7853   015026  C5BA  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  7854   01502A  C5BB  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  7855   01502E  C4DF F5BC          	movff	indf2,??_vfpfcnvrt
  7856   015032  0E04               	movlw	4
  7857   015034  26DE               	addwf	postinc2,f,c
  7858   015036  C4DF F5BD          	movff	indf2,??_vfpfcnvrt+1
  7859   01503A  0E00               	movlw	0
  7860   01503C  22DD               	addwfc	postdec2,f,c
  7861   01503E  C5BC  F4D9         	movff	??_vfpfcnvrt,fsr2l
  7862   015042  C5BD  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  7863   015046  C4DE F5BE          	movff	postinc2,vfpfcnvrt@convarg
  7864   01504A  C4DE F5BF          	movff	postinc2,vfpfcnvrt@convarg+1
  7865   01504E  C4DE F5C0          	movff	postinc2,vfpfcnvrt@convarg+2
  7866   015052  C4DE F5C1          	movff	postinc2,vfpfcnvrt@convarg+3
  7867                           
  7868                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1757:      break;
  7869   015056  EF52  F0A8         	goto	l9361
  7870   01505A                     l9355:
  7871                           
  7872                           ; BSR set to: 5
  7873                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7874   01505A  C5BA  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  7875   01505E  C5BB  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  7876   015062  C4DF F5BC          	movff	indf2,??_vfpfcnvrt
  7877   015066  0E04               	movlw	4
  7878   015068  26DE               	addwf	postinc2,f,c
  7879   01506A  C4DF F5BD          	movff	indf2,??_vfpfcnvrt+1
  7880   01506E  0E00               	movlw	0
  7881   015070  22DD               	addwfc	postdec2,f,c
  7882   015072  C5BC  F4D9         	movff	??_vfpfcnvrt,fsr2l
  7883   015076  C5BD  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  7884   01507A  C4DE F5BE          	movff	postinc2,vfpfcnvrt@convarg
  7885   01507E  C4DE F5BF          	movff	postinc2,vfpfcnvrt@convarg+1
  7886   015082  C4DE F5C0          	movff	postinc2,vfpfcnvrt@convarg+2
  7887   015086  C4DE F5C1          	movff	postinc2,vfpfcnvrt@convarg+3
  7888                           
  7889                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1760:      break;
  7890   01508A  EF52  F0A8         	goto	l9361
  7891   01508E                     l9359:
  7892                           
  7893                           ; BSR set to: 5
  7894   01508E  51C2               	movf	vfpfcnvrt@c& (0+255),w,b
  7895                           
  7896                           ; Switch size 1, requested type "simple"
  7897                           ; Number of cases is 2, Range of values is 76 to 108
  7898                           ; switch strategies available:
  7899                           ; Name         Instructions Cycles
  7900                           ; simple_byte            7     4 (average)
  7901                           ;	Chosen strategy is simple_byte
  7902   015090  0A4C               	xorlw	76	; case 76
  7903   015092  B4D8               	btfsc	status,2,c
  7904   015094  EF2D  F0A8         	goto	l9355
  7905   015098  0A20               	xorlw	32	; case 108
  7906   01509A  B4D8               	btfsc	status,2,c
  7907   01509C  EF13  F0A8         	goto	l9353
  7908   0150A0  EF52  F0A8         	goto	l9361
  7909   0150A4                     l9361:
  7910                           
  7911                           ; BSR set to: 5
  7912                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  7913   0150A4  0E01               	movlw	1
  7914   0150A6  25C3               	addwf	vfpfcnvrt@cp& (0+255),w,b
  7915   0150A8  6FBC               	movwf	??_vfpfcnvrt& (0+255),b
  7916   0150AA  0E00               	movlw	0
  7917   0150AC  21C4               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  7918   0150AE  6FBD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7919   0150B0  C5B8  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7920   0150B4  C5B9  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7921   0150B8  C5BC  F4DE         	movff	??_vfpfcnvrt,postinc2
  7922   0150BC  C5BD  F4DD         	movff	??_vfpfcnvrt+1,postdec2
  7923                           
  7924                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  7925   0150C0  EF7B  F0A8         	goto	l9369
  7926   0150C4                     l9363:
  7927                           
  7928                           ; BSR set to: 5
  7929                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  7930   0150C4  C5B6  F581         	movff	vfpfcnvrt@fp,efgtoa@fp
  7931   0150C8  C5B7  F582         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7932   0150CC  C5BE  F583         	movff	vfpfcnvrt@convarg,efgtoa@f
  7933   0150D0  C5BF  F584         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  7934   0150D4  C5C0  F585         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  7935   0150D8  C5C1  F586         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  7936   0150DC  C5C3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  7937   0150E0  C5C4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
  7938   0150E4                     	if	0	;tblptru may be non-zero
  7939   0150E4                     	endif
  7940   0150E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7941   0150E4  0E00               	movlw	low (__mediumconst shr (0+16))
  7942   0150E6  6EF8               	movwf	tblptru,c
  7943   0150E8                     	endif
  7944   0150E8  0008               	tblrd		*
  7945   0150EA  C4F5 F587          	movff	tablat,efgtoa@c
  7946   0150EE  ECDF  F086         	call	_efgtoa	;wreg free
  7947   0150F2  EFA8  F0A8         	goto	l2375
  7948   0150F6                     l9369:
  7949                           
  7950                           ; BSR set to: 5
  7951   0150F6  C5C3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  7952   0150FA  C5C4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
  7953   0150FE                     	if	0	;tblptru may be non-zero
  7954   0150FE                     	endif
  7955   0150FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7956   0150FE  0E00               	movlw	low (__mediumconst shr (0+16))
  7957   015100  6EF8               	movwf	tblptru,c
  7958   015102                     	endif
  7959   015102  0008               	tblrd		*
  7960   015104  50F5               	movf	tablat,w,c
  7961                           
  7962                           ; Switch size 1, requested type "simple"
  7963                           ; Number of cases is 1, Range of values is 102 to 102
  7964                           ; switch strategies available:
  7965                           ; Name         Instructions Cycles
  7966                           ; simple_byte            4     3 (average)
  7967                           ;	Chosen strategy is simple_byte
  7968   015106  0A66               	xorlw	102	; case 102
  7969   015108  B4D8               	btfsc	status,2,c
  7970   01510A  EF62  F0A8         	goto	l9363
  7971   01510E  EF89  F0A8         	goto	l9371
  7972   015112                     l9371:
  7973                           
  7974                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  7975   015112  C5B8  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7976   015116  C5B9  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7977   01511A  2ADE               	incf	postinc2,f,c
  7978   01511C  0E00               	movlw	0
  7979   01511E  22DD               	addwfc	postdec2,f,c
  7980   015120  EFA8  F0A8         	goto	l2375
  7981   015124                     l9375:
  7982                           
  7983                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  7984   015124  C5B8  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7985   015128  C5B9  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7986   01512C  C4DE F4F6          	movff	postinc2,tblptrl
  7987   015130  C4DD F4F7          	movff	postdec2,tblptrh
  7988   015134                     	if	0	;tblptru may be non-zero
  7989   015134                     	endif
  7990   015134                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7991   015134  0E00               	movlw	low (__mediumconst shr (0+16))
  7992   015136  6EF8               	movwf	tblptru,c
  7993   015138                     	endif
  7994   015138  0008               	tblrd		*
  7995   01513A  50F5               	movf	tablat,w,c
  7996   01513C  6E01               	movwf	fputc@c^(0+1280),c
  7997   01513E  6A02               	clrf	(fputc@c+1)^(0+1280),c
  7998   015140  C5B6  F503         	movff	vfpfcnvrt@fp,fputc@fp
  7999   015144  C5B7  F504         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8000   015148  EC87  F0B2         	call	_fputc	;wreg free
  8001   01514C  EF89  F0A8         	goto	l9371
  8002   015150                     l2375:
  8003   015150  0012               	return		;funcret
  8004   015152                     __end_of_vfpfcnvrt:
  8005                           	callstack 0
  8006                           
  8007 ;; *************** function _read_prec_or_width *****************
  8008 ;; Defined at:
  8009 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  8010 ;; Parameters:    Size  Location     Type
  8011 ;;  fmt             2    0[COMRAM] PTR PTR const unsigned c
  8012 ;;		 -> vfprintf@cfmt(2), 
  8013 ;;  ap              2    2[COMRAM] PTR PTR void [1]
  8014 ;;		 -> sprintf@ap(2), 
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;  c               1    6[COMRAM] unsigned char 
  8017 ;;  n               2    7[COMRAM] int 
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  2    0[COMRAM] int 
  8020 ;; Registers used:
  8021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8027 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8028 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8029 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8030 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8031 ;;Total ram usage:        9 bytes
  8032 ;; Hardware stack levels used: 1
  8033 ;; This function calls:
  8034 ;;		Nothing
  8035 ;; This function is called by:
  8036 ;;		_vfpfcnvrt
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           	psect	text4
  8041   016442                     __ptext4:
  8042                           	callstack 0
  8043   016442                     _read_prec_or_width:
  8044                           	callstack 123
  8045   016442                     
  8046                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  8047   016442  0E00               	movlw	0
  8048   016444  6E09               	movwf	(read_prec_or_width@n+1)^(0+1280),c
  8049   016446  0E00               	movlw	0
  8050   016448  6E08               	movwf	read_prec_or_width@n^(0+1280),c
  8051   01644A                     
  8052                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  8053   01644A  C501  F4D9         	movff	read_prec_or_width@fmt,fsr2l
  8054   01644E  C502  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
  8055   016452  C4DE F4F6          	movff	postinc2,tblptrl
  8056   016456  C4DD F4F7          	movff	postdec2,tblptrh
  8057   01645A                     	if	0	;tblptru may be non-zero
  8058   01645A                     	endif
  8059   01645A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8060   01645A  0E00               	movlw	low (__mediumconst shr (0+16))
  8061   01645C  6EF8               	movwf	tblptru,c
  8062   01645E                     	endif
  8063   01645E  0008               	tblrd		*
  8064   016460  50F5               	movf	tablat,w,c
  8065   016462  0A2A               	xorlw	42
  8066   016464  A4D8               	btfss	status,2,c
  8067   016466  EF37  F0B2         	goto	u6881
  8068   01646A  EF39  F0B2         	goto	u6880
  8069   01646E                     u6881:
  8070   01646E  EF6C  F0B2         	goto	l9007
  8071   016472                     u6880:
  8072   016472                     
  8073                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  8074   016472  C501  F4D9         	movff	read_prec_or_width@fmt,fsr2l
  8075   016476  C502  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
  8076   01647A  2ADE               	incf	postinc2,f,c
  8077   01647C  0E00               	movlw	0
  8078   01647E  22DD               	addwfc	postdec2,f,c
  8079                           
  8080                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  8081   016480  C503  F4D9         	movff	read_prec_or_width@ap,fsr2l
  8082   016484  C504  F4DA         	movff	read_prec_or_width@ap+1,fsr2h
  8083   016488  C4DF F505          	movff	indf2,??_read_prec_or_width
  8084   01648C  0E02               	movlw	2
  8085   01648E  26DE               	addwf	postinc2,f,c
  8086   016490  C4DF F506          	movff	indf2,??_read_prec_or_width+1
  8087   016494  0E00               	movlw	0
  8088   016496  22DD               	addwfc	postdec2,f,c
  8089   016498  C505  F4D9         	movff	??_read_prec_or_width,fsr2l
  8090   01649C  C506  F4DA         	movff	??_read_prec_or_width+1,fsr2h
  8091   0164A0  C4DE F508          	movff	postinc2,read_prec_or_width@n
  8092   0164A4  C4DD F509          	movff	postdec2,read_prec_or_width@n+1
  8093                           
  8094                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  8095   0164A8  EF82  F0B2         	goto	l2351
  8096   0164AC                     l9003:
  8097                           
  8098                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  8099   0164AC  0E0A               	movlw	10
  8100   0164AE  0208               	mulwf	read_prec_or_width@n^(0+1280),c
  8101   0164B0  C4F3 F505          	movff	prodl,??_read_prec_or_width
  8102   0164B4  C4F4 F506          	movff	prodh,??_read_prec_or_width+1
  8103   0164B8  0209               	mulwf	(read_prec_or_width@n+1)^(0+1280),c
  8104   0164BA  50F3               	movf	prodl,w,c
  8105   0164BC  2606               	addwf	(??_read_prec_or_width+1)^(0+1280),f,c
  8106   0164BE  5007               	movf	read_prec_or_width@c^(0+1280),w,c
  8107   0164C0  2405               	addwf	??_read_prec_or_width^(0+1280),w,c
  8108   0164C2  6E08               	movwf	read_prec_or_width@n^(0+1280),c
  8109   0164C4  0E00               	movlw	0
  8110   0164C6  2006               	addwfc	(??_read_prec_or_width+1)^(0+1280),w,c
  8111   0164C8  6E09               	movwf	(read_prec_or_width@n+1)^(0+1280),c
  8112   0164CA                     
  8113                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  8114   0164CA  C501  F4D9         	movff	read_prec_or_width@fmt,fsr2l
  8115   0164CE  C502  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
  8116   0164D2  2ADE               	incf	postinc2,f,c
  8117   0164D4  0E00               	movlw	0
  8118   0164D6  22DD               	addwfc	postdec2,f,c
  8119   0164D8                     l9007:
  8120                           
  8121                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  8122   0164D8  C501  F4D9         	movff	read_prec_or_width@fmt,fsr2l
  8123   0164DC  C502  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
  8124   0164E0  C4DE F4F6          	movff	postinc2,tblptrl
  8125   0164E4  C4DD F4F7          	movff	postdec2,tblptrh
  8126   0164E8                     	if	0	;tblptru may be non-zero
  8127   0164E8                     	endif
  8128   0164E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8129   0164E8  0E00               	movlw	low (__mediumconst shr (0+16))
  8130   0164EA  6EF8               	movwf	tblptru,c
  8131   0164EC                     	endif
  8132   0164EC  0008               	tblrd		*
  8133   0164EE  50F5               	movf	tablat,w,c
  8134   0164F0  0FD0               	addlw	208
  8135   0164F2  6E07               	movwf	read_prec_or_width@c^(0+1280),c
  8136   0164F4  0E09               	movlw	9
  8137   0164F6  6407               	cpfsgt	read_prec_or_width@c^(0+1280),c
  8138   0164F8  EF80  F0B2         	goto	u6891
  8139   0164FC  EF82  F0B2         	goto	u6890
  8140   016500                     u6891:
  8141   016500  EF56  F0B2         	goto	l9003
  8142   016504                     u6890:
  8143   016504                     l2351:
  8144                           
  8145                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  8146   016504  C508  F501         	movff	read_prec_or_width@n,?_read_prec_or_width
  8147   016508  C509  F502         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  8148   01650C  0012               	return		;funcret
  8149   01650E                     __end_of_read_prec_or_width:
  8150                           	callstack 0
  8151                           
  8152 ;; *************** function _efgtoa *****************
  8153 ;; Defined at:
  8154 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  8155 ;; Parameters:    Size  Location     Type
  8156 ;;  fp              2   33[BANK5 ] PTR struct _IO_FILE
  8157 ;;		 -> sprintf@f(11), 
  8158 ;;  f               4   35[BANK5 ] PTR struct _IO_FILE
  8159 ;;  c               1   39[BANK5 ] unsigned char 
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;  u               4   82[BANK5 ] struct flui
  8162 ;;  g               4   78[BANK5 ] struct flui
  8163 ;;  l               4   71[BANK5 ] struct flui
  8164 ;;  h               4   67[BANK5 ] struct flui
  8165 ;;  ou              4   61[BANK5 ] struct flui
  8166 ;;  n               2   76[BANK5 ] int 
  8167 ;;  i               2   65[BANK5 ] int 
  8168 ;;  w               2   59[BANK5 ] int 
  8169 ;;  e               2   57[BANK5 ] int 
  8170 ;;  m               2   55[BANK5 ] int 
  8171 ;;  d               2   53[BANK5 ] int 
  8172 ;;  t               2   46[BANK5 ] int 
  8173 ;;  p               2   44[BANK5 ] int 
  8174 ;;  ne              2   42[BANK5 ] int 
  8175 ;;  sign            1   75[BANK5 ] unsigned char 
  8176 ;;  nmode           1   52[BANK5 ] unsigned char 
  8177 ;;  mode            1   51[BANK5 ] unsigned char 
  8178 ;;  pp              1   50[BANK5 ] unsigned char 
  8179 ;;  esign           1    0        unsigned char 
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      void 
  8182 ;; Registers used:
  8183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8189 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8190 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8191 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8192 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8193 ;;Total ram usage:       53 bytes
  8194 ;; Hardware stack levels used: 1
  8195 ;; Hardware stack levels required when called: 4
  8196 ;; This function calls:
  8197 ;;		___fladd
  8198 ;;		___fldiv
  8199 ;;		___fleq
  8200 ;;		___flge
  8201 ;;		___flmul
  8202 ;;		___flneg
  8203 ;;		___flsub
  8204 ;;		___fltol
  8205 ;;		___fpclassifyf
  8206 ;;		_floorf
  8207 ;;		_labs
  8208 ;;		_memcpy
  8209 ;;		_pad
  8210 ;;		_strcpy
  8211 ;; This function is called by:
  8212 ;;		_vfpfcnvrt
  8213 ;; This function uses a non-reentrant model
  8214 ;;
  8215                           
  8216                           	psect	text5
  8217   010DBE                     __ptext5:
  8218                           	callstack 0
  8219   010DBE                     _efgtoa:
  8220                           	callstack 119
  8221   010DBE                     
  8222                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.50\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .50\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  8223   010DBE  0105               	movlb	5	; () banked
  8224   010DC0  6BAB               	clrf	efgtoa@sign& (0+255),b
  8225                           
  8226                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  8227   010DC2  C583  F5AE         	movff	efgtoa@f,efgtoa@g
  8228   010DC6  C584  F5AF         	movff	efgtoa@f+1,efgtoa@g+1
  8229   010DCA  C585  F5B0         	movff	efgtoa@f+2,efgtoa@g+2
  8230   010DCE  C586  F5B1         	movff	efgtoa@f+3,efgtoa@g+3
  8231   010DD2                     
  8232                           ; BSR set to: 5
  8233                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  8234   010DD2  BFB1               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8235   010DD4  EFF0  F086         	goto	u6560
  8236   010DD8  EFEE  F086         	goto	u6561
  8237   010DDC                     u6561:
  8238   010DDC  EF04  F087         	goto	l8785
  8239   010DE0                     u6560:
  8240   010DE0                     
  8241                           ; BSR set to: 5
  8242                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  8243   010DE0  0E01               	movlw	1
  8244   010DE2  6FAB               	movwf	efgtoa@sign& (0+255),b
  8245   010DE4                     
  8246                           ; BSR set to: 5
  8247                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  8248   010DE4  C5AE  F501         	movff	efgtoa@g,___flneg@f1
  8249   010DE8  C5AF  F502         	movff	efgtoa@g+1,___flneg@f1+1
  8250   010DEC  C5B0  F503         	movff	efgtoa@g+2,___flneg@f1+2
  8251   010DF0  C5B1  F504         	movff	efgtoa@g+3,___flneg@f1+3
  8252   010DF4  EC57  F0B6         	call	___flneg	;wreg free
  8253   010DF8  C501  F5AE         	movff	?___flneg,efgtoa@g
  8254   010DFC  C502  F5AF         	movff	?___flneg+1,efgtoa@g+1
  8255   010E00  C503  F5B0         	movff	?___flneg+2,efgtoa@g+2
  8256   010E04  C504  F5B1         	movff	?___flneg+3,efgtoa@g+3
  8257   010E08                     l8785:
  8258                           
  8259                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  8260   010E08  0E00               	movlw	0
  8261   010E0A  0105               	movlb	5	; () banked
  8262   010E0C  6FAD               	movwf	(efgtoa@n+1)& (0+255),b
  8263   010E0E  0E00               	movlw	0
  8264   010E10  6FAC               	movwf	efgtoa@n& (0+255),b
  8265   010E12                     
  8266                           ; BSR set to: 5
  8267                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  8268   010E12  C6F5  F59B         	movff	_width,efgtoa@w
  8269   010E16  C6F6  F59C         	movff	_width+1,efgtoa@w+1
  8270   010E1A                     
  8271                           ; BSR set to: 5
  8272                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 605:     if (sign
  8273   010E1A  51AB               	movf	efgtoa@sign& (0+255),w,b
  8274   010E1C  B4D8               	btfsc	status,2,c
  8275   010E1E  EF13  F087         	goto	u6571
  8276   010E22  EF15  F087         	goto	u6570
  8277   010E26                     u6571:
  8278   010E26  EF29  F087         	goto	l8799
  8279   010E2A                     u6570:
  8280   010E2A                     
  8281                           ; BSR set to: 5
  8282                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  8283   010E2A  51AB               	movf	efgtoa@sign& (0+255),w,b
  8284   010E2C  A4D8               	btfss	status,2,c
  8285   010E2E  EF1B  F087         	goto	u6581
  8286   010E32  EF1D  F087         	goto	u6580
  8287   010E36                     u6581:
  8288   010E36  EF23  F087         	goto	l8795
  8289   010E3A                     u6580:
  8290   010E3A                     
  8291                           ; BSR set to: 5
  8292   010E3A  0E00               	movlw	0
  8293   010E3C  6F91               	movwf	(_efgtoa$2955+1)& (0+255),b
  8294   010E3E  0E2B               	movlw	43
  8295   010E40  6F90               	movwf	_efgtoa$2955& (0+255),b
  8296   010E42  EF27  F087         	goto	l8797
  8297   010E46                     l8795:
  8298                           
  8299                           ; BSR set to: 5
  8300   010E46  0E00               	movlw	0
  8301   010E48  6F91               	movwf	(_efgtoa$2955+1)& (0+255),b
  8302   010E4A  0E2D               	movlw	45
  8303   010E4C  6F90               	movwf	_efgtoa$2955& (0+255),b
  8304   010E4E                     l8797:
  8305                           
  8306                           ; BSR set to: 5
  8307   010E4E  C590  F5AB         	movff	_efgtoa$2955,efgtoa@sign
  8308   010E52                     l8799:
  8309                           
  8310                           ; BSR set to: 5
  8311                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  8312   010E52  C5AE  F501         	movff	efgtoa@g,___fpclassifyf@x
  8313   010E56  C5AF  F502         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8314   010E5A  C5B0  F503         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8315   010E5E  C5B1  F504         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8316   010E62  EC2B  F0B1         	call	___fpclassifyf	;wreg free
  8317   010E66  0401               	decf	?___fpclassifyf^(0+1280),w,c
  8318   010E68  1002               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
  8319   010E6A  A4D8               	btfss	status,2,c
  8320   010E6C  EF3A  F087         	goto	u6591
  8321   010E70  EF3C  F087         	goto	u6590
  8322   010E74                     u6591:
  8323   010E74  EF6F  F087         	goto	l8817
  8324   010E78                     u6590:
  8325   010E78                     
  8326                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  8327   010E78  0105               	movlb	5	; () banked
  8328   010E7A  51AB               	movf	efgtoa@sign& (0+255),w,b
  8329   010E7C  B4D8               	btfsc	status,2,c
  8330   010E7E  EF43  F087         	goto	u6601
  8331   010E82  EF45  F087         	goto	u6600
  8332   010E86                     u6601:
  8333   010E86  EF4E  F087         	goto	l8809
  8334   010E8A                     u6600:
  8335   010E8A                     
  8336                           ; BSR set to: 5
  8337                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  8338   010E8A  C5AB  F800         	movff	efgtoa@sign,_dbuf
  8339   010E8E                     
  8340                           ; BSR set to: 5
  8341                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 622:    w--;
  8342   010E8E  079B               	decf	efgtoa@w& (0+255),f,b
  8343   010E90  A0D8               	btfss	status,0,c
  8344   010E92  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  8345   010E94                     
  8346                           ; BSR set to: 5
  8347                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  8348   010E94  0E00               	movlw	0
  8349   010E96  6FAD               	movwf	(efgtoa@n+1)& (0+255),b
  8350   010E98  0E01               	movlw	1
  8351   010E9A  6FAC               	movwf	efgtoa@n& (0+255),b
  8352   010E9C                     l8809:
  8353                           
  8354                           ; BSR set to: 5
  8355                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  8356   010E9C  0E00               	movlw	low _dbuf
  8357   010E9E  25AC               	addwf	efgtoa@n& (0+255),w,b
  8358   010EA0  6E01               	movwf	strcpy@dest^(0+1280),c
  8359   010EA2  0E08               	movlw	high _dbuf
  8360   010EA4  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8361   010EA6  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
  8362   010EA8  0EF2               	movlw	low STR_20
  8363   010EAA  6E03               	movwf	strcpy@src^(0+1280),c
  8364   010EAC  0EFF               	movlw	high STR_20
  8365   010EAE  6E04               	movwf	(strcpy@src+1)^(0+1280),c
  8366   010EB0  EC39  F0B6         	call	_strcpy	;wreg free
  8367   010EB4                     l8811:
  8368                           
  8369                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  8370   010EB4  0105               	movlb	5	; () banked
  8371   010EB6  0EFD               	movlw	253
  8372   010EB8  279B               	addwf	efgtoa@w& (0+255),f,b
  8373   010EBA  0EFF               	movlw	255
  8374   010EBC  239C               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8375   010EBE                     
  8376                           ; BSR set to: 5
  8377                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  8378   010EBE  C581  F511         	movff	efgtoa@fp,pad@fp
  8379   010EC2  C582  F512         	movff	efgtoa@fp+1,pad@fp+1
  8380   010EC6  0E00               	movlw	low _dbuf
  8381   010EC8  6E13               	movwf	pad@buf^(0+1280),c
  8382   010ECA  0E08               	movlw	high _dbuf
  8383   010ECC  6E14               	movwf	(pad@buf+1)^(0+1280),c
  8384   010ECE  C59B  F515         	movff	efgtoa@w,pad@p
  8385   010ED2  C59C  F516         	movff	efgtoa@w+1,pad@p+1
  8386   010ED6  EC49  F0B4         	call	_pad	;wreg free
  8387   010EDA  EFDA  F08B         	goto	l2306
  8388   010EDE                     l8817:
  8389                           
  8390                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  8391   010EDE  C5AE  F501         	movff	efgtoa@g,___fpclassifyf@x
  8392   010EE2  C5AF  F502         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8393   010EE6  C5B0  F503         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8394   010EEA  C5B1  F504         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8395   010EEE  EC2B  F0B1         	call	___fpclassifyf	;wreg free
  8396   010EF2  5001               	movf	?___fpclassifyf^(0+1280),w,c
  8397   010EF4  1002               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
  8398   010EF6  A4D8               	btfss	status,2,c
  8399   010EF8  EF80  F087         	goto	u6611
  8400   010EFC  EF82  F087         	goto	u6610
  8401   010F00                     u6611:
  8402   010F00  EFA2  F087         	goto	l8835
  8403   010F04                     u6610:
  8404   010F04                     
  8405                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  8406   010F04  0105               	movlb	5	; () banked
  8407   010F06  51AB               	movf	efgtoa@sign& (0+255),w,b
  8408   010F08  B4D8               	btfsc	status,2,c
  8409   010F0A  EF89  F087         	goto	u6621
  8410   010F0E  EF8B  F087         	goto	u6620
  8411   010F12                     u6621:
  8412   010F12  EF94  F087         	goto	l8827
  8413   010F16                     u6620:
  8414   010F16                     
  8415                           ; BSR set to: 5
  8416                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  8417   010F16  C5AB  F800         	movff	efgtoa@sign,_dbuf
  8418   010F1A                     
  8419                           ; BSR set to: 5
  8420                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 640:    w--;
  8421   010F1A  079B               	decf	efgtoa@w& (0+255),f,b
  8422   010F1C  A0D8               	btfss	status,0,c
  8423   010F1E  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  8424   010F20                     
  8425                           ; BSR set to: 5
  8426                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  8427   010F20  0E00               	movlw	0
  8428   010F22  6FAD               	movwf	(efgtoa@n+1)& (0+255),b
  8429   010F24  0E01               	movlw	1
  8430   010F26  6FAC               	movwf	efgtoa@n& (0+255),b
  8431   010F28                     l8827:
  8432                           
  8433                           ; BSR set to: 5
  8434                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  8435   010F28  0E00               	movlw	low _dbuf
  8436   010F2A  25AC               	addwf	efgtoa@n& (0+255),w,b
  8437   010F2C  6E01               	movwf	strcpy@dest^(0+1280),c
  8438   010F2E  0E08               	movlw	high _dbuf
  8439   010F30  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8440   010F32  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
  8441   010F34  0EF6               	movlw	low STR_23
  8442   010F36  6E03               	movwf	strcpy@src^(0+1280),c
  8443   010F38  0EFF               	movlw	high STR_23
  8444   010F3A  6E04               	movwf	(strcpy@src+1)^(0+1280),c
  8445   010F3C  EC39  F0B6         	call	_strcpy	;wreg free
  8446   010F40  EF5A  F087         	goto	l8811
  8447   010F44                     l8835:
  8448                           
  8449                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  8450   010F44  0E00               	movlw	0
  8451   010F46  0105               	movlb	5	; () banked
  8452   010F48  6FB2               	movwf	efgtoa@u& (0+255),b
  8453   010F4A  0E00               	movlw	0
  8454   010F4C  6FB3               	movwf	(efgtoa@u+1)& (0+255),b
  8455   010F4E  0E80               	movlw	128
  8456   010F50  6FB4               	movwf	(efgtoa@u+2)& (0+255),b
  8457   010F52  0E3F               	movlw	63
  8458   010F54  6FB5               	movwf	(efgtoa@u+3)& (0+255),b
  8459                           
  8460                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  8461   010F56  0E00               	movlw	0
  8462   010F58  6F9A               	movwf	(efgtoa@e+1)& (0+255),b
  8463   010F5A  0E00               	movlw	0
  8464   010F5C  6F99               	movwf	efgtoa@e& (0+255),b
  8465   010F5E                     
  8466                           ; BSR set to: 5
  8467                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  8468   010F5E  C5AE  F501         	movff	efgtoa@g,___fleq@ff1
  8469   010F62  C5AF  F502         	movff	efgtoa@g+1,___fleq@ff1+1
  8470   010F66  C5B0  F503         	movff	efgtoa@g+2,___fleq@ff1+2
  8471   010F6A  C5B1  F504         	movff	efgtoa@g+3,___fleq@ff1+3
  8472   010F6E  0E00               	movlw	0
  8473   010F70  6E05               	movwf	___fleq@ff2^(0+1280),c
  8474   010F72  0E00               	movlw	0
  8475   010F74  6E06               	movwf	(___fleq@ff2+1)^(0+1280),c
  8476   010F76  0E00               	movlw	0
  8477   010F78  6E07               	movwf	(___fleq@ff2+2)^(0+1280),c
  8478   010F7A  0E00               	movlw	0
  8479   010F7C  6E08               	movwf	(___fleq@ff2+3)^(0+1280),c
  8480   010F7E  ECEC  F0B2         	call	___fleq	;wreg free
  8481   010F82  B0D8               	btfsc	status,0,c
  8482   010F84  EFC6  F087         	goto	u6631
  8483   010F88  EFC8  F087         	goto	u6630
  8484   010F8C                     u6631:
  8485   010F8C  EFA7  F088         	goto	l2309
  8486   010F90                     u6630:
  8487   010F90  EFD5  F087         	goto	l8843
  8488   010F94                     l2311:
  8489                           
  8490                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  8491   010F94  C59D  F5B2         	movff	efgtoa@ou,efgtoa@u
  8492   010F98  C59E  F5B3         	movff	efgtoa@ou+1,efgtoa@u+1
  8493   010F9C  C59F  F5B4         	movff	efgtoa@ou+2,efgtoa@u+2
  8494   010FA0  C5A0  F5B5         	movff	efgtoa@ou+3,efgtoa@u+3
  8495   010FA4                     
  8496                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 662:    ++e;
  8497   010FA4  0105               	movlb	5	; () banked
  8498   010FA6  4B99               	infsnz	efgtoa@e& (0+255),f,b
  8499   010FA8  2B9A               	incf	(efgtoa@e+1)& (0+255),f,b
  8500   010FAA                     l8843:
  8501                           
  8502                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  8503   010FAA  C5B2  F505         	movff	efgtoa@u,___flmul@b
  8504   010FAE  C5B3  F506         	movff	efgtoa@u+1,___flmul@b+1
  8505   010FB2  C5B4  F507         	movff	efgtoa@u+2,___flmul@b+2
  8506   010FB6  C5B5  F508         	movff	efgtoa@u+3,___flmul@b+3
  8507   010FBA  0E00               	movlw	0
  8508   010FBC  6E09               	movwf	___flmul@a^(0+1280),c
  8509   010FBE  0E00               	movlw	0
  8510   010FC0  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
  8511   010FC2  0E20               	movlw	32
  8512   010FC4  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
  8513   010FC6  0E41               	movlw	65
  8514   010FC8  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
  8515   010FCA  EC76  F09D         	call	___flmul	;wreg free
  8516   010FCE  C505  F59D         	movff	?___flmul,efgtoa@ou
  8517   010FD2  C506  F59E         	movff	?___flmul+1,efgtoa@ou+1
  8518   010FD6  C507  F59F         	movff	?___flmul+2,efgtoa@ou+2
  8519   010FDA  C508  F5A0         	movff	?___flmul+3,efgtoa@ou+3
  8520   010FDE  0105               	movlb	5	; () banked
  8521   010FE0  519D               	movf	efgtoa@ou& (0+255),w,b
  8522   010FE2  5DAE               	subwf	efgtoa@g& (0+255),w,b
  8523   010FE4  6E01               	movwf	labs@a^(0+1280),c
  8524   010FE6  519E               	movf	(efgtoa@ou+1)& (0+255),w,b
  8525   010FE8  59AF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8526   010FEA  6E02               	movwf	(labs@a+1)^(0+1280),c
  8527   010FEC  519F               	movf	(efgtoa@ou+2)& (0+255),w,b
  8528   010FEE  59B0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8529   010FF0  6E03               	movwf	(labs@a+2)^(0+1280),c
  8530   010FF2  51A0               	movf	(efgtoa@ou+3)& (0+255),w,b
  8531   010FF4  59B1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8532   010FF6  6E04               	movwf	(labs@a+3)^(0+1280),c
  8533   010FF8  EC09  F0B5         	call	_labs	;wreg free
  8534   010FFC  BE04               	btfsc	(?_labs+3)^(0+1280),7,c
  8535   010FFE  EF0C  F088         	goto	u6641
  8536   011002  5004               	movf	(?_labs+3)^(0+1280),w,c
  8537   011004  1003               	iorwf	(?_labs+2)^(0+1280),w,c
  8538   011006  1002               	iorwf	(?_labs+1)^(0+1280),w,c
  8539   011008  E109               	bnz	u6640
  8540   01100A  0E02               	movlw	2
  8541   01100C  5C01               	subwf	?_labs^(0+1280),w,c
  8542   01100E  A0D8               	btfss	status,0,c
  8543   011010  EF0C  F088         	goto	u6641
  8544   011014  EF0E  F088         	goto	u6640
  8545   011018                     u6641:
  8546   011018  EFCA  F087         	goto	l2311
  8547   01101C                     u6640:
  8548   01101C  C59D  F51E         	movff	efgtoa@ou,___flge@ff1
  8549   011020  C59E  F51F         	movff	efgtoa@ou+1,___flge@ff1+1
  8550   011024  C59F  F520         	movff	efgtoa@ou+2,___flge@ff1+2
  8551   011028  C5A0  F521         	movff	efgtoa@ou+3,___flge@ff1+3
  8552   01102C  C5AE  F522         	movff	efgtoa@g,___flge@ff2
  8553   011030  C5AF  F523         	movff	efgtoa@g+1,___flge@ff2+1
  8554   011034  C5B0  F524         	movff	efgtoa@g+2,___flge@ff2+2
  8555   011038  C5B1  F525         	movff	efgtoa@g+3,___flge@ff2+3
  8556   01103C  EC27  F0B0         	call	___flge	;wreg free
  8557   011040  A0D8               	btfss	status,0,c
  8558   011042  EF25  F088         	goto	u6651
  8559   011046  EF27  F088         	goto	u6650
  8560   01104A                     u6651:
  8561   01104A  EFCA  F087         	goto	l2311
  8562   01104E                     u6650:
  8563   01104E                     
  8564                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  8565   01104E  0105               	movlb	5	; () banked
  8566   011050  51B2               	movf	efgtoa@u& (0+255),w,b
  8567   011052  5DAE               	subwf	efgtoa@g& (0+255),w,b
  8568   011054  6E01               	movwf	labs@a^(0+1280),c
  8569   011056  51B3               	movf	(efgtoa@u+1)& (0+255),w,b
  8570   011058  59AF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8571   01105A  6E02               	movwf	(labs@a+1)^(0+1280),c
  8572   01105C  51B4               	movf	(efgtoa@u+2)& (0+255),w,b
  8573   01105E  59B0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8574   011060  6E03               	movwf	(labs@a+2)^(0+1280),c
  8575   011062  51B5               	movf	(efgtoa@u+3)& (0+255),w,b
  8576   011064  59B1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8577   011066  6E04               	movwf	(labs@a+3)^(0+1280),c
  8578   011068  EC09  F0B5         	call	_labs	;wreg free
  8579   01106C  BE04               	btfsc	(?_labs+3)^(0+1280),7,c
  8580   01106E  EF46  F088         	goto	u6660
  8581   011072  5004               	movf	(?_labs+3)^(0+1280),w,c
  8582   011074  1003               	iorwf	(?_labs+2)^(0+1280),w,c
  8583   011076  1002               	iorwf	(?_labs+1)^(0+1280),w,c
  8584   011078  E107               	bnz	u6661
  8585   01107A  0E02               	movlw	2
  8586   01107C  5C01               	subwf	?_labs^(0+1280),w,c
  8587   01107E  B0D8               	btfsc	status,0,c
  8588   011080  EF44  F088         	goto	u6661
  8589   011084  EF46  F088         	goto	u6660
  8590   011088                     u6661:
  8591   011088  EF8E  F088         	goto	l8861
  8592   01108C                     u6660:
  8593   01108C                     l8851:
  8594                           
  8595                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 665:    g = u;
  8596   01108C  C5B2  F5AE         	movff	efgtoa@u,efgtoa@g
  8597   011090  C5B3  F5AF         	movff	efgtoa@u+1,efgtoa@g+1
  8598   011094  C5B4  F5B0         	movff	efgtoa@u+2,efgtoa@g+2
  8599   011098  C5B5  F5B1         	movff	efgtoa@u+3,efgtoa@g+3
  8600                           
  8601                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 666:   }
  8602   01109C  EFA7  F088         	goto	l2309
  8603   0110A0                     l8853:
  8604                           
  8605                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  8606   0110A0  C5B2  F553         	movff	efgtoa@u,___fldiv@b
  8607   0110A4  C5B3  F554         	movff	efgtoa@u+1,___fldiv@b+1
  8608   0110A8  C5B4  F555         	movff	efgtoa@u+2,___fldiv@b+2
  8609   0110AC  C5B5  F556         	movff	efgtoa@u+3,___fldiv@b+3
  8610   0110B0  0E00               	movlw	0
  8611   0110B2  6E57               	movwf	___fldiv@a^(0+1280),c
  8612   0110B4  0E00               	movlw	0
  8613   0110B6  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
  8614   0110B8  0E20               	movlw	32
  8615   0110BA  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
  8616   0110BC  0E41               	movlw	65
  8617   0110BE  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
  8618   0110C0  EC5D  F0A3         	call	___fldiv	;wreg free
  8619   0110C4  C553  F5B2         	movff	?___fldiv,efgtoa@u
  8620   0110C8  C554  F5B3         	movff	?___fldiv+1,efgtoa@u+1
  8621   0110CC  C555  F5B4         	movff	?___fldiv+2,efgtoa@u+2
  8622   0110D0  C556  F5B5         	movff	?___fldiv+3,efgtoa@u+3
  8623   0110D4                     
  8624                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 670:     --e;
  8625   0110D4  0105               	movlb	5	; () banked
  8626   0110D6  0799               	decf	efgtoa@e& (0+255),f,b
  8627   0110D8  A0D8               	btfss	status,0,c
  8628   0110DA  079A               	decf	(efgtoa@e+1)& (0+255),f,b
  8629   0110DC                     
  8630                           ; BSR set to: 5
  8631                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  8632   0110DC  51B2               	movf	efgtoa@u& (0+255),w,b
  8633   0110DE  5DAE               	subwf	efgtoa@g& (0+255),w,b
  8634   0110E0  6E01               	movwf	labs@a^(0+1280),c
  8635   0110E2  51B3               	movf	(efgtoa@u+1)& (0+255),w,b
  8636   0110E4  59AF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8637   0110E6  6E02               	movwf	(labs@a+1)^(0+1280),c
  8638   0110E8  51B4               	movf	(efgtoa@u+2)& (0+255),w,b
  8639   0110EA  59B0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8640   0110EC  6E03               	movwf	(labs@a+2)^(0+1280),c
  8641   0110EE  51B5               	movf	(efgtoa@u+3)& (0+255),w,b
  8642   0110F0  59B1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8643   0110F2  6E04               	movwf	(labs@a+3)^(0+1280),c
  8644   0110F4  EC09  F0B5         	call	_labs	;wreg free
  8645   0110F8  BE04               	btfsc	(?_labs+3)^(0+1280),7,c
  8646   0110FA  EF8C  F088         	goto	u6670
  8647   0110FE  5004               	movf	(?_labs+3)^(0+1280),w,c
  8648   011100  1003               	iorwf	(?_labs+2)^(0+1280),w,c
  8649   011102  1002               	iorwf	(?_labs+1)^(0+1280),w,c
  8650   011104  E107               	bnz	u6671
  8651   011106  0E02               	movlw	2
  8652   011108  5C01               	subwf	?_labs^(0+1280),w,c
  8653   01110A  B0D8               	btfsc	status,0,c
  8654   01110C  EF8A  F088         	goto	u6671
  8655   011110  EF8C  F088         	goto	u6670
  8656   011114                     u6671:
  8657   011114  EF8E  F088         	goto	l8861
  8658   011118                     u6670:
  8659   011118  EF46  F088         	goto	l8851
  8660   01111C                     l8861:
  8661                           
  8662                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  8663   01111C  C5AE  F51E         	movff	efgtoa@g,___flge@ff1
  8664   011120  C5AF  F51F         	movff	efgtoa@g+1,___flge@ff1+1
  8665   011124  C5B0  F520         	movff	efgtoa@g+2,___flge@ff1+2
  8666   011128  C5B1  F521         	movff	efgtoa@g+3,___flge@ff1+3
  8667   01112C  C5B2  F522         	movff	efgtoa@u,___flge@ff2
  8668   011130  C5B3  F523         	movff	efgtoa@u+1,___flge@ff2+1
  8669   011134  C5B4  F524         	movff	efgtoa@u+2,___flge@ff2+2
  8670   011138  C5B5  F525         	movff	efgtoa@u+3,___flge@ff2+3
  8671   01113C  EC27  F0B0         	call	___flge	;wreg free
  8672   011140  A0D8               	btfss	status,0,c
  8673   011142  EFA5  F088         	goto	u6681
  8674   011146  EFA7  F088         	goto	u6680
  8675   01114A                     u6681:
  8676   01114A  EF50  F088         	goto	l8853
  8677   01114E                     u6680:
  8678   01114E                     l2309:
  8679                           
  8680                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  8681   01114E  C587  F593         	movff	efgtoa@c,efgtoa@mode
  8682                           
  8683                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  8684   011152  C593  F594         	movff	efgtoa@mode,efgtoa@nmode
  8685   011156                     
  8686                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  8687   011156  0106               	movlb	6	; () banked
  8688   011158  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  8689   01115A  EFB1  F088         	goto	u6691
  8690   01115E  EFB3  F088         	goto	u6690
  8691   011162                     u6691:
  8692   011162  EFB9  F088         	goto	l8867
  8693   011166                     u6690:
  8694   011166                     
  8695                           ; BSR set to: 6
  8696   011166  C6F7  F58C         	movff	_prec,efgtoa@p
  8697   01116A  C6F8  F58D         	movff	_prec+1,efgtoa@p+1
  8698   01116E  EFBE  F088         	goto	l8869
  8699   011172                     l8867:
  8700                           
  8701                           ; BSR set to: 6
  8702   011172  0E00               	movlw	0
  8703   011174  0105               	movlb	5	; () banked
  8704   011176  6F8D               	movwf	(efgtoa@p+1)& (0+255),b
  8705   011178  0E06               	movlw	6
  8706   01117A  6F8C               	movwf	efgtoa@p& (0+255),b
  8707   01117C                     l8869:
  8708                           
  8709                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 711:     m = p;
  8710   01117C  C58C  F597         	movff	efgtoa@p,efgtoa@m
  8711   011180  C58D  F598         	movff	efgtoa@p+1,efgtoa@m+1
  8712   011184                     
  8713                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 716:         ++m;
  8714   011184  0105               	movlb	5	; () banked
  8715   011186  4B97               	infsnz	efgtoa@m& (0+255),f,b
  8716   011188  2B98               	incf	(efgtoa@m+1)& (0+255),f,b
  8717   01118A                     
  8718                           ; BSR set to: 5
  8719                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  8720   01118A  0E66               	movlw	102
  8721   01118C  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  8722   01118E  A4D8               	btfss	status,2,c
  8723   011190  EFCC  F088         	goto	u6701
  8724   011194  EFCE  F088         	goto	u6700
  8725   011198                     u6701:
  8726   011198  EFEE  F088         	goto	l8883
  8727   01119C                     u6700:
  8728   01119C                     
  8729                           ; BSR set to: 5
  8730                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  8731   01119C  BF9A               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8732   01119E  EFD5  F088         	goto	u6710
  8733   0111A2  EFD3  F088         	goto	u6711
  8734   0111A6                     u6711:
  8735   0111A6  EFE1  F088         	goto	l8879
  8736   0111AA                     u6710:
  8737   0111AA                     
  8738                           ; BSR set to: 5
  8739                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  8740   0111AA  0E00               	movlw	0
  8741   0111AC  6FB2               	movwf	efgtoa@u& (0+255),b
  8742   0111AE  0E00               	movlw	0
  8743   0111B0  6FB3               	movwf	(efgtoa@u+1)& (0+255),b
  8744   0111B2  0E80               	movlw	128
  8745   0111B4  6FB4               	movwf	(efgtoa@u+2)& (0+255),b
  8746   0111B6  0E3F               	movlw	63
  8747   0111B8  6FB5               	movwf	(efgtoa@u+3)& (0+255),b
  8748                           
  8749                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  8750   0111BA  0E00               	movlw	0
  8751   0111BC  6F9A               	movwf	(efgtoa@e+1)& (0+255),b
  8752   0111BE  0E00               	movlw	0
  8753   0111C0  6F99               	movwf	efgtoa@e& (0+255),b
  8754   0111C2                     l8879:
  8755                           
  8756                           ; BSR set to: 5
  8757                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  8758   0111C2  0E67               	movlw	103
  8759   0111C4  1993               	xorwf	efgtoa@mode& (0+255),w,b
  8760   0111C6  B4D8               	btfsc	status,2,c
  8761   0111C8  EFE8  F088         	goto	u6721
  8762   0111CC  EFEA  F088         	goto	u6720
  8763   0111D0                     u6721:
  8764   0111D0  EFEE  F088         	goto	l8883
  8765   0111D4                     u6720:
  8766   0111D4                     
  8767                           ; BSR set to: 5
  8768                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  8769   0111D4  5199               	movf	efgtoa@e& (0+255),w,b
  8770   0111D6  2797               	addwf	efgtoa@m& (0+255),f,b
  8771   0111D8  519A               	movf	(efgtoa@e+1)& (0+255),w,b
  8772   0111DA  2398               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8773   0111DC                     l8883:
  8774                           
  8775                           ; BSR set to: 5
  8776                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  8777   0111DC  0E00               	movlw	0
  8778   0111DE  6FA2               	movwf	(efgtoa@i+1)& (0+255),b
  8779   0111E0  0E00               	movlw	0
  8780   0111E2  6FA1               	movwf	efgtoa@i& (0+255),b
  8781   0111E4                     
  8782                           ; BSR set to: 5
  8783                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  8784   0111E4  C5AE  F5A3         	movff	efgtoa@g,efgtoa@h
  8785   0111E8  C5AF  F5A4         	movff	efgtoa@g+1,efgtoa@h+1
  8786   0111EC  C5B0  F5A5         	movff	efgtoa@g+2,efgtoa@h+2
  8787   0111F0  C5B1  F5A6         	movff	efgtoa@g+3,efgtoa@h+3
  8788   0111F4                     
  8789                           ; BSR set to: 5
  8790                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  8791   0111F4  C5B2  F59D         	movff	efgtoa@u,efgtoa@ou
  8792   0111F8  C5B3  F59E         	movff	efgtoa@u+1,efgtoa@ou+1
  8793   0111FC  C5B4  F59F         	movff	efgtoa@u+2,efgtoa@ou+2
  8794   011200  C5B5  F5A0         	movff	efgtoa@u+3,efgtoa@ou+3
  8795                           
  8796                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  8797   011204  EF7F  F089         	goto	l8897
  8798   011208                     l8889:
  8799                           
  8800                           ; BSR set to: 5
  8801                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  8802   011208  C5A3  F553         	movff	efgtoa@h,___fldiv@b
  8803   01120C  C5A4  F554         	movff	efgtoa@h+1,___fldiv@b+1
  8804   011210  C5A5  F555         	movff	efgtoa@h+2,___fldiv@b+2
  8805   011214  C5A6  F556         	movff	efgtoa@h+3,___fldiv@b+3
  8806   011218  C5B2  F557         	movff	efgtoa@u,___fldiv@a
  8807   01121C  C5B3  F558         	movff	efgtoa@u+1,___fldiv@a+1
  8808   011220  C5B4  F559         	movff	efgtoa@u+2,___fldiv@a+2
  8809   011224  C5B5  F55A         	movff	efgtoa@u+3,___fldiv@a+3
  8810   011228  EC5D  F0A3         	call	___fldiv	;wreg free
  8811   01122C  C553  F56D         	movff	?___fldiv,floorf@x
  8812   011230  C554  F56E         	movff	?___fldiv+1,floorf@x+1
  8813   011234  C555  F56F         	movff	?___fldiv+2,floorf@x+2
  8814   011238  C556  F570         	movff	?___fldiv+3,floorf@x+3
  8815   01123C  ECC2  F0A9         	call	_floorf	;wreg free
  8816   011240  C56D  F5A7         	movff	?_floorf,efgtoa@l
  8817   011244  C56E  F5A8         	movff	?_floorf+1,efgtoa@l+1
  8818   011248  C56F  F5A9         	movff	?_floorf+2,efgtoa@l+2
  8819   01124C  C570  F5AA         	movff	?_floorf+3,efgtoa@l+3
  8820                           
  8821                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  8822   011250  C5A7  F52E         	movff	efgtoa@l,___fltol@f1
  8823   011254  C5A8  F52F         	movff	efgtoa@l+1,___fltol@f1+1
  8824   011258  C5A9  F530         	movff	efgtoa@l+2,___fltol@f1+2
  8825   01125C  C5AA  F531         	movff	efgtoa@l+3,___fltol@f1+3
  8826   011260  ECA4  F0AF         	call	___fltol	;wreg free
  8827   011264  C52E  F595         	movff	?___fltol,efgtoa@d
  8828   011268  C52F  F596         	movff	?___fltol+1,efgtoa@d+1
  8829   01126C                     
  8830                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  8831   01126C  C5A3  F56D         	movff	efgtoa@h,___flsub@b
  8832   011270  C5A4  F56E         	movff	efgtoa@h+1,___flsub@b+1
  8833   011274  C5A5  F56F         	movff	efgtoa@h+2,___flsub@b+2
  8834   011278  C5A6  F570         	movff	efgtoa@h+3,___flsub@b+3
  8835   01127C  C5A7  F509         	movff	efgtoa@l,___flmul@a
  8836   011280  C5A8  F50A         	movff	efgtoa@l+1,___flmul@a+1
  8837   011284  C5A9  F50B         	movff	efgtoa@l+2,___flmul@a+2
  8838   011288  C5AA  F50C         	movff	efgtoa@l+3,___flmul@a+3
  8839   01128C  C5B2  F505         	movff	efgtoa@u,___flmul@b
  8840   011290  C5B3  F506         	movff	efgtoa@u+1,___flmul@b+1
  8841   011294  C5B4  F507         	movff	efgtoa@u+2,___flmul@b+2
  8842   011298  C5B5  F508         	movff	efgtoa@u+3,___flmul@b+3
  8843   01129C  EC76  F09D         	call	___flmul	;wreg free
  8844   0112A0  C505  F571         	movff	?___flmul,___flsub@a
  8845   0112A4  C506  F572         	movff	?___flmul+1,___flsub@a+1
  8846   0112A8  C507  F573         	movff	?___flmul+2,___flsub@a+2
  8847   0112AC  C508  F574         	movff	?___flmul+3,___flsub@a+3
  8848   0112B0  ECD5  F0B5         	call	___flsub	;wreg free
  8849   0112B4  C56D  F5A3         	movff	?___flsub,efgtoa@h
  8850   0112B8  C56E  F5A4         	movff	?___flsub+1,efgtoa@h+1
  8851   0112BC  C56F  F5A5         	movff	?___flsub+2,efgtoa@h+2
  8852   0112C0  C570  F5A6         	movff	?___flsub+3,efgtoa@h+3
  8853   0112C4                     
  8854                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  8855   0112C4  C5B2  F553         	movff	efgtoa@u,___fldiv@b
  8856   0112C8  C5B3  F554         	movff	efgtoa@u+1,___fldiv@b+1
  8857   0112CC  C5B4  F555         	movff	efgtoa@u+2,___fldiv@b+2
  8858   0112D0  C5B5  F556         	movff	efgtoa@u+3,___fldiv@b+3
  8859   0112D4  0E00               	movlw	0
  8860   0112D6  6E57               	movwf	___fldiv@a^(0+1280),c
  8861   0112D8  0E00               	movlw	0
  8862   0112DA  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
  8863   0112DC  0E20               	movlw	32
  8864   0112DE  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
  8865   0112E0  0E41               	movlw	65
  8866   0112E2  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
  8867   0112E4  EC5D  F0A3         	call	___fldiv	;wreg free
  8868   0112E8  C553  F5B2         	movff	?___fldiv,efgtoa@u
  8869   0112EC  C554  F5B3         	movff	?___fldiv+1,efgtoa@u+1
  8870   0112F0  C555  F5B4         	movff	?___fldiv+2,efgtoa@u+2
  8871   0112F4  C556  F5B5         	movff	?___fldiv+3,efgtoa@u+3
  8872   0112F8                     
  8873                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 741:         ++i;
  8874   0112F8  0105               	movlb	5	; () banked
  8875   0112FA  4BA1               	infsnz	efgtoa@i& (0+255),f,b
  8876   0112FC  2BA2               	incf	(efgtoa@i+1)& (0+255),f,b
  8877   0112FE                     l8897:
  8878                           
  8879                           ; BSR set to: 5
  8880                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  8881   0112FE  5197               	movf	efgtoa@m& (0+255),w,b
  8882   011300  5DA1               	subwf	efgtoa@i& (0+255),w,b
  8883   011302  51A2               	movf	(efgtoa@i+1)& (0+255),w,b
  8884   011304  0A80               	xorlw	128
  8885   011306  6F88               	movwf	??_efgtoa& (0+255),b
  8886   011308  5198               	movf	(efgtoa@m+1)& (0+255),w,b
  8887   01130A  0A80               	xorlw	128
  8888   01130C  5988               	subwfb	??_efgtoa& (0+255),w,b
  8889   01130E  A0D8               	btfss	status,0,c
  8890   011310  EF8C  F089         	goto	u6731
  8891   011314  EF8E  F089         	goto	u6730
  8892   011318                     u6731:
  8893   011318  EF04  F089         	goto	l8889
  8894   01131C                     u6730:
  8895   01131C                     
  8896                           ; BSR set to: 5
  8897                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  8898   01131C  C5B2  F505         	movff	efgtoa@u,___flmul@b
  8899   011320  C5B3  F506         	movff	efgtoa@u+1,___flmul@b+1
  8900   011324  C5B4  F507         	movff	efgtoa@u+2,___flmul@b+2
  8901   011328  C5B5  F508         	movff	efgtoa@u+3,___flmul@b+3
  8902   01132C  0E00               	movlw	0
  8903   01132E  6E09               	movwf	___flmul@a^(0+1280),c
  8904   011330  0E00               	movlw	0
  8905   011332  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
  8906   011334  0EA0               	movlw	160
  8907   011336  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
  8908   011338  0E40               	movlw	64
  8909   01133A  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
  8910   01133C  EC76  F09D         	call	___flmul	;wreg free
  8911   011340  C505  F5A7         	movff	?___flmul,efgtoa@l
  8912   011344  C506  F5A8         	movff	?___flmul+1,efgtoa@l+1
  8913   011348  C507  F5A9         	movff	?___flmul+2,efgtoa@l+2
  8914   01134C  C508  F5AA         	movff	?___flmul+3,efgtoa@l+3
  8915   011350                     
  8916                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  8917   011350  C5A3  F51E         	movff	efgtoa@h,___flge@ff1
  8918   011354  C5A4  F51F         	movff	efgtoa@h+1,___flge@ff1+1
  8919   011358  C5A5  F520         	movff	efgtoa@h+2,___flge@ff1+2
  8920   01135C  C5A6  F521         	movff	efgtoa@h+3,___flge@ff1+3
  8921   011360  C5A7  F522         	movff	efgtoa@l,___flge@ff2
  8922   011364  C5A8  F523         	movff	efgtoa@l+1,___flge@ff2+1
  8923   011368  C5A9  F524         	movff	efgtoa@l+2,___flge@ff2+2
  8924   01136C  C5AA  F525         	movff	efgtoa@l+3,___flge@ff2+3
  8925   011370  EC27  F0B0         	call	___flge	;wreg free
  8926   011374  B0D8               	btfsc	status,0,c
  8927   011376  EFBF  F089         	goto	u6741
  8928   01137A  EFC1  F089         	goto	u6740
  8929   01137E                     u6741:
  8930   01137E  EFCC  F089         	goto	l8905
  8931   011382                     u6740:
  8932   011382                     
  8933                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  8934   011382  0E00               	movlw	0
  8935   011384  0105               	movlb	5	; () banked
  8936   011386  6FA7               	movwf	efgtoa@l& (0+255),b
  8937   011388  0E00               	movlw	0
  8938   01138A  6FA8               	movwf	(efgtoa@l+1)& (0+255),b
  8939   01138C  0E00               	movlw	0
  8940   01138E  6FA9               	movwf	(efgtoa@l+2)& (0+255),b
  8941   011390  0E00               	movlw	0
  8942   011392  6FAA               	movwf	(efgtoa@l+3)& (0+255),b
  8943                           
  8944                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 748:     } else {
  8945   011394  EFF5  F089         	goto	l8911
  8946   011398                     l8905:
  8947                           
  8948                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  8949   011398  C5A3  F501         	movff	efgtoa@h,___fleq@ff1
  8950   01139C  C5A4  F502         	movff	efgtoa@h+1,___fleq@ff1+1
  8951   0113A0  C5A5  F503         	movff	efgtoa@h+2,___fleq@ff1+2
  8952   0113A4  C5A6  F504         	movff	efgtoa@h+3,___fleq@ff1+3
  8953   0113A8  C5A7  F505         	movff	efgtoa@l,___fleq@ff2
  8954   0113AC  C5A8  F506         	movff	efgtoa@l+1,___fleq@ff2+1
  8955   0113B0  C5A9  F507         	movff	efgtoa@l+2,___fleq@ff2+2
  8956   0113B4  C5AA  F508         	movff	efgtoa@l+3,___fleq@ff2+3
  8957   0113B8  ECEC  F0B2         	call	___fleq	;wreg free
  8958   0113BC  A0D8               	btfss	status,0,c
  8959   0113BE  EFE3  F089         	goto	u6751
  8960   0113C2  EFE5  F089         	goto	u6750
  8961   0113C6                     u6751:
  8962   0113C6  EFF5  F089         	goto	l8911
  8963   0113CA                     u6750:
  8964   0113CA  0105               	movlb	5	; () banked
  8965   0113CC  B195               	btfsc	efgtoa@d& (0+255),0,b
  8966   0113CE  EFEB  F089         	goto	u6761
  8967   0113D2  EFED  F089         	goto	u6760
  8968   0113D6                     u6761:
  8969   0113D6  EFF5  F089         	goto	l8911
  8970   0113DA                     u6760:
  8971   0113DA                     
  8972                           ; BSR set to: 5
  8973                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  8974   0113DA  0E00               	movlw	0
  8975   0113DC  6FA7               	movwf	efgtoa@l& (0+255),b
  8976   0113DE  0E00               	movlw	0
  8977   0113E0  6FA8               	movwf	(efgtoa@l+1)& (0+255),b
  8978   0113E2  0E00               	movlw	0
  8979   0113E4  6FA9               	movwf	(efgtoa@l+2)& (0+255),b
  8980   0113E6  0E00               	movlw	0
  8981   0113E8  6FAA               	movwf	(efgtoa@l+3)& (0+255),b
  8982   0113EA                     l8911:
  8983                           
  8984                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  8985   0113EA  C5AE  F51E         	movff	efgtoa@g,___fladd@b
  8986   0113EE  C5AF  F51F         	movff	efgtoa@g+1,___fladd@b+1
  8987   0113F2  C5B0  F520         	movff	efgtoa@g+2,___fladd@b+2
  8988   0113F6  C5B1  F521         	movff	efgtoa@g+3,___fladd@b+3
  8989   0113FA  C5A7  F522         	movff	efgtoa@l,___fladd@a
  8990   0113FE  C5A8  F523         	movff	efgtoa@l+1,___fladd@a+1
  8991   011402  C5A9  F524         	movff	efgtoa@l+2,___fladd@a+2
  8992   011406  C5AA  F525         	movff	efgtoa@l+3,___fladd@a+3
  8993   01140A  EC1B  F09B         	call	___fladd	;wreg free
  8994   01140E  C51E  F5A3         	movff	?___fladd,efgtoa@h
  8995   011412  C51F  F5A4         	movff	?___fladd+1,efgtoa@h+1
  8996   011416  C520  F5A5         	movff	?___fladd+2,efgtoa@h+2
  8997   01141A  C521  F5A6         	movff	?___fladd+3,efgtoa@h+3
  8998   01141E                     
  8999                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  9000   01141E  C5A3  F51E         	movff	efgtoa@h,___flge@ff1
  9001   011422  C5A4  F51F         	movff	efgtoa@h+1,___flge@ff1+1
  9002   011426  C5A5  F520         	movff	efgtoa@h+2,___flge@ff1+2
  9003   01142A  C5A6  F521         	movff	efgtoa@h+3,___flge@ff1+3
  9004   01142E  0E00               	movlw	0
  9005   011430  6E09               	movwf	___flmul@a^(0+1280),c
  9006   011432  0E00               	movlw	0
  9007   011434  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
  9008   011436  0E20               	movlw	32
  9009   011438  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
  9010   01143A  0E41               	movlw	65
  9011   01143C  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
  9012   01143E  C59D  F505         	movff	efgtoa@ou,___flmul@b
  9013   011442  C59E  F506         	movff	efgtoa@ou+1,___flmul@b+1
  9014   011446  C59F  F507         	movff	efgtoa@ou+2,___flmul@b+2
  9015   01144A  C5A0  F508         	movff	efgtoa@ou+3,___flmul@b+3
  9016   01144E  EC76  F09D         	call	___flmul	;wreg free
  9017   011452  C505  F522         	movff	?___flmul,___flge@ff2
  9018   011456  C506  F523         	movff	?___flmul+1,___flge@ff2+1
  9019   01145A  C507  F524         	movff	?___flmul+2,___flge@ff2+2
  9020   01145E  C508  F525         	movff	?___flmul+3,___flge@ff2+3
  9021   011462  EC27  F0B0         	call	___flge	;wreg free
  9022   011466  A0D8               	btfss	status,0,c
  9023   011468  EF38  F08A         	goto	u6771
  9024   01146C  EF3A  F08A         	goto	u6770
  9025   011470                     u6771:
  9026   011470  EF63  F08A         	goto	l8923
  9027   011474                     u6770:
  9028   011474                     
  9029                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 759:   e++;
  9030   011474  0105               	movlb	5	; () banked
  9031   011476  4B99               	infsnz	efgtoa@e& (0+255),f,b
  9032   011478  2B9A               	incf	(efgtoa@e+1)& (0+255),f,b
  9033   01147A                     
  9034                           ; BSR set to: 5
  9035                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  9036   01147A  C59D  F505         	movff	efgtoa@ou,___flmul@b
  9037   01147E  C59E  F506         	movff	efgtoa@ou+1,___flmul@b+1
  9038   011482  C59F  F507         	movff	efgtoa@ou+2,___flmul@b+2
  9039   011486  C5A0  F508         	movff	efgtoa@ou+3,___flmul@b+3
  9040   01148A  0E00               	movlw	0
  9041   01148C  6E09               	movwf	___flmul@a^(0+1280),c
  9042   01148E  0E00               	movlw	0
  9043   011490  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
  9044   011492  0E20               	movlw	32
  9045   011494  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
  9046   011496  0E41               	movlw	65
  9047   011498  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
  9048   01149A  EC76  F09D         	call	___flmul	;wreg free
  9049   01149E  C505  F59D         	movff	?___flmul,efgtoa@ou
  9050   0114A2  C506  F59E         	movff	?___flmul+1,efgtoa@ou+1
  9051   0114A6  C507  F59F         	movff	?___flmul+2,efgtoa@ou+2
  9052   0114AA  C508  F5A0         	movff	?___flmul+3,efgtoa@ou+3
  9053   0114AE                     
  9054                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  9055   0114AE  0E66               	movlw	102
  9056   0114B0  0105               	movlb	5	; () banked
  9057   0114B2  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  9058   0114B4  A4D8               	btfss	status,2,c
  9059   0114B6  EF5F  F08A         	goto	u6781
  9060   0114BA  EF61  F08A         	goto	u6780
  9061   0114BE                     u6781:
  9062   0114BE  EF63  F08A         	goto	l8923
  9063   0114C2                     u6780:
  9064   0114C2                     
  9065                           ; BSR set to: 5
  9066                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 764:    m++;
  9067   0114C2  4B97               	infsnz	efgtoa@m& (0+255),f,b
  9068   0114C4  2B98               	incf	(efgtoa@m+1)& (0+255),f,b
  9069   0114C6                     l8923:
  9070                           
  9071                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  9072   0114C6  C59D  F5B2         	movff	efgtoa@ou,efgtoa@u
  9073   0114CA  C59E  F5B3         	movff	efgtoa@ou+1,efgtoa@u+1
  9074   0114CE  C59F  F5B4         	movff	efgtoa@ou+2,efgtoa@u+2
  9075   0114D2  C5A0  F5B5         	movff	efgtoa@ou+3,efgtoa@u+3
  9076   0114D6                     
  9077                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  9078   0114D6  C599  F58A         	movff	efgtoa@e,efgtoa@ne
  9079   0114DA  C59A  F58B         	movff	efgtoa@e+1,efgtoa@ne+1
  9080   0114DE                     
  9081                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  9082   0114DE  0105               	movlb	5	; () banked
  9083   0114E0  6B92               	clrf	efgtoa@pp& (0+255),b
  9084   0114E2                     
  9085                           ; BSR set to: 5
  9086                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  9087   0114E2  0E00               	movlw	0
  9088   0114E4  6F8F               	movwf	(efgtoa@t+1)& (0+255),b
  9089   0114E6  0E00               	movlw	0
  9090   0114E8  6F8E               	movwf	efgtoa@t& (0+255),b
  9091   0114EA                     
  9092                           ; BSR set to: 5
  9093                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  9094   0114EA  0E00               	movlw	0
  9095   0114EC  6FA2               	movwf	(efgtoa@i+1)& (0+255),b
  9096   0114EE  0E00               	movlw	0
  9097   0114F0  6FA1               	movwf	efgtoa@i& (0+255),b
  9098                           
  9099                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9100   0114F2  EF60  F08B         	goto	l8973
  9101   0114F6                     l8933:
  9102                           
  9103                           ; BSR set to: 5
  9104                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  9105   0114F6  C5A3  F553         	movff	efgtoa@h,___fldiv@b
  9106   0114FA  C5A4  F554         	movff	efgtoa@h+1,___fldiv@b+1
  9107   0114FE  C5A5  F555         	movff	efgtoa@h+2,___fldiv@b+2
  9108   011502  C5A6  F556         	movff	efgtoa@h+3,___fldiv@b+3
  9109   011506  C5B2  F557         	movff	efgtoa@u,___fldiv@a
  9110   01150A  C5B3  F558         	movff	efgtoa@u+1,___fldiv@a+1
  9111   01150E  C5B4  F559         	movff	efgtoa@u+2,___fldiv@a+2
  9112   011512  C5B5  F55A         	movff	efgtoa@u+3,___fldiv@a+3
  9113   011516  EC5D  F0A3         	call	___fldiv	;wreg free
  9114   01151A  C553  F56D         	movff	?___fldiv,floorf@x
  9115   01151E  C554  F56E         	movff	?___fldiv+1,floorf@x+1
  9116   011522  C555  F56F         	movff	?___fldiv+2,floorf@x+2
  9117   011526  C556  F570         	movff	?___fldiv+3,floorf@x+3
  9118   01152A  ECC2  F0A9         	call	_floorf	;wreg free
  9119   01152E  C56D  F5A7         	movff	?_floorf,efgtoa@l
  9120   011532  C56E  F5A8         	movff	?_floorf+1,efgtoa@l+1
  9121   011536  C56F  F5A9         	movff	?_floorf+2,efgtoa@l+2
  9122   01153A  C570  F5AA         	movff	?_floorf+3,efgtoa@l+3
  9123                           
  9124                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  9125   01153E  C5A7  F52E         	movff	efgtoa@l,___fltol@f1
  9126   011542  C5A8  F52F         	movff	efgtoa@l+1,___fltol@f1+1
  9127   011546  C5A9  F530         	movff	efgtoa@l+2,___fltol@f1+2
  9128   01154A  C5AA  F531         	movff	efgtoa@l+3,___fltol@f1+3
  9129   01154E  ECA4  F0AF         	call	___fltol	;wreg free
  9130   011552  BE2F               	btfsc	(?___fltol+1)^(0+1280),7,c
  9131   011554  EFB7  F08A         	goto	u6790
  9132   011558  502F               	movf	(?___fltol+1)^(0+1280),w,c
  9133   01155A  E107               	bnz	u6791
  9134   01155C  0E0A               	movlw	10
  9135   01155E  5C2E               	subwf	?___fltol^(0+1280),w,c
  9136   011560  B0D8               	btfsc	status,0,c
  9137   011562  EFB5  F08A         	goto	u6791
  9138   011566  EFB7  F08A         	goto	u6790
  9139   01156A                     u6791:
  9140   01156A  EFC7  F08A         	goto	l8937
  9141   01156E                     u6790:
  9142   01156E  C5A7  F52E         	movff	efgtoa@l,___fltol@f1
  9143   011572  C5A8  F52F         	movff	efgtoa@l+1,___fltol@f1+1
  9144   011576  C5A9  F530         	movff	efgtoa@l+2,___fltol@f1+2
  9145   01157A  C5AA  F531         	movff	efgtoa@l+3,___fltol@f1+3
  9146   01157E  ECA4  F0AF         	call	___fltol	;wreg free
  9147   011582  C52E  F595         	movff	?___fltol,efgtoa@d
  9148   011586  C52F  F596         	movff	?___fltol+1,efgtoa@d+1
  9149   01158A  EFCC  F08A         	goto	l2339
  9150   01158E                     l8937:
  9151   01158E  0E00               	movlw	0
  9152   011590  0105               	movlb	5	; () banked
  9153   011592  6F96               	movwf	(efgtoa@d+1)& (0+255),b
  9154   011594  0E09               	movlw	9
  9155   011596  6F95               	movwf	efgtoa@d& (0+255),b
  9156   011598                     l2339:
  9157                           
  9158                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  9159   011598  0105               	movlb	5	; () banked
  9160   01159A  5192               	movf	efgtoa@pp& (0+255),w,b
  9161   01159C  A4D8               	btfss	status,2,c
  9162   01159E  EFD3  F08A         	goto	u6801
  9163   0115A2  EFD5  F08A         	goto	u6800
  9164   0115A6                     u6801:
  9165   0115A6  EFFD  F08A         	goto	l8957
  9166   0115AA                     u6800:
  9167   0115AA                     
  9168                           ; BSR set to: 5
  9169   0115AA  BF8B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9170   0115AC  EFDC  F08A         	goto	u6810
  9171   0115B0  EFDA  F08A         	goto	u6811
  9172   0115B4                     u6811:
  9173   0115B4  EFFD  F08A         	goto	l8957
  9174   0115B8                     u6810:
  9175   0115B8                     
  9176                           ; BSR set to: 5
  9177                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  9178   0115B8  0E00               	movlw	low _dbuf
  9179   0115BA  25AC               	addwf	efgtoa@n& (0+255),w,b
  9180   0115BC  6ED9               	movwf	fsr2l,c
  9181   0115BE  0E08               	movlw	high _dbuf
  9182   0115C0  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9183   0115C2  6EDA               	movwf	fsr2h,c
  9184   0115C4  0E2E               	movlw	46
  9185   0115C6  6EDF               	movwf	indf2,c
  9186   0115C8                     
  9187                           ; BSR set to: 5
  9188   0115C8  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  9189   0115CA  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  9190   0115CC                     
  9191                           ; BSR set to: 5
  9192                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  9193   0115CC  079B               	decf	efgtoa@w& (0+255),f,b
  9194   0115CE  A0D8               	btfss	status,0,c
  9195   0115D0  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  9196   0115D2                     
  9197                           ; BSR set to: 5
  9198                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  9199   0115D2  0E01               	movlw	1
  9200   0115D4  6F92               	movwf	efgtoa@pp& (0+255),b
  9201   0115D6  EFFD  F08A         	goto	l8957
  9202   0115DA                     l8949:
  9203                           
  9204                           ; BSR set to: 5
  9205                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  9206   0115DA  0E00               	movlw	low _dbuf
  9207   0115DC  25AC               	addwf	efgtoa@n& (0+255),w,b
  9208   0115DE  6ED9               	movwf	fsr2l,c
  9209   0115E0  0E08               	movlw	high _dbuf
  9210   0115E2  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9211   0115E4  6EDA               	movwf	fsr2h,c
  9212   0115E6  0E30               	movlw	48
  9213   0115E8  6EDF               	movwf	indf2,c
  9214   0115EA                     
  9215                           ; BSR set to: 5
  9216   0115EA  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  9217   0115EC  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  9218   0115EE                     
  9219                           ; BSR set to: 5
  9220                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  9221   0115EE  079B               	decf	efgtoa@w& (0+255),f,b
  9222   0115F0  A0D8               	btfss	status,0,c
  9223   0115F2  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  9224   0115F4                     
  9225                           ; BSR set to: 5
  9226                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  9227   0115F4  078E               	decf	efgtoa@t& (0+255),f,b
  9228   0115F6  A0D8               	btfss	status,0,c
  9229   0115F8  078F               	decf	(efgtoa@t+1)& (0+255),f,b
  9230   0115FA                     l8957:
  9231                           
  9232                           ; BSR set to: 5
  9233                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  9234   0115FA  518E               	movf	efgtoa@t& (0+255),w,b
  9235   0115FC  118F               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9236   0115FE  A4D8               	btfss	status,2,c
  9237   011600  EF04  F08B         	goto	u6821
  9238   011604  EF06  F08B         	goto	u6820
  9239   011608                     u6821:
  9240   011608  EFED  F08A         	goto	l8949
  9241   01160C                     u6820:
  9242   01160C                     
  9243                           ; BSR set to: 5
  9244                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  9245   01160C  0E00               	movlw	low _dbuf
  9246   01160E  25AC               	addwf	efgtoa@n& (0+255),w,b
  9247   011610  6ED9               	movwf	fsr2l,c
  9248   011612  0E08               	movlw	high _dbuf
  9249   011614  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9250   011616  6EDA               	movwf	fsr2h,c
  9251   011618  5195               	movf	efgtoa@d& (0+255),w,b
  9252   01161A  0F30               	addlw	48
  9253   01161C  6EDF               	movwf	indf2,c
  9254   01161E                     
  9255                           ; BSR set to: 5
  9256   01161E  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  9257   011620  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  9258   011622                     
  9259                           ; BSR set to: 5
  9260                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  9261   011622  079B               	decf	efgtoa@w& (0+255),f,b
  9262   011624  A0D8               	btfss	status,0,c
  9263   011626  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  9264   011628                     
  9265                           ; BSR set to: 5
  9266                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  9267   011628  C5A3  F56D         	movff	efgtoa@h,___flsub@b
  9268   01162C  C5A4  F56E         	movff	efgtoa@h+1,___flsub@b+1
  9269   011630  C5A5  F56F         	movff	efgtoa@h+2,___flsub@b+2
  9270   011634  C5A6  F570         	movff	efgtoa@h+3,___flsub@b+3
  9271   011638  C5A7  F509         	movff	efgtoa@l,___flmul@a
  9272   01163C  C5A8  F50A         	movff	efgtoa@l+1,___flmul@a+1
  9273   011640  C5A9  F50B         	movff	efgtoa@l+2,___flmul@a+2
  9274   011644  C5AA  F50C         	movff	efgtoa@l+3,___flmul@a+3
  9275   011648  C5B2  F505         	movff	efgtoa@u,___flmul@b
  9276   01164C  C5B3  F506         	movff	efgtoa@u+1,___flmul@b+1
  9277   011650  C5B4  F507         	movff	efgtoa@u+2,___flmul@b+2
  9278   011654  C5B5  F508         	movff	efgtoa@u+3,___flmul@b+3
  9279   011658  EC76  F09D         	call	___flmul	;wreg free
  9280   01165C  C505  F571         	movff	?___flmul,___flsub@a
  9281   011660  C506  F572         	movff	?___flmul+1,___flsub@a+1
  9282   011664  C507  F573         	movff	?___flmul+2,___flsub@a+2
  9283   011668  C508  F574         	movff	?___flmul+3,___flsub@a+3
  9284   01166C  ECD5  F0B5         	call	___flsub	;wreg free
  9285   011670  C56D  F5A3         	movff	?___flsub,efgtoa@h
  9286   011674  C56E  F5A4         	movff	?___flsub+1,efgtoa@h+1
  9287   011678  C56F  F5A5         	movff	?___flsub+2,efgtoa@h+2
  9288   01167C  C570  F5A6         	movff	?___flsub+3,efgtoa@h+3
  9289   011680                     
  9290                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  9291   011680  C5B2  F553         	movff	efgtoa@u,___fldiv@b
  9292   011684  C5B3  F554         	movff	efgtoa@u+1,___fldiv@b+1
  9293   011688  C5B4  F555         	movff	efgtoa@u+2,___fldiv@b+2
  9294   01168C  C5B5  F556         	movff	efgtoa@u+3,___fldiv@b+3
  9295   011690  0E00               	movlw	0
  9296   011692  6E57               	movwf	___fldiv@a^(0+1280),c
  9297   011694  0E00               	movlw	0
  9298   011696  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
  9299   011698  0E20               	movlw	32
  9300   01169A  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
  9301   01169C  0E41               	movlw	65
  9302   01169E  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
  9303   0116A0  EC5D  F0A3         	call	___fldiv	;wreg free
  9304   0116A4  C553  F5B2         	movff	?___fldiv,efgtoa@u
  9305   0116A8  C554  F5B3         	movff	?___fldiv+1,efgtoa@u+1
  9306   0116AC  C555  F5B4         	movff	?___fldiv+2,efgtoa@u+2
  9307   0116B0  C556  F5B5         	movff	?___fldiv+3,efgtoa@u+3
  9308   0116B4                     
  9309                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  9310   0116B4  0105               	movlb	5	; () banked
  9311   0116B6  078A               	decf	efgtoa@ne& (0+255),f,b
  9312   0116B8  A0D8               	btfss	status,0,c
  9313   0116BA  078B               	decf	(efgtoa@ne+1)& (0+255),f,b
  9314   0116BC                     
  9315                           ; BSR set to: 5
  9316                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 809:         ++i;
  9317   0116BC  4BA1               	infsnz	efgtoa@i& (0+255),f,b
  9318   0116BE  2BA2               	incf	(efgtoa@i+1)& (0+255),f,b
  9319   0116C0                     l8973:
  9320                           
  9321                           ; BSR set to: 5
  9322                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9323   0116C0  5197               	movf	efgtoa@m& (0+255),w,b
  9324   0116C2  5DA1               	subwf	efgtoa@i& (0+255),w,b
  9325   0116C4  51A2               	movf	(efgtoa@i+1)& (0+255),w,b
  9326   0116C6  0A80               	xorlw	128
  9327   0116C8  6F88               	movwf	??_efgtoa& (0+255),b
  9328   0116CA  5198               	movf	(efgtoa@m+1)& (0+255),w,b
  9329   0116CC  0A80               	xorlw	128
  9330   0116CE  5988               	subwfb	??_efgtoa& (0+255),w,b
  9331   0116D0  B0D8               	btfsc	status,0,c
  9332   0116D2  EF6D  F08B         	goto	u6831
  9333   0116D6  EF6F  F08B         	goto	u6830
  9334   0116DA                     u6831:
  9335   0116DA  EF7D  F08B         	goto	l8977
  9336   0116DE                     u6830:
  9337   0116DE                     
  9338                           ; BSR set to: 5
  9339   0116DE  BFAD               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9340   0116E0  EF7B  F08B         	goto	u6841
  9341   0116E4  51AD               	movf	(efgtoa@n+1)& (0+255),w,b
  9342   0116E6  E109               	bnz	u6840
  9343   0116E8  0E4B               	movlw	75
  9344   0116EA  5DAC               	subwf	efgtoa@n& (0+255),w,b
  9345   0116EC  A0D8               	btfss	status,0,c
  9346   0116EE  EF7B  F08B         	goto	u6841
  9347   0116F2  EF7D  F08B         	goto	u6840
  9348   0116F6                     u6841:
  9349   0116F6  EF7B  F08A         	goto	l8933
  9350   0116FA                     u6840:
  9351   0116FA                     l8977:
  9352                           
  9353                           ; BSR set to: 5
  9354                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  9355   0116FA  0E00               	movlw	0
  9356   0116FC  6FA2               	movwf	(efgtoa@i+1)& (0+255),b
  9357   0116FE  0E4F               	movlw	79
  9358   011700  6FA1               	movwf	efgtoa@i& (0+255),b
  9359   011702                     
  9360                           ; BSR set to: 5
  9361                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  9362   011702  0E00               	movlw	low _dbuf
  9363   011704  25A1               	addwf	efgtoa@i& (0+255),w,b
  9364   011706  6ED9               	movwf	fsr2l,c
  9365   011708  0E08               	movlw	high _dbuf
  9366   01170A  21A2               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9367   01170C  6EDA               	movwf	fsr2h,c
  9368   01170E  6ADF               	clrf	indf2,c
  9369   011710                     
  9370                           ; BSR set to: 5
  9371                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  9372   011710  0E00               	movlw	low _dbuf
  9373   011712  6F88               	movwf	??_efgtoa& (0+255),b
  9374   011714  0E08               	movlw	high _dbuf
  9375   011716  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  9376   011718  51AC               	movf	efgtoa@n& (0+255),w,b
  9377   01171A  5F88               	subwf	??_efgtoa& (0+255),f,b
  9378   01171C  51AD               	movf	(efgtoa@n+1)& (0+255),w,b
  9379   01171E  5B89               	subwfb	(??_efgtoa+1)& (0+255),f,b
  9380   011720  51A1               	movf	efgtoa@i& (0+255),w,b
  9381   011722  2588               	addwf	??_efgtoa& (0+255),w,b
  9382   011724  6E01               	movwf	memcpy@d1^(0+1280),c
  9383   011726  51A2               	movf	(efgtoa@i+1)& (0+255),w,b
  9384   011728  2189               	addwfc	(??_efgtoa+1)& (0+255),w,b
  9385   01172A  6E02               	movwf	(memcpy@d1+1)^(0+1280),c
  9386   01172C  0E00               	movlw	low _dbuf
  9387   01172E  6E03               	movwf	memcpy@s1^(0+1280),c
  9388   011730  0E08               	movlw	high _dbuf
  9389   011732  6E04               	movwf	(memcpy@s1+1)^(0+1280),c
  9390   011734  C5AC  F505         	movff	efgtoa@n,memcpy@n
  9391   011738  C5AD  F506         	movff	efgtoa@n+1,memcpy@n+1
  9392   01173C  EC85  F0B5         	call	_memcpy	;wreg free
  9393   011740                     
  9394                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  9395   011740  0105               	movlb	5	; () banked
  9396   011742  51AC               	movf	efgtoa@n& (0+255),w,b
  9397   011744  5DA1               	subwf	efgtoa@i& (0+255),w,b
  9398   011746  6FAC               	movwf	efgtoa@n& (0+255),b
  9399   011748  51AD               	movf	(efgtoa@n+1)& (0+255),w,b
  9400   01174A  59A2               	subwfb	(efgtoa@i+1)& (0+255),w,b
  9401   01174C  6FAD               	movwf	(efgtoa@n+1)& (0+255),b
  9402   01174E                     
  9403                           ; BSR set to: 5
  9404                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  9405   01174E  51AB               	movf	efgtoa@sign& (0+255),w,b
  9406   011750  A4D8               	btfss	status,2,c
  9407   011752  EFAD  F08B         	goto	u6851
  9408   011756  EFB0  F08B         	goto	u6850
  9409   01175A                     u6851:
  9410   01175A  0E01               	movlw	1
  9411   01175C  EFB1  F08B         	goto	u6860
  9412   011760                     u6850:
  9413   011760  0E00               	movlw	0
  9414   011762                     u6860:
  9415   011762  6FA1               	movwf	efgtoa@i& (0+255),b
  9416   011764  6BA2               	clrf	(efgtoa@i+1)& (0+255),b
  9417   011766                     
  9418                           ; BSR set to: 5
  9419                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  9420   011766  51AB               	movf	efgtoa@sign& (0+255),w,b
  9421   011768  B4D8               	btfsc	status,2,c
  9422   01176A  EFB9  F08B         	goto	u6871
  9423   01176E  EFBB  F08B         	goto	u6870
  9424   011772                     u6871:
  9425   011772  EFC6  F08B         	goto	l8991
  9426   011776                     u6870:
  9427   011776                     
  9428                           ; BSR set to: 5
  9429                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  9430   011776  07AC               	decf	efgtoa@n& (0+255),f,b
  9431   011778  A0D8               	btfss	status,0,c
  9432   01177A  07AD               	decf	(efgtoa@n+1)& (0+255),f,b
  9433   01177C  0E00               	movlw	low _dbuf
  9434   01177E  25AC               	addwf	efgtoa@n& (0+255),w,b
  9435   011780  6ED9               	movwf	fsr2l,c
  9436   011782  0E08               	movlw	high _dbuf
  9437   011784  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9438   011786  6EDA               	movwf	fsr2h,c
  9439   011788  C5AB  F4DF         	movff	efgtoa@sign,indf2
  9440   01178C                     l8991:
  9441                           
  9442                           ; BSR set to: 5
  9443                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  9444   01178C  51A1               	movf	efgtoa@i& (0+255),w,b
  9445   01178E  5F9B               	subwf	efgtoa@w& (0+255),f,b
  9446   011790  51A2               	movf	(efgtoa@i+1)& (0+255),w,b
  9447   011792  5B9C               	subwfb	(efgtoa@w+1)& (0+255),f,b
  9448   011794                     
  9449                           ; BSR set to: 5
  9450                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  9451   011794  C581  F511         	movff	efgtoa@fp,pad@fp
  9452   011798  C582  F512         	movff	efgtoa@fp+1,pad@fp+1
  9453   01179C  0E00               	movlw	low _dbuf
  9454   01179E  25AC               	addwf	efgtoa@n& (0+255),w,b
  9455   0117A0  6E13               	movwf	pad@buf^(0+1280),c
  9456   0117A2  0E08               	movlw	high _dbuf
  9457   0117A4  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9458   0117A6  6E14               	movwf	(pad@buf+1)^(0+1280),c
  9459   0117A8  C59B  F515         	movff	efgtoa@w,pad@p
  9460   0117AC  C59C  F516         	movff	efgtoa@w+1,pad@p+1
  9461   0117B0  EC49  F0B4         	call	_pad	;wreg free
  9462   0117B4                     l2306:
  9463   0117B4  0012               	return		;funcret
  9464   0117B6                     __end_of_efgtoa:
  9465                           	callstack 0
  9466                           
  9467 ;; *************** function _strcpy *****************
  9468 ;; Defined at:
  9469 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  9470 ;; Parameters:    Size  Location     Type
  9471 ;;  dest            2    0[COMRAM] PTR unsigned char 
  9472 ;;		 -> dbuf(80), 
  9473 ;;  src             2    2[COMRAM] PTR const unsigned char 
  9474 ;;		 -> STR_23(4), STR_20(4), 
  9475 ;; Auto vars:     Size  Location     Type
  9476 ;;  d               2    4[COMRAM] PTR unsigned char 
  9477 ;;		 -> dbuf(80), 
  9478 ;; Return value:  Size  Location     Type
  9479 ;;                  2    0[COMRAM] PTR unsigned char 
  9480 ;; Registers used:
  9481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9482 ;; Tracked objects:
  9483 ;;		On entry : 0/0
  9484 ;;		On exit  : 0/0
  9485 ;;		Unchanged: 0/0
  9486 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9488 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9490 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9491 ;;Total ram usage:        6 bytes
  9492 ;; Hardware stack levels used: 1
  9493 ;; This function calls:
  9494 ;;		Nothing
  9495 ;; This function is called by:
  9496 ;;		_efgtoa
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500                           	psect	text6
  9501   016C72                     __ptext6:
  9502                           	callstack 0
  9503   016C72                     _strcpy:
  9504                           	callstack 122
  9505   016C72  C501  F505         	movff	strcpy@dest,strcpy@d
  9506   016C76  C502  F506         	movff	strcpy@dest+1,strcpy@d+1
  9507   016C7A                     l8391:
  9508   016C7A  C503  F4F6         	movff	strcpy@src,tblptrl
  9509   016C7E  C504  F4F7         	movff	strcpy@src+1,tblptrh
  9510   016C82  4A03               	infsnz	strcpy@src^(0+1280),f,c
  9511   016C84  2A04               	incf	(strcpy@src+1)^(0+1280),f,c
  9512   016C86                     	if	0	;tblptru may be non-zero
  9513   016C86                     	endif
  9514   016C86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9515   016C86  0E00               	movlw	low (__mediumconst shr (0+16))
  9516   016C88  6EF8               	movwf	tblptru,c
  9517   016C8A                     	endif
  9518   016C8A  C505  F4D9         	movff	strcpy@d,fsr2l
  9519   016C8E  C506  F4DA         	movff	strcpy@d+1,fsr2h
  9520   016C92  4A05               	infsnz	strcpy@d^(0+1280),f,c
  9521   016C94  2A06               	incf	(strcpy@d+1)^(0+1280),f,c
  9522   016C96  0008               	tblrd		*
  9523   016C98  C4F5 F4DF          	movff	tablat,indf2
  9524   016C9C  50DF               	movf	indf2,w,c
  9525   016C9E  A4D8               	btfss	status,2,c
  9526   016CA0  EF54  F0B6         	goto	u5981
  9527   016CA4  EF56  F0B6         	goto	u5980
  9528   016CA8                     u5981:
  9529   016CA8  EF3D  F0B6         	goto	l8391
  9530   016CAC                     u5980:
  9531   016CAC  0012               	return		;funcret
  9532   016CAE                     __end_of_strcpy:
  9533                           	callstack 0
  9534                           
  9535 ;; *************** function _pad *****************
  9536 ;; Defined at:
  9537 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9540 ;;		 -> sprintf@f(11), 
  9541 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9542 ;;		 -> dbuf(80), 
  9543 ;;  p               2   20[COMRAM] int 
  9544 ;; Auto vars:     Size  Location     Type
  9545 ;;  i               2   23[COMRAM] int 
  9546 ;; Return value:  Size  Location     Type
  9547 ;;                  1    wreg      void 
  9548 ;; Registers used:
  9549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9550 ;; Tracked objects:
  9551 ;;		On entry : 0/0
  9552 ;;		On exit  : 0/0
  9553 ;;		Unchanged: 0/0
  9554 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9555 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9556 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9557 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9558 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9559 ;;Total ram usage:        9 bytes
  9560 ;; Hardware stack levels used: 1
  9561 ;; Hardware stack levels required when called: 3
  9562 ;; This function calls:
  9563 ;;		_fputc
  9564 ;;		_fputs
  9565 ;; This function is called by:
  9566 ;;		_efgtoa
  9567 ;; This function uses a non-reentrant model
  9568 ;;
  9569                           
  9570                           	psect	text7
  9571   016892                     __ptext7:
  9572                           	callstack 0
  9573   016892                     _pad:
  9574                           	callstack 119
  9575   016892                     
  9576                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  9577   016892  BE16               	btfsc	(pad@p+1)^(0+1280),7,c
  9578   016894  EF50  F0B4         	goto	u5960
  9579   016898  EF4E  F0B4         	goto	u5961
  9580   01689C                     u5961:
  9581   01689C  EF54  F0B4         	goto	l2291
  9582   0168A0                     u5960:
  9583   0168A0                     
  9584                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  9585   0168A0  0E00               	movlw	0
  9586   0168A2  6E16               	movwf	(pad@p+1)^(0+1280),c
  9587   0168A4  0E00               	movlw	0
  9588   0168A6  6E15               	movwf	pad@p^(0+1280),c
  9589   0168A8                     l2291:
  9590                           
  9591                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  9592   0168A8  0E00               	movlw	0
  9593   0168AA  6E19               	movwf	(pad@i+1)^(0+1280),c
  9594   0168AC  0E00               	movlw	0
  9595   0168AE  6E18               	movwf	pad@i^(0+1280),c
  9596                           
  9597                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9598   0168B0  EF66  F0B4         	goto	l8385
  9599   0168B4                     l8381:
  9600                           
  9601                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  9602   0168B4  0E00               	movlw	0
  9603   0168B6  6E02               	movwf	(fputc@c+1)^(0+1280),c
  9604   0168B8  0E20               	movlw	32
  9605   0168BA  6E01               	movwf	fputc@c^(0+1280),c
  9606   0168BC  C511  F503         	movff	pad@fp,fputc@fp
  9607   0168C0  C512  F504         	movff	pad@fp+1,fputc@fp+1
  9608   0168C4  EC87  F0B2         	call	_fputc	;wreg free
  9609   0168C8                     
  9610                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  9611   0168C8  4A18               	infsnz	pad@i^(0+1280),f,c
  9612   0168CA  2A19               	incf	(pad@i+1)^(0+1280),f,c
  9613   0168CC                     l8385:
  9614                           
  9615                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9616   0168CC  5015               	movf	pad@p^(0+1280),w,c
  9617   0168CE  5C18               	subwf	pad@i^(0+1280),w,c
  9618   0168D0  5019               	movf	(pad@i+1)^(0+1280),w,c
  9619   0168D2  0A80               	xorlw	128
  9620   0168D4  6E17               	movwf	??_pad^(0+1280),c
  9621   0168D6  5016               	movf	(pad@p+1)^(0+1280),w,c
  9622   0168D8  0A80               	xorlw	128
  9623   0168DA  5817               	subwfb	??_pad^(0+1280),w,c
  9624   0168DC  A0D8               	btfss	status,0,c
  9625   0168DE  EF73  F0B4         	goto	u5971
  9626   0168E2  EF75  F0B4         	goto	u5970
  9627   0168E6                     u5971:
  9628   0168E6  EF5A  F0B4         	goto	l8381
  9629   0168EA                     u5970:
  9630   0168EA                     
  9631                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  9632   0168EA  C513  F50A         	movff	pad@buf,fputs@s
  9633   0168EE  C514  F50B         	movff	pad@buf+1,fputs@s+1
  9634   0168F2  C511  F50C         	movff	pad@fp,fputs@fp
  9635   0168F6  C512  F50D         	movff	pad@fp+1,fputs@fp+1
  9636   0168FA  ECF9  F0B5         	call	_fputs	;wreg free
  9637   0168FE  0012               	return		;funcret
  9638   016900                     __end_of_pad:
  9639                           	callstack 0
  9640                           
  9641 ;; *************** function _fputs *****************
  9642 ;; Defined at:
  9643 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9646 ;;		 -> dbuf(80), 
  9647 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9648 ;;		 -> sprintf@f(11), 
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;  i               2   14[COMRAM] int 
  9651 ;;  c               1   13[COMRAM] unsigned char 
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  2    9[COMRAM] int 
  9654 ;; Registers used:
  9655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9662 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9664 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9665 ;;Total ram usage:        7 bytes
  9666 ;; Hardware stack levels used: 1
  9667 ;; Hardware stack levels required when called: 2
  9668 ;; This function calls:
  9669 ;;		_fputc
  9670 ;; This function is called by:
  9671 ;;		_pad
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           	psect	text8
  9676   016BF2                     __ptext8:
  9677                           	callstack 0
  9678   016BF2                     _fputs:
  9679                           	callstack 119
  9680   016BF2  0E00               	movlw	0
  9681   016BF4  6E10               	movwf	(fputs@i+1)^(0+1280),c
  9682   016BF6  0E00               	movlw	0
  9683   016BF8  6E0F               	movwf	fputs@i^(0+1280),c
  9684   016BFA  EF0A  F0B6         	goto	l7737
  9685   016BFE                     l7733:
  9686   016BFE  C50E  F501         	movff	fputs@c,fputc@c
  9687   016C02  6A02               	clrf	(fputc@c+1)^(0+1280),c
  9688   016C04  C50C  F503         	movff	fputs@fp,fputc@fp
  9689   016C08  C50D  F504         	movff	fputs@fp+1,fputc@fp+1
  9690   016C0C  EC87  F0B2         	call	_fputc	;wreg free
  9691   016C10  4A0F               	infsnz	fputs@i^(0+1280),f,c
  9692   016C12  2A10               	incf	(fputs@i+1)^(0+1280),f,c
  9693   016C14                     l7737:
  9694   016C14  500F               	movf	fputs@i^(0+1280),w,c
  9695   016C16  240A               	addwf	fputs@s^(0+1280),w,c
  9696   016C18  6ED9               	movwf	fsr2l,c
  9697   016C1A  5010               	movf	(fputs@i+1)^(0+1280),w,c
  9698   016C1C  200B               	addwfc	(fputs@s+1)^(0+1280),w,c
  9699   016C1E  6EDA               	movwf	fsr2h,c
  9700   016C20  50DF               	movf	indf2,w,c
  9701   016C22  6E0E               	movwf	fputs@c^(0+1280),c
  9702   016C24  500E               	movf	fputs@c^(0+1280),w,c
  9703   016C26  A4D8               	btfss	status,2,c
  9704   016C28  EF18  F0B6         	goto	u5111
  9705   016C2C  EF1A  F0B6         	goto	u5110
  9706   016C30                     u5111:
  9707   016C30  EFFF  F0B5         	goto	l7733
  9708   016C34                     u5110:
  9709   016C34  0012               	return		;funcret
  9710   016C36                     __end_of_fputs:
  9711                           	callstack 0
  9712                           
  9713 ;; *************** function _fputc *****************
  9714 ;; Defined at:
  9715 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;  c               2    0[COMRAM] int 
  9718 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9719 ;;		 -> sprintf@f(11), 
  9720 ;; Auto vars:     Size  Location     Type
  9721 ;;		None
  9722 ;; Return value:  Size  Location     Type
  9723 ;;                  2    0[COMRAM] int 
  9724 ;; Registers used:
  9725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9726 ;; Tracked objects:
  9727 ;;		On entry : 0/0
  9728 ;;		On exit  : 0/0
  9729 ;;		Unchanged: 0/0
  9730 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9731 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9733 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9734 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9735 ;;Total ram usage:        9 bytes
  9736 ;; Hardware stack levels used: 1
  9737 ;; Hardware stack levels required when called: 1
  9738 ;; This function calls:
  9739 ;;		_putch
  9740 ;; This function is called by:
  9741 ;;		_pad
  9742 ;;		_vfpfcnvrt
  9743 ;;		_fputs
  9744 ;; This function uses a non-reentrant model
  9745 ;;
  9746                           
  9747                           	psect	text9
  9748   01650E                     __ptext9:
  9749                           	callstack 0
  9750   01650E                     _fputc:
  9751                           	callstack 122
  9752   01650E  5003               	movf	fputc@fp^(0+1280),w,c
  9753   016510  1004               	iorwf	(fputc@fp+1)^(0+1280),w,c
  9754   016512  B4D8               	btfsc	status,2,c
  9755   016514  EF8E  F0B2         	goto	u4541
  9756   016518  EF90  F0B2         	goto	u4540
  9757   01651C                     u4541:
  9758   01651C  EF99  F0B2         	goto	l7231
  9759   016520                     u4540:
  9760   016520  5003               	movf	fputc@fp^(0+1280),w,c
  9761   016522  1004               	iorwf	(fputc@fp+1)^(0+1280),w,c
  9762   016524  A4D8               	btfss	status,2,c
  9763   016526  EF97  F0B2         	goto	u4551
  9764   01652A  EF99  F0B2         	goto	u4550
  9765   01652E                     u4551:
  9766   01652E  EF9E  F0B2         	goto	l7233
  9767   016532                     u4550:
  9768   016532                     l7231:
  9769   016532  5001               	movf	fputc@c^(0+1280),w,c
  9770   016534  ECA4  F0B7         	call	_putch
  9771   016538  EFEB  F0B2         	goto	l2420
  9772   01653C                     l7233:
  9773   01653C  EE20 F009          	lfsr	2,9
  9774   016540  5003               	movf	fputc@fp^(0+1280),w,c
  9775   016542  26D9               	addwf	fsr2l,f,c
  9776   016544  5004               	movf	(fputc@fp+1)^(0+1280),w,c
  9777   016546  22DA               	addwfc	fsr2h,f,c
  9778   016548  50DE               	movf	postinc2,w,c
  9779   01654A  10DE               	iorwf	postinc2,w,c
  9780   01654C  B4D8               	btfsc	status,2,c
  9781   01654E  EFAB  F0B2         	goto	u4561
  9782   016552  EFAD  F0B2         	goto	u4560
  9783   016556                     u4561:
  9784   016556  EFC8  F0B2         	goto	l7237
  9785   01655A                     u4560:
  9786   01655A  EE20 F009          	lfsr	2,9
  9787   01655E  5003               	movf	fputc@fp^(0+1280),w,c
  9788   016560  26D9               	addwf	fsr2l,f,c
  9789   016562  5004               	movf	(fputc@fp+1)^(0+1280),w,c
  9790   016564  22DA               	addwfc	fsr2h,f,c
  9791   016566  EE10 F002          	lfsr	1,2
  9792   01656A  5003               	movf	fputc@fp^(0+1280),w,c
  9793   01656C  26E1               	addwf	fsr1l,f,c
  9794   01656E  5004               	movf	(fputc@fp+1)^(0+1280),w,c
  9795   016570  22E2               	addwfc	fsr1h,f,c
  9796   016572  50DE               	movf	postinc2,w,c
  9797   016574  5CE6               	subwf	postinc1,w,c
  9798   016576  50E6               	movf	postinc1,w,c
  9799   016578  0A80               	xorlw	128
  9800   01657A  6E09               	movwf	(??_fputc+4)^(0+1280),c
  9801   01657C  50DE               	movf	postinc2,w,c
  9802   01657E  0A80               	xorlw	128
  9803   016580  5809               	subwfb	(??_fputc+4)^(0+1280),w,c
  9804   016582  B0D8               	btfsc	status,0,c
  9805   016584  EFC6  F0B2         	goto	u4571
  9806   016588  EFC8  F0B2         	goto	u4570
  9807   01658C                     u4571:
  9808   01658C  EFEB  F0B2         	goto	l2420
  9809   016590                     u4570:
  9810   016590                     l7237:
  9811   016590  EE20 F002          	lfsr	2,2
  9812   016594  5003               	movf	fputc@fp^(0+1280),w,c
  9813   016596  26D9               	addwf	fsr2l,f,c
  9814   016598  5004               	movf	(fputc@fp+1)^(0+1280),w,c
  9815   01659A  22DA               	addwfc	fsr2h,f,c
  9816   01659C  C4DE F505          	movff	postinc2,??_fputc
  9817   0165A0  C4DD F506          	movff	postdec2,??_fputc+1
  9818   0165A4  C503  F4D9         	movff	fputc@fp,fsr2l
  9819   0165A8  C504  F4DA         	movff	fputc@fp+1,fsr2h
  9820   0165AC  C4DE F507          	movff	postinc2,??_fputc+2
  9821   0165B0  C4DD F508          	movff	postdec2,??_fputc+3
  9822   0165B4  5005               	movf	??_fputc^(0+1280),w,c
  9823   0165B6  2407               	addwf	(??_fputc+2)^(0+1280),w,c
  9824   0165B8  6ED9               	movwf	fsr2l,c
  9825   0165BA  5006               	movf	(??_fputc+1)^(0+1280),w,c
  9826   0165BC  2008               	addwfc	(??_fputc+3)^(0+1280),w,c
  9827   0165BE  6EDA               	movwf	fsr2h,c
  9828   0165C0  C501  F4DF         	movff	fputc@c,indf2
  9829   0165C4  EE20 F002          	lfsr	2,2
  9830   0165C8  5003               	movf	fputc@fp^(0+1280),w,c
  9831   0165CA  26D9               	addwf	fsr2l,f,c
  9832   0165CC  5004               	movf	(fputc@fp+1)^(0+1280),w,c
  9833   0165CE  22DA               	addwfc	fsr2h,f,c
  9834   0165D0  2ADE               	incf	postinc2,f,c
  9835   0165D2  0E00               	movlw	0
  9836   0165D4  22DD               	addwfc	postdec2,f,c
  9837   0165D6                     l2420:
  9838   0165D6  0012               	return		;funcret
  9839   0165D8                     __end_of_fputc:
  9840                           	callstack 0
  9841                           
  9842 ;; *************** function _putch *****************
  9843 ;; Defined at:
  9844 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;  c               1    wreg     unsigned char 
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;  c               1    0[COMRAM] unsigned char 
  9849 ;; Return value:  Size  Location     Type
  9850 ;;                  1    wreg      void 
  9851 ;; Registers used:
  9852 ;;		wreg
  9853 ;; Tracked objects:
  9854 ;;		On entry : 0/0
  9855 ;;		On exit  : 0/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9862 ;;Total ram usage:        0 bytes
  9863 ;; Hardware stack levels used: 1
  9864 ;; This function calls:
  9865 ;;		Nothing
  9866 ;; This function is called by:
  9867 ;;		_fputc
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           	psect	text10
  9872   016F48                     __ptext10:
  9873                           	callstack 0
  9874   016F48                     _putch:
  9875                           	callstack 122
  9876   016F48  0012               	return		;funcret
  9877   016F4A                     __end_of_putch:
  9878                           	callstack 0
  9879                           
  9880 ;; *************** function _memcpy *****************
  9881 ;; Defined at:
  9882 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memcpy.c"
  9883 ;; Parameters:    Size  Location     Type
  9884 ;;  d1              2    0[COMRAM] PTR void 
  9885 ;;		 -> dbuf(80), 
  9886 ;;  s1              2    2[COMRAM] PTR const void 
  9887 ;;		 -> dbuf(80), 
  9888 ;;  n               2    4[COMRAM] unsigned int 
  9889 ;; Auto vars:     Size  Location     Type
  9890 ;;  s               2    8[COMRAM] PTR const unsigned char 
  9891 ;;		 -> dbuf(80), 
  9892 ;;  d               2    6[COMRAM] PTR unsigned char 
  9893 ;;		 -> dbuf(80), 
  9894 ;;  tmp             1   10[COMRAM] unsigned char 
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  2    0[COMRAM] PTR void 
  9897 ;; Registers used:
  9898 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9904 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9905 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9907 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9908 ;;Total ram usage:       11 bytes
  9909 ;; Hardware stack levels used: 1
  9910 ;; This function calls:
  9911 ;;		Nothing
  9912 ;; This function is called by:
  9913 ;;		_efgtoa
  9914 ;; This function uses a non-reentrant model
  9915 ;;
  9916                           
  9917                           	psect	text11
  9918   016B0A                     __ptext11:
  9919                           	callstack 0
  9920   016B0A                     _memcpy:
  9921                           	callstack 122
  9922   016B0A  C503  F509         	movff	memcpy@s1,memcpy@s
  9923   016B0E  C504  F50A         	movff	memcpy@s1+1,memcpy@s+1
  9924   016B12  C501  F507         	movff	memcpy@d1,memcpy@d
  9925   016B16  C502  F508         	movff	memcpy@d1+1,memcpy@d+1
  9926   016B1A  EF9F  F0B5         	goto	l8439
  9927   016B1E                     l8431:
  9928   016B1E  C509  F4D9         	movff	memcpy@s,fsr2l
  9929   016B22  C50A  F4DA         	movff	memcpy@s+1,fsr2h
  9930   016B26  50DF               	movf	indf2,w,c
  9931   016B28  6E0B               	movwf	memcpy@tmp^(0+1280),c
  9932   016B2A  4A09               	infsnz	memcpy@s^(0+1280),f,c
  9933   016B2C  2A0A               	incf	(memcpy@s+1)^(0+1280),f,c
  9934   016B2E  C507  F4D9         	movff	memcpy@d,fsr2l
  9935   016B32  C508  F4DA         	movff	memcpy@d+1,fsr2h
  9936   016B36  C50B  F4DF         	movff	memcpy@tmp,indf2
  9937   016B3A  4A07               	infsnz	memcpy@d^(0+1280),f,c
  9938   016B3C  2A08               	incf	(memcpy@d+1)^(0+1280),f,c
  9939   016B3E                     l8439:
  9940   016B3E  0605               	decf	memcpy@n^(0+1280),f,c
  9941   016B40  A0D8               	btfss	status,0,c
  9942   016B42  0606               	decf	(memcpy@n+1)^(0+1280),f,c
  9943   016B44  2805               	incf	memcpy@n^(0+1280),w,c
  9944   016B46  E106               	bnz	u6101
  9945   016B48  2806               	incf	(memcpy@n+1)^(0+1280),w,c
  9946   016B4A  A4D8               	btfss	status,2,c
  9947   016B4C  EFAA  F0B5         	goto	u6101
  9948   016B50  EFAC  F0B5         	goto	u6100
  9949   016B54                     u6101:
  9950   016B54  EF8F  F0B5         	goto	l8431
  9951   016B58                     u6100:
  9952   016B58  0012               	return		;funcret
  9953   016B5A                     __end_of_memcpy:
  9954                           	callstack 0
  9955                           
  9956 ;; *************** function _labs *****************
  9957 ;; Defined at:
  9958 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\labs.c"
  9959 ;; Parameters:    Size  Location     Type
  9960 ;;  a               4    0[COMRAM] long 
  9961 ;; Auto vars:     Size  Location     Type
  9962 ;;		None
  9963 ;; Return value:  Size  Location     Type
  9964 ;;                  4    0[COMRAM] long 
  9965 ;; Registers used:
  9966 ;;		wreg, status,2, status,0
  9967 ;; Tracked objects:
  9968 ;;		On entry : 0/0
  9969 ;;		On exit  : 0/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9972 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9974 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9975 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9976 ;;Total ram usage:        8 bytes
  9977 ;; Hardware stack levels used: 1
  9978 ;; This function calls:
  9979 ;;		Nothing
  9980 ;; This function is called by:
  9981 ;;		_efgtoa
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           	psect	text12
  9986   016A12                     __ptext12:
  9987                           	callstack 0
  9988   016A12                     _labs:
  9989                           	callstack 122
  9990   016A12  BE04               	btfsc	(labs@a+3)^(0+1280),7,c
  9991   016A14  EF0E  F0B5         	goto	u5991
  9992   016A18  EF10  F0B5         	goto	u5990
  9993   016A1C                     u5991:
  9994   016A1C  EF1A  F0B5         	goto	l8397
  9995   016A20                     u5990:
  9996   016A20  C501  F501         	movff	labs@a,?_labs
  9997   016A24  C502  F502         	movff	labs@a+1,?_labs+1
  9998   016A28  C503  F503         	movff	labs@a+2,?_labs+2
  9999   016A2C  C504  F504         	movff	labs@a+3,?_labs+3
 10000   016A30  EF33  F0B5         	goto	l2402
 10001   016A34                     l8397:
 10002   016A34  C501  F505         	movff	labs@a,??_labs
 10003   016A38  C502  F506         	movff	labs@a+1,??_labs+1
 10004   016A3C  C503  F507         	movff	labs@a+2,??_labs+2
 10005   016A40  C504  F508         	movff	labs@a+3,??_labs+3
 10006   016A44  1E05               	comf	??_labs^(0+1280),f,c
 10007   016A46  1E06               	comf	(??_labs+1)^(0+1280),f,c
 10008   016A48  1E07               	comf	(??_labs+2)^(0+1280),f,c
 10009   016A4A  1E08               	comf	(??_labs+3)^(0+1280),f,c
 10010   016A4C  2A05               	incf	??_labs^(0+1280),f,c
 10011   016A4E  0E00               	movlw	0
 10012   016A50  2206               	addwfc	(??_labs+1)^(0+1280),f,c
 10013   016A52  2207               	addwfc	(??_labs+2)^(0+1280),f,c
 10014   016A54  2208               	addwfc	(??_labs+3)^(0+1280),f,c
 10015   016A56  C505  F501         	movff	??_labs,?_labs
 10016   016A5A  C506  F502         	movff	??_labs+1,?_labs+1
 10017   016A5E  C507  F503         	movff	??_labs+2,?_labs+2
 10018   016A62  C508  F504         	movff	??_labs+3,?_labs+3
 10019   016A66                     l2402:
 10020   016A66  0012               	return		;funcret
 10021   016A68                     __end_of_labs:
 10022                           	callstack 0
 10023                           
 10024 ;; *************** function _floorf *****************
 10025 ;; Defined at:
 10026 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\floorf.c"
 10027 ;; Parameters:    Size  Location     Type
 10028 ;;  x               4   13[BANK5 ] float 
 10029 ;; Auto vars:     Size  Location     Type
 10030 ;;  u               4   29[BANK5 ] struct .
 10031 ;;  m               4   23[BANK5 ] unsigned long 
 10032 ;;  e               2   27[BANK5 ] int 
 10033 ;; Return value:  Size  Location     Type
 10034 ;;                  4   13[BANK5 ] float 
 10035 ;; Registers used:
 10036 ;;		wreg, status,2, status,0
 10037 ;; Tracked objects:
 10038 ;;		On entry : 0/0
 10039 ;;		On exit  : 0/0
 10040 ;;		Unchanged: 0/0
 10041 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10042 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10043 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10044 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10045 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10046 ;;Total ram usage:       20 bytes
 10047 ;; Hardware stack levels used: 1
 10048 ;; This function calls:
 10049 ;;		Nothing
 10050 ;; This function is called by:
 10051 ;;		_efgtoa
 10052 ;; This function uses a non-reentrant model
 10053 ;;
 10054                           
 10055                           	psect	text13
 10056   015384                     __ptext13:
 10057                           	callstack 0
 10058   015384                     _floorf:
 10059                           	callstack 122
 10060   015384  C700  F57D         	movff	floorf@F521,floorf@u
 10061   015388  C701  F57E         	movff	floorf@F521+1,floorf@u+1
 10062   01538C  C702  F57F         	movff	floorf@F521+2,floorf@u+2
 10063   015390  C703  F580         	movff	floorf@F521+3,floorf@u+3
 10064   015394  C56D  F57D         	movff	floorf@x,floorf@u
 10065   015398  C56E  F57E         	movff	floorf@x+1,floorf@u+1
 10066   01539C  C56F  F57F         	movff	floorf@x+2,floorf@u+2
 10067   0153A0  C570  F580         	movff	floorf@x+3,floorf@u+3
 10068   0153A4  0E81               	movlw	129
 10069   0153A6  0105               	movlb	5	; () banked
 10070   0153A8  6F71               	movwf	??_floorf& (0+255),b
 10071   0153AA  0EFF               	movlw	255
 10072   0153AC  6F72               	movwf	(??_floorf+1)& (0+255),b
 10073   0153AE  C57D  F573         	movff	floorf@u,??_floorf+2
 10074   0153B2  C57E  F574         	movff	floorf@u+1,??_floorf+3
 10075   0153B6  C57F  F575         	movff	floorf@u+2,??_floorf+4
 10076   0153BA  C580  F576         	movff	floorf@u+3,??_floorf+5
 10077   0153BE  0E18               	movlw	24
 10078   0153C0  EFE7  F0A9         	goto	u6000
 10079   0153C4                     u6005:
 10080   0153C4  90D8               	bcf	status,0,c
 10081   0153C6  3376               	rrcf	(??_floorf+5)& (0+255),f,b
 10082   0153C8  3375               	rrcf	(??_floorf+4)& (0+255),f,b
 10083   0153CA  3374               	rrcf	(??_floorf+3)& (0+255),f,b
 10084   0153CC  3373               	rrcf	(??_floorf+2)& (0+255),f,b
 10085   0153CE                     u6000:
 10086   0153CE  2EE8               	decfsz	wreg,f,c
 10087   0153D0  EFE2  F0A9         	goto	u6005
 10088   0153D4  5173               	movf	(??_floorf+2)& (0+255),w,b
 10089   0153D6  2571               	addwf	??_floorf& (0+255),w,b
 10090   0153D8  6F7B               	movwf	floorf@e& (0+255),b
 10091   0153DA  0E00               	movlw	0
 10092   0153DC  2172               	addwfc	(??_floorf+1)& (0+255),w,b
 10093   0153DE  6F7C               	movwf	(floorf@e+1)& (0+255),b
 10094   0153E0  BF7C               	btfsc	(floorf@e+1)& (0+255),7,b
 10095   0153E2  EFFC  F0A9         	goto	u6011
 10096   0153E6  517C               	movf	(floorf@e+1)& (0+255),w,b
 10097   0153E8  E109               	bnz	u6010
 10098   0153EA  0E17               	movlw	23
 10099   0153EC  5D7B               	subwf	floorf@e& (0+255),w,b
 10100   0153EE  A0D8               	btfss	status,0,c
 10101   0153F0  EFFC  F0A9         	goto	u6011
 10102   0153F4  EFFE  F0A9         	goto	u6010
 10103   0153F8                     u6011:
 10104   0153F8  EF08  F0AA         	goto	l8407
 10105   0153FC                     u6010:
 10106   0153FC                     l8405:
 10107                           
 10108                           ; BSR set to: 5
 10109   0153FC  C56D  F56D         	movff	floorf@x,?_floorf
 10110   015400  C56E  F56E         	movff	floorf@x+1,?_floorf+1
 10111   015404  C56F  F56F         	movff	floorf@x+2,?_floorf+2
 10112   015408  C570  F570         	movff	floorf@x+3,?_floorf+3
 10113   01540C  EFCC  F0AA         	goto	l2388
 10114   015410                     l8407:
 10115                           
 10116                           ; BSR set to: 5
 10117   015410  BF7C               	btfsc	(floorf@e+1)& (0+255),7,b
 10118   015412  EF0D  F0AA         	goto	u6021
 10119   015416  EF0F  F0AA         	goto	u6020
 10120   01541A                     u6021:
 10121   01541A  EF80  F0AA         	goto	l8417
 10122   01541E                     u6020:
 10123   01541E                     
 10124                           ; BSR set to: 5
 10125   01541E  C57B  F571         	movff	floorf@e,??_floorf
 10126   015422  0EFF               	movlw	255
 10127   015424  6F72               	movwf	(??_floorf+1)& (0+255),b
 10128   015426  0EFF               	movlw	255
 10129   015428  6F73               	movwf	(??_floorf+2)& (0+255),b
 10130   01542A  0E7F               	movlw	127
 10131   01542C  6F74               	movwf	(??_floorf+3)& (0+255),b
 10132   01542E  0E00               	movlw	0
 10133   015430  6F75               	movwf	(??_floorf+4)& (0+255),b
 10134   015432                     u6035:
 10135   015432  6771               	tstfsz	??_floorf& (0+255),b
 10136   015434  EF1E  F0AA         	goto	u6036
 10137   015438  EF26  F0AA         	goto	u6037
 10138   01543C                     u6036:
 10139   01543C  3575               	rlcf	(??_floorf+4)& (0+255),w,b
 10140   01543E  3375               	rrcf	(??_floorf+4)& (0+255),f,b
 10141   015440  3374               	rrcf	(??_floorf+3)& (0+255),f,b
 10142   015442  3373               	rrcf	(??_floorf+2)& (0+255),f,b
 10143   015444  3372               	rrcf	(??_floorf+1)& (0+255),f,b
 10144   015446  2F71               	decfsz	??_floorf& (0+255),f,b
 10145   015448  EF19  F0AA         	goto	u6035
 10146   01544C                     u6037:
 10147   01544C  C572  F577         	movff	??_floorf+1,floorf@m
 10148   015450  C573  F578         	movff	??_floorf+2,floorf@m+1
 10149   015454  C574  F579         	movff	??_floorf+3,floorf@m+2
 10150   015458  C575  F57A         	movff	??_floorf+4,floorf@m+3
 10151   01545C  0105               	movlb	5	; () banked
 10152   01545E  5177               	movf	floorf@m& (0+255),w,b
 10153   015460  157D               	andwf	floorf@u& (0+255),w,b
 10154   015462  6F71               	movwf	??_floorf& (0+255),b
 10155   015464  5178               	movf	(floorf@m+1)& (0+255),w,b
 10156   015466  157E               	andwf	(floorf@u+1)& (0+255),w,b
 10157   015468  6F72               	movwf	(??_floorf+1)& (0+255),b
 10158   01546A  5179               	movf	(floorf@m+2)& (0+255),w,b
 10159   01546C  157F               	andwf	(floorf@u+2)& (0+255),w,b
 10160   01546E  6F73               	movwf	(??_floorf+2)& (0+255),b
 10161   015470  517A               	movf	(floorf@m+3)& (0+255),w,b
 10162   015472  1580               	andwf	(floorf@u+3)& (0+255),w,b
 10163   015474  6F74               	movwf	(??_floorf+3)& (0+255),b
 10164   015476  5171               	movf	??_floorf& (0+255),w,b
 10165   015478  1172               	iorwf	(??_floorf+1)& (0+255),w,b
 10166   01547A  1173               	iorwf	(??_floorf+2)& (0+255),w,b
 10167   01547C  1174               	iorwf	(??_floorf+3)& (0+255),w,b
 10168   01547E  A4D8               	btfss	status,2,c
 10169   015480  EF44  F0AA         	goto	u6041
 10170   015484  EF46  F0AA         	goto	u6040
 10171   015488                     u6041:
 10172   015488  EF48  F0AA         	goto	l8413
 10173   01548C                     u6040:
 10174   01548C  EFFE  F0A9         	goto	l8405
 10175   015490                     l8413:
 10176                           
 10177                           ; BSR set to: 5
 10178   015490  C57D  F571         	movff	floorf@u,??_floorf
 10179   015494  C57E  F572         	movff	floorf@u+1,??_floorf+1
 10180   015498  C57F  F573         	movff	floorf@u+2,??_floorf+2
 10181   01549C  C580  F574         	movff	floorf@u+3,??_floorf+3
 10182   0154A0  0E20               	movlw	32
 10183   0154A2  EF58  F0AA         	goto	u6050
 10184   0154A6                     u6055:
 10185   0154A6  90D8               	bcf	status,0,c
 10186   0154A8  3374               	rrcf	(??_floorf+3)& (0+255),f,b
 10187   0154AA  3373               	rrcf	(??_floorf+2)& (0+255),f,b
 10188   0154AC  3372               	rrcf	(??_floorf+1)& (0+255),f,b
 10189   0154AE  3371               	rrcf	??_floorf& (0+255),f,b
 10190   0154B0                     u6050:
 10191   0154B0  2EE8               	decfsz	wreg,f,c
 10192   0154B2  EF53  F0AA         	goto	u6055
 10193   0154B6  5171               	movf	??_floorf& (0+255),w,b
 10194   0154B8  1172               	iorwf	(??_floorf+1)& (0+255),w,b
 10195   0154BA  1173               	iorwf	(??_floorf+2)& (0+255),w,b
 10196   0154BC  1174               	iorwf	(??_floorf+3)& (0+255),w,b
 10197   0154BE  B4D8               	btfsc	status,2,c
 10198   0154C0  EF64  F0AA         	goto	u6061
 10199   0154C4  EF66  F0AA         	goto	u6060
 10200   0154C8                     u6061:
 10201   0154C8  EF6E  F0AA         	goto	l2391
 10202   0154CC                     u6060:
 10203   0154CC                     
 10204                           ; BSR set to: 5
 10205   0154CC  5177               	movf	floorf@m& (0+255),w,b
 10206   0154CE  277D               	addwf	floorf@u& (0+255),f,b
 10207   0154D0  5178               	movf	(floorf@m+1)& (0+255),w,b
 10208   0154D2  237E               	addwfc	(floorf@u+1)& (0+255),f,b
 10209   0154D4  5179               	movf	(floorf@m+2)& (0+255),w,b
 10210   0154D6  237F               	addwfc	(floorf@u+2)& (0+255),f,b
 10211   0154D8  517A               	movf	(floorf@m+3)& (0+255),w,b
 10212   0154DA  2380               	addwfc	(floorf@u+3)& (0+255),f,b
 10213   0154DC                     l2391:
 10214                           
 10215                           ; BSR set to: 5
 10216   0154DC  1D77               	comf	floorf@m& (0+255),w,b
 10217   0154DE  6F71               	movwf	??_floorf& (0+255),b
 10218   0154E0  1D78               	comf	(floorf@m+1)& (0+255),w,b
 10219   0154E2  6F72               	movwf	(??_floorf+1)& (0+255),b
 10220   0154E4  1D79               	comf	(floorf@m+2)& (0+255),w,b
 10221   0154E6  6F73               	movwf	(??_floorf+2)& (0+255),b
 10222   0154E8  1D7A               	comf	(floorf@m+3)& (0+255),w,b
 10223   0154EA  6F74               	movwf	(??_floorf+3)& (0+255),b
 10224   0154EC  5171               	movf	??_floorf& (0+255),w,b
 10225   0154EE  177D               	andwf	floorf@u& (0+255),f,b
 10226   0154F0  5172               	movf	(??_floorf+1)& (0+255),w,b
 10227   0154F2  177E               	andwf	(floorf@u+1)& (0+255),f,b
 10228   0154F4  5173               	movf	(??_floorf+2)& (0+255),w,b
 10229   0154F6  177F               	andwf	(floorf@u+2)& (0+255),f,b
 10230   0154F8  5174               	movf	(??_floorf+3)& (0+255),w,b
 10231   0154FA  1780               	andwf	(floorf@u+3)& (0+255),f,b
 10232   0154FC  EFC4  F0AA         	goto	l8425
 10233   015500                     l8417:
 10234                           
 10235                           ; BSR set to: 5
 10236   015500  C57D  F571         	movff	floorf@u,??_floorf
 10237   015504  C57E  F572         	movff	floorf@u+1,??_floorf+1
 10238   015508  C57F  F573         	movff	floorf@u+2,??_floorf+2
 10239   01550C  C580  F574         	movff	floorf@u+3,??_floorf+3
 10240   015510  0E20               	movlw	32
 10241   015512  EF90  F0AA         	goto	u6070
 10242   015516                     u6075:
 10243   015516  90D8               	bcf	status,0,c
 10244   015518  3374               	rrcf	(??_floorf+3)& (0+255),f,b
 10245   01551A  3373               	rrcf	(??_floorf+2)& (0+255),f,b
 10246   01551C  3372               	rrcf	(??_floorf+1)& (0+255),f,b
 10247   01551E  3371               	rrcf	??_floorf& (0+255),f,b
 10248   015520                     u6070:
 10249   015520  2EE8               	decfsz	wreg,f,c
 10250   015522  EF8B  F0AA         	goto	u6075
 10251   015526  5171               	movf	??_floorf& (0+255),w,b
 10252   015528  1172               	iorwf	(??_floorf+1)& (0+255),w,b
 10253   01552A  1173               	iorwf	(??_floorf+2)& (0+255),w,b
 10254   01552C  1174               	iorwf	(??_floorf+3)& (0+255),w,b
 10255   01552E  A4D8               	btfss	status,2,c
 10256   015530  EF9C  F0AA         	goto	u6081
 10257   015534  EF9E  F0AA         	goto	u6080
 10258   015538                     u6081:
 10259   015538  EFA8  F0AA         	goto	l8421
 10260   01553C                     u6080:
 10261   01553C                     
 10262                           ; BSR set to: 5
 10263   01553C  0E00               	movlw	0
 10264   01553E  6F7D               	movwf	floorf@u& (0+255),b
 10265   015540  0E00               	movlw	0
 10266   015542  6F7E               	movwf	(floorf@u+1)& (0+255),b
 10267   015544  0E00               	movlw	0
 10268   015546  6F7F               	movwf	(floorf@u+2)& (0+255),b
 10269   015548  0E00               	movlw	0
 10270   01554A  6F80               	movwf	(floorf@u+3)& (0+255),b
 10271   01554C  EFC4  F0AA         	goto	l8425
 10272   015550                     l8421:
 10273                           
 10274                           ; BSR set to: 5
 10275   015550  90D8               	bcf	status,0,c
 10276   015552  357D               	rlcf	floorf@u& (0+255),w,b
 10277   015554  6F71               	movwf	??_floorf& (0+255),b
 10278   015556  357E               	rlcf	(floorf@u+1)& (0+255),w,b
 10279   015558  6F72               	movwf	(??_floorf+1)& (0+255),b
 10280   01555A  357F               	rlcf	(floorf@u+2)& (0+255),w,b
 10281   01555C  6F73               	movwf	(??_floorf+2)& (0+255),b
 10282   01555E  3580               	rlcf	(floorf@u+3)& (0+255),w,b
 10283   015560  6F74               	movwf	(??_floorf+3)& (0+255),b
 10284   015562  5171               	movf	??_floorf& (0+255),w,b
 10285   015564  1172               	iorwf	(??_floorf+1)& (0+255),w,b
 10286   015566  1173               	iorwf	(??_floorf+2)& (0+255),w,b
 10287   015568  1174               	iorwf	(??_floorf+3)& (0+255),w,b
 10288   01556A  B4D8               	btfsc	status,2,c
 10289   01556C  EFBA  F0AA         	goto	u6091
 10290   015570  EFBC  F0AA         	goto	u6090
 10291   015574                     u6091:
 10292   015574  EFC4  F0AA         	goto	l8425
 10293   015578                     u6090:
 10294   015578                     
 10295                           ; BSR set to: 5
 10296   015578  0E00               	movlw	0
 10297   01557A  6F7D               	movwf	floorf@u& (0+255),b
 10298   01557C  0E00               	movlw	0
 10299   01557E  6F7E               	movwf	(floorf@u+1)& (0+255),b
 10300   015580  0E80               	movlw	128
 10301   015582  6F7F               	movwf	(floorf@u+2)& (0+255),b
 10302   015584  0EBF               	movlw	191
 10303   015586  6F80               	movwf	(floorf@u+3)& (0+255),b
 10304   015588                     l8425:
 10305                           
 10306                           ; BSR set to: 5
 10307   015588  C57D  F56D         	movff	floorf@u,?_floorf
 10308   01558C  C57E  F56E         	movff	floorf@u+1,?_floorf+1
 10309   015590  C57F  F56F         	movff	floorf@u+2,?_floorf+2
 10310   015594  C580  F570         	movff	floorf@u+3,?_floorf+3
 10311   015598                     l2388:
 10312                           
 10313                           ; BSR set to: 5
 10314   015598  0012               	return		;funcret
 10315   01559A                     __end_of_floorf:
 10316                           	callstack 0
 10317                           
 10318 ;; *************** function ___fleq *****************
 10319 ;; Defined at:
 10320 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fleq.c"
 10321 ;; Parameters:    Size  Location     Type
 10322 ;;  ff1             4    0[COMRAM] float 
 10323 ;;  ff2             4    4[COMRAM] float 
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;		None
 10326 ;; Return value:  Size  Location     Type
 10327 ;;		None               void
 10328 ;; Registers used:
 10329 ;;		wreg, status,2, status,0
 10330 ;; Tracked objects:
 10331 ;;		On entry : 0/0
 10332 ;;		On exit  : 0/0
 10333 ;;		Unchanged: 0/0
 10334 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10335 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10337 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10338 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10339 ;;Total ram usage:       12 bytes
 10340 ;; Hardware stack levels used: 1
 10341 ;; This function calls:
 10342 ;;		Nothing
 10343 ;; This function is called by:
 10344 ;;		_efgtoa
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348                           	psect	text14
 10349   0165D8                     __ptext14:
 10350                           	callstack 0
 10351   0165D8                     ___fleq:
 10352                           	callstack 122
 10353   0165D8  0E00               	movlw	0
 10354   0165DA  1401               	andwf	___fleq@ff1^(0+1280),w,c
 10355   0165DC  6E09               	movwf	??___fleq^(0+1280),c
 10356   0165DE  0E00               	movlw	0
 10357   0165E0  1402               	andwf	(___fleq@ff1+1)^(0+1280),w,c
 10358   0165E2  6E0A               	movwf	(??___fleq+1)^(0+1280),c
 10359   0165E4  0E80               	movlw	128
 10360   0165E6  1403               	andwf	(___fleq@ff1+2)^(0+1280),w,c
 10361   0165E8  6E0B               	movwf	(??___fleq+2)^(0+1280),c
 10362   0165EA  0E7F               	movlw	127
 10363   0165EC  1404               	andwf	(___fleq@ff1+3)^(0+1280),w,c
 10364   0165EE  6E0C               	movwf	(??___fleq+3)^(0+1280),c
 10365   0165F0  5009               	movf	??___fleq^(0+1280),w,c
 10366   0165F2  100A               	iorwf	(??___fleq+1)^(0+1280),w,c
 10367   0165F4  100B               	iorwf	(??___fleq+2)^(0+1280),w,c
 10368   0165F6  100C               	iorwf	(??___fleq+3)^(0+1280),w,c
 10369   0165F8  A4D8               	btfss	status,2,c
 10370   0165FA  EF01  F0B3         	goto	u5731
 10371   0165FE  EF03  F0B3         	goto	u5730
 10372   016602                     u5731:
 10373   016602  EF0B  F0B3         	goto	l8269
 10374   016606                     u5730:
 10375   016606  0E00               	movlw	0
 10376   016608  6E01               	movwf	___fleq@ff1^(0+1280),c
 10377   01660A  0E00               	movlw	0
 10378   01660C  6E02               	movwf	(___fleq@ff1+1)^(0+1280),c
 10379   01660E  0E00               	movlw	0
 10380   016610  6E03               	movwf	(___fleq@ff1+2)^(0+1280),c
 10381   016612  0E00               	movlw	0
 10382   016614  6E04               	movwf	(___fleq@ff1+3)^(0+1280),c
 10383   016616                     l8269:
 10384   016616  0E00               	movlw	0
 10385   016618  1405               	andwf	___fleq@ff2^(0+1280),w,c
 10386   01661A  6E09               	movwf	??___fleq^(0+1280),c
 10387   01661C  0E00               	movlw	0
 10388   01661E  1406               	andwf	(___fleq@ff2+1)^(0+1280),w,c
 10389   016620  6E0A               	movwf	(??___fleq+1)^(0+1280),c
 10390   016622  0E80               	movlw	128
 10391   016624  1407               	andwf	(___fleq@ff2+2)^(0+1280),w,c
 10392   016626  6E0B               	movwf	(??___fleq+2)^(0+1280),c
 10393   016628  0E7F               	movlw	127
 10394   01662A  1408               	andwf	(___fleq@ff2+3)^(0+1280),w,c
 10395   01662C  6E0C               	movwf	(??___fleq+3)^(0+1280),c
 10396   01662E  5009               	movf	??___fleq^(0+1280),w,c
 10397   016630  100A               	iorwf	(??___fleq+1)^(0+1280),w,c
 10398   016632  100B               	iorwf	(??___fleq+2)^(0+1280),w,c
 10399   016634  100C               	iorwf	(??___fleq+3)^(0+1280),w,c
 10400   016636  A4D8               	btfss	status,2,c
 10401   016638  EF20  F0B3         	goto	u5741
 10402   01663C  EF22  F0B3         	goto	u5740
 10403   016640                     u5741:
 10404   016640  EF2A  F0B3         	goto	l8273
 10405   016644                     u5740:
 10406   016644  0E00               	movlw	0
 10407   016646  6E05               	movwf	___fleq@ff2^(0+1280),c
 10408   016648  0E00               	movlw	0
 10409   01664A  6E06               	movwf	(___fleq@ff2+1)^(0+1280),c
 10410   01664C  0E00               	movlw	0
 10411   01664E  6E07               	movwf	(___fleq@ff2+2)^(0+1280),c
 10412   016650  0E00               	movlw	0
 10413   016652  6E08               	movwf	(___fleq@ff2+3)^(0+1280),c
 10414   016654                     l8273:
 10415   016654  5005               	movf	___fleq@ff2^(0+1280),w,c
 10416   016656  1801               	xorwf	___fleq@ff1^(0+1280),w,c
 10417   016658  E10F               	bnz	u5750
 10418   01665A  5006               	movf	(___fleq@ff2+1)^(0+1280),w,c
 10419   01665C  1802               	xorwf	(___fleq@ff1+1)^(0+1280),w,c
 10420   01665E  E10C               	bnz	u5750
 10421   016660  5007               	movf	(___fleq@ff2+2)^(0+1280),w,c
 10422   016662  1803               	xorwf	(___fleq@ff1+2)^(0+1280),w,c
 10423   016664  E109               	bnz	u5750
 10424   016666  5008               	movf	(___fleq@ff2+3)^(0+1280),w,c
 10425   016668  1804               	xorwf	(___fleq@ff1+3)^(0+1280),w,c
 10426   01666A  B4D8               	btfsc	status,2,c
 10427   01666C  EF3A  F0B3         	goto	u5751
 10428   016670  EF3C  F0B3         	goto	u5750
 10429   016674                     u5751:
 10430   016674  EF3F  F0B3         	goto	l8277
 10431   016678                     u5750:
 10432   016678  90D8               	bcf	status,0,c
 10433   01667A  EF40  F0B3         	goto	l1644
 10434   01667E                     l8277:
 10435   01667E  80D8               	bsf	status,0,c
 10436   016680                     l1644:
 10437   016680  0012               	return		;funcret
 10438   016682                     __end_of___fleq:
 10439                           	callstack 0
 10440                           
 10441 ;; *************** function _configuro *****************
 10442 ;; Defined at:
 10443 ;;		line 63 in file "p_final.c"
 10444 ;; Parameters:    Size  Location     Type
 10445 ;;		None
 10446 ;; Auto vars:     Size  Location     Type
 10447 ;;		None
 10448 ;; Return value:  Size  Location     Type
 10449 ;;                  1    wreg      void 
 10450 ;; Registers used:
 10451 ;;		wreg, status,2
 10452 ;; Tracked objects:
 10453 ;;		On entry : 0/0
 10454 ;;		On exit  : 0/0
 10455 ;;		Unchanged: 0/0
 10456 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10461 ;;Total ram usage:        0 bytes
 10462 ;; Hardware stack levels used: 1
 10463 ;; This function calls:
 10464 ;;		Nothing
 10465 ;; This function is called by:
 10466 ;;		_main
 10467 ;; This function uses a non-reentrant model
 10468 ;;
 10469                           
 10470                           	psect	text15
 10471   016E82                     __ptext15:
 10472                           	callstack 0
 10473   016E82                     _configuro:
 10474                           	callstack 126
 10475   016E82                     
 10476                           ;p_final.c: 64:     OSCCON1 = 0x60;
 10477   016E82  0E60               	movlw	96
 10478   016E84  0100               	movlb	0	; () banked
 10479   016E86  6FAD               	movwf	173,b	;volatile
 10480                           
 10481                           ;p_final.c: 65:     OSCFRQ = 0x06;
 10482   016E88  0E06               	movlw	6
 10483   016E8A  6FB1               	movwf	177,b	;volatile
 10484                           
 10485                           ;p_final.c: 66:     OSCEN = 0x40;
 10486   016E8C  0E40               	movlw	64
 10487   016E8E  6FB3               	movwf	179,b	;volatile
 10488   016E90                     
 10489                           ; BSR set to: 0
 10490                           ;p_final.c: 68:     TRISD = 0x00;
 10491   016E90  6AC9               	clrf	201,c	;volatile
 10492   016E92                     
 10493                           ; BSR set to: 0
 10494                           ;p_final.c: 69:     LATD = 0x00;
 10495   016E92  6AC1               	clrf	193,c	;volatile
 10496   016E94                     
 10497                           ; BSR set to: 0
 10498                           ;p_final.c: 70:     ANSELD = 0x00;
 10499   016E94  0104               	movlb	4	; () banked
 10500   016E96  6B18               	clrf	24,b	;volatile
 10501   016E98                     
 10502                           ; BSR set to: 4
 10503                           ;p_final.c: 72:     ANSELBbits.ANSELB1 = 0;
 10504   016E98  9308               	bcf	8,1,b	;volatile
 10505   016E9A                     
 10506                           ; BSR set to: 4
 10507                           ;p_final.c: 73:     ANSELBbits.ANSELB2 = 0;
 10508   016E9A  9508               	bcf	8,2,b	;volatile
 10509   016E9C                     
 10510                           ; BSR set to: 4
 10511   016E9C  0012               	return		;funcret
 10512   016E9E                     __end_of_configuro:
 10513                           	callstack 0
 10514                           
 10515 ;; *************** function _POS_CURSOR *****************
 10516 ;; Defined at:
 10517 ;;		line 5 in file "LCD.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;  fila            1    wreg     unsigned char 
 10520 ;;  columna         1    3[COMRAM] unsigned char 
 10521 ;; Auto vars:     Size  Location     Type
 10522 ;;  fila            1    4[COMRAM] unsigned char 
 10523 ;; Return value:  Size  Location     Type
 10524 ;;                  1    wreg      void 
 10525 ;; Registers used:
 10526 ;;		wreg, status,2, status,0, cstack
 10527 ;; Tracked objects:
 10528 ;;		On entry : 0/0
 10529 ;;		On exit  : 0/0
 10530 ;;		Unchanged: 0/0
 10531 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10532 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10536 ;;Total ram usage:        2 bytes
 10537 ;; Hardware stack levels used: 1
 10538 ;; Hardware stack levels required when called: 2
 10539 ;; This function calls:
 10540 ;;		_ENVIA_LCD_CMD
 10541 ;; This function is called by:
 10542 ;;		_main
 10543 ;; This function uses a non-reentrant model
 10544 ;;
 10545                           
 10546                           	psect	text16
 10547   0167A6                     __ptext16:
 10548                           	callstack 0
 10549   0167A6                     _POS_CURSOR:
 10550                           	callstack 124
 10551                           
 10552                           ; BSR set to: 4
 10553                           ;incstack = 0
 10554                           ;POS_CURSOR@fila stored from wreg
 10555   0167A6  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
 10556   0167A8                     
 10557                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
 10558   0167A8  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
 10559   0167AA  A4D8               	btfss	status,2,c
 10560   0167AC  EFDA  F0B3         	goto	u7841
 10561   0167B0  EFDC  F0B3         	goto	u7840
 10562   0167B4                     u7841:
 10563   0167B4  EFE2  F0B3         	goto	l9995
 10564   0167B8                     u7840:
 10565   0167B8                     
 10566                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
 10567   0167B8  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
 10568   0167BA  0F80               	addlw	128
 10569   0167BC  ECA7  F0B6         	call	_ENVIA_LCD_CMD
 10570                           
 10571                           ;LCD.c: 10:  }
 10572   0167C0  EF0F  F0B4         	goto	l1219
 10573   0167C4                     l9995:
 10574   0167C4  0E02               	movlw	2
 10575   0167C6  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
 10576   0167C8  A4D8               	btfss	status,2,c
 10577   0167CA  EFE9  F0B3         	goto	u7851
 10578   0167CE  EFEB  F0B3         	goto	u7850
 10579   0167D2                     u7851:
 10580   0167D2  EFF1  F0B3         	goto	l9999
 10581   0167D6                     u7850:
 10582   0167D6                     
 10583                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
 10584   0167D6  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
 10585   0167D8  0FC0               	addlw	192
 10586   0167DA  ECA7  F0B6         	call	_ENVIA_LCD_CMD
 10587                           
 10588                           ;LCD.c: 14:  }
 10589   0167DE  EF0F  F0B4         	goto	l1219
 10590   0167E2                     l9999:
 10591   0167E2  0E03               	movlw	3
 10592   0167E4  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
 10593   0167E6  A4D8               	btfss	status,2,c
 10594   0167E8  EFF8  F0B3         	goto	u7861
 10595   0167EC  EFFA  F0B3         	goto	u7860
 10596   0167F0                     u7861:
 10597   0167F0  EF00  F0B4         	goto	l10003
 10598   0167F4                     u7860:
 10599   0167F4                     
 10600                           ;LCD.c: 16:  {;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
 10601   0167F4  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
 10602   0167F6  0F94               	addlw	148
 10603   0167F8  ECA7  F0B6         	call	_ENVIA_LCD_CMD
 10604                           
 10605                           ;LCD.c: 18:  }
 10606   0167FC  EF0F  F0B4         	goto	l1219
 10607   016800                     l10003:
 10608   016800  0E04               	movlw	4
 10609   016802  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
 10610   016804  A4D8               	btfss	status,2,c
 10611   016806  EF07  F0B4         	goto	u7871
 10612   01680A  EF09  F0B4         	goto	u7870
 10613   01680E                     u7871:
 10614   01680E  EF0F  F0B4         	goto	l1215
 10615   016812                     u7870:
 10616   016812                     
 10617                           ;LCD.c: 20:  {;LCD.c: 21:   ENVIA_LCD_CMD(0xD4+columna);
 10618   016812  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
 10619   016814  0FD4               	addlw	212
 10620   016816  ECA7  F0B6         	call	_ENVIA_LCD_CMD
 10621   01681A  EF0F  F0B4         	goto	l1219
 10622   01681E                     l1215:
 10623   01681E                     l1219:
 10624   01681E  0012               	return		;funcret
 10625   016820                     __end_of_POS_CURSOR:
 10626                           	callstack 0
 10627                           
 10628 ;; *************** function _MPU6050_DMP_Init *****************
 10629 ;; Defined at:
 10630 ;;		line 97 in file "MPU6050_DMP.c"
 10631 ;; Parameters:    Size  Location     Type
 10632 ;;		None
 10633 ;; Auto vars:     Size  Location     Type
 10634 ;;		None
 10635 ;; Return value:  Size  Location     Type
 10636 ;;                  1    wreg      unsigned char 
 10637 ;; Registers used:
 10638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10639 ;; Tracked objects:
 10640 ;;		On entry : 0/0
 10641 ;;		On exit  : 0/0
 10642 ;;		Unchanged: 0/0
 10643 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10648 ;;Total ram usage:        0 bytes
 10649 ;; Hardware stack levels used: 1
 10650 ;; Hardware stack levels required when called: 7
 10651 ;; This function calls:
 10652 ;;		_MPU6050_Init
 10653 ;; This function is called by:
 10654 ;;		_main
 10655 ;; This function uses a non-reentrant model
 10656 ;;
 10657                           
 10658                           	psect	text17
 10659   016EF0                     __ptext17:
 10660                           	callstack 0
 10661   016EF0                     _MPU6050_DMP_Init:
 10662                           	callstack 119
 10663   016EF0                     
 10664                           ;MPU6050_DMP.c: 99:     if (!mpu6050_initialized) {
 10665   016EF0  0106               	movlb	6	; () banked
 10666   016EF2  51FE               	movf	_mpu6050_initialized& (0+255),w,b
 10667   016EF4  A4D8               	btfss	status,2,c
 10668   016EF6  EF7F  F0B7         	goto	u7771
 10669   016EFA  EF81  F0B7         	goto	u7770
 10670   016EFE                     u7771:
 10671   016EFE  EF83  F0B7         	goto	l581
 10672   016F02                     u7770:
 10673   016F02                     
 10674                           ; BSR set to: 6
 10675                           ;MPU6050_DMP.c: 100:         if (!MPU6050_Init()) {
 10676   016F02  ECAA  F0B1         	call	_MPU6050_Init	;wreg free
 10677   016F06                     l581:
 10678   016F06  0012               	return		;funcret
 10679   016F08                     __end_of_MPU6050_DMP_Init:
 10680                           	callstack 0
 10681                           
 10682 ;; *************** function _MPU6050_Init *****************
 10683 ;; Defined at:
 10684 ;;		line 51 in file "MPU6050_DMP.c"
 10685 ;; Parameters:    Size  Location     Type
 10686 ;;		None
 10687 ;; Auto vars:     Size  Location     Type
 10688 ;;		None
 10689 ;; Return value:  Size  Location     Type
 10690 ;;                  1    wreg      _Bool 
 10691 ;; Registers used:
 10692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10693 ;; Tracked objects:
 10694 ;;		On entry : 0/0
 10695 ;;		On exit  : 0/0
 10696 ;;		Unchanged: 0/0
 10697 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10700 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10701 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10702 ;;Total ram usage:        2 bytes
 10703 ;; Hardware stack levels used: 1
 10704 ;; Hardware stack levels required when called: 6
 10705 ;; This function calls:
 10706 ;;		_MPU6050_Movement_Init
 10707 ;;		_MPU6050_TestConnection
 10708 ;;		_MPU6050_WriteRegister
 10709 ;; This function is called by:
 10710 ;;		_MPU6050_DMP_Init
 10711 ;;		_MPU6050_Reset
 10712 ;; This function uses a non-reentrant model
 10713 ;;
 10714                           
 10715                           	psect	text18
 10716   016354                     __ptext18:
 10717                           	callstack 0
 10718   016354                     _MPU6050_Init:
 10719                           	callstack 119
 10720   016354                     
 10721                           ;MPU6050_DMP.c: 54:     if (!MPU6050_TestConnection()) {
 10722   016354  EC31  F0B7         	call	_MPU6050_TestConnection	;wreg free
 10723   016358  0900               	iorlw	0
 10724   01635A  A4D8               	btfss	status,2,c
 10725   01635C  EFB2  F0B1         	goto	u7381
 10726   016360  EFB4  F0B1         	goto	u7380
 10727   016364                     u7381:
 10728   016364  EFB7  F0B1         	goto	l9425
 10729   016368                     u7380:
 10730   016368                     l9421:
 10731                           
 10732                           ;MPU6050_DMP.c: 55:         return 0;
 10733   016368  0E00               	movlw	0
 10734   01636A  EF20  F0B2         	goto	l571
 10735   01636E                     l9425:
 10736                           
 10737                           ;MPU6050_DMP.c: 59:     if (!MPU6050_WriteRegister(0x6B, 0x00)) {
 10738   01636E  0E00               	movlw	0
 10739   016370  6E0A               	movwf	MPU6050_WriteRegister@data^(0+1280),c
 10740   016372  0E6B               	movlw	107
 10741   016374  EC1E  F0B7         	call	_MPU6050_WriteRegister
 10742   016378  0900               	iorlw	0
 10743   01637A  A4D8               	btfss	status,2,c
 10744   01637C  EFC2  F0B1         	goto	u7391
 10745   016380  EFC4  F0B1         	goto	u7390
 10746   016384                     u7391:
 10747   016384  EFC6  F0B1         	goto	l9431
 10748   016388                     u7390:
 10749   016388  EFB4  F0B1         	goto	l9421
 10750   01638C                     l9431:
 10751                           
 10752                           ;MPU6050_DMP.c: 62:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 10753   01638C  0E09               	movlw	9
 10754   01638E  6E0F               	movwf	(??_MPU6050_Init+1)^(0+1280),c
 10755   016390  0E1E               	movlw	30
 10756   016392  6E0E               	movwf	??_MPU6050_Init^(0+1280),c
 10757   016394  0EE4               	movlw	228
 10758   016396                     u8907:
 10759   016396  2EE8               	decfsz	wreg,f,c
 10760   016398  D7FE               	bra	u8907
 10761   01639A  2E0E               	decfsz	??_MPU6050_Init^(0+1280),f,c
 10762   01639C  D7FC               	bra	u8907
 10763   01639E  2E0F               	decfsz	(??_MPU6050_Init+1)^(0+1280),f,c
 10764   0163A0  D7FA               	bra	u8907
 10765   0163A2  D000               	nop2	
 10766   0163A4                     
 10767                           ;MPU6050_DMP.c: 65:     if (!MPU6050_WriteRegister(0x19, 0x07)) {
 10768   0163A4  0E07               	movlw	7
 10769   0163A6  6E0A               	movwf	MPU6050_WriteRegister@data^(0+1280),c
 10770   0163A8  0E19               	movlw	25
 10771   0163AA  EC1E  F0B7         	call	_MPU6050_WriteRegister
 10772   0163AE  0900               	iorlw	0
 10773   0163B0  A4D8               	btfss	status,2,c
 10774   0163B2  EFDD  F0B1         	goto	u7401
 10775   0163B6  EFDF  F0B1         	goto	u7400
 10776   0163BA                     u7401:
 10777   0163BA  EFE1  F0B1         	goto	l9439
 10778   0163BE                     u7400:
 10779   0163BE  EFB4  F0B1         	goto	l9421
 10780   0163C2                     l9439:
 10781                           
 10782                           ;MPU6050_DMP.c: 70:     if (!MPU6050_WriteRegister(0x1A, 0x03)) {
 10783   0163C2  0E03               	movlw	3
 10784   0163C4  6E0A               	movwf	MPU6050_WriteRegister@data^(0+1280),c
 10785   0163C6  0E1A               	movlw	26
 10786   0163C8  EC1E  F0B7         	call	_MPU6050_WriteRegister
 10787   0163CC  0900               	iorlw	0
 10788   0163CE  A4D8               	btfss	status,2,c
 10789   0163D0  EFEC  F0B1         	goto	u7411
 10790   0163D4  EFEE  F0B1         	goto	u7410
 10791   0163D8                     u7411:
 10792   0163D8  EFF0  F0B1         	goto	l9445
 10793   0163DC                     u7410:
 10794   0163DC  EFB4  F0B1         	goto	l9421
 10795   0163E0                     l9445:
 10796                           
 10797                           ;MPU6050_DMP.c: 75:     if (!MPU6050_WriteRegister(0x1C, 0x08)) {
 10798   0163E0  0E08               	movlw	8
 10799   0163E2  6E0A               	movwf	MPU6050_WriteRegister@data^(0+1280),c
 10800   0163E4  0E1C               	movlw	28
 10801   0163E6  EC1E  F0B7         	call	_MPU6050_WriteRegister
 10802   0163EA  0900               	iorlw	0
 10803   0163EC  A4D8               	btfss	status,2,c
 10804   0163EE  EFFB  F0B1         	goto	u7421
 10805   0163F2  EFFD  F0B1         	goto	u7420
 10806   0163F6                     u7421:
 10807   0163F6  EFFF  F0B1         	goto	l9451
 10808   0163FA                     u7420:
 10809   0163FA  EFB4  F0B1         	goto	l9421
 10810   0163FE                     l9451:
 10811                           
 10812                           ;MPU6050_DMP.c: 80:     if (!MPU6050_WriteRegister(0x1B, 0x08)) {
 10813   0163FE  0E08               	movlw	8
 10814   016400  6E0A               	movwf	MPU6050_WriteRegister@data^(0+1280),c
 10815   016402  0E1B               	movlw	27
 10816   016404  EC1E  F0B7         	call	_MPU6050_WriteRegister
 10817   016408  0900               	iorlw	0
 10818   01640A  A4D8               	btfss	status,2,c
 10819   01640C  EF0A  F0B2         	goto	u7431
 10820   016410  EF0C  F0B2         	goto	u7430
 10821   016414                     u7431:
 10822   016414  EF0E  F0B2         	goto	l9457
 10823   016418                     u7430:
 10824   016418  EFB4  F0B1         	goto	l9421
 10825   01641C                     l9457:
 10826                           
 10827                           ;MPU6050_DMP.c: 85:     MPU6050_Movement_Init();
 10828   01641C  EC80  F0B4         	call	_MPU6050_Movement_Init	;wreg free
 10829   016420                     
 10830                           ;MPU6050_DMP.c: 88:     _delay((unsigned long)((50)*(64000000UL/4000.0)));
 10831   016420  0E05               	movlw	5
 10832   016422  6E0F               	movwf	(??_MPU6050_Init+1)^(0+1280),c
 10833   016424  0E0F               	movlw	15
 10834   016426  6E0E               	movwf	??_MPU6050_Init^(0+1280),c
 10835   016428  0EF1               	movlw	241
 10836   01642A                     u8917:
 10837   01642A  2EE8               	decfsz	wreg,f,c
 10838   01642C  D7FE               	bra	u8917
 10839   01642E  2E0E               	decfsz	??_MPU6050_Init^(0+1280),f,c
 10840   016430  D7FC               	bra	u8917
 10841   016432  2E0F               	decfsz	(??_MPU6050_Init+1)^(0+1280),f,c
 10842   016434  D7FA               	bra	u8917
 10843   016436  0000               	nop	
 10844   016438                     
 10845                           ;MPU6050_DMP.c: 90:     mpu6050_initialized = 1;
 10846   016438  0E01               	movlw	1
 10847   01643A  0106               	movlb	6	; () banked
 10848   01643C  6FFE               	movwf	_mpu6050_initialized& (0+255),b
 10849   01643E                     
 10850                           ; BSR set to: 6
 10851                           ;MPU6050_DMP.c: 91:     return 1;
 10852   01643E  0E01               	movlw	1
 10853   016440                     l571:
 10854   016440  0012               	return		;funcret
 10855   016442                     __end_of_MPU6050_Init:
 10856                           	callstack 0
 10857                           
 10858 ;; *************** function _MPU6050_WriteRegister *****************
 10859 ;; Defined at:
 10860 ;;		line 564 in file "MPU6050_DMP.c"
 10861 ;; Parameters:    Size  Location     Type
 10862 ;;  reg             1    wreg     unsigned char 
 10863 ;;  data            1    9[COMRAM] unsigned char 
 10864 ;; Auto vars:     Size  Location     Type
 10865 ;;  reg             1   10[COMRAM] unsigned char 
 10866 ;; Return value:  Size  Location     Type
 10867 ;;                  1    wreg      _Bool 
 10868 ;; Registers used:
 10869 ;;		wreg, status,2, status,0, cstack
 10870 ;; Tracked objects:
 10871 ;;		On entry : 0/0
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10875 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10878 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10879 ;;Total ram usage:        2 bytes
 10880 ;; Hardware stack levels used: 1
 10881 ;; Hardware stack levels required when called: 3
 10882 ;; This function calls:
 10883 ;;		_SW_I2C_WriteRegister
 10884 ;; This function is called by:
 10885 ;;		_MPU6050_Init
 10886 ;;		_MPU6050_Reset
 10887 ;;		_MPU6050_Sleep
 10888 ;;		_MPU6050_WakeUp
 10889 ;; This function uses a non-reentrant model
 10890 ;;
 10891                           
 10892                           	psect	text19
 10893   016E3C                     __ptext19:
 10894                           	callstack 0
 10895   016E3C                     _MPU6050_WriteRegister:
 10896                           	callstack 121
 10897                           
 10898                           ;incstack = 0
 10899                           ;MPU6050_WriteRegister@reg stored from wreg
 10900   016E3C  6E0B               	movwf	MPU6050_WriteRegister@reg^(0+1280),c
 10901   016E3E                     
 10902                           ;MPU6050_DMP.c: 565:     return (SW_I2C_WriteRegister(0x68, reg, data) == SW_I2C_SUCCESS
      +                          );
 10903   016E3E  C50B  F506         	movff	MPU6050_WriteRegister@reg,SW_I2C_WriteRegister@reg_addr
 10904   016E42  C50A  F507         	movff	MPU6050_WriteRegister@data,SW_I2C_WriteRegister@data
 10905   016E46  0E68               	movlw	104
 10906   016E48  EC93  F0B3         	call	_SW_I2C_WriteRegister
 10907   016E4C  0900               	iorlw	0
 10908   016E4E  B4D8               	btfsc	status,2,c
 10909   016E50  EF2C  F0B7         	goto	u6931
 10910   016E54  EF2F  F0B7         	goto	u6930
 10911   016E58                     u6931:
 10912   016E58  0E01               	movlw	1
 10913   016E5A  EF30  F0B7         	goto	u6940
 10914   016E5E                     u6930:
 10915   016E5E  0E00               	movlw	0
 10916   016E60                     u6940:
 10917   016E60  0012               	return		;funcret
 10918   016E62                     __end_of_MPU6050_WriteRegister:
 10919                           	callstack 0
 10920                           
 10921 ;; *************** function _SW_I2C_WriteRegister *****************
 10922 ;; Defined at:
 10923 ;;		line 240 in file "Software_I2C.c"
 10924 ;; Parameters:    Size  Location     Type
 10925 ;;  device_addr     1    wreg     unsigned char 
 10926 ;;  reg_addr        1    5[COMRAM] unsigned char 
 10927 ;;  data            1    6[COMRAM] unsigned char 
 10928 ;; Auto vars:     Size  Location     Type
 10929 ;;  device_addr     1    7[COMRAM] unsigned char 
 10930 ;;  result          1    8[COMRAM] enum E17123
 10931 ;; Return value:  Size  Location     Type
 10932 ;;                  1    wreg      enum E17547
 10933 ;; Registers used:
 10934 ;;		wreg, status,2, status,0, cstack
 10935 ;; Tracked objects:
 10936 ;;		On entry : 0/0
 10937 ;;		On exit  : 0/0
 10938 ;;		Unchanged: 0/0
 10939 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10941 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10943 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10944 ;;Total ram usage:        4 bytes
 10945 ;; Hardware stack levels used: 1
 10946 ;; Hardware stack levels required when called: 2
 10947 ;; This function calls:
 10948 ;;		_SW_I2C_Start
 10949 ;;		_SW_I2C_Stop
 10950 ;;		_SW_I2C_WriteByte
 10951 ;; This function is called by:
 10952 ;;		_MPU6050_WriteRegister
 10953 ;; This function uses a non-reentrant model
 10954 ;;
 10955                           
 10956                           	psect	text20
 10957   016726                     __ptext20:
 10958                           	callstack 0
 10959   016726                     _SW_I2C_WriteRegister:
 10960                           	callstack 121
 10961                           
 10962                           ;incstack = 0
 10963                           ;SW_I2C_WriteRegister@device_addr stored from wreg
 10964   016726  6E08               	movwf	SW_I2C_WriteRegister@device_addr^(0+1280),c
 10965   016728                     
 10966                           ;Software_I2C.c: 241:     sw_i2c_error_t result;;Software_I2C.c: 244:     result = SW_I2
      +                          C_Start();
 10967   016728  ECF7  F0AD         	call	_SW_I2C_Start	;wreg free
 10968   01672C  6E09               	movwf	SW_I2C_WriteRegister@result^(0+1280),c
 10969   01672E                     
 10970                           ;Software_I2C.c: 245:     if (result != SW_I2C_SUCCESS) {
 10971   01672E  5009               	movf	SW_I2C_WriteRegister@result^(0+1280),w,c
 10972   016730  B4D8               	btfsc	status,2,c
 10973   016732  EF9D  F0B3         	goto	u6201
 10974   016736  EF9F  F0B3         	goto	u6200
 10975   01673A                     u6201:
 10976   01673A  EFA2  F0B3         	goto	l8487
 10977   01673E                     u6200:
 10978   01673E                     l8483:
 10979                           
 10980                           ;Software_I2C.c: 246:         return result;
 10981   01673E  5009               	movf	SW_I2C_WriteRegister@result^(0+1280),w,c
 10982   016740  EFD2  F0B3         	goto	l1065
 10983   016744                     l8487:
 10984                           
 10985                           ;Software_I2C.c: 251:     result = SW_I2C_WriteByte((uint8_t)((device_addr << 1) | 0));
 10986   016744  5008               	movf	SW_I2C_WriteRegister@device_addr^(0+1280),w,c
 10987   016746  2408               	addwf	SW_I2C_WriteRegister@device_addr^(0+1280),w,c
 10988   016748  EC26  F0A5         	call	_SW_I2C_WriteByte
 10989   01674C  6E09               	movwf	SW_I2C_WriteRegister@result^(0+1280),c
 10990   01674E                     
 10991                           ;Software_I2C.c: 252:     if (result != SW_I2C_SUCCESS) {
 10992   01674E  5009               	movf	SW_I2C_WriteRegister@result^(0+1280),w,c
 10993   016750  B4D8               	btfsc	status,2,c
 10994   016752  EFAD  F0B3         	goto	u6211
 10995   016756  EFAF  F0B3         	goto	u6210
 10996   01675A                     u6211:
 10997   01675A  EFB3  F0B3         	goto	l8497
 10998   01675E                     u6210:
 10999   01675E                     l8491:
 11000                           
 11001                           ;Software_I2C.c: 253:         SW_I2C_Stop();
 11002   01675E  ECA6  F0AC         	call	_SW_I2C_Stop	;wreg free
 11003   016762  EF9F  F0B3         	goto	l8483
 11004   016766                     l8497:
 11005                           
 11006                           ;Software_I2C.c: 258:     result = SW_I2C_WriteByte(reg_addr);
 11007   016766  5006               	movf	SW_I2C_WriteRegister@reg_addr^(0+1280),w,c
 11008   016768  EC26  F0A5         	call	_SW_I2C_WriteByte
 11009   01676C  6E09               	movwf	SW_I2C_WriteRegister@result^(0+1280),c
 11010   01676E                     
 11011                           ;Software_I2C.c: 259:     if (result != SW_I2C_SUCCESS) {
 11012   01676E  5009               	movf	SW_I2C_WriteRegister@result^(0+1280),w,c
 11013   016770  B4D8               	btfsc	status,2,c
 11014   016772  EFBD  F0B3         	goto	u6221
 11015   016776  EFBF  F0B3         	goto	u6220
 11016   01677A                     u6221:
 11017   01677A  EFC1  F0B3         	goto	l8507
 11018   01677E                     u6220:
 11019   01677E  EFAF  F0B3         	goto	l8491
 11020   016782                     l8507:
 11021                           
 11022                           ;Software_I2C.c: 265:     result = SW_I2C_WriteByte(data);
 11023   016782  5007               	movf	SW_I2C_WriteRegister@data^(0+1280),w,c
 11024   016784  EC26  F0A5         	call	_SW_I2C_WriteByte
 11025   016788  6E09               	movwf	SW_I2C_WriteRegister@result^(0+1280),c
 11026   01678A                     
 11027                           ;Software_I2C.c: 266:     if (result != SW_I2C_SUCCESS) {
 11028   01678A  5009               	movf	SW_I2C_WriteRegister@result^(0+1280),w,c
 11029   01678C  B4D8               	btfsc	status,2,c
 11030   01678E  EFCB  F0B3         	goto	u6231
 11031   016792  EFCD  F0B3         	goto	u6230
 11032   016796                     u6231:
 11033   016796  EFCF  F0B3         	goto	l8517
 11034   01679A                     u6230:
 11035   01679A  EFAF  F0B3         	goto	l8491
 11036   01679E                     l8517:
 11037                           
 11038                           ;Software_I2C.c: 272:     SW_I2C_Stop();
 11039   01679E  ECA6  F0AC         	call	_SW_I2C_Stop	;wreg free
 11040   0167A2                     
 11041                           ;Software_I2C.c: 274:     return SW_I2C_SUCCESS;
 11042   0167A2  0E00               	movlw	0
 11043   0167A4                     l1065:
 11044   0167A4  0012               	return		;funcret
 11045   0167A6                     __end_of_SW_I2C_WriteRegister:
 11046                           	callstack 0
 11047                           
 11048 ;; *************** function _MPU6050_TestConnection *****************
 11049 ;; Defined at:
 11050 ;;		line 519 in file "MPU6050_DMP.c"
 11051 ;; Parameters:    Size  Location     Type
 11052 ;;		None
 11053 ;; Auto vars:     Size  Location     Type
 11054 ;;  who_am_i        1   12[COMRAM] unsigned char 
 11055 ;; Return value:  Size  Location     Type
 11056 ;;                  1    wreg      _Bool 
 11057 ;; Registers used:
 11058 ;;		wreg, status,2, status,0, cstack
 11059 ;; Tracked objects:
 11060 ;;		On entry : 0/0
 11061 ;;		On exit  : 0/0
 11062 ;;		Unchanged: 0/0
 11063 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11067 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11068 ;;Total ram usage:        1 bytes
 11069 ;; Hardware stack levels used: 1
 11070 ;; Hardware stack levels required when called: 5
 11071 ;; This function calls:
 11072 ;;		_MPU6050_ReadRegister
 11073 ;; This function is called by:
 11074 ;;		_MPU6050_Init
 11075 ;; This function uses a non-reentrant model
 11076 ;;
 11077                           
 11078                           	psect	text21
 11079   016E62                     __ptext21:
 11080                           	callstack 0
 11081   016E62                     _MPU6050_TestConnection:
 11082                           	callstack 119
 11083   016E62                     
 11084                           ;MPU6050_DMP.c: 521:     uint8_t who_am_i = MPU6050_ReadRegister(0x75);
 11085   016E62  0E75               	movlw	117
 11086   016E64  EC95  F0B7         	call	_MPU6050_ReadRegister
 11087   016E68  6E0D               	movwf	MPU6050_TestConnection@who_am_i^(0+1280),c
 11088   016E6A                     
 11089                           ;MPU6050_DMP.c: 522:     return (who_am_i == 0x68);
 11090   016E6A  0E68               	movlw	104
 11091   016E6C  180D               	xorwf	MPU6050_TestConnection@who_am_i^(0+1280),w,c
 11092   016E6E  B4D8               	btfsc	status,2,c
 11093   016E70  EF3C  F0B7         	goto	u6911
 11094   016E74  EF3F  F0B7         	goto	u6910
 11095   016E78                     u6911:
 11096   016E78  0E01               	movlw	1
 11097   016E7A  EF40  F0B7         	goto	u6920
 11098   016E7E                     u6910:
 11099   016E7E  0E00               	movlw	0
 11100   016E80                     u6920:
 11101   016E80  0012               	return		;funcret
 11102   016E82                     __end_of_MPU6050_TestConnection:
 11103                           	callstack 0
 11104                           
 11105 ;; *************** function _MPU6050_ReadRegister *****************
 11106 ;; Defined at:
 11107 ;;		line 571 in file "MPU6050_DMP.c"
 11108 ;; Parameters:    Size  Location     Type
 11109 ;;  reg             1    wreg     unsigned char 
 11110 ;; Auto vars:     Size  Location     Type
 11111 ;;  reg             1   11[COMRAM] unsigned char 
 11112 ;; Return value:  Size  Location     Type
 11113 ;;                  1    wreg      unsigned char 
 11114 ;; Registers used:
 11115 ;;		wreg, status,2, status,0, cstack
 11116 ;; Tracked objects:
 11117 ;;		On entry : 0/0
 11118 ;;		On exit  : 0/0
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11125 ;;Total ram usage:        1 bytes
 11126 ;; Hardware stack levels used: 1
 11127 ;; Hardware stack levels required when called: 4
 11128 ;; This function calls:
 11129 ;;		_SW_I2C_ReadRegister
 11130 ;; This function is called by:
 11131 ;;		_MPU6050_TestConnection
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           
 11135                           	psect	text22
 11136   016F2A                     __ptext22:
 11137                           	callstack 0
 11138   016F2A                     _MPU6050_ReadRegister:
 11139                           	callstack 119
 11140                           
 11141                           ;incstack = 0
 11142                           ;MPU6050_ReadRegister@reg stored from wreg
 11143   016F2A  6E0C               	movwf	MPU6050_ReadRegister@reg^(0+1280),c
 11144   016F2C                     
 11145                           ;MPU6050_DMP.c: 572:     return SW_I2C_ReadRegister(0x68, reg);
 11146   016F2C  C50C  F508         	movff	MPU6050_ReadRegister@reg,SW_I2C_ReadRegister@reg_addr
 11147   016F30  0E68               	movlw	104
 11148   016F32  EC41  F0B3         	call	_SW_I2C_ReadRegister
 11149   016F36  0012               	return		;funcret
 11150   016F38                     __end_of_MPU6050_ReadRegister:
 11151                           	callstack 0
 11152                           
 11153 ;; *************** function _SW_I2C_ReadRegister *****************
 11154 ;; Defined at:
 11155 ;;		line 280 in file "Software_I2C.c"
 11156 ;; Parameters:    Size  Location     Type
 11157 ;;  device_addr     1    wreg     unsigned char 
 11158 ;;  reg_addr        1    7[COMRAM] unsigned char 
 11159 ;; Auto vars:     Size  Location     Type
 11160 ;;  device_addr     1    9[COMRAM] unsigned char 
 11161 ;;  result          1   10[COMRAM] enum E17123
 11162 ;;  data            1    8[COMRAM] unsigned char 
 11163 ;; Return value:  Size  Location     Type
 11164 ;;                  1    wreg      unsigned char 
 11165 ;; Registers used:
 11166 ;;		wreg, status,2, status,0, cstack
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11172 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11173 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11175 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11176 ;;Total ram usage:        4 bytes
 11177 ;; Hardware stack levels used: 1
 11178 ;; Hardware stack levels required when called: 3
 11179 ;; This function calls:
 11180 ;;		_SW_I2C_ReadByte
 11181 ;;		_SW_I2C_Restart
 11182 ;;		_SW_I2C_Start
 11183 ;;		_SW_I2C_Stop
 11184 ;;		_SW_I2C_WriteByte
 11185 ;; This function is called by:
 11186 ;;		_MPU6050_ReadRegister
 11187 ;; This function uses a non-reentrant model
 11188 ;;
 11189                           
 11190                           	psect	text23
 11191   016682                     __ptext23:
 11192                           	callstack 0
 11193   016682                     _SW_I2C_ReadRegister:
 11194                           	callstack 119
 11195                           
 11196                           ;incstack = 0
 11197                           ;SW_I2C_ReadRegister@device_addr stored from wreg
 11198   016682  6E0A               	movwf	SW_I2C_ReadRegister@device_addr^(0+1280),c
 11199   016684                     
 11200                           ;Software_I2C.c: 285:     result = SW_I2C_Start();
 11201   016684  ECF7  F0AD         	call	_SW_I2C_Start	;wreg free
 11202   016688  6E0B               	movwf	SW_I2C_ReadRegister@result^(0+1280),c
 11203   01668A                     
 11204                           ;Software_I2C.c: 286:     if (result != SW_I2C_SUCCESS) {
 11205   01668A  500B               	movf	SW_I2C_ReadRegister@result^(0+1280),w,c
 11206   01668C  B4D8               	btfsc	status,2,c
 11207   01668E  EF4B  F0B3         	goto	u5261
 11208   016692  EF4D  F0B3         	goto	u5260
 11209   016696                     u5261:
 11210   016696  EF50  F0B3         	goto	l7941
 11211   01669A                     u5260:
 11212   01669A                     l7937:
 11213                           
 11214                           ;Software_I2C.c: 287:         return 0x00;
 11215   01669A  0E00               	movlw	0
 11216   01669C  EF92  F0B3         	goto	l1072
 11217   0166A0                     l7941:
 11218                           
 11219                           ;Software_I2C.c: 292:     result = SW_I2C_WriteByte((uint8_t)((device_addr << 1) | 0));
 11220   0166A0  500A               	movf	SW_I2C_ReadRegister@device_addr^(0+1280),w,c
 11221   0166A2  240A               	addwf	SW_I2C_ReadRegister@device_addr^(0+1280),w,c
 11222   0166A4  EC26  F0A5         	call	_SW_I2C_WriteByte
 11223   0166A8  6E0B               	movwf	SW_I2C_ReadRegister@result^(0+1280),c
 11224   0166AA                     
 11225                           ;Software_I2C.c: 293:     if (result != SW_I2C_SUCCESS) {
 11226   0166AA  500B               	movf	SW_I2C_ReadRegister@result^(0+1280),w,c
 11227   0166AC  B4D8               	btfsc	status,2,c
 11228   0166AE  EF5B  F0B3         	goto	u5271
 11229   0166B2  EF5D  F0B3         	goto	u5270
 11230   0166B6                     u5271:
 11231   0166B6  EF61  F0B3         	goto	l7951
 11232   0166BA                     u5270:
 11233   0166BA                     l7945:
 11234                           
 11235                           ;Software_I2C.c: 294:         SW_I2C_Stop();
 11236   0166BA  ECA6  F0AC         	call	_SW_I2C_Stop	;wreg free
 11237   0166BE  EF4D  F0B3         	goto	l7937
 11238   0166C2                     l7951:
 11239                           
 11240                           ;Software_I2C.c: 299:     result = SW_I2C_WriteByte(reg_addr);
 11241   0166C2  5008               	movf	SW_I2C_ReadRegister@reg_addr^(0+1280),w,c
 11242   0166C4  EC26  F0A5         	call	_SW_I2C_WriteByte
 11243   0166C8  6E0B               	movwf	SW_I2C_ReadRegister@result^(0+1280),c
 11244   0166CA                     
 11245                           ;Software_I2C.c: 300:     if (result != SW_I2C_SUCCESS) {
 11246   0166CA  500B               	movf	SW_I2C_ReadRegister@result^(0+1280),w,c
 11247   0166CC  B4D8               	btfsc	status,2,c
 11248   0166CE  EF6B  F0B3         	goto	u5281
 11249   0166D2  EF6D  F0B3         	goto	u5280
 11250   0166D6                     u5281:
 11251   0166D6  EF6F  F0B3         	goto	l7961
 11252   0166DA                     u5280:
 11253   0166DA  EF5D  F0B3         	goto	l7945
 11254   0166DE                     l7961:
 11255                           
 11256                           ;Software_I2C.c: 306:     result = SW_I2C_Restart();
 11257   0166DE  EC84  F0B7         	call	_SW_I2C_Restart	;wreg free
 11258   0166E2  6E0B               	movwf	SW_I2C_ReadRegister@result^(0+1280),c
 11259   0166E4                     
 11260                           ;Software_I2C.c: 307:     if (result != SW_I2C_SUCCESS) {
 11261   0166E4  500B               	movf	SW_I2C_ReadRegister@result^(0+1280),w,c
 11262   0166E6  B4D8               	btfsc	status,2,c
 11263   0166E8  EF78  F0B3         	goto	u5291
 11264   0166EC  EF7A  F0B3         	goto	u5290
 11265   0166F0                     u5291:
 11266   0166F0  EF7C  F0B3         	goto	l7971
 11267   0166F4                     u5290:
 11268   0166F4  EF5D  F0B3         	goto	l7945
 11269   0166F8                     l7971:
 11270                           
 11271                           ;Software_I2C.c: 314:     result = SW_I2C_WriteByte((uint8_t)((device_addr << 1) | 1));
 11272   0166F8  80D8               	bsf	status,0,c
 11273   0166FA  340A               	rlcf	SW_I2C_ReadRegister@device_addr^(0+1280),w,c
 11274   0166FC  EC26  F0A5         	call	_SW_I2C_WriteByte
 11275   016700  6E0B               	movwf	SW_I2C_ReadRegister@result^(0+1280),c
 11276   016702                     
 11277                           ;Software_I2C.c: 315:     if (result != SW_I2C_SUCCESS) {
 11278   016702  500B               	movf	SW_I2C_ReadRegister@result^(0+1280),w,c
 11279   016704  B4D8               	btfsc	status,2,c
 11280   016706  EF87  F0B3         	goto	u5301
 11281   01670A  EF89  F0B3         	goto	u5300
 11282   01670E                     u5301:
 11283   01670E  EF8B  F0B3         	goto	l7981
 11284   016712                     u5300:
 11285   016712  EF5D  F0B3         	goto	l7945
 11286   016716                     l7981:
 11287                           
 11288                           ;Software_I2C.c: 321:     data = SW_I2C_ReadByte(0);
 11289   016716  0E00               	movlw	0
 11290   016718  ECA9  F0B0         	call	_SW_I2C_ReadByte
 11291   01671C  6E09               	movwf	SW_I2C_ReadRegister@data^(0+1280),c
 11292                           
 11293                           ;Software_I2C.c: 324:     SW_I2C_Stop();
 11294   01671E  ECA6  F0AC         	call	_SW_I2C_Stop	;wreg free
 11295   016722                     
 11296                           ;Software_I2C.c: 326:     return data;
 11297   016722  5009               	movf	SW_I2C_ReadRegister@data^(0+1280),w,c
 11298   016724                     l1072:
 11299   016724  0012               	return		;funcret
 11300   016726                     __end_of_SW_I2C_ReadRegister:
 11301                           	callstack 0
 11302                           
 11303 ;; *************** function _MPU6050_Movement_Init *****************
 11304 ;; Defined at:
 11305 ;;		line 305 in file "MPU6050_DMP.c"
 11306 ;; Parameters:    Size  Location     Type
 11307 ;;		None
 11308 ;; Auto vars:     Size  Location     Type
 11309 ;;		None
 11310 ;; Return value:  Size  Location     Type
 11311 ;;                  1    wreg      void 
 11312 ;; Registers used:
 11313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11314 ;; Tracked objects:
 11315 ;;		On entry : 0/0
 11316 ;;		On exit  : 0/0
 11317 ;;		Unchanged: 0/0
 11318 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11323 ;;Total ram usage:        0 bytes
 11324 ;; Hardware stack levels used: 1
 11325 ;; Hardware stack levels required when called: 1
 11326 ;; This function calls:
 11327 ;;		_MovingAverage_Reset
 11328 ;; This function is called by:
 11329 ;;		_MPU6050_Init
 11330 ;; This function uses a non-reentrant model
 11331 ;;
 11332                           
 11333                           	psect	text24
 11334   016900                     __ptext24:
 11335                           	callstack 0
 11336   016900                     _MPU6050_Movement_Init:
 11337                           	callstack 123
 11338   016900                     
 11339                           ;MPU6050_DMP.c: 307:     movement_detector.current_movement = MOVEMENT_NONE;
 11340   016900  0107               	movlb	7	; () banked
 11341   016902  6B14               	clrf	_movement_detector& (0+255),b
 11342                           
 11343                           ;MPU6050_DMP.c: 308:     movement_detector.state = MPU6050_STATE_IDLE;
 11344   016904  6B15               	clrf	(_movement_detector+1)& (0+255),b
 11345   016906                     
 11346                           ; BSR set to: 7
 11347                           ;MPU6050_DMP.c: 309:     movement_detector.movement_start_time = 0;
 11348   016906  0E00               	movlw	0
 11349   016908  6F17               	movwf	(_movement_detector+3)& (0+255),b
 11350   01690A  0E00               	movlw	0
 11351   01690C  6F16               	movwf	(_movement_detector+2)& (0+255),b
 11352                           
 11353                           ;MPU6050_DMP.c: 310:     movement_detector.movement_duration = 0;
 11354   01690E  0E00               	movlw	0
 11355   016910  6F19               	movwf	(_movement_detector+5)& (0+255),b
 11356   016912  0E00               	movlw	0
 11357   016914  6F18               	movwf	(_movement_detector+4)& (0+255),b
 11358   016916                     
 11359                           ; BSR set to: 7
 11360                           ;MPU6050_DMP.c: 311:     movement_detector.confidence_level = 0;
 11361   016916  6B1A               	clrf	(_movement_detector+6)& (0+255),b
 11362   016918                     
 11363                           ; BSR set to: 7
 11364                           ;MPU6050_DMP.c: 314:     MovingAverage_Reset(&movement_detector.accel_x_filter);
 11365   016918  0E1B               	movlw	low (_movement_detector+7)
 11366   01691A  6E01               	movwf	MovingAverage_Reset@filter^(0+1280),c
 11367   01691C  0E07               	movlw	high (_movement_detector+7)
 11368   01691E  6E02               	movwf	(MovingAverage_Reset@filter+1)^(0+1280),c
 11369   016920  ECB1  F0B4         	call	_MovingAverage_Reset	;wreg free
 11370   016924                     
 11371                           ;MPU6050_DMP.c: 315:     MovingAverage_Reset(&movement_detector.accel_y_filter);
 11372   016924  0E3D               	movlw	low (_movement_detector+41)
 11373   016926  6E01               	movwf	MovingAverage_Reset@filter^(0+1280),c
 11374   016928  0E07               	movlw	high (_movement_detector+41)
 11375   01692A  6E02               	movwf	(MovingAverage_Reset@filter+1)^(0+1280),c
 11376   01692C  ECB1  F0B4         	call	_MovingAverage_Reset	;wreg free
 11377   016930                     
 11378                           ;MPU6050_DMP.c: 316:     MovingAverage_Reset(&movement_detector.accel_z_filter);
 11379   016930  0E5F               	movlw	low (_movement_detector+75)
 11380   016932  6E01               	movwf	MovingAverage_Reset@filter^(0+1280),c
 11381   016934  0E07               	movlw	high (_movement_detector+75)
 11382   016936  6E02               	movwf	(MovingAverage_Reset@filter+1)^(0+1280),c
 11383   016938  ECB1  F0B4         	call	_MovingAverage_Reset	;wreg free
 11384   01693C                     
 11385                           ;MPU6050_DMP.c: 317:     MovingAverage_Reset(&movement_detector.gyro_x_filter);
 11386   01693C  0E81               	movlw	low (_movement_detector+109)
 11387   01693E  6E01               	movwf	MovingAverage_Reset@filter^(0+1280),c
 11388   016940  0E07               	movlw	high (_movement_detector+109)
 11389   016942  6E02               	movwf	(MovingAverage_Reset@filter+1)^(0+1280),c
 11390   016944  ECB1  F0B4         	call	_MovingAverage_Reset	;wreg free
 11391   016948                     
 11392                           ;MPU6050_DMP.c: 318:     MovingAverage_Reset(&movement_detector.gyro_y_filter);
 11393   016948  0EA3               	movlw	low (_movement_detector+143)
 11394   01694A  6E01               	movwf	MovingAverage_Reset@filter^(0+1280),c
 11395   01694C  0E07               	movlw	high (_movement_detector+143)
 11396   01694E  6E02               	movwf	(MovingAverage_Reset@filter+1)^(0+1280),c
 11397   016950  ECB1  F0B4         	call	_MovingAverage_Reset	;wreg free
 11398   016954                     
 11399                           ;MPU6050_DMP.c: 319:     MovingAverage_Reset(&movement_detector.gyro_z_filter);
 11400   016954  0EC5               	movlw	low (_movement_detector+177)
 11401   016956  6E01               	movwf	MovingAverage_Reset@filter^(0+1280),c
 11402   016958  0E07               	movlw	high (_movement_detector+177)
 11403   01695A  6E02               	movwf	(MovingAverage_Reset@filter+1)^(0+1280),c
 11404   01695C  ECB1  F0B4         	call	_MovingAverage_Reset	;wreg free
 11405   016960  0012               	return		;funcret
 11406   016962                     __end_of_MPU6050_Movement_Init:
 11407                           	callstack 0
 11408                           
 11409 ;; *************** function _MovingAverage_Reset *****************
 11410 ;; Defined at:
 11411 ;;		line 614 in file "MPU6050_DMP.c"
 11412 ;; Parameters:    Size  Location     Type
 11413 ;;  filter          2    0[COMRAM] PTR struct .
 11414 ;;		 -> movement_detector(211), 
 11415 ;; Auto vars:     Size  Location     Type
 11416 ;;  i               1    4[COMRAM] unsigned char 
 11417 ;; Return value:  Size  Location     Type
 11418 ;;                  1    wreg      void 
 11419 ;; Registers used:
 11420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11421 ;; Tracked objects:
 11422 ;;		On entry : 0/0
 11423 ;;		On exit  : 0/0
 11424 ;;		Unchanged: 0/0
 11425 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11428 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11429 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11430 ;;Total ram usage:        5 bytes
 11431 ;; Hardware stack levels used: 1
 11432 ;; This function calls:
 11433 ;;		Nothing
 11434 ;; This function is called by:
 11435 ;;		_MPU6050_Movement_Init
 11436 ;; This function uses a non-reentrant model
 11437 ;;
 11438                           
 11439                           	psect	text25
 11440   016962                     __ptext25:
 11441                           	callstack 0
 11442   016962                     _MovingAverage_Reset:
 11443                           	callstack 123
 11444   016962                     
 11445                           ;MPU6050_DMP.c: 615:     filter->index = 0;
 11446   016962  EE20 F020          	lfsr	2,32
 11447   016966  5001               	movf	MovingAverage_Reset@filter^(0+1280),w,c
 11448   016968  26D9               	addwf	fsr2l,f,c
 11449   01696A  5002               	movf	(MovingAverage_Reset@filter+1)^(0+1280),w,c
 11450   01696C  22DA               	addwfc	fsr2h,f,c
 11451   01696E  6ADF               	clrf	indf2,c
 11452                           
 11453                           ;MPU6050_DMP.c: 616:     filter->filled = 0;
 11454   016970  EE20 F021          	lfsr	2,33
 11455   016974  5001               	movf	MovingAverage_Reset@filter^(0+1280),w,c
 11456   016976  26D9               	addwf	fsr2l,f,c
 11457   016978  5002               	movf	(MovingAverage_Reset@filter+1)^(0+1280),w,c
 11458   01697A  22DA               	addwfc	fsr2h,f,c
 11459   01697C  6ADF               	clrf	indf2,c
 11460   01697E                     
 11461                           ;MPU6050_DMP.c: 618:     for (uint8_t i = 0; i < 8; i++) {
 11462   01697E  6A05               	clrf	MovingAverage_Reset@i^(0+1280),c
 11463   016980                     l8469:
 11464                           
 11465                           ;MPU6050_DMP.c: 619:         filter->buffer[i] = 0.0f;
 11466   016980  5005               	movf	MovingAverage_Reset@i^(0+1280),w,c
 11467   016982  0D04               	mullw	4
 11468   016984  C4F3 F503          	movff	prodl,??_MovingAverage_Reset
 11469   016988  C4F4 F504          	movff	prodh,??_MovingAverage_Reset+1
 11470   01698C  5003               	movf	??_MovingAverage_Reset^(0+1280),w,c
 11471   01698E  2401               	addwf	MovingAverage_Reset@filter^(0+1280),w,c
 11472   016990  6ED9               	movwf	fsr2l,c
 11473   016992  5004               	movf	(??_MovingAverage_Reset+1)^(0+1280),w,c
 11474   016994  2002               	addwfc	(MovingAverage_Reset@filter+1)^(0+1280),w,c
 11475   016996  6EDA               	movwf	fsr2h,c
 11476   016998  0E00               	movlw	0
 11477   01699A  6EDE               	movwf	postinc2,c
 11478   01699C  0E00               	movlw	0
 11479   01699E  6EDE               	movwf	postinc2,c
 11480   0169A0  0E00               	movlw	0
 11481   0169A2  6EDE               	movwf	postinc2,c
 11482   0169A4  0E00               	movlw	0
 11483   0169A6  6EDD               	movwf	postdec2,c
 11484   0169A8                     
 11485                           ;MPU6050_DMP.c: 620:     }
 11486   0169A8  2A05               	incf	MovingAverage_Reset@i^(0+1280),f,c
 11487   0169AA  0E07               	movlw	7
 11488   0169AC  6405               	cpfsgt	MovingAverage_Reset@i^(0+1280),c
 11489   0169AE  EFDB  F0B4         	goto	u6191
 11490   0169B2  EFDD  F0B4         	goto	u6190
 11491   0169B6                     u6191:
 11492   0169B6  EFC0  F0B4         	goto	l8469
 11493   0169BA                     u6190:
 11494   0169BA  0012               	return		;funcret
 11495   0169BC                     __end_of_MovingAverage_Reset:
 11496                           	callstack 0
 11497                           
 11498 ;; *************** function _MPU6050_DMP_GetData *****************
 11499 ;; Defined at:
 11500 ;;		line 118 in file "MPU6050_DMP.c"
 11501 ;; Parameters:    Size  Location     Type
 11502 ;;  ypr             2  154[BANK5 ] PTR struct .
 11503 ;;		 -> main@ypr(12), 
 11504 ;;  quat            2  156[BANK5 ] PTR struct .
 11505 ;;		 -> NULL(0), 
 11506 ;; Auto vars:     Size  Location     Type
 11507 ;;  yaw_rad         4   90[BANK6 ] float 
 11508 ;;  pitch_rad       4   86[BANK6 ] float 
 11509 ;;  roll_rad        4   82[BANK6 ] float 
 11510 ;;  dt              4    0[BANK6 ] float 
 11511 ;;  sensor_data    43   94[BANK6 ] struct .
 11512 ;;  current_time    2   44[BANK6 ] unsigned short 
 11513 ;; Return value:  Size  Location     Type
 11514 ;;                  1    wreg      _Bool 
 11515 ;; Registers used:
 11516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11517 ;; Tracked objects:
 11518 ;;		On entry : 0/0
 11519 ;;		On exit  : 0/0
 11520 ;;		Unchanged: 0/0
 11521 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11522 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11523 ;;      Locals:         0       0     137       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11524 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11525 ;;      Totals:         0       6     137       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11526 ;;Total ram usage:      143 bytes
 11527 ;; Hardware stack levels used: 1
 11528 ;; Hardware stack levels required when called: 6
 11529 ;; This function calls:
 11530 ;;		_GetTimestamp_ms
 11531 ;;		_MPU6050_ReadAll
 11532 ;;		___fladd
 11533 ;;		___fldiv
 11534 ;;		___flge
 11535 ;;		___flmul
 11536 ;;		___flneg
 11537 ;;		___flsub
 11538 ;;		___xxtofl
 11539 ;;		_atan2f
 11540 ;;		_cosf
 11541 ;;		_sinf
 11542 ;;		_sqrtf
 11543 ;; This function is called by:
 11544 ;;		_main
 11545 ;; This function uses a non-reentrant model
 11546 ;;
 11547                           
 11548                           	psect	text26
 11549   010000                     __ptext26:
 11550                           	callstack 0
 11551   010000                     _MPU6050_DMP_GetData:
 11552                           	callstack 120
 11553   010000                     
 11554                           ;MPU6050_DMP.c: 120:     static uint16_t last_read_time = 0;;MPU6050_DMP.c: 121:     uin
      +                          t16_t current_time = GetTimestamp_ms();
 11555   010000  EC8D  F0B7         	call	_GetTimestamp_ms	;wreg free
 11556   010004  C501  F62C         	movff	?_GetTimestamp_ms,MPU6050_DMP_GetData@current_time
 11557   010008  C502  F62D         	movff	?_GetTimestamp_ms+1,MPU6050_DMP_GetData@current_time+1
 11558   01000C                     
 11559                           ;MPU6050_DMP.c: 124:     if ((current_time - last_read_time) < 8) {
 11560   01000C  0106               	movlb	6	; () banked
 11561   01000E  51FB               	movf	MPU6050_DMP_GetData@last_read_time& (0+255),w,b
 11562   010010  5D2C               	subwf	MPU6050_DMP_GetData@current_time& (0+255),w,b
 11563   010012  0105               	movlb	5	; () banked
 11564   010014  6FFE               	movwf	??_MPU6050_DMP_GetData& (0+255),b
 11565   010016  0106               	movlb	6	; () banked
 11566   010018  51FC               	movf	(MPU6050_DMP_GetData@last_read_time+1)& (0+255),w,b
 11567   01001A  592D               	subwfb	(MPU6050_DMP_GetData@current_time+1)& (0+255),w,b
 11568   01001C  0105               	movlb	5	; () banked
 11569   01001E  6FFF               	movwf	(??_MPU6050_DMP_GetData+1)& (0+255),b
 11570   010020  51FF               	movf	(??_MPU6050_DMP_GetData+1)& (0+255),w,b
 11571   010022  E107               	bnz	u7781
 11572   010024  0E08               	movlw	8
 11573   010026  5DFE               	subwf	??_MPU6050_DMP_GetData& (0+255),w,b
 11574   010028  B0D8               	btfsc	status,0,c
 11575   01002A  EF19  F080         	goto	u7781
 11576   01002E  EF1B  F080         	goto	u7780
 11577   010032                     u7781:
 11578   010032  EF1D  F080         	goto	l9899
 11579   010036                     u7780:
 11580   010036  EFDE  F086         	goto	l587
 11581   01003A                     l9899:
 11582                           
 11583                           ; BSR set to: 5
 11584                           ;MPU6050_DMP.c: 128:     MPU6050_Data_t sensor_data;;MPU6050_DMP.c: 131:     if (!MPU605
      +                          0_ReadAll(&sensor_data)) {
 11585   01003A  0E5E               	movlw	low MPU6050_DMP_GetData@sensor_data
 11586   01003C  6FCC               	movwf	MPU6050_ReadAll@data& (0+255),b
 11587   01003E  0E06               	movlw	high MPU6050_DMP_GetData@sensor_data
 11588   010040  6FCD               	movwf	(MPU6050_ReadAll@data+1)& (0+255),b
 11589   010042  EC98  F08F         	call	_MPU6050_ReadAll	;wreg free
 11590   010046  0900               	iorlw	0
 11591   010048  A4D8               	btfss	status,2,c
 11592   01004A  EF29  F080         	goto	u7791
 11593   01004E  EF2B  F080         	goto	u7790
 11594   010052                     u7791:
 11595   010052  EF2D  F080         	goto	l9903
 11596   010056                     u7790:
 11597   010056  EFDE  F086         	goto	l587
 11598   01005A                     l9903:
 11599                           
 11600                           ;MPU6050_DMP.c: 136:     if (ypr != ((void*)0)) {
 11601   01005A  0105               	movlb	5	; () banked
 11602   01005C  51FA               	movf	MPU6050_DMP_GetData@ypr& (0+255),w,b
 11603   01005E  11FB               	iorwf	(MPU6050_DMP_GetData@ypr+1)& (0+255),w,b
 11604   010060  B4D8               	btfsc	status,2,c
 11605   010062  EF35  F080         	goto	u7801
 11606   010066  EF37  F080         	goto	u7800
 11607   01006A                     u7801:
 11608   01006A  EF5C  F082         	goto	l9927
 11609   01006E                     u7800:
 11610   01006E                     
 11611                           ; BSR set to: 5
 11612                           ;MPU6050_DMP.c: 138:         ypr->roll = ((atan2f(sensor_data.accel.y,sqrtf(sensor_data.
      +                          accel.x * sensor_data.accel.x + sensor_data.accel.z * sensor_data.accel.z))) * 180.0f / 
      +                          3.14159265358979323846);
 11613   01006E  C666  F509         	movff	MPU6050_DMP_GetData@sensor_data+8,___flmul@a
 11614   010072  C667  F50A         	movff	MPU6050_DMP_GetData@sensor_data+9,___flmul@a+1
 11615   010076  C668  F50B         	movff	MPU6050_DMP_GetData@sensor_data+10,___flmul@a+2
 11616   01007A  C669  F50C         	movff	MPU6050_DMP_GetData@sensor_data+11,___flmul@a+3
 11617   01007E  C666  F505         	movff	MPU6050_DMP_GetData@sensor_data+8,___flmul@b
 11618   010082  C667  F506         	movff	MPU6050_DMP_GetData@sensor_data+9,___flmul@b+1
 11619   010086  C668  F507         	movff	MPU6050_DMP_GetData@sensor_data+10,___flmul@b+2
 11620   01008A  C669  F508         	movff	MPU6050_DMP_GetData@sensor_data+11,___flmul@b+3
 11621   01008E  EC76  F09D         	call	___flmul	;wreg free
 11622   010092  C505  F522         	movff	?___flmul,___fladd@a
 11623   010096  C506  F523         	movff	?___flmul+1,___fladd@a+1
 11624   01009A  C507  F524         	movff	?___flmul+2,___fladd@a+2
 11625   01009E  C508  F525         	movff	?___flmul+3,___fladd@a+3
 11626   0100A2  C65E  F509         	movff	MPU6050_DMP_GetData@sensor_data,___flmul@a
 11627   0100A6  C65F  F50A         	movff	MPU6050_DMP_GetData@sensor_data+1,___flmul@a+1
 11628   0100AA  C660  F50B         	movff	MPU6050_DMP_GetData@sensor_data+2,___flmul@a+2
 11629   0100AE  C661  F50C         	movff	MPU6050_DMP_GetData@sensor_data+3,___flmul@a+3
 11630   0100B2  C65E  F505         	movff	MPU6050_DMP_GetData@sensor_data,___flmul@b
 11631   0100B6  C65F  F506         	movff	MPU6050_DMP_GetData@sensor_data+1,___flmul@b+1
 11632   0100BA  C660  F507         	movff	MPU6050_DMP_GetData@sensor_data+2,___flmul@b+2
 11633   0100BE  C661  F508         	movff	MPU6050_DMP_GetData@sensor_data+3,___flmul@b+3
 11634   0100C2  EC76  F09D         	call	___flmul	;wreg free
 11635   0100C6  C505  F51E         	movff	?___flmul,___fladd@b
 11636   0100CA  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 11637   0100CE  C507  F520         	movff	?___flmul+2,___fladd@b+2
 11638   0100D2  C508  F521         	movff	?___flmul+3,___fladd@b+3
 11639   0100D6  EC1B  F09B         	call	___fladd	;wreg free
 11640   0100DA  C51E  F52E         	movff	?___fladd,sqrtf@x
 11641   0100DE  C51F  F52F         	movff	?___fladd+1,sqrtf@x+1
 11642   0100E2  C520  F530         	movff	?___fladd+2,sqrtf@x+2
 11643   0100E6  C521  F531         	movff	?___fladd+3,sqrtf@x+3
 11644   0100EA  EC89  F09F         	call	_sqrtf	;wreg free
 11645   0100EE  C52E  F628         	movff	?_sqrtf,_MPU6050_DMP_GetData$3465
 11646   0100F2  C52F  F629         	movff	?_sqrtf+1,_MPU6050_DMP_GetData$3465+1
 11647   0100F6  C530  F62A         	movff	?_sqrtf+2,_MPU6050_DMP_GetData$3465+2
 11648   0100FA  C531  F62B         	movff	?_sqrtf+3,_MPU6050_DMP_GetData$3465+3
 11649   0100FE                     
 11650                           ;MPU6050_DMP.c: 138:         ypr->roll = ((atan2f(sensor_data.accel.y,sqrtf(sensor_data.
      +                          accel.x * sensor_data.accel.x + sensor_data.accel.z * sensor_data.accel.z))) * 180.0f / 
      +                          3.14159265358979323846);
 11651   0100FE  C628  F5A7         	movff	_MPU6050_DMP_GetData$3465,atan2f@x
 11652   010102  C629  F5A8         	movff	_MPU6050_DMP_GetData$3465+1,atan2f@x+1
 11653   010106  C62A  F5A9         	movff	_MPU6050_DMP_GetData$3465+2,atan2f@x+2
 11654   01010A  C62B  F5AA         	movff	_MPU6050_DMP_GetData$3465+3,atan2f@x+3
 11655   01010E  C662  F5A3         	movff	MPU6050_DMP_GetData@sensor_data+4,atan2f@y
 11656   010112  C663  F5A4         	movff	MPU6050_DMP_GetData@sensor_data+5,atan2f@y+1
 11657   010116  C664  F5A5         	movff	MPU6050_DMP_GetData@sensor_data+6,atan2f@y+2
 11658   01011A  C665  F5A6         	movff	MPU6050_DMP_GetData@sensor_data+7,atan2f@y+3
 11659   01011E  EC40  F093         	call	_atan2f	;wreg free
 11660   010122  C5A3  F604         	movff	?_atan2f,_MPU6050_DMP_GetData$3466
 11661   010126  C5A4  F605         	movff	?_atan2f+1,_MPU6050_DMP_GetData$3466+1
 11662   01012A  C5A5  F606         	movff	?_atan2f+2,_MPU6050_DMP_GetData$3466+2
 11663   01012E  C5A6  F607         	movff	?_atan2f+3,_MPU6050_DMP_GetData$3466+3
 11664   010132                     
 11665                           ;MPU6050_DMP.c: 138:         ypr->roll = ((atan2f(sensor_data.accel.y,sqrtf(sensor_data.
      +                          accel.x * sensor_data.accel.x + sensor_data.accel.z * sensor_data.accel.z))) * 180.0f / 
      +                          3.14159265358979323846);
 11666   010132  0E00               	movlw	0
 11667   010134  6E09               	movwf	___flmul@a^(0+1280),c
 11668   010136  0E00               	movlw	0
 11669   010138  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 11670   01013A  0E34               	movlw	52
 11671   01013C  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 11672   01013E  0E43               	movlw	67
 11673   010140  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 11674   010142  C604  F505         	movff	_MPU6050_DMP_GetData$3466,___flmul@b
 11675   010146  C605  F506         	movff	_MPU6050_DMP_GetData$3466+1,___flmul@b+1
 11676   01014A  C606  F507         	movff	_MPU6050_DMP_GetData$3466+2,___flmul@b+2
 11677   01014E  C607  F508         	movff	_MPU6050_DMP_GetData$3466+3,___flmul@b+3
 11678   010152  EC76  F09D         	call	___flmul	;wreg free
 11679   010156  C505  F553         	movff	?___flmul,___fldiv@b
 11680   01015A  C506  F554         	movff	?___flmul+1,___fldiv@b+1
 11681   01015E  C507  F555         	movff	?___flmul+2,___fldiv@b+2
 11682   010162  C508  F556         	movff	?___flmul+3,___fldiv@b+3
 11683   010166  0EDB               	movlw	219
 11684   010168  6E57               	movwf	___fldiv@a^(0+1280),c
 11685   01016A  0E0F               	movlw	15
 11686   01016C  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 11687   01016E  0E49               	movlw	73
 11688   010170  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 11689   010172  0E40               	movlw	64
 11690   010174  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 11691   010176  EC5D  F0A3         	call	___fldiv	;wreg free
 11692   01017A  0105               	movlb	5	; () banked
 11693   01017C  EE20 F008          	lfsr	2,8
 11694   010180  51FA               	movf	MPU6050_DMP_GetData@ypr& (0+255),w,b
 11695   010182  26D9               	addwf	fsr2l,f,c
 11696   010184  51FB               	movf	(MPU6050_DMP_GetData@ypr+1)& (0+255),w,b
 11697   010186  22DA               	addwfc	fsr2h,f,c
 11698   010188  C553  F4DE         	movff	?___fldiv,postinc2
 11699   01018C  C554  F4DE         	movff	?___fldiv+1,postinc2
 11700   010190  C555  F4DE         	movff	?___fldiv+2,postinc2
 11701   010194  C556  F4DE         	movff	?___fldiv+3,postinc2
 11702   010198                     
 11703                           ; BSR set to: 5
 11704                           ;MPU6050_DMP.c: 142:         ypr->pitch = ((atan2f(-sensor_data.accel.x,sqrtf(sensor_dat
      +                          a.accel.y * sensor_data.accel.y + sensor_data.accel.z * sensor_data.accel.z))) * 180.0f 
      +                          / 3.14159265358979323846);
 11705   010198  C666  F509         	movff	MPU6050_DMP_GetData@sensor_data+8,___flmul@a
 11706   01019C  C667  F50A         	movff	MPU6050_DMP_GetData@sensor_data+9,___flmul@a+1
 11707   0101A0  C668  F50B         	movff	MPU6050_DMP_GetData@sensor_data+10,___flmul@a+2
 11708   0101A4  C669  F50C         	movff	MPU6050_DMP_GetData@sensor_data+11,___flmul@a+3
 11709   0101A8  C666  F505         	movff	MPU6050_DMP_GetData@sensor_data+8,___flmul@b
 11710   0101AC  C667  F506         	movff	MPU6050_DMP_GetData@sensor_data+9,___flmul@b+1
 11711   0101B0  C668  F507         	movff	MPU6050_DMP_GetData@sensor_data+10,___flmul@b+2
 11712   0101B4  C669  F508         	movff	MPU6050_DMP_GetData@sensor_data+11,___flmul@b+3
 11713   0101B8  EC76  F09D         	call	___flmul	;wreg free
 11714   0101BC  C505  F522         	movff	?___flmul,___fladd@a
 11715   0101C0  C506  F523         	movff	?___flmul+1,___fladd@a+1
 11716   0101C4  C507  F524         	movff	?___flmul+2,___fladd@a+2
 11717   0101C8  C508  F525         	movff	?___flmul+3,___fladd@a+3
 11718   0101CC  C662  F509         	movff	MPU6050_DMP_GetData@sensor_data+4,___flmul@a
 11719   0101D0  C663  F50A         	movff	MPU6050_DMP_GetData@sensor_data+5,___flmul@a+1
 11720   0101D4  C664  F50B         	movff	MPU6050_DMP_GetData@sensor_data+6,___flmul@a+2
 11721   0101D8  C665  F50C         	movff	MPU6050_DMP_GetData@sensor_data+7,___flmul@a+3
 11722   0101DC  C662  F505         	movff	MPU6050_DMP_GetData@sensor_data+4,___flmul@b
 11723   0101E0  C663  F506         	movff	MPU6050_DMP_GetData@sensor_data+5,___flmul@b+1
 11724   0101E4  C664  F507         	movff	MPU6050_DMP_GetData@sensor_data+6,___flmul@b+2
 11725   0101E8  C665  F508         	movff	MPU6050_DMP_GetData@sensor_data+7,___flmul@b+3
 11726   0101EC  EC76  F09D         	call	___flmul	;wreg free
 11727   0101F0  C505  F51E         	movff	?___flmul,___fladd@b
 11728   0101F4  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 11729   0101F8  C507  F520         	movff	?___flmul+2,___fladd@b+2
 11730   0101FC  C508  F521         	movff	?___flmul+3,___fladd@b+3
 11731   010200  EC1B  F09B         	call	___fladd	;wreg free
 11732   010204  C51E  F52E         	movff	?___fladd,sqrtf@x
 11733   010208  C51F  F52F         	movff	?___fladd+1,sqrtf@x+1
 11734   01020C  C520  F530         	movff	?___fladd+2,sqrtf@x+2
 11735   010210  C521  F531         	movff	?___fladd+3,sqrtf@x+3
 11736   010214  EC89  F09F         	call	_sqrtf	;wreg free
 11737   010218  C52E  F628         	movff	?_sqrtf,_MPU6050_DMP_GetData$3465
 11738   01021C  C52F  F629         	movff	?_sqrtf+1,_MPU6050_DMP_GetData$3465+1
 11739   010220  C530  F62A         	movff	?_sqrtf+2,_MPU6050_DMP_GetData$3465+2
 11740   010224  C531  F62B         	movff	?_sqrtf+3,_MPU6050_DMP_GetData$3465+3
 11741   010228                     
 11742                           ;MPU6050_DMP.c: 142:         ypr->pitch = ((atan2f(-sensor_data.accel.x,sqrtf(sensor_dat
      +                          a.accel.y * sensor_data.accel.y + sensor_data.accel.z * sensor_data.accel.z))) * 180.0f 
      +                          / 3.14159265358979323846);
 11743   010228  C65E  F501         	movff	MPU6050_DMP_GetData@sensor_data,___flneg@f1
 11744   01022C  C65F  F502         	movff	MPU6050_DMP_GetData@sensor_data+1,___flneg@f1+1
 11745   010230  C660  F503         	movff	MPU6050_DMP_GetData@sensor_data+2,___flneg@f1+2
 11746   010234  C661  F504         	movff	MPU6050_DMP_GetData@sensor_data+3,___flneg@f1+3
 11747   010238  EC57  F0B6         	call	___flneg	;wreg free
 11748   01023C  C501  F608         	movff	?___flneg,_MPU6050_DMP_GetData$3467
 11749   010240  C502  F609         	movff	?___flneg+1,_MPU6050_DMP_GetData$3467+1
 11750   010244  C503  F60A         	movff	?___flneg+2,_MPU6050_DMP_GetData$3467+2
 11751   010248  C504  F60B         	movff	?___flneg+3,_MPU6050_DMP_GetData$3467+3
 11752   01024C                     
 11753                           ;MPU6050_DMP.c: 142:         ypr->pitch = ((atan2f(-sensor_data.accel.x,sqrtf(sensor_dat
      +                          a.accel.y * sensor_data.accel.y + sensor_data.accel.z * sensor_data.accel.z))) * 180.0f 
      +                          / 3.14159265358979323846);
 11754   01024C  C628  F5A7         	movff	_MPU6050_DMP_GetData$3465,atan2f@x
 11755   010250  C629  F5A8         	movff	_MPU6050_DMP_GetData$3465+1,atan2f@x+1
 11756   010254  C62A  F5A9         	movff	_MPU6050_DMP_GetData$3465+2,atan2f@x+2
 11757   010258  C62B  F5AA         	movff	_MPU6050_DMP_GetData$3465+3,atan2f@x+3
 11758   01025C  C608  F5A3         	movff	_MPU6050_DMP_GetData$3467,atan2f@y
 11759   010260  C609  F5A4         	movff	_MPU6050_DMP_GetData$3467+1,atan2f@y+1
 11760   010264  C60A  F5A5         	movff	_MPU6050_DMP_GetData$3467+2,atan2f@y+2
 11761   010268  C60B  F5A6         	movff	_MPU6050_DMP_GetData$3467+3,atan2f@y+3
 11762   01026C  EC40  F093         	call	_atan2f	;wreg free
 11763   010270  C5A3  F60C         	movff	?_atan2f,_MPU6050_DMP_GetData$3468
 11764   010274  C5A4  F60D         	movff	?_atan2f+1,_MPU6050_DMP_GetData$3468+1
 11765   010278  C5A5  F60E         	movff	?_atan2f+2,_MPU6050_DMP_GetData$3468+2
 11766   01027C  C5A6  F60F         	movff	?_atan2f+3,_MPU6050_DMP_GetData$3468+3
 11767   010280                     
 11768                           ;MPU6050_DMP.c: 142:         ypr->pitch = ((atan2f(-sensor_data.accel.x,sqrtf(sensor_dat
      +                          a.accel.y * sensor_data.accel.y + sensor_data.accel.z * sensor_data.accel.z))) * 180.0f 
      +                          / 3.14159265358979323846);
 11769   010280  0E00               	movlw	0
 11770   010282  6E09               	movwf	___flmul@a^(0+1280),c
 11771   010284  0E00               	movlw	0
 11772   010286  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 11773   010288  0E34               	movlw	52
 11774   01028A  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 11775   01028C  0E43               	movlw	67
 11776   01028E  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 11777   010290  C60C  F505         	movff	_MPU6050_DMP_GetData$3468,___flmul@b
 11778   010294  C60D  F506         	movff	_MPU6050_DMP_GetData$3468+1,___flmul@b+1
 11779   010298  C60E  F507         	movff	_MPU6050_DMP_GetData$3468+2,___flmul@b+2
 11780   01029C  C60F  F508         	movff	_MPU6050_DMP_GetData$3468+3,___flmul@b+3
 11781   0102A0  EC76  F09D         	call	___flmul	;wreg free
 11782   0102A4  C505  F553         	movff	?___flmul,___fldiv@b
 11783   0102A8  C506  F554         	movff	?___flmul+1,___fldiv@b+1
 11784   0102AC  C507  F555         	movff	?___flmul+2,___fldiv@b+2
 11785   0102B0  C508  F556         	movff	?___flmul+3,___fldiv@b+3
 11786   0102B4  0EDB               	movlw	219
 11787   0102B6  6E57               	movwf	___fldiv@a^(0+1280),c
 11788   0102B8  0E0F               	movlw	15
 11789   0102BA  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 11790   0102BC  0E49               	movlw	73
 11791   0102BE  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 11792   0102C0  0E40               	movlw	64
 11793   0102C2  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 11794   0102C4  EC5D  F0A3         	call	___fldiv	;wreg free
 11795   0102C8  0105               	movlb	5	; () banked
 11796   0102CA  EE20 F004          	lfsr	2,4
 11797   0102CE  51FA               	movf	MPU6050_DMP_GetData@ypr& (0+255),w,b
 11798   0102D0  26D9               	addwf	fsr2l,f,c
 11799   0102D2  51FB               	movf	(MPU6050_DMP_GetData@ypr+1)& (0+255),w,b
 11800   0102D4  22DA               	addwfc	fsr2h,f,c
 11801   0102D6  C553  F4DE         	movff	?___fldiv,postinc2
 11802   0102DA  C554  F4DE         	movff	?___fldiv+1,postinc2
 11803   0102DE  C555  F4DE         	movff	?___fldiv+2,postinc2
 11804   0102E2  C556  F4DE         	movff	?___fldiv+3,postinc2
 11805                           
 11806                           ;MPU6050_DMP.c: 147:         static float yaw_integral = 0.0f;;MPU6050_DMP.c: 148:      
      +                             float dt = (current_time - last_read_time) / 1000.0f;
 11807   0102E6  0106               	movlb	6	; () banked
 11808   0102E8  51FB               	movf	MPU6050_DMP_GetData@last_read_time& (0+255),w,b
 11809   0102EA  5D2C               	subwf	MPU6050_DMP_GetData@current_time& (0+255),w,b
 11810   0102EC  0105               	movlb	5	; () banked
 11811   0102EE  6FFE               	movwf	??_MPU6050_DMP_GetData& (0+255),b
 11812   0102F0  0106               	movlb	6	; () banked
 11813   0102F2  51FC               	movf	(MPU6050_DMP_GetData@last_read_time+1)& (0+255),w,b
 11814   0102F4  592D               	subwfb	(MPU6050_DMP_GetData@current_time+1)& (0+255),w,b
 11815   0102F6  0105               	movlb	5	; () banked
 11816   0102F8  6FFF               	movwf	(??_MPU6050_DMP_GetData+1)& (0+255),b
 11817   0102FA  C5FE  F501         	movff	??_MPU6050_DMP_GetData,___xxtofl@val
 11818   0102FE  C5FF  F502         	movff	??_MPU6050_DMP_GetData+1,___xxtofl@val+1
 11819   010302  6A03               	clrf	(___xxtofl@val+2)^(0+1280),c
 11820   010304  6A04               	clrf	(___xxtofl@val+3)^(0+1280),c
 11821   010306  0E00               	movlw	0
 11822   010308  ECCC  F0AB         	call	___xxtofl
 11823   01030C  C501  F553         	movff	?___xxtofl,___fldiv@b
 11824   010310  C502  F554         	movff	?___xxtofl+1,___fldiv@b+1
 11825   010314  C503  F555         	movff	?___xxtofl+2,___fldiv@b+2
 11826   010318  C504  F556         	movff	?___xxtofl+3,___fldiv@b+3
 11827   01031C  0E00               	movlw	0
 11828   01031E  6E57               	movwf	___fldiv@a^(0+1280),c
 11829   010320  0E00               	movlw	0
 11830   010322  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 11831   010324  0E7A               	movlw	122
 11832   010326  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 11833   010328  0E44               	movlw	68
 11834   01032A  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 11835   01032C  EC5D  F0A3         	call	___fldiv	;wreg free
 11836   010330  C553  F600         	movff	?___fldiv,MPU6050_DMP_GetData@dt
 11837   010334  C554  F601         	movff	?___fldiv+1,MPU6050_DMP_GetData@dt+1
 11838   010338  C555  F602         	movff	?___fldiv+2,MPU6050_DMP_GetData@dt+2
 11839   01033C  C556  F603         	movff	?___fldiv+3,MPU6050_DMP_GetData@dt+3
 11840   010340                     
 11841                           ;MPU6050_DMP.c: 149:         yaw_integral += sensor_data.gyro.z * dt;
 11842   010340  C6F1  F51E         	movff	MPU6050_DMP_GetData@yaw_integral,___fladd@b
 11843   010344  C6F2  F51F         	movff	MPU6050_DMP_GetData@yaw_integral+1,___fladd@b+1
 11844   010348  C6F3  F520         	movff	MPU6050_DMP_GetData@yaw_integral+2,___fladd@b+2
 11845   01034C  C6F4  F521         	movff	MPU6050_DMP_GetData@yaw_integral+3,___fladd@b+3
 11846   010350  C600  F509         	movff	MPU6050_DMP_GetData@dt,___flmul@a
 11847   010354  C601  F50A         	movff	MPU6050_DMP_GetData@dt+1,___flmul@a+1
 11848   010358  C602  F50B         	movff	MPU6050_DMP_GetData@dt+2,___flmul@a+2
 11849   01035C  C603  F50C         	movff	MPU6050_DMP_GetData@dt+3,___flmul@a+3
 11850   010360  C672  F505         	movff	MPU6050_DMP_GetData@sensor_data+20,___flmul@b
 11851   010364  C673  F506         	movff	MPU6050_DMP_GetData@sensor_data+21,___flmul@b+1
 11852   010368  C674  F507         	movff	MPU6050_DMP_GetData@sensor_data+22,___flmul@b+2
 11853   01036C  C675  F508         	movff	MPU6050_DMP_GetData@sensor_data+23,___flmul@b+3
 11854   010370  EC76  F09D         	call	___flmul	;wreg free
 11855   010374  C505  F522         	movff	?___flmul,___fladd@a
 11856   010378  C506  F523         	movff	?___flmul+1,___fladd@a+1
 11857   01037C  C507  F524         	movff	?___flmul+2,___fladd@a+2
 11858   010380  C508  F525         	movff	?___flmul+3,___fladd@a+3
 11859   010384  EC1B  F09B         	call	___fladd	;wreg free
 11860   010388  C51E  F6F1         	movff	?___fladd,MPU6050_DMP_GetData@yaw_integral
 11861   01038C  C51F  F6F2         	movff	?___fladd+1,MPU6050_DMP_GetData@yaw_integral+1
 11862   010390  C520  F6F3         	movff	?___fladd+2,MPU6050_DMP_GetData@yaw_integral+2
 11863   010394  C521  F6F4         	movff	?___fladd+3,MPU6050_DMP_GetData@yaw_integral+3
 11864   010398                     
 11865                           ;MPU6050_DMP.c: 150:         ypr->yaw = yaw_integral;
 11866   010398  C5FA  F4D9         	movff	MPU6050_DMP_GetData@ypr,fsr2l
 11867   01039C  C5FB  F4DA         	movff	MPU6050_DMP_GetData@ypr+1,fsr2h
 11868   0103A0  C6F1  F4DE         	movff	MPU6050_DMP_GetData@yaw_integral,postinc2
 11869   0103A4  C6F2  F4DE         	movff	MPU6050_DMP_GetData@yaw_integral+1,postinc2
 11870   0103A8  C6F3  F4DE         	movff	MPU6050_DMP_GetData@yaw_integral+2,postinc2
 11871   0103AC  C6F4  F4DE         	movff	MPU6050_DMP_GetData@yaw_integral+3,postinc2
 11872                           
 11873                           ;MPU6050_DMP.c: 153:         while (ypr->yaw > 180.0f) ypr->yaw -= 360.0f;
 11874   0103B0  EFFE  F081         	goto	l592
 11875   0103B4                     l9923:
 11876   0103B4  C5FA  F4D9         	movff	MPU6050_DMP_GetData@ypr,fsr2l
 11877   0103B8  C5FB  F4DA         	movff	MPU6050_DMP_GetData@ypr+1,fsr2h
 11878   0103BC  C4DE F56D          	movff	postinc2,___flsub@b
 11879   0103C0  C4DE F56E          	movff	postinc2,___flsub@b+1
 11880   0103C4  C4DE F56F          	movff	postinc2,___flsub@b+2
 11881   0103C8  C4DE F570          	movff	postinc2,___flsub@b+3
 11882   0103CC  0E00               	movlw	0
 11883   0103CE  0105               	movlb	5	; () banked
 11884   0103D0  6F71               	movwf	___flsub@a& (0+255),b
 11885   0103D2  0E00               	movlw	0
 11886   0103D4  6F72               	movwf	(___flsub@a+1)& (0+255),b
 11887   0103D6  0EB4               	movlw	180
 11888   0103D8  6F73               	movwf	(___flsub@a+2)& (0+255),b
 11889   0103DA  0E43               	movlw	67
 11890   0103DC  6F74               	movwf	(___flsub@a+3)& (0+255),b
 11891   0103DE  ECD5  F0B5         	call	___flsub	;wreg free
 11892   0103E2  C5FA  F4D9         	movff	MPU6050_DMP_GetData@ypr,fsr2l
 11893   0103E6  C5FB  F4DA         	movff	MPU6050_DMP_GetData@ypr+1,fsr2h
 11894   0103EA  0105               	movlb	5	; () banked
 11895   0103EC  C56D  F4DE         	movff	?___flsub,postinc2
 11896   0103F0  C56E  F4DE         	movff	?___flsub+1,postinc2
 11897   0103F4  C56F  F4DE         	movff	?___flsub+2,postinc2
 11898   0103F8  C570  F4DE         	movff	?___flsub+3,postinc2
 11899   0103FC                     l592:
 11900   0103FC  0E00               	movlw	0
 11901   0103FE  6E1E               	movwf	___flge@ff1^(0+1280),c
 11902   010400  0E00               	movlw	0
 11903   010402  6E1F               	movwf	(___flge@ff1+1)^(0+1280),c
 11904   010404  0E34               	movlw	52
 11905   010406  6E20               	movwf	(___flge@ff1+2)^(0+1280),c
 11906   010408  0E43               	movlw	67
 11907   01040A  6E21               	movwf	(___flge@ff1+3)^(0+1280),c
 11908   01040C  C5FA  F4D9         	movff	MPU6050_DMP_GetData@ypr,fsr2l
 11909   010410  C5FB  F4DA         	movff	MPU6050_DMP_GetData@ypr+1,fsr2h
 11910   010414  C4DE F522          	movff	postinc2,___flge@ff2
 11911   010418  C4DE F523          	movff	postinc2,___flge@ff2+1
 11912   01041C  C4DE F524          	movff	postinc2,___flge@ff2+2
 11913   010420  C4DE F525          	movff	postinc2,___flge@ff2+3
 11914   010424  EC27  F0B0         	call	___flge	;wreg free
 11915   010428  A0D8               	btfss	status,0,c
 11916   01042A  EF19  F082         	goto	u7811
 11917   01042E  EF1B  F082         	goto	u7810
 11918   010432                     u7811:
 11919   010432  EFDA  F081         	goto	l9923
 11920   010436                     u7810:
 11921   010436  EF3F  F082         	goto	l595
 11922   01043A                     l9925:
 11923   01043A  C5FA  F4D9         	movff	MPU6050_DMP_GetData@ypr,fsr2l
 11924   01043E  C5FB  F4DA         	movff	MPU6050_DMP_GetData@ypr+1,fsr2h
 11925   010442  C4DE F51E          	movff	postinc2,___fladd@b
 11926   010446  C4DE F51F          	movff	postinc2,___fladd@b+1
 11927   01044A  C4DE F520          	movff	postinc2,___fladd@b+2
 11928   01044E  C4DE F521          	movff	postinc2,___fladd@b+3
 11929   010452  0E00               	movlw	0
 11930   010454  6E22               	movwf	___fladd@a^(0+1280),c
 11931   010456  0E00               	movlw	0
 11932   010458  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 11933   01045A  0EB4               	movlw	180
 11934   01045C  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 11935   01045E  0E43               	movlw	67
 11936   010460  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 11937   010462  EC1B  F09B         	call	___fladd	;wreg free
 11938   010466  C5FA  F4D9         	movff	MPU6050_DMP_GetData@ypr,fsr2l
 11939   01046A  C5FB  F4DA         	movff	MPU6050_DMP_GetData@ypr+1,fsr2h
 11940   01046E  C51E  F4DE         	movff	?___fladd,postinc2
 11941   010472  C51F  F4DE         	movff	?___fladd+1,postinc2
 11942   010476  C520  F4DE         	movff	?___fladd+2,postinc2
 11943   01047A  C521  F4DE         	movff	?___fladd+3,postinc2
 11944   01047E                     l595:
 11945   01047E  C5FA  F4D9         	movff	MPU6050_DMP_GetData@ypr,fsr2l
 11946   010482  C5FB  F4DA         	movff	MPU6050_DMP_GetData@ypr+1,fsr2h
 11947   010486  C4DE F51E          	movff	postinc2,___flge@ff1
 11948   01048A  C4DE F51F          	movff	postinc2,___flge@ff1+1
 11949   01048E  C4DE F520          	movff	postinc2,___flge@ff1+2
 11950   010492  C4DE F521          	movff	postinc2,___flge@ff1+3
 11951   010496  0E00               	movlw	0
 11952   010498  6E22               	movwf	___flge@ff2^(0+1280),c
 11953   01049A  0E00               	movlw	0
 11954   01049C  6E23               	movwf	(___flge@ff2+1)^(0+1280),c
 11955   01049E  0E34               	movlw	52
 11956   0104A0  6E24               	movwf	(___flge@ff2+2)^(0+1280),c
 11957   0104A2  0EC3               	movlw	195
 11958   0104A4  6E25               	movwf	(___flge@ff2+3)^(0+1280),c
 11959   0104A6  EC27  F0B0         	call	___flge	;wreg free
 11960   0104AA  A0D8               	btfss	status,0,c
 11961   0104AC  EF5A  F082         	goto	u7821
 11962   0104B0  EF5C  F082         	goto	u7820
 11963   0104B4                     u7821:
 11964   0104B4  EF1D  F082         	goto	l9925
 11965   0104B8                     u7820:
 11966   0104B8                     l9927:
 11967                           
 11968                           ;MPU6050_DMP.c: 158:     if (quat != ((void*)0)) {
 11969   0104B8  0105               	movlb	5	; () banked
 11970   0104BA  51FC               	movf	MPU6050_DMP_GetData@quat& (0+255),w,b
 11971   0104BC  11FD               	iorwf	(MPU6050_DMP_GetData@quat+1)& (0+255),w,b
 11972   0104BE  B4D8               	btfsc	status,2,c
 11973   0104C0  EF64  F082         	goto	u7831
 11974   0104C4  EF66  F082         	goto	u7830
 11975   0104C8                     u7831:
 11976   0104C8  EFDA  F086         	goto	l9987
 11977   0104CC                     u7830:
 11978   0104CC                     
 11979                           ; BSR set to: 5
 11980                           ;MPU6050_DMP.c: 159:         float roll_rad = ((ypr->roll * 0.5f) * 3.141592653589793238
      +                          46 / 180.0f);
 11981   0104CC  0E00               	movlw	0
 11982   0104CE  6E09               	movwf	___flmul@a^(0+1280),c
 11983   0104D0  0E00               	movlw	0
 11984   0104D2  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 11985   0104D4  0E00               	movlw	0
 11986   0104D6  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 11987   0104D8  0E3F               	movlw	63
 11988   0104DA  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 11989   0104DC  EE20 F008          	lfsr	2,8
 11990   0104E0  51FA               	movf	MPU6050_DMP_GetData@ypr& (0+255),w,b
 11991   0104E2  26D9               	addwf	fsr2l,f,c
 11992   0104E4  51FB               	movf	(MPU6050_DMP_GetData@ypr+1)& (0+255),w,b
 11993   0104E6  22DA               	addwfc	fsr2h,f,c
 11994   0104E8  C4DE F505          	movff	postinc2,___flmul@b
 11995   0104EC  C4DE F506          	movff	postinc2,___flmul@b+1
 11996   0104F0  C4DE F507          	movff	postinc2,___flmul@b+2
 11997   0104F4  C4DE F508          	movff	postinc2,___flmul@b+3
 11998   0104F8  EC76  F09D         	call	___flmul	;wreg free
 11999   0104FC  C505  F62E         	movff	?___flmul,_MPU6050_DMP_GetData$3469
 12000   010500  C506  F62F         	movff	?___flmul+1,_MPU6050_DMP_GetData$3469+1
 12001   010504  C507  F630         	movff	?___flmul+2,_MPU6050_DMP_GetData$3469+2
 12002   010508  C508  F631         	movff	?___flmul+3,_MPU6050_DMP_GetData$3469+3
 12003   01050C                     
 12004                           ;MPU6050_DMP.c: 159:         float roll_rad = ((ypr->roll * 0.5f) * 3.141592653589793238
      +                          46 / 180.0f);
 12005   01050C  0EDB               	movlw	219
 12006   01050E  6E09               	movwf	___flmul@a^(0+1280),c
 12007   010510  0E0F               	movlw	15
 12008   010512  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 12009   010514  0E49               	movlw	73
 12010   010516  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 12011   010518  0E40               	movlw	64
 12012   01051A  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 12013   01051C  C62E  F505         	movff	_MPU6050_DMP_GetData$3469,___flmul@b
 12014   010520  C62F  F506         	movff	_MPU6050_DMP_GetData$3469+1,___flmul@b+1
 12015   010524  C630  F507         	movff	_MPU6050_DMP_GetData$3469+2,___flmul@b+2
 12016   010528  C631  F508         	movff	_MPU6050_DMP_GetData$3469+3,___flmul@b+3
 12017   01052C  EC76  F09D         	call	___flmul	;wreg free
 12018   010530  C505  F553         	movff	?___flmul,___fldiv@b
 12019   010534  C506  F554         	movff	?___flmul+1,___fldiv@b+1
 12020   010538  C507  F555         	movff	?___flmul+2,___fldiv@b+2
 12021   01053C  C508  F556         	movff	?___flmul+3,___fldiv@b+3
 12022   010540  0E00               	movlw	0
 12023   010542  6E57               	movwf	___fldiv@a^(0+1280),c
 12024   010544  0E00               	movlw	0
 12025   010546  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 12026   010548  0E34               	movlw	52
 12027   01054A  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 12028   01054C  0E43               	movlw	67
 12029   01054E  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 12030   010550  EC5D  F0A3         	call	___fldiv	;wreg free
 12031   010554  C553  F652         	movff	?___fldiv,MPU6050_DMP_GetData@roll_rad
 12032   010558  C554  F653         	movff	?___fldiv+1,MPU6050_DMP_GetData@roll_rad+1
 12033   01055C  C555  F654         	movff	?___fldiv+2,MPU6050_DMP_GetData@roll_rad+2
 12034   010560  C556  F655         	movff	?___fldiv+3,MPU6050_DMP_GetData@roll_rad+3
 12035   010564                     
 12036                           ;MPU6050_DMP.c: 160:         float pitch_rad = ((ypr->pitch * 0.5f) * 3.1415926535897932
      +                          3846 / 180.0f);
 12037   010564  0E00               	movlw	0
 12038   010566  6E09               	movwf	___flmul@a^(0+1280),c
 12039   010568  0E00               	movlw	0
 12040   01056A  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 12041   01056C  0E00               	movlw	0
 12042   01056E  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 12043   010570  0E3F               	movlw	63
 12044   010572  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 12045   010574  0105               	movlb	5	; () banked
 12046   010576  EE20 F004          	lfsr	2,4
 12047   01057A  51FA               	movf	MPU6050_DMP_GetData@ypr& (0+255),w,b
 12048   01057C  26D9               	addwf	fsr2l,f,c
 12049   01057E  51FB               	movf	(MPU6050_DMP_GetData@ypr+1)& (0+255),w,b
 12050   010580  22DA               	addwfc	fsr2h,f,c
 12051   010582  C4DE F505          	movff	postinc2,___flmul@b
 12052   010586  C4DE F506          	movff	postinc2,___flmul@b+1
 12053   01058A  C4DE F507          	movff	postinc2,___flmul@b+2
 12054   01058E  C4DE F508          	movff	postinc2,___flmul@b+3
 12055   010592  EC76  F09D         	call	___flmul	;wreg free
 12056   010596  C505  F62E         	movff	?___flmul,_MPU6050_DMP_GetData$3469
 12057   01059A  C506  F62F         	movff	?___flmul+1,_MPU6050_DMP_GetData$3469+1
 12058   01059E  C507  F630         	movff	?___flmul+2,_MPU6050_DMP_GetData$3469+2
 12059   0105A2  C508  F631         	movff	?___flmul+3,_MPU6050_DMP_GetData$3469+3
 12060                           
 12061                           ;MPU6050_DMP.c: 160:         float pitch_rad = ((ypr->pitch * 0.5f) * 3.1415926535897932
      +                          3846 / 180.0f);
 12062   0105A6  0EDB               	movlw	219
 12063   0105A8  6E09               	movwf	___flmul@a^(0+1280),c
 12064   0105AA  0E0F               	movlw	15
 12065   0105AC  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 12066   0105AE  0E49               	movlw	73
 12067   0105B0  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 12068   0105B2  0E40               	movlw	64
 12069   0105B4  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 12070   0105B6  C62E  F505         	movff	_MPU6050_DMP_GetData$3469,___flmul@b
 12071   0105BA  C62F  F506         	movff	_MPU6050_DMP_GetData$3469+1,___flmul@b+1
 12072   0105BE  C630  F507         	movff	_MPU6050_DMP_GetData$3469+2,___flmul@b+2
 12073   0105C2  C631  F508         	movff	_MPU6050_DMP_GetData$3469+3,___flmul@b+3
 12074   0105C6  EC76  F09D         	call	___flmul	;wreg free
 12075   0105CA  C505  F553         	movff	?___flmul,___fldiv@b
 12076   0105CE  C506  F554         	movff	?___flmul+1,___fldiv@b+1
 12077   0105D2  C507  F555         	movff	?___flmul+2,___fldiv@b+2
 12078   0105D6  C508  F556         	movff	?___flmul+3,___fldiv@b+3
 12079   0105DA  0E00               	movlw	0
 12080   0105DC  6E57               	movwf	___fldiv@a^(0+1280),c
 12081   0105DE  0E00               	movlw	0
 12082   0105E0  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 12083   0105E2  0E34               	movlw	52
 12084   0105E4  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 12085   0105E6  0E43               	movlw	67
 12086   0105E8  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 12087   0105EA  EC5D  F0A3         	call	___fldiv	;wreg free
 12088   0105EE  C553  F656         	movff	?___fldiv,MPU6050_DMP_GetData@pitch_rad
 12089   0105F2  C554  F657         	movff	?___fldiv+1,MPU6050_DMP_GetData@pitch_rad+1
 12090   0105F6  C555  F658         	movff	?___fldiv+2,MPU6050_DMP_GetData@pitch_rad+2
 12091   0105FA  C556  F659         	movff	?___fldiv+3,MPU6050_DMP_GetData@pitch_rad+3
 12092   0105FE                     
 12093                           ;MPU6050_DMP.c: 161:         float yaw_rad = ((ypr->yaw * 0.5f) * 3.14159265358979323846
      +                           / 180.0f);
 12094   0105FE  0E00               	movlw	0
 12095   010600  6E09               	movwf	___flmul@a^(0+1280),c
 12096   010602  0E00               	movlw	0
 12097   010604  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 12098   010606  0E00               	movlw	0
 12099   010608  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 12100   01060A  0E3F               	movlw	63
 12101   01060C  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 12102   01060E  C5FA  F4D9         	movff	MPU6050_DMP_GetData@ypr,fsr2l
 12103   010612  C5FB  F4DA         	movff	MPU6050_DMP_GetData@ypr+1,fsr2h
 12104   010616  C4DE F505          	movff	postinc2,___flmul@b
 12105   01061A  C4DE F506          	movff	postinc2,___flmul@b+1
 12106   01061E  C4DE F507          	movff	postinc2,___flmul@b+2
 12107   010622  C4DE F508          	movff	postinc2,___flmul@b+3
 12108   010626  EC76  F09D         	call	___flmul	;wreg free
 12109   01062A  C505  F62E         	movff	?___flmul,_MPU6050_DMP_GetData$3469
 12110   01062E  C506  F62F         	movff	?___flmul+1,_MPU6050_DMP_GetData$3469+1
 12111   010632  C507  F630         	movff	?___flmul+2,_MPU6050_DMP_GetData$3469+2
 12112   010636  C508  F631         	movff	?___flmul+3,_MPU6050_DMP_GetData$3469+3
 12113   01063A                     
 12114                           ;MPU6050_DMP.c: 161:         float yaw_rad = ((ypr->yaw * 0.5f) * 3.14159265358979323846
      +                           / 180.0f);
 12115   01063A  0EDB               	movlw	219
 12116   01063C  6E09               	movwf	___flmul@a^(0+1280),c
 12117   01063E  0E0F               	movlw	15
 12118   010640  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 12119   010642  0E49               	movlw	73
 12120   010644  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 12121   010646  0E40               	movlw	64
 12122   010648  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 12123   01064A  C62E  F505         	movff	_MPU6050_DMP_GetData$3469,___flmul@b
 12124   01064E  C62F  F506         	movff	_MPU6050_DMP_GetData$3469+1,___flmul@b+1
 12125   010652  C630  F507         	movff	_MPU6050_DMP_GetData$3469+2,___flmul@b+2
 12126   010656  C631  F508         	movff	_MPU6050_DMP_GetData$3469+3,___flmul@b+3
 12127   01065A  EC76  F09D         	call	___flmul	;wreg free
 12128   01065E  C505  F553         	movff	?___flmul,___fldiv@b
 12129   010662  C506  F554         	movff	?___flmul+1,___fldiv@b+1
 12130   010666  C507  F555         	movff	?___flmul+2,___fldiv@b+2
 12131   01066A  C508  F556         	movff	?___flmul+3,___fldiv@b+3
 12132   01066E  0E00               	movlw	0
 12133   010670  6E57               	movwf	___fldiv@a^(0+1280),c
 12134   010672  0E00               	movlw	0
 12135   010674  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 12136   010676  0E34               	movlw	52
 12137   010678  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 12138   01067A  0E43               	movlw	67
 12139   01067C  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 12140   01067E  EC5D  F0A3         	call	___fldiv	;wreg free
 12141   010682  C553  F65A         	movff	?___fldiv,MPU6050_DMP_GetData@yaw_rad
 12142   010686  C554  F65B         	movff	?___fldiv+1,MPU6050_DMP_GetData@yaw_rad+1
 12143   01068A  C555  F65C         	movff	?___fldiv+2,MPU6050_DMP_GetData@yaw_rad+2
 12144   01068E  C556  F65D         	movff	?___fldiv+3,MPU6050_DMP_GetData@yaw_rad+3
 12145                           
 12146                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12147   010692  C656  F596         	movff	MPU6050_DMP_GetData@pitch_rad,cosf@x
 12148   010696  C657  F597         	movff	MPU6050_DMP_GetData@pitch_rad+1,cosf@x+1
 12149   01069A  C658  F598         	movff	MPU6050_DMP_GetData@pitch_rad+2,cosf@x+2
 12150   01069E  C659  F599         	movff	MPU6050_DMP_GetData@pitch_rad+3,cosf@x+3
 12151   0106A2  ECA6  F098         	call	_cosf	;wreg free
 12152   0106A6  C596  F632         	movff	?_cosf,_MPU6050_DMP_GetData$3470
 12153   0106AA  C597  F633         	movff	?_cosf+1,_MPU6050_DMP_GetData$3470+1
 12154   0106AE  C598  F634         	movff	?_cosf+2,_MPU6050_DMP_GetData$3470+2
 12155   0106B2  C599  F635         	movff	?_cosf+3,_MPU6050_DMP_GetData$3470+3
 12156                           
 12157                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12158   0106B6  C652  F596         	movff	MPU6050_DMP_GetData@roll_rad,cosf@x
 12159   0106BA  C653  F597         	movff	MPU6050_DMP_GetData@roll_rad+1,cosf@x+1
 12160   0106BE  C654  F598         	movff	MPU6050_DMP_GetData@roll_rad+2,cosf@x+2
 12161   0106C2  C655  F599         	movff	MPU6050_DMP_GetData@roll_rad+3,cosf@x+3
 12162   0106C6  ECA6  F098         	call	_cosf	;wreg free
 12163   0106CA  C596  F636         	movff	?_cosf,_MPU6050_DMP_GetData$3471
 12164   0106CE  C597  F637         	movff	?_cosf+1,_MPU6050_DMP_GetData$3471+1
 12165   0106D2  C598  F638         	movff	?_cosf+2,_MPU6050_DMP_GetData$3471+2
 12166   0106D6  C599  F639         	movff	?_cosf+3,_MPU6050_DMP_GetData$3471+3
 12167                           
 12168                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12169   0106DA  C65A  F596         	movff	MPU6050_DMP_GetData@yaw_rad,cosf@x
 12170   0106DE  C65B  F597         	movff	MPU6050_DMP_GetData@yaw_rad+1,cosf@x+1
 12171   0106E2  C65C  F598         	movff	MPU6050_DMP_GetData@yaw_rad+2,cosf@x+2
 12172   0106E6  C65D  F599         	movff	MPU6050_DMP_GetData@yaw_rad+3,cosf@x+3
 12173   0106EA  ECA6  F098         	call	_cosf	;wreg free
 12174   0106EE  C596  F63A         	movff	?_cosf,_MPU6050_DMP_GetData$3472
 12175   0106F2  C597  F63B         	movff	?_cosf+1,_MPU6050_DMP_GetData$3472+1
 12176   0106F6  C598  F63C         	movff	?_cosf+2,_MPU6050_DMP_GetData$3472+2
 12177   0106FA  C599  F63D         	movff	?_cosf+3,_MPU6050_DMP_GetData$3472+3
 12178   0106FE                     
 12179                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12180   0106FE  C632  F509         	movff	_MPU6050_DMP_GetData$3470,___flmul@a
 12181   010702  C633  F50A         	movff	_MPU6050_DMP_GetData$3470+1,___flmul@a+1
 12182   010706  C634  F50B         	movff	_MPU6050_DMP_GetData$3470+2,___flmul@a+2
 12183   01070A  C635  F50C         	movff	_MPU6050_DMP_GetData$3470+3,___flmul@a+3
 12184   01070E  C636  F505         	movff	_MPU6050_DMP_GetData$3471,___flmul@b
 12185   010712  C637  F506         	movff	_MPU6050_DMP_GetData$3471+1,___flmul@b+1
 12186   010716  C638  F507         	movff	_MPU6050_DMP_GetData$3471+2,___flmul@b+2
 12187   01071A  C639  F508         	movff	_MPU6050_DMP_GetData$3471+3,___flmul@b+3
 12188   01071E  EC76  F09D         	call	___flmul	;wreg free
 12189   010722  C505  F64A         	movff	?___flmul,_MPU6050_DMP_GetData$3473
 12190   010726  C506  F64B         	movff	?___flmul+1,_MPU6050_DMP_GetData$3473+1
 12191   01072A  C507  F64C         	movff	?___flmul+2,_MPU6050_DMP_GetData$3473+2
 12192   01072E  C508  F64D         	movff	?___flmul+3,_MPU6050_DMP_GetData$3473+3
 12193   010732                     
 12194                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12195   010732  C656  F596         	movff	MPU6050_DMP_GetData@pitch_rad,sinf@x
 12196   010736  C657  F597         	movff	MPU6050_DMP_GetData@pitch_rad+1,sinf@x+1
 12197   01073A  C658  F598         	movff	MPU6050_DMP_GetData@pitch_rad+2,sinf@x+2
 12198   01073E  C659  F599         	movff	MPU6050_DMP_GetData@pitch_rad+3,sinf@x+3
 12199   010742  EC1F  F096         	call	_sinf	;wreg free
 12200   010746  C596  F63E         	movff	?_sinf,_MPU6050_DMP_GetData$3474
 12201   01074A  C597  F63F         	movff	?_sinf+1,_MPU6050_DMP_GetData$3474+1
 12202   01074E  C598  F640         	movff	?_sinf+2,_MPU6050_DMP_GetData$3474+2
 12203   010752  C599  F641         	movff	?_sinf+3,_MPU6050_DMP_GetData$3474+3
 12204   010756                     
 12205                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12206   010756  C652  F596         	movff	MPU6050_DMP_GetData@roll_rad,sinf@x
 12207   01075A  C653  F597         	movff	MPU6050_DMP_GetData@roll_rad+1,sinf@x+1
 12208   01075E  C654  F598         	movff	MPU6050_DMP_GetData@roll_rad+2,sinf@x+2
 12209   010762  C655  F599         	movff	MPU6050_DMP_GetData@roll_rad+3,sinf@x+3
 12210   010766  EC1F  F096         	call	_sinf	;wreg free
 12211   01076A  C596  F642         	movff	?_sinf,_MPU6050_DMP_GetData$3475
 12212   01076E  C597  F643         	movff	?_sinf+1,_MPU6050_DMP_GetData$3475+1
 12213   010772  C598  F644         	movff	?_sinf+2,_MPU6050_DMP_GetData$3475+2
 12214   010776  C599  F645         	movff	?_sinf+3,_MPU6050_DMP_GetData$3475+3
 12215   01077A                     
 12216                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12217   01077A  C65A  F596         	movff	MPU6050_DMP_GetData@yaw_rad,sinf@x
 12218   01077E  C65B  F597         	movff	MPU6050_DMP_GetData@yaw_rad+1,sinf@x+1
 12219   010782  C65C  F598         	movff	MPU6050_DMP_GetData@yaw_rad+2,sinf@x+2
 12220   010786  C65D  F599         	movff	MPU6050_DMP_GetData@yaw_rad+3,sinf@x+3
 12221   01078A  EC1F  F096         	call	_sinf	;wreg free
 12222   01078E  C596  F646         	movff	?_sinf,_MPU6050_DMP_GetData$3476
 12223   010792  C597  F647         	movff	?_sinf+1,_MPU6050_DMP_GetData$3476+1
 12224   010796  C598  F648         	movff	?_sinf+2,_MPU6050_DMP_GetData$3476+2
 12225   01079A  C599  F649         	movff	?_sinf+3,_MPU6050_DMP_GetData$3476+3
 12226                           
 12227                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12228   01079E  C63E  F509         	movff	_MPU6050_DMP_GetData$3474,___flmul@a
 12229   0107A2  C63F  F50A         	movff	_MPU6050_DMP_GetData$3474+1,___flmul@a+1
 12230   0107A6  C640  F50B         	movff	_MPU6050_DMP_GetData$3474+2,___flmul@a+2
 12231   0107AA  C641  F50C         	movff	_MPU6050_DMP_GetData$3474+3,___flmul@a+3
 12232   0107AE  C642  F505         	movff	_MPU6050_DMP_GetData$3475,___flmul@b
 12233   0107B2  C643  F506         	movff	_MPU6050_DMP_GetData$3475+1,___flmul@b+1
 12234   0107B6  C644  F507         	movff	_MPU6050_DMP_GetData$3475+2,___flmul@b+2
 12235   0107BA  C645  F508         	movff	_MPU6050_DMP_GetData$3475+3,___flmul@b+3
 12236   0107BE  EC76  F09D         	call	___flmul	;wreg free
 12237   0107C2  C505  F64E         	movff	?___flmul,_MPU6050_DMP_GetData$3477
 12238   0107C6  C506  F64F         	movff	?___flmul+1,_MPU6050_DMP_GetData$3477+1
 12239   0107CA  C507  F650         	movff	?___flmul+2,_MPU6050_DMP_GetData$3477+2
 12240   0107CE  C508  F651         	movff	?___flmul+3,_MPU6050_DMP_GetData$3477+3
 12241   0107D2                     
 12242                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12243   0107D2  C63A  F509         	movff	_MPU6050_DMP_GetData$3472,___flmul@a
 12244   0107D6  C63B  F50A         	movff	_MPU6050_DMP_GetData$3472+1,___flmul@a+1
 12245   0107DA  C63C  F50B         	movff	_MPU6050_DMP_GetData$3472+2,___flmul@a+2
 12246   0107DE  C63D  F50C         	movff	_MPU6050_DMP_GetData$3472+3,___flmul@a+3
 12247   0107E2  C64A  F505         	movff	_MPU6050_DMP_GetData$3473,___flmul@b
 12248   0107E6  C64B  F506         	movff	_MPU6050_DMP_GetData$3473+1,___flmul@b+1
 12249   0107EA  C64C  F507         	movff	_MPU6050_DMP_GetData$3473+2,___flmul@b+2
 12250   0107EE  C64D  F508         	movff	_MPU6050_DMP_GetData$3473+3,___flmul@b+3
 12251   0107F2  EC76  F09D         	call	___flmul	;wreg free
 12252   0107F6  C505  F51E         	movff	?___flmul,___fladd@b
 12253   0107FA  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 12254   0107FE  C507  F520         	movff	?___flmul+2,___fladd@b+2
 12255   010802  C508  F521         	movff	?___flmul+3,___fladd@b+3
 12256   010806  C646  F509         	movff	_MPU6050_DMP_GetData$3476,___flmul@a
 12257   01080A  C647  F50A         	movff	_MPU6050_DMP_GetData$3476+1,___flmul@a+1
 12258   01080E  C648  F50B         	movff	_MPU6050_DMP_GetData$3476+2,___flmul@a+2
 12259   010812  C649  F50C         	movff	_MPU6050_DMP_GetData$3476+3,___flmul@a+3
 12260   010816  C64E  F505         	movff	_MPU6050_DMP_GetData$3477,___flmul@b
 12261   01081A  C64F  F506         	movff	_MPU6050_DMP_GetData$3477+1,___flmul@b+1
 12262   01081E  C650  F507         	movff	_MPU6050_DMP_GetData$3477+2,___flmul@b+2
 12263   010822  C651  F508         	movff	_MPU6050_DMP_GetData$3477+3,___flmul@b+3
 12264   010826  EC76  F09D         	call	___flmul	;wreg free
 12265   01082A  C505  F522         	movff	?___flmul,___fladd@a
 12266   01082E  C506  F523         	movff	?___flmul+1,___fladd@a+1
 12267   010832  C507  F524         	movff	?___flmul+2,___fladd@a+2
 12268   010836  C508  F525         	movff	?___flmul+3,___fladd@a+3
 12269   01083A  EC1B  F09B         	call	___fladd	;wreg free
 12270   01083E  C5FC  F4D9         	movff	MPU6050_DMP_GetData@quat,fsr2l
 12271   010842  C5FD  F4DA         	movff	MPU6050_DMP_GetData@quat+1,fsr2h
 12272   010846  C51E  F4DE         	movff	?___fladd,postinc2
 12273   01084A  C51F  F4DE         	movff	?___fladd+1,postinc2
 12274   01084E  C520  F4DE         	movff	?___fladd+2,postinc2
 12275   010852  C521  F4DE         	movff	?___fladd+3,postinc2
 12276   010856                     
 12277                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12278   010856  C656  F596         	movff	MPU6050_DMP_GetData@pitch_rad,cosf@x
 12279   01085A  C657  F597         	movff	MPU6050_DMP_GetData@pitch_rad+1,cosf@x+1
 12280   01085E  C658  F598         	movff	MPU6050_DMP_GetData@pitch_rad+2,cosf@x+2
 12281   010862  C659  F599         	movff	MPU6050_DMP_GetData@pitch_rad+3,cosf@x+3
 12282   010866  ECA6  F098         	call	_cosf	;wreg free
 12283   01086A  C596  F632         	movff	?_cosf,_MPU6050_DMP_GetData$3470
 12284   01086E  C597  F633         	movff	?_cosf+1,_MPU6050_DMP_GetData$3470+1
 12285   010872  C598  F634         	movff	?_cosf+2,_MPU6050_DMP_GetData$3470+2
 12286   010876  C599  F635         	movff	?_cosf+3,_MPU6050_DMP_GetData$3470+3
 12287   01087A                     
 12288                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12289   01087A  C652  F596         	movff	MPU6050_DMP_GetData@roll_rad,sinf@x
 12290   01087E  C653  F597         	movff	MPU6050_DMP_GetData@roll_rad+1,sinf@x+1
 12291   010882  C654  F598         	movff	MPU6050_DMP_GetData@roll_rad+2,sinf@x+2
 12292   010886  C655  F599         	movff	MPU6050_DMP_GetData@roll_rad+3,sinf@x+3
 12293   01088A  EC1F  F096         	call	_sinf	;wreg free
 12294   01088E  C596  F610         	movff	?_sinf,_MPU6050_DMP_GetData$3478
 12295   010892  C597  F611         	movff	?_sinf+1,_MPU6050_DMP_GetData$3478+1
 12296   010896  C598  F612         	movff	?_sinf+2,_MPU6050_DMP_GetData$3478+2
 12297   01089A  C599  F613         	movff	?_sinf+3,_MPU6050_DMP_GetData$3478+3
 12298   01089E                     
 12299                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12300   01089E  C65A  F596         	movff	MPU6050_DMP_GetData@yaw_rad,cosf@x
 12301   0108A2  C65B  F597         	movff	MPU6050_DMP_GetData@yaw_rad+1,cosf@x+1
 12302   0108A6  C65C  F598         	movff	MPU6050_DMP_GetData@yaw_rad+2,cosf@x+2
 12303   0108AA  C65D  F599         	movff	MPU6050_DMP_GetData@yaw_rad+3,cosf@x+3
 12304   0108AE  ECA6  F098         	call	_cosf	;wreg free
 12305   0108B2  C596  F63A         	movff	?_cosf,_MPU6050_DMP_GetData$3472
 12306   0108B6  C597  F63B         	movff	?_cosf+1,_MPU6050_DMP_GetData$3472+1
 12307   0108BA  C598  F63C         	movff	?_cosf+2,_MPU6050_DMP_GetData$3472+2
 12308   0108BE  C599  F63D         	movff	?_cosf+3,_MPU6050_DMP_GetData$3472+3
 12309                           
 12310                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12311   0108C2  C632  F509         	movff	_MPU6050_DMP_GetData$3470,___flmul@a
 12312   0108C6  C633  F50A         	movff	_MPU6050_DMP_GetData$3470+1,___flmul@a+1
 12313   0108CA  C634  F50B         	movff	_MPU6050_DMP_GetData$3470+2,___flmul@a+2
 12314   0108CE  C635  F50C         	movff	_MPU6050_DMP_GetData$3470+3,___flmul@a+3
 12315   0108D2  C610  F505         	movff	_MPU6050_DMP_GetData$3478,___flmul@b
 12316   0108D6  C611  F506         	movff	_MPU6050_DMP_GetData$3478+1,___flmul@b+1
 12317   0108DA  C612  F507         	movff	_MPU6050_DMP_GetData$3478+2,___flmul@b+2
 12318   0108DE  C613  F508         	movff	_MPU6050_DMP_GetData$3478+3,___flmul@b+3
 12319   0108E2  EC76  F09D         	call	___flmul	;wreg free
 12320   0108E6  C505  F64A         	movff	?___flmul,_MPU6050_DMP_GetData$3473
 12321   0108EA  C506  F64B         	movff	?___flmul+1,_MPU6050_DMP_GetData$3473+1
 12322   0108EE  C507  F64C         	movff	?___flmul+2,_MPU6050_DMP_GetData$3473+2
 12323   0108F2  C508  F64D         	movff	?___flmul+3,_MPU6050_DMP_GetData$3473+3
 12324   0108F6                     
 12325                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12326   0108F6  C656  F596         	movff	MPU6050_DMP_GetData@pitch_rad,sinf@x
 12327   0108FA  C657  F597         	movff	MPU6050_DMP_GetData@pitch_rad+1,sinf@x+1
 12328   0108FE  C658  F598         	movff	MPU6050_DMP_GetData@pitch_rad+2,sinf@x+2
 12329   010902  C659  F599         	movff	MPU6050_DMP_GetData@pitch_rad+3,sinf@x+3
 12330   010906  EC1F  F096         	call	_sinf	;wreg free
 12331   01090A  C596  F63E         	movff	?_sinf,_MPU6050_DMP_GetData$3474
 12332   01090E  C597  F63F         	movff	?_sinf+1,_MPU6050_DMP_GetData$3474+1
 12333   010912  C598  F640         	movff	?_sinf+2,_MPU6050_DMP_GetData$3474+2
 12334   010916  C599  F641         	movff	?_sinf+3,_MPU6050_DMP_GetData$3474+3
 12335   01091A                     
 12336                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12337   01091A  C652  F596         	movff	MPU6050_DMP_GetData@roll_rad,cosf@x
 12338   01091E  C653  F597         	movff	MPU6050_DMP_GetData@roll_rad+1,cosf@x+1
 12339   010922  C654  F598         	movff	MPU6050_DMP_GetData@roll_rad+2,cosf@x+2
 12340   010926  C655  F599         	movff	MPU6050_DMP_GetData@roll_rad+3,cosf@x+3
 12341   01092A  ECA6  F098         	call	_cosf	;wreg free
 12342   01092E  C596  F614         	movff	?_cosf,_MPU6050_DMP_GetData$3479
 12343   010932  C597  F615         	movff	?_cosf+1,_MPU6050_DMP_GetData$3479+1
 12344   010936  C598  F616         	movff	?_cosf+2,_MPU6050_DMP_GetData$3479+2
 12345   01093A  C599  F617         	movff	?_cosf+3,_MPU6050_DMP_GetData$3479+3
 12346   01093E                     
 12347                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12348   01093E  C65A  F596         	movff	MPU6050_DMP_GetData@yaw_rad,sinf@x
 12349   010942  C65B  F597         	movff	MPU6050_DMP_GetData@yaw_rad+1,sinf@x+1
 12350   010946  C65C  F598         	movff	MPU6050_DMP_GetData@yaw_rad+2,sinf@x+2
 12351   01094A  C65D  F599         	movff	MPU6050_DMP_GetData@yaw_rad+3,sinf@x+3
 12352   01094E  EC1F  F096         	call	_sinf	;wreg free
 12353   010952  C596  F646         	movff	?_sinf,_MPU6050_DMP_GetData$3476
 12354   010956  C597  F647         	movff	?_sinf+1,_MPU6050_DMP_GetData$3476+1
 12355   01095A  C598  F648         	movff	?_sinf+2,_MPU6050_DMP_GetData$3476+2
 12356   01095E  C599  F649         	movff	?_sinf+3,_MPU6050_DMP_GetData$3476+3
 12357   010962                     
 12358                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12359   010962  C63E  F509         	movff	_MPU6050_DMP_GetData$3474,___flmul@a
 12360   010966  C63F  F50A         	movff	_MPU6050_DMP_GetData$3474+1,___flmul@a+1
 12361   01096A  C640  F50B         	movff	_MPU6050_DMP_GetData$3474+2,___flmul@a+2
 12362   01096E  C641  F50C         	movff	_MPU6050_DMP_GetData$3474+3,___flmul@a+3
 12363   010972  C614  F505         	movff	_MPU6050_DMP_GetData$3479,___flmul@b
 12364   010976  C615  F506         	movff	_MPU6050_DMP_GetData$3479+1,___flmul@b+1
 12365   01097A  C616  F507         	movff	_MPU6050_DMP_GetData$3479+2,___flmul@b+2
 12366   01097E  C617  F508         	movff	_MPU6050_DMP_GetData$3479+3,___flmul@b+3
 12367   010982  EC76  F09D         	call	___flmul	;wreg free
 12368   010986  C505  F64E         	movff	?___flmul,_MPU6050_DMP_GetData$3477
 12369   01098A  C506  F64F         	movff	?___flmul+1,_MPU6050_DMP_GetData$3477+1
 12370   01098E  C507  F650         	movff	?___flmul+2,_MPU6050_DMP_GetData$3477+2
 12371   010992  C508  F651         	movff	?___flmul+3,_MPU6050_DMP_GetData$3477+3
 12372                           
 12373                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12374   010996  C63A  F509         	movff	_MPU6050_DMP_GetData$3472,___flmul@a
 12375   01099A  C63B  F50A         	movff	_MPU6050_DMP_GetData$3472+1,___flmul@a+1
 12376   01099E  C63C  F50B         	movff	_MPU6050_DMP_GetData$3472+2,___flmul@a+2
 12377   0109A2  C63D  F50C         	movff	_MPU6050_DMP_GetData$3472+3,___flmul@a+3
 12378   0109A6  C64A  F505         	movff	_MPU6050_DMP_GetData$3473,___flmul@b
 12379   0109AA  C64B  F506         	movff	_MPU6050_DMP_GetData$3473+1,___flmul@b+1
 12380   0109AE  C64C  F507         	movff	_MPU6050_DMP_GetData$3473+2,___flmul@b+2
 12381   0109B2  C64D  F508         	movff	_MPU6050_DMP_GetData$3473+3,___flmul@b+3
 12382   0109B6  EC76  F09D         	call	___flmul	;wreg free
 12383   0109BA  C505  F56D         	movff	?___flmul,___flsub@b
 12384   0109BE  C506  F56E         	movff	?___flmul+1,___flsub@b+1
 12385   0109C2  C507  F56F         	movff	?___flmul+2,___flsub@b+2
 12386   0109C6  C508  F570         	movff	?___flmul+3,___flsub@b+3
 12387   0109CA  C646  F509         	movff	_MPU6050_DMP_GetData$3476,___flmul@a
 12388   0109CE  C647  F50A         	movff	_MPU6050_DMP_GetData$3476+1,___flmul@a+1
 12389   0109D2  C648  F50B         	movff	_MPU6050_DMP_GetData$3476+2,___flmul@a+2
 12390   0109D6  C649  F50C         	movff	_MPU6050_DMP_GetData$3476+3,___flmul@a+3
 12391   0109DA  C64E  F505         	movff	_MPU6050_DMP_GetData$3477,___flmul@b
 12392   0109DE  C64F  F506         	movff	_MPU6050_DMP_GetData$3477+1,___flmul@b+1
 12393   0109E2  C650  F507         	movff	_MPU6050_DMP_GetData$3477+2,___flmul@b+2
 12394   0109E6  C651  F508         	movff	_MPU6050_DMP_GetData$3477+3,___flmul@b+3
 12395   0109EA  EC76  F09D         	call	___flmul	;wreg free
 12396   0109EE  C505  F571         	movff	?___flmul,___flsub@a
 12397   0109F2  C506  F572         	movff	?___flmul+1,___flsub@a+1
 12398   0109F6  C507  F573         	movff	?___flmul+2,___flsub@a+2
 12399   0109FA  C508  F574         	movff	?___flmul+3,___flsub@a+3
 12400   0109FE  ECD5  F0B5         	call	___flsub	;wreg free
 12401   010A02  0105               	movlb	5	; () banked
 12402   010A04  EE20 F004          	lfsr	2,4
 12403   010A08  51FC               	movf	MPU6050_DMP_GetData@quat& (0+255),w,b
 12404   010A0A  26D9               	addwf	fsr2l,f,c
 12405   010A0C  51FD               	movf	(MPU6050_DMP_GetData@quat+1)& (0+255),w,b
 12406   010A0E  22DA               	addwfc	fsr2h,f,c
 12407   010A10  C56D  F4DE         	movff	?___flsub,postinc2
 12408   010A14  C56E  F4DE         	movff	?___flsub+1,postinc2
 12409   010A18  C56F  F4DE         	movff	?___flsub+2,postinc2
 12410   010A1C  C570  F4DE         	movff	?___flsub+3,postinc2
 12411                           
 12412                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12413   010A20  C656  F596         	movff	MPU6050_DMP_GetData@pitch_rad,sinf@x
 12414   010A24  C657  F597         	movff	MPU6050_DMP_GetData@pitch_rad+1,sinf@x+1
 12415   010A28  C658  F598         	movff	MPU6050_DMP_GetData@pitch_rad+2,sinf@x+2
 12416   010A2C  C659  F599         	movff	MPU6050_DMP_GetData@pitch_rad+3,sinf@x+3
 12417   010A30  EC1F  F096         	call	_sinf	;wreg free
 12418   010A34  C596  F618         	movff	?_sinf,_MPU6050_DMP_GetData$3480
 12419   010A38  C597  F619         	movff	?_sinf+1,_MPU6050_DMP_GetData$3480+1
 12420   010A3C  C598  F61A         	movff	?_sinf+2,_MPU6050_DMP_GetData$3480+2
 12421   010A40  C599  F61B         	movff	?_sinf+3,_MPU6050_DMP_GetData$3480+3
 12422                           
 12423                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12424   010A44  C652  F596         	movff	MPU6050_DMP_GetData@roll_rad,cosf@x
 12425   010A48  C653  F597         	movff	MPU6050_DMP_GetData@roll_rad+1,cosf@x+1
 12426   010A4C  C654  F598         	movff	MPU6050_DMP_GetData@roll_rad+2,cosf@x+2
 12427   010A50  C655  F599         	movff	MPU6050_DMP_GetData@roll_rad+3,cosf@x+3
 12428   010A54  ECA6  F098         	call	_cosf	;wreg free
 12429   010A58  C596  F636         	movff	?_cosf,_MPU6050_DMP_GetData$3471
 12430   010A5C  C597  F637         	movff	?_cosf+1,_MPU6050_DMP_GetData$3471+1
 12431   010A60  C598  F638         	movff	?_cosf+2,_MPU6050_DMP_GetData$3471+2
 12432   010A64  C599  F639         	movff	?_cosf+3,_MPU6050_DMP_GetData$3471+3
 12433                           
 12434                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12435   010A68  C65A  F596         	movff	MPU6050_DMP_GetData@yaw_rad,cosf@x
 12436   010A6C  C65B  F597         	movff	MPU6050_DMP_GetData@yaw_rad+1,cosf@x+1
 12437   010A70  C65C  F598         	movff	MPU6050_DMP_GetData@yaw_rad+2,cosf@x+2
 12438   010A74  C65D  F599         	movff	MPU6050_DMP_GetData@yaw_rad+3,cosf@x+3
 12439   010A78  ECA6  F098         	call	_cosf	;wreg free
 12440   010A7C  C596  F63A         	movff	?_cosf,_MPU6050_DMP_GetData$3472
 12441   010A80  C597  F63B         	movff	?_cosf+1,_MPU6050_DMP_GetData$3472+1
 12442   010A84  C598  F63C         	movff	?_cosf+2,_MPU6050_DMP_GetData$3472+2
 12443   010A88  C599  F63D         	movff	?_cosf+3,_MPU6050_DMP_GetData$3472+3
 12444   010A8C                     
 12445                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12446   010A8C  C618  F509         	movff	_MPU6050_DMP_GetData$3480,___flmul@a
 12447   010A90  C619  F50A         	movff	_MPU6050_DMP_GetData$3480+1,___flmul@a+1
 12448   010A94  C61A  F50B         	movff	_MPU6050_DMP_GetData$3480+2,___flmul@a+2
 12449   010A98  C61B  F50C         	movff	_MPU6050_DMP_GetData$3480+3,___flmul@a+3
 12450   010A9C  C636  F505         	movff	_MPU6050_DMP_GetData$3471,___flmul@b
 12451   010AA0  C637  F506         	movff	_MPU6050_DMP_GetData$3471+1,___flmul@b+1
 12452   010AA4  C638  F507         	movff	_MPU6050_DMP_GetData$3471+2,___flmul@b+2
 12453   010AA8  C639  F508         	movff	_MPU6050_DMP_GetData$3471+3,___flmul@b+3
 12454   010AAC  EC76  F09D         	call	___flmul	;wreg free
 12455   010AB0  C505  F64A         	movff	?___flmul,_MPU6050_DMP_GetData$3473
 12456   010AB4  C506  F64B         	movff	?___flmul+1,_MPU6050_DMP_GetData$3473+1
 12457   010AB8  C507  F64C         	movff	?___flmul+2,_MPU6050_DMP_GetData$3473+2
 12458   010ABC  C508  F64D         	movff	?___flmul+3,_MPU6050_DMP_GetData$3473+3
 12459   010AC0                     
 12460                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12461   010AC0  C656  F596         	movff	MPU6050_DMP_GetData@pitch_rad,cosf@x
 12462   010AC4  C657  F597         	movff	MPU6050_DMP_GetData@pitch_rad+1,cosf@x+1
 12463   010AC8  C658  F598         	movff	MPU6050_DMP_GetData@pitch_rad+2,cosf@x+2
 12464   010ACC  C659  F599         	movff	MPU6050_DMP_GetData@pitch_rad+3,cosf@x+3
 12465   010AD0  ECA6  F098         	call	_cosf	;wreg free
 12466   010AD4  C596  F61C         	movff	?_cosf,_MPU6050_DMP_GetData$3481
 12467   010AD8  C597  F61D         	movff	?_cosf+1,_MPU6050_DMP_GetData$3481+1
 12468   010ADC  C598  F61E         	movff	?_cosf+2,_MPU6050_DMP_GetData$3481+2
 12469   010AE0  C599  F61F         	movff	?_cosf+3,_MPU6050_DMP_GetData$3481+3
 12470   010AE4                     
 12471                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12472   010AE4  C652  F596         	movff	MPU6050_DMP_GetData@roll_rad,sinf@x
 12473   010AE8  C653  F597         	movff	MPU6050_DMP_GetData@roll_rad+1,sinf@x+1
 12474   010AEC  C654  F598         	movff	MPU6050_DMP_GetData@roll_rad+2,sinf@x+2
 12475   010AF0  C655  F599         	movff	MPU6050_DMP_GetData@roll_rad+3,sinf@x+3
 12476   010AF4  EC1F  F096         	call	_sinf	;wreg free
 12477   010AF8  C596  F642         	movff	?_sinf,_MPU6050_DMP_GetData$3475
 12478   010AFC  C597  F643         	movff	?_sinf+1,_MPU6050_DMP_GetData$3475+1
 12479   010B00  C598  F644         	movff	?_sinf+2,_MPU6050_DMP_GetData$3475+2
 12480   010B04  C599  F645         	movff	?_sinf+3,_MPU6050_DMP_GetData$3475+3
 12481   010B08                     
 12482                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12483   010B08  C65A  F596         	movff	MPU6050_DMP_GetData@yaw_rad,sinf@x
 12484   010B0C  C65B  F597         	movff	MPU6050_DMP_GetData@yaw_rad+1,sinf@x+1
 12485   010B10  C65C  F598         	movff	MPU6050_DMP_GetData@yaw_rad+2,sinf@x+2
 12486   010B14  C65D  F599         	movff	MPU6050_DMP_GetData@yaw_rad+3,sinf@x+3
 12487   010B18  EC1F  F096         	call	_sinf	;wreg free
 12488   010B1C  C596  F646         	movff	?_sinf,_MPU6050_DMP_GetData$3476
 12489   010B20  C597  F647         	movff	?_sinf+1,_MPU6050_DMP_GetData$3476+1
 12490   010B24  C598  F648         	movff	?_sinf+2,_MPU6050_DMP_GetData$3476+2
 12491   010B28  C599  F649         	movff	?_sinf+3,_MPU6050_DMP_GetData$3476+3
 12492                           
 12493                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12494   010B2C  C61C  F509         	movff	_MPU6050_DMP_GetData$3481,___flmul@a
 12495   010B30  C61D  F50A         	movff	_MPU6050_DMP_GetData$3481+1,___flmul@a+1
 12496   010B34  C61E  F50B         	movff	_MPU6050_DMP_GetData$3481+2,___flmul@a+2
 12497   010B38  C61F  F50C         	movff	_MPU6050_DMP_GetData$3481+3,___flmul@a+3
 12498   010B3C  C642  F505         	movff	_MPU6050_DMP_GetData$3475,___flmul@b
 12499   010B40  C643  F506         	movff	_MPU6050_DMP_GetData$3475+1,___flmul@b+1
 12500   010B44  C644  F507         	movff	_MPU6050_DMP_GetData$3475+2,___flmul@b+2
 12501   010B48  C645  F508         	movff	_MPU6050_DMP_GetData$3475+3,___flmul@b+3
 12502   010B4C  EC76  F09D         	call	___flmul	;wreg free
 12503   010B50  C505  F64E         	movff	?___flmul,_MPU6050_DMP_GetData$3477
 12504   010B54  C506  F64F         	movff	?___flmul+1,_MPU6050_DMP_GetData$3477+1
 12505   010B58  C507  F650         	movff	?___flmul+2,_MPU6050_DMP_GetData$3477+2
 12506   010B5C  C508  F651         	movff	?___flmul+3,_MPU6050_DMP_GetData$3477+3
 12507   010B60                     
 12508                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12509   010B60  C63A  F509         	movff	_MPU6050_DMP_GetData$3472,___flmul@a
 12510   010B64  C63B  F50A         	movff	_MPU6050_DMP_GetData$3472+1,___flmul@a+1
 12511   010B68  C63C  F50B         	movff	_MPU6050_DMP_GetData$3472+2,___flmul@a+2
 12512   010B6C  C63D  F50C         	movff	_MPU6050_DMP_GetData$3472+3,___flmul@a+3
 12513   010B70  C64A  F505         	movff	_MPU6050_DMP_GetData$3473,___flmul@b
 12514   010B74  C64B  F506         	movff	_MPU6050_DMP_GetData$3473+1,___flmul@b+1
 12515   010B78  C64C  F507         	movff	_MPU6050_DMP_GetData$3473+2,___flmul@b+2
 12516   010B7C  C64D  F508         	movff	_MPU6050_DMP_GetData$3473+3,___flmul@b+3
 12517   010B80  EC76  F09D         	call	___flmul	;wreg free
 12518   010B84  C505  F51E         	movff	?___flmul,___fladd@b
 12519   010B88  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 12520   010B8C  C507  F520         	movff	?___flmul+2,___fladd@b+2
 12521   010B90  C508  F521         	movff	?___flmul+3,___fladd@b+3
 12522   010B94  C646  F509         	movff	_MPU6050_DMP_GetData$3476,___flmul@a
 12523   010B98  C647  F50A         	movff	_MPU6050_DMP_GetData$3476+1,___flmul@a+1
 12524   010B9C  C648  F50B         	movff	_MPU6050_DMP_GetData$3476+2,___flmul@a+2
 12525   010BA0  C649  F50C         	movff	_MPU6050_DMP_GetData$3476+3,___flmul@a+3
 12526   010BA4  C64E  F505         	movff	_MPU6050_DMP_GetData$3477,___flmul@b
 12527   010BA8  C64F  F506         	movff	_MPU6050_DMP_GetData$3477+1,___flmul@b+1
 12528   010BAC  C650  F507         	movff	_MPU6050_DMP_GetData$3477+2,___flmul@b+2
 12529   010BB0  C651  F508         	movff	_MPU6050_DMP_GetData$3477+3,___flmul@b+3
 12530   010BB4  EC76  F09D         	call	___flmul	;wreg free
 12531   010BB8  C505  F522         	movff	?___flmul,___fladd@a
 12532   010BBC  C506  F523         	movff	?___flmul+1,___fladd@a+1
 12533   010BC0  C507  F524         	movff	?___flmul+2,___fladd@a+2
 12534   010BC4  C508  F525         	movff	?___flmul+3,___fladd@a+3
 12535   010BC8  EC1B  F09B         	call	___fladd	;wreg free
 12536   010BCC  0105               	movlb	5	; () banked
 12537   010BCE  EE20 F008          	lfsr	2,8
 12538   010BD2  51FC               	movf	MPU6050_DMP_GetData@quat& (0+255),w,b
 12539   010BD4  26D9               	addwf	fsr2l,f,c
 12540   010BD6  51FD               	movf	(MPU6050_DMP_GetData@quat+1)& (0+255),w,b
 12541   010BD8  22DA               	addwfc	fsr2h,f,c
 12542   010BDA  C51E  F4DE         	movff	?___fladd,postinc2
 12543   010BDE  C51F  F4DE         	movff	?___fladd+1,postinc2
 12544   010BE2  C520  F4DE         	movff	?___fladd+2,postinc2
 12545   010BE6  C521  F4DE         	movff	?___fladd+3,postinc2
 12546   010BEA                     
 12547                           ; BSR set to: 5
 12548                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12549   010BEA  C656  F596         	movff	MPU6050_DMP_GetData@pitch_rad,cosf@x
 12550   010BEE  C657  F597         	movff	MPU6050_DMP_GetData@pitch_rad+1,cosf@x+1
 12551   010BF2  C658  F598         	movff	MPU6050_DMP_GetData@pitch_rad+2,cosf@x+2
 12552   010BF6  C659  F599         	movff	MPU6050_DMP_GetData@pitch_rad+3,cosf@x+3
 12553   010BFA  ECA6  F098         	call	_cosf	;wreg free
 12554   010BFE  C596  F632         	movff	?_cosf,_MPU6050_DMP_GetData$3470
 12555   010C02  C597  F633         	movff	?_cosf+1,_MPU6050_DMP_GetData$3470+1
 12556   010C06  C598  F634         	movff	?_cosf+2,_MPU6050_DMP_GetData$3470+2
 12557   010C0A  C599  F635         	movff	?_cosf+3,_MPU6050_DMP_GetData$3470+3
 12558   010C0E                     
 12559                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12560   010C0E  C652  F596         	movff	MPU6050_DMP_GetData@roll_rad,cosf@x
 12561   010C12  C653  F597         	movff	MPU6050_DMP_GetData@roll_rad+1,cosf@x+1
 12562   010C16  C654  F598         	movff	MPU6050_DMP_GetData@roll_rad+2,cosf@x+2
 12563   010C1A  C655  F599         	movff	MPU6050_DMP_GetData@roll_rad+3,cosf@x+3
 12564   010C1E  ECA6  F098         	call	_cosf	;wreg free
 12565   010C22  C596  F636         	movff	?_cosf,_MPU6050_DMP_GetData$3471
 12566   010C26  C597  F637         	movff	?_cosf+1,_MPU6050_DMP_GetData$3471+1
 12567   010C2A  C598  F638         	movff	?_cosf+2,_MPU6050_DMP_GetData$3471+2
 12568   010C2E  C599  F639         	movff	?_cosf+3,_MPU6050_DMP_GetData$3471+3
 12569   010C32                     
 12570                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12571   010C32  C65A  F596         	movff	MPU6050_DMP_GetData@yaw_rad,sinf@x
 12572   010C36  C65B  F597         	movff	MPU6050_DMP_GetData@yaw_rad+1,sinf@x+1
 12573   010C3A  C65C  F598         	movff	MPU6050_DMP_GetData@yaw_rad+2,sinf@x+2
 12574   010C3E  C65D  F599         	movff	MPU6050_DMP_GetData@yaw_rad+3,sinf@x+3
 12575   010C42  EC1F  F096         	call	_sinf	;wreg free
 12576   010C46  C596  F620         	movff	?_sinf,_MPU6050_DMP_GetData$3482
 12577   010C4A  C597  F621         	movff	?_sinf+1,_MPU6050_DMP_GetData$3482+1
 12578   010C4E  C598  F622         	movff	?_sinf+2,_MPU6050_DMP_GetData$3482+2
 12579   010C52  C599  F623         	movff	?_sinf+3,_MPU6050_DMP_GetData$3482+3
 12580                           
 12581                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12582   010C56  C632  F509         	movff	_MPU6050_DMP_GetData$3470,___flmul@a
 12583   010C5A  C633  F50A         	movff	_MPU6050_DMP_GetData$3470+1,___flmul@a+1
 12584   010C5E  C634  F50B         	movff	_MPU6050_DMP_GetData$3470+2,___flmul@a+2
 12585   010C62  C635  F50C         	movff	_MPU6050_DMP_GetData$3470+3,___flmul@a+3
 12586   010C66  C636  F505         	movff	_MPU6050_DMP_GetData$3471,___flmul@b
 12587   010C6A  C637  F506         	movff	_MPU6050_DMP_GetData$3471+1,___flmul@b+1
 12588   010C6E  C638  F507         	movff	_MPU6050_DMP_GetData$3471+2,___flmul@b+2
 12589   010C72  C639  F508         	movff	_MPU6050_DMP_GetData$3471+3,___flmul@b+3
 12590   010C76  EC76  F09D         	call	___flmul	;wreg free
 12591   010C7A  C505  F64A         	movff	?___flmul,_MPU6050_DMP_GetData$3473
 12592   010C7E  C506  F64B         	movff	?___flmul+1,_MPU6050_DMP_GetData$3473+1
 12593   010C82  C507  F64C         	movff	?___flmul+2,_MPU6050_DMP_GetData$3473+2
 12594   010C86  C508  F64D         	movff	?___flmul+3,_MPU6050_DMP_GetData$3473+3
 12595   010C8A                     
 12596                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12597   010C8A  C656  F596         	movff	MPU6050_DMP_GetData@pitch_rad,sinf@x
 12598   010C8E  C657  F597         	movff	MPU6050_DMP_GetData@pitch_rad+1,sinf@x+1
 12599   010C92  C658  F598         	movff	MPU6050_DMP_GetData@pitch_rad+2,sinf@x+2
 12600   010C96  C659  F599         	movff	MPU6050_DMP_GetData@pitch_rad+3,sinf@x+3
 12601   010C9A  EC1F  F096         	call	_sinf	;wreg free
 12602   010C9E  C596  F63E         	movff	?_sinf,_MPU6050_DMP_GetData$3474
 12603   010CA2  C597  F63F         	movff	?_sinf+1,_MPU6050_DMP_GetData$3474+1
 12604   010CA6  C598  F640         	movff	?_sinf+2,_MPU6050_DMP_GetData$3474+2
 12605   010CAA  C599  F641         	movff	?_sinf+3,_MPU6050_DMP_GetData$3474+3
 12606   010CAE                     
 12607                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12608   010CAE  C652  F596         	movff	MPU6050_DMP_GetData@roll_rad,sinf@x
 12609   010CB2  C653  F597         	movff	MPU6050_DMP_GetData@roll_rad+1,sinf@x+1
 12610   010CB6  C654  F598         	movff	MPU6050_DMP_GetData@roll_rad+2,sinf@x+2
 12611   010CBA  C655  F599         	movff	MPU6050_DMP_GetData@roll_rad+3,sinf@x+3
 12612   010CBE  EC1F  F096         	call	_sinf	;wreg free
 12613   010CC2  C596  F642         	movff	?_sinf,_MPU6050_DMP_GetData$3475
 12614   010CC6  C597  F643         	movff	?_sinf+1,_MPU6050_DMP_GetData$3475+1
 12615   010CCA  C598  F644         	movff	?_sinf+2,_MPU6050_DMP_GetData$3475+2
 12616   010CCE  C599  F645         	movff	?_sinf+3,_MPU6050_DMP_GetData$3475+3
 12617   010CD2                     
 12618                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12619   010CD2  C65A  F596         	movff	MPU6050_DMP_GetData@yaw_rad,cosf@x
 12620   010CD6  C65B  F597         	movff	MPU6050_DMP_GetData@yaw_rad+1,cosf@x+1
 12621   010CDA  C65C  F598         	movff	MPU6050_DMP_GetData@yaw_rad+2,cosf@x+2
 12622   010CDE  C65D  F599         	movff	MPU6050_DMP_GetData@yaw_rad+3,cosf@x+3
 12623   010CE2  ECA6  F098         	call	_cosf	;wreg free
 12624   010CE6  C596  F624         	movff	?_cosf,_MPU6050_DMP_GetData$3483
 12625   010CEA  C597  F625         	movff	?_cosf+1,_MPU6050_DMP_GetData$3483+1
 12626   010CEE  C598  F626         	movff	?_cosf+2,_MPU6050_DMP_GetData$3483+2
 12627   010CF2  C599  F627         	movff	?_cosf+3,_MPU6050_DMP_GetData$3483+3
 12628   010CF6                     
 12629                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12630   010CF6  C63E  F509         	movff	_MPU6050_DMP_GetData$3474,___flmul@a
 12631   010CFA  C63F  F50A         	movff	_MPU6050_DMP_GetData$3474+1,___flmul@a+1
 12632   010CFE  C640  F50B         	movff	_MPU6050_DMP_GetData$3474+2,___flmul@a+2
 12633   010D02  C641  F50C         	movff	_MPU6050_DMP_GetData$3474+3,___flmul@a+3
 12634   010D06  C642  F505         	movff	_MPU6050_DMP_GetData$3475,___flmul@b
 12635   010D0A  C643  F506         	movff	_MPU6050_DMP_GetData$3475+1,___flmul@b+1
 12636   010D0E  C644  F507         	movff	_MPU6050_DMP_GetData$3475+2,___flmul@b+2
 12637   010D12  C645  F508         	movff	_MPU6050_DMP_GetData$3475+3,___flmul@b+3
 12638   010D16  EC76  F09D         	call	___flmul	;wreg free
 12639   010D1A  C505  F64E         	movff	?___flmul,_MPU6050_DMP_GetData$3477
 12640   010D1E  C506  F64F         	movff	?___flmul+1,_MPU6050_DMP_GetData$3477+1
 12641   010D22  C507  F650         	movff	?___flmul+2,_MPU6050_DMP_GetData$3477+2
 12642   010D26  C508  F651         	movff	?___flmul+3,_MPU6050_DMP_GetData$3477+3
 12643                           
 12644                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12645   010D2A  C620  F509         	movff	_MPU6050_DMP_GetData$3482,___flmul@a
 12646   010D2E  C621  F50A         	movff	_MPU6050_DMP_GetData$3482+1,___flmul@a+1
 12647   010D32  C622  F50B         	movff	_MPU6050_DMP_GetData$3482+2,___flmul@a+2
 12648   010D36  C623  F50C         	movff	_MPU6050_DMP_GetData$3482+3,___flmul@a+3
 12649   010D3A  C64A  F505         	movff	_MPU6050_DMP_GetData$3473,___flmul@b
 12650   010D3E  C64B  F506         	movff	_MPU6050_DMP_GetData$3473+1,___flmul@b+1
 12651   010D42  C64C  F507         	movff	_MPU6050_DMP_GetData$3473+2,___flmul@b+2
 12652   010D46  C64D  F508         	movff	_MPU6050_DMP_GetData$3473+3,___flmul@b+3
 12653   010D4A  EC76  F09D         	call	___flmul	;wreg free
 12654   010D4E  C505  F56D         	movff	?___flmul,___flsub@b
 12655   010D52  C506  F56E         	movff	?___flmul+1,___flsub@b+1
 12656   010D56  C507  F56F         	movff	?___flmul+2,___flsub@b+2
 12657   010D5A  C508  F570         	movff	?___flmul+3,___flsub@b+3
 12658   010D5E  C624  F509         	movff	_MPU6050_DMP_GetData$3483,___flmul@a
 12659   010D62  C625  F50A         	movff	_MPU6050_DMP_GetData$3483+1,___flmul@a+1
 12660   010D66  C626  F50B         	movff	_MPU6050_DMP_GetData$3483+2,___flmul@a+2
 12661   010D6A  C627  F50C         	movff	_MPU6050_DMP_GetData$3483+3,___flmul@a+3
 12662   010D6E  C64E  F505         	movff	_MPU6050_DMP_GetData$3477,___flmul@b
 12663   010D72  C64F  F506         	movff	_MPU6050_DMP_GetData$3477+1,___flmul@b+1
 12664   010D76  C650  F507         	movff	_MPU6050_DMP_GetData$3477+2,___flmul@b+2
 12665   010D7A  C651  F508         	movff	_MPU6050_DMP_GetData$3477+3,___flmul@b+3
 12666   010D7E  EC76  F09D         	call	___flmul	;wreg free
 12667   010D82  C505  F571         	movff	?___flmul,___flsub@a
 12668   010D86  C506  F572         	movff	?___flmul+1,___flsub@a+1
 12669   010D8A  C507  F573         	movff	?___flmul+2,___flsub@a+2
 12670   010D8E  C508  F574         	movff	?___flmul+3,___flsub@a+3
 12671   010D92  ECD5  F0B5         	call	___flsub	;wreg free
 12672   010D96  0105               	movlb	5	; () banked
 12673   010D98  EE20 F00C          	lfsr	2,12
 12674   010D9C  51FC               	movf	MPU6050_DMP_GetData@quat& (0+255),w,b
 12675   010D9E  26D9               	addwf	fsr2l,f,c
 12676   010DA0  51FD               	movf	(MPU6050_DMP_GetData@quat+1)& (0+255),w,b
 12677   010DA2  22DA               	addwfc	fsr2h,f,c
 12678   010DA4  C56D  F4DE         	movff	?___flsub,postinc2
 12679   010DA8  C56E  F4DE         	movff	?___flsub+1,postinc2
 12680   010DAC  C56F  F4DE         	movff	?___flsub+2,postinc2
 12681   010DB0  C570  F4DE         	movff	?___flsub+3,postinc2
 12682   010DB4                     l9987:
 12683                           
 12684                           ; BSR set to: 5
 12685                           ;MPU6050_DMP.c: 173:     last_read_time = current_time;
 12686   010DB4  C62C  F6FB         	movff	MPU6050_DMP_GetData@current_time,MPU6050_DMP_GetData@last_read_time
 12687   010DB8  C62D  F6FC         	movff	MPU6050_DMP_GetData@current_time+1,MPU6050_DMP_GetData@last_read_time+1
 12688   010DBC                     l587:
 12689   010DBC  0012               	return		;funcret
 12690   010DBE                     __end_of_MPU6050_DMP_GetData:
 12691                           	callstack 0
 12692                           
 12693 ;; *************** function _sinf *****************
 12694 ;; Defined at:
 12695 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sinf.c"
 12696 ;; Parameters:    Size  Location     Type
 12697 ;;  x               4   54[BANK5 ] float 
 12698 ;; Auto vars:     Size  Location     Type
 12699 ;;  ux              4   76[BANK5 ] struct .
 12700 ;;  y               4   72[BANK5 ] struct .
 12701 ;;  sign            1   67[BANK5 ] _Bool 
 12702 ;;  n               1   66[BANK5 ] unsigned char 
 12703 ;; Return value:  Size  Location     Type
 12704 ;;                  4   54[BANK5 ] float 
 12705 ;; Registers used:
 12706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12707 ;; Tracked objects:
 12708 ;;		On entry : 0/0
 12709 ;;		On exit  : 0/0
 12710 ;;		Unchanged: 0/0
 12711 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12712 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12713 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12715 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12716 ;;Total ram usage:       26 bytes
 12717 ;; Hardware stack levels used: 1
 12718 ;; Hardware stack levels required when called: 3
 12719 ;; This function calls:
 12720 ;;		___cosdf
 12721 ;;		___fladd
 12722 ;;		___flneg
 12723 ;;		___rem_pio2f
 12724 ;;		___sindf
 12725 ;; This function is called by:
 12726 ;;		_MPU6050_DMP_GetData
 12727 ;; This function uses a non-reentrant model
 12728 ;;
 12729                           
 12730                           	psect	text27
 12731   012C3E                     __ptext27:
 12732                           	callstack 0
 12733   012C3E                     _sinf:
 12734                           	callstack 122
 12735   012C3E  C596  F5AC         	movff	sinf@x,sinf@ux
 12736   012C42  C597  F5AD         	movff	sinf@x+1,sinf@ux+1
 12737   012C46  C598  F5AE         	movff	sinf@x+2,sinf@ux+2
 12738   012C4A  C599  F5AF         	movff	sinf@x+3,sinf@ux+3
 12739   012C4E  0105               	movlb	5	; () banked
 12740   012C50  BFAF               	btfsc	(sinf@ux+3)& (0+255),7,b
 12741   012C52  EF2D  F096         	goto	u7581
 12742   012C56  EF30  F096         	goto	u7580
 12743   012C5A                     u7581:
 12744   012C5A  0E01               	movlw	1
 12745   012C5C  EF31  F096         	goto	u7590
 12746   012C60                     u7580:
 12747   012C60  0E00               	movlw	0
 12748   012C62                     u7590:
 12749   012C62  6FA3               	movwf	sinf@sign& (0+255),b
 12750   012C64                     
 12751                           ; BSR set to: 5
 12752   012C64  9FAF               	bcf	(sinf@ux+3)& (0+255),7,b
 12753   012C66                     
 12754                           ; BSR set to: 5
 12755   012C66  0EDB               	movlw	219
 12756   012C68  5DAC               	subwf	sinf@ux& (0+255),w,b
 12757   012C6A  0E0F               	movlw	15
 12758   012C6C  59AD               	subwfb	(sinf@ux+1)& (0+255),w,b
 12759   012C6E  0E49               	movlw	73
 12760   012C70  59AE               	subwfb	(sinf@ux+2)& (0+255),w,b
 12761   012C72  0E3F               	movlw	63
 12762   012C74  59AF               	subwfb	(sinf@ux+3)& (0+255),w,b
 12763   012C76  B0D8               	btfsc	status,0,c
 12764   012C78  EF40  F096         	goto	u7601
 12765   012C7C  EF42  F096         	goto	u7600
 12766   012C80                     u7601:
 12767   012C80  EF6B  F096         	goto	l9639
 12768   012C84                     u7600:
 12769   012C84                     
 12770                           ; BSR set to: 5
 12771   012C84  0E80               	movlw	128
 12772   012C86  5DAE               	subwf	(sinf@ux+2)& (0+255),w,b
 12773   012C88  0E39               	movlw	57
 12774   012C8A  59AF               	subwfb	(sinf@ux+3)& (0+255),w,b
 12775   012C8C  B0D8               	btfsc	status,0,c
 12776   012C8E  EF4B  F096         	goto	u7611
 12777   012C92  EF4D  F096         	goto	u7610
 12778   012C96                     u7611:
 12779   012C96  EF57  F096         	goto	l9635
 12780   012C9A                     u7610:
 12781   012C9A                     
 12782                           ; BSR set to: 5
 12783   012C9A  C596  F596         	movff	sinf@x,?_sinf
 12784   012C9E  C597  F597         	movff	sinf@x+1,?_sinf+1
 12785   012CA2  C598  F598         	movff	sinf@x+2,?_sinf+2
 12786   012CA6  C599  F599         	movff	sinf@x+3,?_sinf+3
 12787   012CAA  EFA5  F098         	goto	l2450
 12788   012CAE                     l9635:
 12789                           
 12790                           ; BSR set to: 5
 12791   012CAE  C596  F575         	movff	sinf@x,___sindf@x
 12792   012CB2  C597  F576         	movff	sinf@x+1,___sindf@x+1
 12793   012CB6  C598  F577         	movff	sinf@x+2,___sindf@x+2
 12794   012CBA  C599  F578         	movff	sinf@x+3,___sindf@x+3
 12795   012CBE  ECA9  F0A8         	call	___sindf	;wreg free
 12796   012CC2  C575  F596         	movff	?___sindf,?_sinf
 12797   012CC6  C576  F597         	movff	?___sindf+1,?_sinf+1
 12798   012CCA  C577  F598         	movff	?___sindf+2,?_sinf+2
 12799   012CCE  C578  F599         	movff	?___sindf+3,?_sinf+3
 12800   012CD2  EFA5  F098         	goto	l2450
 12801   012CD6                     l9639:
 12802                           
 12803                           ; BSR set to: 5
 12804   012CD6  0ED2               	movlw	210
 12805   012CD8  5DAC               	subwf	sinf@ux& (0+255),w,b
 12806   012CDA  0E53               	movlw	83
 12807   012CDC  59AD               	subwfb	(sinf@ux+1)& (0+255),w,b
 12808   012CDE  0E7B               	movlw	123
 12809   012CE0  59AE               	subwfb	(sinf@ux+2)& (0+255),w,b
 12810   012CE2  0E40               	movlw	64
 12811   012CE4  59AF               	subwfb	(sinf@ux+3)& (0+255),w,b
 12812   012CE6  B0D8               	btfsc	status,0,c
 12813   012CE8  EF78  F096         	goto	u7621
 12814   012CEC  EF7A  F096         	goto	u7620
 12815   012CF0                     u7621:
 12816   012CF0  EF5D  F097         	goto	l9669
 12817   012CF4                     u7620:
 12818   012CF4                     
 12819                           ; BSR set to: 5
 12820   012CF4  0EE4               	movlw	228
 12821   012CF6  5DAC               	subwf	sinf@ux& (0+255),w,b
 12822   012CF8  0ECB               	movlw	203
 12823   012CFA  59AD               	subwfb	(sinf@ux+1)& (0+255),w,b
 12824   012CFC  0E16               	movlw	22
 12825   012CFE  59AE               	subwfb	(sinf@ux+2)& (0+255),w,b
 12826   012D00  0E40               	movlw	64
 12827   012D02  59AF               	subwfb	(sinf@ux+3)& (0+255),w,b
 12828   012D04  B0D8               	btfsc	status,0,c
 12829   012D06  EF87  F096         	goto	u7631
 12830   012D0A  EF89  F096         	goto	u7630
 12831   012D0E                     u7631:
 12832   012D0E  EFF7  F096         	goto	l9659
 12833   012D12                     u7630:
 12834   012D12                     
 12835                           ; BSR set to: 5
 12836   012D12  51A3               	movf	sinf@sign& (0+255),w,b
 12837   012D14  B4D8               	btfsc	status,2,c
 12838   012D16  EF8F  F096         	goto	u7641
 12839   012D1A  EF91  F096         	goto	u7640
 12840   012D1E                     u7641:
 12841   012D1E  EFC9  F096         	goto	l9653
 12842   012D22                     u7640:
 12843   012D22                     
 12844                           ; BSR set to: 5
 12845   012D22  0EDB               	movlw	219
 12846   012D24  6E22               	movwf	___fladd@a^(0+1280),c
 12847   012D26  0E0F               	movlw	15
 12848   012D28  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 12849   012D2A  0EC9               	movlw	201
 12850   012D2C  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 12851   012D2E  0E3F               	movlw	63
 12852   012D30  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 12853   012D32  C596  F51E         	movff	sinf@x,___fladd@b
 12854   012D36  C597  F51F         	movff	sinf@x+1,___fladd@b+1
 12855   012D3A  C598  F520         	movff	sinf@x+2,___fladd@b+2
 12856   012D3E  C599  F521         	movff	sinf@x+3,___fladd@b+3
 12857   012D42  EC1B  F09B         	call	___fladd	;wreg free
 12858   012D46  C51E  F5A4         	movff	?___fladd,_sinf$3505
 12859   012D4A  C51F  F5A5         	movff	?___fladd+1,_sinf$3505+1
 12860   012D4E  C520  F5A6         	movff	?___fladd+2,_sinf$3505+2
 12861   012D52  C521  F5A7         	movff	?___fladd+3,_sinf$3505+3
 12862   012D56                     l9647:
 12863   012D56  C5A4  F52E         	movff	_sinf$3505,___cosdf@x
 12864   012D5A  C5A5  F52F         	movff	_sinf$3505+1,___cosdf@x+1
 12865   012D5E  C5A6  F530         	movff	_sinf$3505+2,___cosdf@x+2
 12866   012D62  C5A7  F531         	movff	_sinf$3505+3,___cosdf@x+3
 12867   012D66  ECCD  F0AA         	call	___cosdf	;wreg free
 12868   012D6A  C52E  F501         	movff	?___cosdf,___flneg@f1
 12869   012D6E  C52F  F502         	movff	?___cosdf+1,___flneg@f1+1
 12870   012D72  C530  F503         	movff	?___cosdf+2,___flneg@f1+2
 12871   012D76  C531  F504         	movff	?___cosdf+3,___flneg@f1+3
 12872   012D7A  EC57  F0B6         	call	___flneg	;wreg free
 12873   012D7E  C501  F596         	movff	?___flneg,?_sinf
 12874   012D82  C502  F597         	movff	?___flneg+1,?_sinf+1
 12875   012D86  C503  F598         	movff	?___flneg+2,?_sinf+2
 12876   012D8A  C504  F599         	movff	?___flneg+3,?_sinf+3
 12877   012D8E  EFA5  F098         	goto	l2450
 12878   012D92                     l9653:
 12879                           
 12880                           ; BSR set to: 5
 12881   012D92  C596  F51E         	movff	sinf@x,___fladd@b
 12882   012D96  C597  F51F         	movff	sinf@x+1,___fladd@b+1
 12883   012D9A  C598  F520         	movff	sinf@x+2,___fladd@b+2
 12884   012D9E  C599  F521         	movff	sinf@x+3,___fladd@b+3
 12885   012DA2  0EDB               	movlw	219
 12886   012DA4  6E22               	movwf	___fladd@a^(0+1280),c
 12887   012DA6  0E0F               	movlw	15
 12888   012DA8  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 12889   012DAA  0EC9               	movlw	201
 12890   012DAC  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 12891   012DAE  0EBF               	movlw	191
 12892   012DB0  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 12893   012DB2  EC1B  F09B         	call	___fladd	;wreg free
 12894   012DB6  C51E  F5A4         	movff	?___fladd,_sinf$3505
 12895   012DBA  C51F  F5A5         	movff	?___fladd+1,_sinf$3505+1
 12896   012DBE  C520  F5A6         	movff	?___fladd+2,_sinf$3505+2
 12897   012DC2  C521  F5A7         	movff	?___fladd+3,_sinf$3505+3
 12898   012DC6                     l9655:
 12899   012DC6  C5A4  F52E         	movff	_sinf$3505,___cosdf@x
 12900   012DCA  C5A5  F52F         	movff	_sinf$3505+1,___cosdf@x+1
 12901   012DCE  C5A6  F530         	movff	_sinf$3505+2,___cosdf@x+2
 12902   012DD2  C5A7  F531         	movff	_sinf$3505+3,___cosdf@x+3
 12903   012DD6  ECCD  F0AA         	call	___cosdf	;wreg free
 12904   012DDA  C52E  F596         	movff	?___cosdf,?_sinf
 12905   012DDE  C52F  F597         	movff	?___cosdf+1,?_sinf+1
 12906   012DE2  C530  F598         	movff	?___cosdf+2,?_sinf+2
 12907   012DE6  C531  F599         	movff	?___cosdf+3,?_sinf+3
 12908   012DEA  EFA5  F098         	goto	l2450
 12909   012DEE                     l9659:
 12910                           
 12911                           ; BSR set to: 5
 12912   012DEE  51A3               	movf	sinf@sign& (0+255),w,b
 12913   012DF0  A4D8               	btfss	status,2,c
 12914   012DF2  EFFD  F096         	goto	u7651
 12915   012DF6  EFFF  F096         	goto	u7650
 12916   012DFA                     u7651:
 12917   012DFA  EF25  F097         	goto	l9663
 12918   012DFE                     u7650:
 12919   012DFE                     
 12920                           ; BSR set to: 5
 12921   012DFE  0EDB               	movlw	219
 12922   012E00  6E22               	movwf	___fladd@a^(0+1280),c
 12923   012E02  0E0F               	movlw	15
 12924   012E04  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 12925   012E06  0E49               	movlw	73
 12926   012E08  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 12927   012E0A  0EC0               	movlw	192
 12928   012E0C  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 12929   012E0E  C596  F51E         	movff	sinf@x,___fladd@b
 12930   012E12  C597  F51F         	movff	sinf@x+1,___fladd@b+1
 12931   012E16  C598  F520         	movff	sinf@x+2,___fladd@b+2
 12932   012E1A  C599  F521         	movff	sinf@x+3,___fladd@b+3
 12933   012E1E  EC1B  F09B         	call	___fladd	;wreg free
 12934   012E22  C51E  F501         	movff	?___fladd,___flneg@f1
 12935   012E26  C51F  F502         	movff	?___fladd+1,___flneg@f1+1
 12936   012E2A  C520  F503         	movff	?___fladd+2,___flneg@f1+2
 12937   012E2E  C521  F504         	movff	?___fladd+3,___flneg@f1+3
 12938   012E32  EC57  F0B6         	call	___flneg	;wreg free
 12939   012E36  C501  F59A         	movff	?___flneg,_sinf$3068
 12940   012E3A  C502  F59B         	movff	?___flneg+1,_sinf$3068+1
 12941   012E3E  C503  F59C         	movff	?___flneg+2,_sinf$3068+2
 12942   012E42  C504  F59D         	movff	?___flneg+3,_sinf$3068+3
 12943   012E46  EF49  F097         	goto	l9665
 12944   012E4A                     l9663:
 12945                           
 12946                           ; BSR set to: 5
 12947   012E4A  0EDB               	movlw	219
 12948   012E4C  6E22               	movwf	___fladd@a^(0+1280),c
 12949   012E4E  0E0F               	movlw	15
 12950   012E50  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 12951   012E52  0E49               	movlw	73
 12952   012E54  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 12953   012E56  0E40               	movlw	64
 12954   012E58  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 12955   012E5A  C596  F51E         	movff	sinf@x,___fladd@b
 12956   012E5E  C597  F51F         	movff	sinf@x+1,___fladd@b+1
 12957   012E62  C598  F520         	movff	sinf@x+2,___fladd@b+2
 12958   012E66  C599  F521         	movff	sinf@x+3,___fladd@b+3
 12959   012E6A  EC1B  F09B         	call	___fladd	;wreg free
 12960   012E6E  C51E  F501         	movff	?___fladd,___flneg@f1
 12961   012E72  C51F  F502         	movff	?___fladd+1,___flneg@f1+1
 12962   012E76  C520  F503         	movff	?___fladd+2,___flneg@f1+2
 12963   012E7A  C521  F504         	movff	?___fladd+3,___flneg@f1+3
 12964   012E7E  EC57  F0B6         	call	___flneg	;wreg free
 12965   012E82  C501  F59A         	movff	?___flneg,_sinf$3068
 12966   012E86  C502  F59B         	movff	?___flneg+1,_sinf$3068+1
 12967   012E8A  C503  F59C         	movff	?___flneg+2,_sinf$3068+2
 12968   012E8E  C504  F59D         	movff	?___flneg+3,_sinf$3068+3
 12969   012E92                     l9665:
 12970   012E92  C59A  F575         	movff	_sinf$3068,___sindf@x
 12971   012E96  C59B  F576         	movff	_sinf$3068+1,___sindf@x+1
 12972   012E9A  C59C  F577         	movff	_sinf$3068+2,___sindf@x+2
 12973   012E9E  C59D  F578         	movff	_sinf$3068+3,___sindf@x+3
 12974   012EA2  ECA9  F0A8         	call	___sindf	;wreg free
 12975   012EA6  C575  F596         	movff	?___sindf,?_sinf
 12976   012EAA  C576  F597         	movff	?___sindf+1,?_sinf+1
 12977   012EAE  C577  F598         	movff	?___sindf+2,?_sinf+2
 12978   012EB2  C578  F599         	movff	?___sindf+3,?_sinf+3
 12979   012EB6  EFA5  F098         	goto	l2450
 12980   012EBA                     l9669:
 12981                           
 12982                           ; BSR set to: 5
 12983   012EBA  0ED6               	movlw	214
 12984   012EBC  5DAC               	subwf	sinf@ux& (0+255),w,b
 12985   012EBE  0E31               	movlw	49
 12986   012EC0  59AD               	subwfb	(sinf@ux+1)& (0+255),w,b
 12987   012EC2  0EE2               	movlw	226
 12988   012EC4  59AE               	subwfb	(sinf@ux+2)& (0+255),w,b
 12989   012EC6  0E40               	movlw	64
 12990   012EC8  59AF               	subwfb	(sinf@ux+3)& (0+255),w,b
 12991   012ECA  B0D8               	btfsc	status,0,c
 12992   012ECC  EF6A  F097         	goto	u7661
 12993   012ED0  EF6C  F097         	goto	u7660
 12994   012ED4                     u7661:
 12995   012ED4  EF0D  F098         	goto	l9699
 12996   012ED8                     u7660:
 12997   012ED8                     
 12998                           ; BSR set to: 5
 12999   012ED8  0EE0               	movlw	224
 13000   012EDA  5DAC               	subwf	sinf@ux& (0+255),w,b
 13001   012EDC  0EED               	movlw	237
 13002   012EDE  59AD               	subwfb	(sinf@ux+1)& (0+255),w,b
 13003   012EE0  0EAF               	movlw	175
 13004   012EE2  59AE               	subwfb	(sinf@ux+2)& (0+255),w,b
 13005   012EE4  0E40               	movlw	64
 13006   012EE6  59AF               	subwfb	(sinf@ux+3)& (0+255),w,b
 13007   012EE8  B0D8               	btfsc	status,0,c
 13008   012EEA  EF79  F097         	goto	u7671
 13009   012EEE  EF7B  F097         	goto	u7670
 13010   012EF2                     u7671:
 13011   012EF2  EFBB  F097         	goto	l9689
 13012   012EF6                     u7670:
 13013   012EF6                     
 13014                           ; BSR set to: 5
 13015   012EF6  51A3               	movf	sinf@sign& (0+255),w,b
 13016   012EF8  B4D8               	btfsc	status,2,c
 13017   012EFA  EF81  F097         	goto	u7681
 13018   012EFE  EF83  F097         	goto	u7680
 13019   012F02                     u7681:
 13020   012F02  EF9F  F097         	goto	l9683
 13021   012F06                     u7680:
 13022   012F06                     
 13023                           ; BSR set to: 5
 13024   012F06  C596  F51E         	movff	sinf@x,___fladd@b
 13025   012F0A  C597  F51F         	movff	sinf@x+1,___fladd@b+1
 13026   012F0E  C598  F520         	movff	sinf@x+2,___fladd@b+2
 13027   012F12  C599  F521         	movff	sinf@x+3,___fladd@b+3
 13028   012F16  0EE4               	movlw	228
 13029   012F18  6E22               	movwf	___fladd@a^(0+1280),c
 13030   012F1A  0ECB               	movlw	203
 13031   012F1C  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13032   012F1E  0E96               	movlw	150
 13033   012F20  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13034   012F22  0E40               	movlw	64
 13035   012F24  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13036   012F26  EC1B  F09B         	call	___fladd	;wreg free
 13037   012F2A  C51E  F5A4         	movff	?___fladd,_sinf$3505
 13038   012F2E  C51F  F5A5         	movff	?___fladd+1,_sinf$3505+1
 13039   012F32  C520  F5A6         	movff	?___fladd+2,_sinf$3505+2
 13040   012F36  C521  F5A7         	movff	?___fladd+3,_sinf$3505+3
 13041   012F3A  EFE3  F096         	goto	l9655
 13042   012F3E                     l9683:
 13043                           
 13044                           ; BSR set to: 5
 13045   012F3E  0EE4               	movlw	228
 13046   012F40  6E22               	movwf	___fladd@a^(0+1280),c
 13047   012F42  0ECB               	movlw	203
 13048   012F44  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13049   012F46  0E96               	movlw	150
 13050   012F48  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13051   012F4A  0EC0               	movlw	192
 13052   012F4C  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13053   012F4E  C596  F51E         	movff	sinf@x,___fladd@b
 13054   012F52  C597  F51F         	movff	sinf@x+1,___fladd@b+1
 13055   012F56  C598  F520         	movff	sinf@x+2,___fladd@b+2
 13056   012F5A  C599  F521         	movff	sinf@x+3,___fladd@b+3
 13057   012F5E  EC1B  F09B         	call	___fladd	;wreg free
 13058   012F62  C51E  F5A4         	movff	?___fladd,_sinf$3505
 13059   012F66  C51F  F5A5         	movff	?___fladd+1,_sinf$3505+1
 13060   012F6A  C520  F5A6         	movff	?___fladd+2,_sinf$3505+2
 13061   012F6E  C521  F5A7         	movff	?___fladd+3,_sinf$3505+3
 13062   012F72  EFAB  F096         	goto	l9647
 13063   012F76                     l9689:
 13064                           
 13065                           ; BSR set to: 5
 13066   012F76  51A3               	movf	sinf@sign& (0+255),w,b
 13067   012F78  A4D8               	btfss	status,2,c
 13068   012F7A  EFC1  F097         	goto	u7691
 13069   012F7E  EFC3  F097         	goto	u7690
 13070   012F82                     u7691:
 13071   012F82  EFDF  F097         	goto	l9693
 13072   012F86                     u7690:
 13073   012F86                     
 13074                           ; BSR set to: 5
 13075   012F86  C596  F51E         	movff	sinf@x,___fladd@b
 13076   012F8A  C597  F51F         	movff	sinf@x+1,___fladd@b+1
 13077   012F8E  C598  F520         	movff	sinf@x+2,___fladd@b+2
 13078   012F92  C599  F521         	movff	sinf@x+3,___fladd@b+3
 13079   012F96  0EDB               	movlw	219
 13080   012F98  6E22               	movwf	___fladd@a^(0+1280),c
 13081   012F9A  0E0F               	movlw	15
 13082   012F9C  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13083   012F9E  0EC9               	movlw	201
 13084   012FA0  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13085   012FA2  0EC0               	movlw	192
 13086   012FA4  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13087   012FA6  EC1B  F09B         	call	___fladd	;wreg free
 13088   012FAA  C51E  F59E         	movff	?___fladd,_sinf$3069
 13089   012FAE  C51F  F59F         	movff	?___fladd+1,_sinf$3069+1
 13090   012FB2  C520  F5A0         	movff	?___fladd+2,_sinf$3069+2
 13091   012FB6  C521  F5A1         	movff	?___fladd+3,_sinf$3069+3
 13092   012FBA  EFF9  F097         	goto	l9695
 13093   012FBE                     l9693:
 13094                           
 13095                           ; BSR set to: 5
 13096   012FBE  C596  F51E         	movff	sinf@x,___fladd@b
 13097   012FC2  C597  F51F         	movff	sinf@x+1,___fladd@b+1
 13098   012FC6  C598  F520         	movff	sinf@x+2,___fladd@b+2
 13099   012FCA  C599  F521         	movff	sinf@x+3,___fladd@b+3
 13100   012FCE  0EDB               	movlw	219
 13101   012FD0  6E22               	movwf	___fladd@a^(0+1280),c
 13102   012FD2  0E0F               	movlw	15
 13103   012FD4  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13104   012FD6  0EC9               	movlw	201
 13105   012FD8  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13106   012FDA  0E40               	movlw	64
 13107   012FDC  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13108   012FDE  EC1B  F09B         	call	___fladd	;wreg free
 13109   012FE2  C51E  F59E         	movff	?___fladd,_sinf$3069
 13110   012FE6  C51F  F59F         	movff	?___fladd+1,_sinf$3069+1
 13111   012FEA  C520  F5A0         	movff	?___fladd+2,_sinf$3069+2
 13112   012FEE  C521  F5A1         	movff	?___fladd+3,_sinf$3069+3
 13113   012FF2                     l9695:
 13114   012FF2  C59E  F575         	movff	_sinf$3069,___sindf@x
 13115   012FF6  C59F  F576         	movff	_sinf$3069+1,___sindf@x+1
 13116   012FFA  C5A0  F577         	movff	_sinf$3069+2,___sindf@x+2
 13117   012FFE  C5A1  F578         	movff	_sinf$3069+3,___sindf@x+3
 13118   013002  ECA9  F0A8         	call	___sindf	;wreg free
 13119   013006  C575  F596         	movff	?___sindf,?_sinf
 13120   01300A  C576  F597         	movff	?___sindf+1,?_sinf+1
 13121   01300E  C577  F598         	movff	?___sindf+2,?_sinf+2
 13122   013012  C578  F599         	movff	?___sindf+3,?_sinf+3
 13123   013016  EFA5  F098         	goto	l2450
 13124   01301A                     l9699:
 13125                           
 13126                           ; BSR set to: 5
 13127   01301A  0E80               	movlw	128
 13128   01301C  5DAE               	subwf	(sinf@ux+2)& (0+255),w,b
 13129   01301E  0E7F               	movlw	127
 13130   013020  59AF               	subwfb	(sinf@ux+3)& (0+255),w,b
 13131   013022  A0D8               	btfss	status,0,c
 13132   013024  EF16  F098         	goto	u7701
 13133   013028  EF18  F098         	goto	u7700
 13134   01302C                     u7701:
 13135   01302C  EF2A  F098         	goto	l9707
 13136   013030                     u7700:
 13137   013030                     
 13138                           ; BSR set to: 5
 13139   013030  0EFF               	movlw	255
 13140   013032  13AC               	iorwf	sinf@ux& (0+255),f,b
 13141   013034  0EFF               	movlw	255
 13142   013036  13AD               	iorwf	(sinf@ux+1)& (0+255),f,b
 13143   013038  0EFF               	movlw	255
 13144   01303A  13AE               	iorwf	(sinf@ux+2)& (0+255),f,b
 13145   01303C  0E00               	movlw	0
 13146   01303E  13AF               	iorwf	(sinf@ux+3)& (0+255),f,b
 13147   013040                     
 13148                           ; BSR set to: 5
 13149   013040  C5AC  F596         	movff	sinf@ux,?_sinf
 13150   013044  C5AD  F597         	movff	sinf@ux+1,?_sinf+1
 13151   013048  C5AE  F598         	movff	sinf@ux+2,?_sinf+2
 13152   01304C  C5AF  F599         	movff	sinf@ux+3,?_sinf+3
 13153   013050  EFA5  F098         	goto	l2450
 13154   013054                     l9707:
 13155                           
 13156                           ; BSR set to: 5
 13157   013054  C596  F575         	movff	sinf@x,___rem_pio2f@x
 13158   013058  C597  F576         	movff	sinf@x+1,___rem_pio2f@x+1
 13159   01305C  C598  F577         	movff	sinf@x+2,___rem_pio2f@x+2
 13160   013060  C599  F578         	movff	sinf@x+3,___rem_pio2f@x+3
 13161   013064  0EA8               	movlw	low sinf@y
 13162   013066  6F79               	movwf	___rem_pio2f@y& (0+255),b
 13163   013068  0E05               	movlw	high sinf@y
 13164   01306A  6F7A               	movwf	(___rem_pio2f@y+1)& (0+255),b
 13165   01306C  EC78  F0A1         	call	___rem_pio2f	;wreg free
 13166   013070  0105               	movlb	5	; () banked
 13167   013072  5175               	movf	?___rem_pio2f& (0+255),w,b
 13168   013074  0B03               	andlw	3
 13169   013076  6FA2               	movwf	sinf@n& (0+255),b
 13170   013078  EF96  F098         	goto	l9725
 13171   01307C                     l9709:
 13172                           
 13173                           ; BSR set to: 5
 13174   01307C  C5A8  F501         	movff	sinf@y,___flneg@f1
 13175   013080  C5A9  F502         	movff	sinf@y+1,___flneg@f1+1
 13176   013084  C5AA  F503         	movff	sinf@y+2,___flneg@f1+2
 13177   013088  C5AB  F504         	movff	sinf@y+3,___flneg@f1+3
 13178   01308C  EC57  F0B6         	call	___flneg	;wreg free
 13179   013090  C501  F5A8         	movff	?___flneg,sinf@y
 13180   013094  C502  F5A9         	movff	?___flneg+1,sinf@y+1
 13181   013098  C503  F5AA         	movff	?___flneg+2,sinf@y+2
 13182   01309C  C504  F5AB         	movff	?___flneg+3,sinf@y+3
 13183   0130A0                     l9711:
 13184   0130A0  C5A8  F575         	movff	sinf@y,___sindf@x
 13185   0130A4  C5A9  F576         	movff	sinf@y+1,___sindf@x+1
 13186   0130A8  C5AA  F577         	movff	sinf@y+2,___sindf@x+2
 13187   0130AC  C5AB  F578         	movff	sinf@y+3,___sindf@x+3
 13188   0130B0  ECA9  F0A8         	call	___sindf	;wreg free
 13189   0130B4  C575  F596         	movff	?___sindf,?_sinf
 13190   0130B8  C576  F597         	movff	?___sindf+1,?_sinf+1
 13191   0130BC  C577  F598         	movff	?___sindf+2,?_sinf+2
 13192   0130C0  C578  F599         	movff	?___sindf+3,?_sinf+3
 13193   0130C4  EFA5  F098         	goto	l2450
 13194   0130C8                     l9715:
 13195                           
 13196                           ; BSR set to: 5
 13197   0130C8  C5A8  F52E         	movff	sinf@y,___cosdf@x
 13198   0130CC  C5A9  F52F         	movff	sinf@y+1,___cosdf@x+1
 13199   0130D0  C5AA  F530         	movff	sinf@y+2,___cosdf@x+2
 13200   0130D4  C5AB  F531         	movff	sinf@y+3,___cosdf@x+3
 13201   0130D8  ECCD  F0AA         	call	___cosdf	;wreg free
 13202   0130DC  C52E  F596         	movff	?___cosdf,?_sinf
 13203   0130E0  C52F  F597         	movff	?___cosdf+1,?_sinf+1
 13204   0130E4  C530  F598         	movff	?___cosdf+2,?_sinf+2
 13205   0130E8  C531  F599         	movff	?___cosdf+3,?_sinf+3
 13206   0130EC  EFA5  F098         	goto	l2450
 13207   0130F0                     l9719:
 13208                           
 13209                           ; BSR set to: 5
 13210   0130F0  C5A8  F52E         	movff	sinf@y,___cosdf@x
 13211   0130F4  C5A9  F52F         	movff	sinf@y+1,___cosdf@x+1
 13212   0130F8  C5AA  F530         	movff	sinf@y+2,___cosdf@x+2
 13213   0130FC  C5AB  F531         	movff	sinf@y+3,___cosdf@x+3
 13214   013100  ECCD  F0AA         	call	___cosdf	;wreg free
 13215   013104  C52E  F501         	movff	?___cosdf,___flneg@f1
 13216   013108  C52F  F502         	movff	?___cosdf+1,___flneg@f1+1
 13217   01310C  C530  F503         	movff	?___cosdf+2,___flneg@f1+2
 13218   013110  C531  F504         	movff	?___cosdf+3,___flneg@f1+3
 13219   013114  EC57  F0B6         	call	___flneg	;wreg free
 13220   013118  C501  F596         	movff	?___flneg,?_sinf
 13221   01311C  C502  F597         	movff	?___flneg+1,?_sinf+1
 13222   013120  C503  F598         	movff	?___flneg+2,?_sinf+2
 13223   013124  C504  F599         	movff	?___flneg+3,?_sinf+3
 13224   013128  EFA5  F098         	goto	l2450
 13225   01312C                     l9725:
 13226                           
 13227                           ; BSR set to: 5
 13228   01312C  51A2               	movf	sinf@n& (0+255),w,b
 13229                           
 13230                           ; Switch size 1, requested type "simple"
 13231                           ; Number of cases is 3, Range of values is 0 to 2
 13232                           ; switch strategies available:
 13233                           ; Name         Instructions Cycles
 13234                           ; simple_byte           10     6 (average)
 13235                           ;	Chosen strategy is simple_byte
 13236   01312E  0A00               	xorlw	0	; case 0
 13237   013130  B4D8               	btfsc	status,2,c
 13238   013132  EF50  F098         	goto	l9711
 13239   013136  0A01               	xorlw	1	; case 1
 13240   013138  B4D8               	btfsc	status,2,c
 13241   01313A  EF64  F098         	goto	l9715
 13242   01313E  0A03               	xorlw	3	; case 2
 13243   013140  B4D8               	btfsc	status,2,c
 13244   013142  EF3E  F098         	goto	l9709
 13245   013146  EF78  F098         	goto	l9719
 13246   01314A                     l2450:
 13247   01314A  0012               	return		;funcret
 13248   01314C                     __end_of_sinf:
 13249                           	callstack 0
 13250                           
 13251 ;; *************** function _cosf *****************
 13252 ;; Defined at:
 13253 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\cosf.c"
 13254 ;; Parameters:    Size  Location     Type
 13255 ;;  x               4   54[BANK5 ] float 
 13256 ;; Auto vars:     Size  Location     Type
 13257 ;;  ix              4   76[BANK5 ] struct .
 13258 ;;  y               4   72[BANK5 ] struct .
 13259 ;;  sign            1   71[BANK5 ] _Bool 
 13260 ;;  n               1   66[BANK5 ] unsigned char 
 13261 ;; Return value:  Size  Location     Type
 13262 ;;                  4   54[BANK5 ] float 
 13263 ;; Registers used:
 13264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13265 ;; Tracked objects:
 13266 ;;		On entry : 0/0
 13267 ;;		On exit  : 0/0
 13268 ;;		Unchanged: 0/0
 13269 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13270 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13271 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13273 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13274 ;;Total ram usage:       26 bytes
 13275 ;; Hardware stack levels used: 1
 13276 ;; Hardware stack levels required when called: 3
 13277 ;; This function calls:
 13278 ;;		___cosdf
 13279 ;;		___fladd
 13280 ;;		___flneg
 13281 ;;		___flsub
 13282 ;;		___rem_pio2f
 13283 ;;		___sindf
 13284 ;; This function is called by:
 13285 ;;		_MPU6050_DMP_GetData
 13286 ;; This function uses a non-reentrant model
 13287 ;;
 13288                           
 13289                           	psect	text28
 13290   01314C                     __ptext28:
 13291                           	callstack 0
 13292   01314C                     _cosf:
 13293                           	callstack 122
 13294   01314C  C596  F5AC         	movff	cosf@x,cosf@ix
 13295   013150  C597  F5AD         	movff	cosf@x+1,cosf@ix+1
 13296   013154  C598  F5AE         	movff	cosf@x+2,cosf@ix+2
 13297   013158  C599  F5AF         	movff	cosf@x+3,cosf@ix+3
 13298   01315C  0105               	movlb	5	; () banked
 13299   01315E  BFAF               	btfsc	(cosf@ix+3)& (0+255),7,b
 13300   013160  EFB4  F098         	goto	u7451
 13301   013164  EFB7  F098         	goto	u7450
 13302   013168                     u7451:
 13303   013168  0E01               	movlw	1
 13304   01316A  EFB8  F098         	goto	u7460
 13305   01316E                     u7450:
 13306   01316E  0E00               	movlw	0
 13307   013170                     u7460:
 13308   013170  6FA7               	movwf	cosf@sign& (0+255),b
 13309   013172                     
 13310                           ; BSR set to: 5
 13311   013172  9FAF               	bcf	(cosf@ix+3)& (0+255),7,b
 13312   013174                     
 13313                           ; BSR set to: 5
 13314   013174  0EDB               	movlw	219
 13315   013176  5DAC               	subwf	cosf@ix& (0+255),w,b
 13316   013178  0E0F               	movlw	15
 13317   01317A  59AD               	subwfb	(cosf@ix+1)& (0+255),w,b
 13318   01317C  0E49               	movlw	73
 13319   01317E  59AE               	subwfb	(cosf@ix+2)& (0+255),w,b
 13320   013180  0E3F               	movlw	63
 13321   013182  59AF               	subwfb	(cosf@ix+3)& (0+255),w,b
 13322   013184  B0D8               	btfsc	status,0,c
 13323   013186  EFC7  F098         	goto	u7471
 13324   01318A  EFC9  F098         	goto	u7470
 13325   01318E                     u7471:
 13326   01318E  EFF2  F098         	goto	l9535
 13327   013192                     u7470:
 13328   013192                     
 13329                           ; BSR set to: 5
 13330   013192  0E80               	movlw	128
 13331   013194  5DAE               	subwf	(cosf@ix+2)& (0+255),w,b
 13332   013196  0E39               	movlw	57
 13333   013198  59AF               	subwfb	(cosf@ix+3)& (0+255),w,b
 13334   01319A  B0D8               	btfsc	status,0,c
 13335   01319C  EFD2  F098         	goto	u7481
 13336   0131A0  EFD4  F098         	goto	u7480
 13337   0131A4                     u7481:
 13338   0131A4  EFDE  F098         	goto	l9531
 13339   0131A8                     u7480:
 13340   0131A8                     
 13341                           ; BSR set to: 5
 13342   0131A8  0E00               	movlw	0
 13343   0131AA  6F96               	movwf	?_cosf& (0+255),b
 13344   0131AC  0E00               	movlw	0
 13345   0131AE  6F97               	movwf	(?_cosf+1)& (0+255),b
 13346   0131B0  0E80               	movlw	128
 13347   0131B2  6F98               	movwf	(?_cosf+2)& (0+255),b
 13348   0131B4  0E3F               	movlw	63
 13349   0131B6  6F99               	movwf	(?_cosf+3)& (0+255),b
 13350   0131B8  EF1A  F09B         	goto	l2187
 13351   0131BC                     l9531:
 13352                           
 13353                           ; BSR set to: 5
 13354   0131BC  C596  F52E         	movff	cosf@x,___cosdf@x
 13355   0131C0  C597  F52F         	movff	cosf@x+1,___cosdf@x+1
 13356   0131C4  C598  F530         	movff	cosf@x+2,___cosdf@x+2
 13357   0131C8  C599  F531         	movff	cosf@x+3,___cosdf@x+3
 13358   0131CC  ECCD  F0AA         	call	___cosdf	;wreg free
 13359   0131D0  C52E  F596         	movff	?___cosdf,?_cosf
 13360   0131D4  C52F  F597         	movff	?___cosdf+1,?_cosf+1
 13361   0131D8  C530  F598         	movff	?___cosdf+2,?_cosf+2
 13362   0131DC  C531  F599         	movff	?___cosdf+3,?_cosf+3
 13363   0131E0  EF1A  F09B         	goto	l2187
 13364   0131E4                     l9535:
 13365                           
 13366                           ; BSR set to: 5
 13367   0131E4  0ED2               	movlw	210
 13368   0131E6  5DAC               	subwf	cosf@ix& (0+255),w,b
 13369   0131E8  0E53               	movlw	83
 13370   0131EA  59AD               	subwfb	(cosf@ix+1)& (0+255),w,b
 13371   0131EC  0E7B               	movlw	123
 13372   0131EE  59AE               	subwfb	(cosf@ix+2)& (0+255),w,b
 13373   0131F0  0E40               	movlw	64
 13374   0131F2  59AF               	subwfb	(cosf@ix+3)& (0+255),w,b
 13375   0131F4  B0D8               	btfsc	status,0,c
 13376   0131F6  EFFF  F098         	goto	u7491
 13377   0131FA  EF01  F099         	goto	u7490
 13378   0131FE                     u7491:
 13379   0131FE  EFC8  F099         	goto	l9565
 13380   013202                     u7490:
 13381   013202                     
 13382                           ; BSR set to: 5
 13383   013202  0EE4               	movlw	228
 13384   013204  5DAC               	subwf	cosf@ix& (0+255),w,b
 13385   013206  0ECB               	movlw	203
 13386   013208  59AD               	subwfb	(cosf@ix+1)& (0+255),w,b
 13387   01320A  0E16               	movlw	22
 13388   01320C  59AE               	subwfb	(cosf@ix+2)& (0+255),w,b
 13389   01320E  0E40               	movlw	64
 13390   013210  59AF               	subwfb	(cosf@ix+3)& (0+255),w,b
 13391   013212  A0D8               	btfss	status,0,c
 13392   013214  EF0E  F099         	goto	u7501
 13393   013218  EF10  F099         	goto	u7500
 13394   01321C                     u7501:
 13395   01321C  EF6C  F099         	goto	l9551
 13396   013220                     u7500:
 13397   013220                     
 13398                           ; BSR set to: 5
 13399   013220  51A7               	movf	cosf@sign& (0+255),w,b
 13400   013222  A4D8               	btfss	status,2,c
 13401   013224  EF16  F099         	goto	u7511
 13402   013228  EF18  F099         	goto	u7510
 13403   01322C                     u7511:
 13404   01322C  EF34  F099         	goto	l9543
 13405   013230                     u7510:
 13406   013230                     
 13407                           ; BSR set to: 5
 13408   013230  C596  F51E         	movff	cosf@x,___fladd@b
 13409   013234  C597  F51F         	movff	cosf@x+1,___fladd@b+1
 13410   013238  C598  F520         	movff	cosf@x+2,___fladd@b+2
 13411   01323C  C599  F521         	movff	cosf@x+3,___fladd@b+3
 13412   013240  0EDB               	movlw	219
 13413   013242  6E22               	movwf	___fladd@a^(0+1280),c
 13414   013244  0E0F               	movlw	15
 13415   013246  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13416   013248  0E49               	movlw	73
 13417   01324A  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13418   01324C  0EC0               	movlw	192
 13419   01324E  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13420   013250  EC1B  F09B         	call	___fladd	;wreg free
 13421   013254  C51E  F59A         	movff	?___fladd,_cosf$2780
 13422   013258  C51F  F59B         	movff	?___fladd+1,_cosf$2780+1
 13423   01325C  C520  F59C         	movff	?___fladd+2,_cosf$2780+2
 13424   013260  C521  F59D         	movff	?___fladd+3,_cosf$2780+3
 13425   013264  EF4E  F099         	goto	l9545
 13426   013268                     l9543:
 13427                           
 13428                           ; BSR set to: 5
 13429   013268  C596  F51E         	movff	cosf@x,___fladd@b
 13430   01326C  C597  F51F         	movff	cosf@x+1,___fladd@b+1
 13431   013270  C598  F520         	movff	cosf@x+2,___fladd@b+2
 13432   013274  C599  F521         	movff	cosf@x+3,___fladd@b+3
 13433   013278  0EDB               	movlw	219
 13434   01327A  6E22               	movwf	___fladd@a^(0+1280),c
 13435   01327C  0E0F               	movlw	15
 13436   01327E  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13437   013280  0E49               	movlw	73
 13438   013282  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13439   013284  0E40               	movlw	64
 13440   013286  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13441   013288  EC1B  F09B         	call	___fladd	;wreg free
 13442   01328C  C51E  F59A         	movff	?___fladd,_cosf$2780
 13443   013290  C51F  F59B         	movff	?___fladd+1,_cosf$2780+1
 13444   013294  C520  F59C         	movff	?___fladd+2,_cosf$2780+2
 13445   013298  C521  F59D         	movff	?___fladd+3,_cosf$2780+3
 13446   01329C                     l9545:
 13447   01329C  C59A  F52E         	movff	_cosf$2780,___cosdf@x
 13448   0132A0  C59B  F52F         	movff	_cosf$2780+1,___cosdf@x+1
 13449   0132A4  C59C  F530         	movff	_cosf$2780+2,___cosdf@x+2
 13450   0132A8  C59D  F531         	movff	_cosf$2780+3,___cosdf@x+3
 13451   0132AC  ECCD  F0AA         	call	___cosdf	;wreg free
 13452   0132B0  C52E  F501         	movff	?___cosdf,___flneg@f1
 13453   0132B4  C52F  F502         	movff	?___cosdf+1,___flneg@f1+1
 13454   0132B8  C530  F503         	movff	?___cosdf+2,___flneg@f1+2
 13455   0132BC  C531  F504         	movff	?___cosdf+3,___flneg@f1+3
 13456   0132C0  EC57  F0B6         	call	___flneg	;wreg free
 13457   0132C4  C501  F596         	movff	?___flneg,?_cosf
 13458   0132C8  C502  F597         	movff	?___flneg+1,?_cosf+1
 13459   0132CC  C503  F598         	movff	?___flneg+2,?_cosf+2
 13460   0132D0  C504  F599         	movff	?___flneg+3,?_cosf+3
 13461   0132D4  EF1A  F09B         	goto	l2187
 13462   0132D8                     l9551:
 13463                           
 13464                           ; BSR set to: 5
 13465   0132D8  51A7               	movf	cosf@sign& (0+255),w,b
 13466   0132DA  B4D8               	btfsc	status,2,c
 13467   0132DC  EF72  F099         	goto	u7521
 13468   0132E0  EF74  F099         	goto	u7520
 13469   0132E4                     u7521:
 13470   0132E4  EFA2  F099         	goto	l9561
 13471   0132E8                     u7520:
 13472   0132E8                     
 13473                           ; BSR set to: 5
 13474   0132E8  C596  F51E         	movff	cosf@x,___fladd@b
 13475   0132EC  C597  F51F         	movff	cosf@x+1,___fladd@b+1
 13476   0132F0  C598  F520         	movff	cosf@x+2,___fladd@b+2
 13477   0132F4  C599  F521         	movff	cosf@x+3,___fladd@b+3
 13478   0132F8  0EDB               	movlw	219
 13479   0132FA  6E22               	movwf	___fladd@a^(0+1280),c
 13480   0132FC  0E0F               	movlw	15
 13481   0132FE  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13482   013300  0EC9               	movlw	201
 13483   013302  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13484   013304  0E3F               	movlw	63
 13485   013306  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13486   013308  EC1B  F09B         	call	___fladd	;wreg free
 13487   01330C  C51E  F5A3         	movff	?___fladd,_cosf$3497
 13488   013310  C51F  F5A4         	movff	?___fladd+1,_cosf$3497+1
 13489   013314  C520  F5A5         	movff	?___fladd+2,_cosf$3497+2
 13490   013318  C521  F5A6         	movff	?___fladd+3,_cosf$3497+3
 13491   01331C                     l9555:
 13492   01331C  C5A3  F575         	movff	_cosf$3497,___sindf@x
 13493   013320  C5A4  F576         	movff	_cosf$3497+1,___sindf@x+1
 13494   013324  C5A5  F577         	movff	_cosf$3497+2,___sindf@x+2
 13495   013328  C5A6  F578         	movff	_cosf$3497+3,___sindf@x+3
 13496   01332C  ECA9  F0A8         	call	___sindf	;wreg free
 13497   013330  C575  F596         	movff	?___sindf,?_cosf
 13498   013334  C576  F597         	movff	?___sindf+1,?_cosf+1
 13499   013338  C577  F598         	movff	?___sindf+2,?_cosf+2
 13500   01333C  C578  F599         	movff	?___sindf+3,?_cosf+3
 13501   013340  EF1A  F09B         	goto	l2187
 13502   013344                     l9561:
 13503                           
 13504                           ; BSR set to: 5
 13505   013344  0EDB               	movlw	219
 13506   013346  6F6D               	movwf	___flsub@b& (0+255),b
 13507   013348  0E0F               	movlw	15
 13508   01334A  6F6E               	movwf	(___flsub@b+1)& (0+255),b
 13509   01334C  0EC9               	movlw	201
 13510   01334E  6F6F               	movwf	(___flsub@b+2)& (0+255),b
 13511   013350  0E3F               	movlw	63
 13512   013352  6F70               	movwf	(___flsub@b+3)& (0+255),b
 13513   013354  C596  F571         	movff	cosf@x,___flsub@a
 13514   013358  C597  F572         	movff	cosf@x+1,___flsub@a+1
 13515   01335C  C598  F573         	movff	cosf@x+2,___flsub@a+2
 13516   013360  C599  F574         	movff	cosf@x+3,___flsub@a+3
 13517   013364  ECD5  F0B5         	call	___flsub	;wreg free
 13518   013368  C56D  F575         	movff	?___flsub,___sindf@x
 13519   01336C  C56E  F576         	movff	?___flsub+1,___sindf@x+1
 13520   013370  C56F  F577         	movff	?___flsub+2,___sindf@x+2
 13521   013374  C570  F578         	movff	?___flsub+3,___sindf@x+3
 13522   013378  ECA9  F0A8         	call	___sindf	;wreg free
 13523   01337C  C575  F596         	movff	?___sindf,?_cosf
 13524   013380  C576  F597         	movff	?___sindf+1,?_cosf+1
 13525   013384  C577  F598         	movff	?___sindf+2,?_cosf+2
 13526   013388  C578  F599         	movff	?___sindf+3,?_cosf+3
 13527   01338C  EF1A  F09B         	goto	l2187
 13528   013390                     l9565:
 13529                           
 13530                           ; BSR set to: 5
 13531   013390  0ED6               	movlw	214
 13532   013392  5DAC               	subwf	cosf@ix& (0+255),w,b
 13533   013394  0E31               	movlw	49
 13534   013396  59AD               	subwfb	(cosf@ix+1)& (0+255),w,b
 13535   013398  0EE2               	movlw	226
 13536   01339A  59AE               	subwfb	(cosf@ix+2)& (0+255),w,b
 13537   01339C  0E40               	movlw	64
 13538   01339E  59AF               	subwfb	(cosf@ix+3)& (0+255),w,b
 13539   0133A0  B0D8               	btfsc	status,0,c
 13540   0133A2  EFD5  F099         	goto	u7531
 13541   0133A6  EFD7  F099         	goto	u7530
 13542   0133AA                     u7531:
 13543   0133AA  EF82  F09A         	goto	l9595
 13544   0133AE                     u7530:
 13545   0133AE                     
 13546                           ; BSR set to: 5
 13547   0133AE  0EE0               	movlw	224
 13548   0133B0  5DAC               	subwf	cosf@ix& (0+255),w,b
 13549   0133B2  0EED               	movlw	237
 13550   0133B4  59AD               	subwfb	(cosf@ix+1)& (0+255),w,b
 13551   0133B6  0EAF               	movlw	175
 13552   0133B8  59AE               	subwfb	(cosf@ix+2)& (0+255),w,b
 13553   0133BA  0E40               	movlw	64
 13554   0133BC  59AF               	subwfb	(cosf@ix+3)& (0+255),w,b
 13555   0133BE  A0D8               	btfss	status,0,c
 13556   0133C0  EFE4  F099         	goto	u7541
 13557   0133C4  EFE6  F099         	goto	u7540
 13558   0133C8                     u7541:
 13559   0133C8  EF38  F09A         	goto	l9581
 13560   0133CC                     u7540:
 13561   0133CC                     
 13562                           ; BSR set to: 5
 13563   0133CC  51A7               	movf	cosf@sign& (0+255),w,b
 13564   0133CE  A4D8               	btfss	status,2,c
 13565   0133D0  EFEC  F099         	goto	u7551
 13566   0133D4  EFEE  F099         	goto	u7550
 13567   0133D8                     u7551:
 13568   0133D8  EF0A  F09A         	goto	l9573
 13569   0133DC                     u7550:
 13570   0133DC                     
 13571                           ; BSR set to: 5
 13572   0133DC  C596  F51E         	movff	cosf@x,___fladd@b
 13573   0133E0  C597  F51F         	movff	cosf@x+1,___fladd@b+1
 13574   0133E4  C598  F520         	movff	cosf@x+2,___fladd@b+2
 13575   0133E8  C599  F521         	movff	cosf@x+3,___fladd@b+3
 13576   0133EC  0EDB               	movlw	219
 13577   0133EE  6E22               	movwf	___fladd@a^(0+1280),c
 13578   0133F0  0E0F               	movlw	15
 13579   0133F2  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13580   0133F4  0EC9               	movlw	201
 13581   0133F6  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13582   0133F8  0EC0               	movlw	192
 13583   0133FA  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13584   0133FC  EC1B  F09B         	call	___fladd	;wreg free
 13585   013400  C51E  F59E         	movff	?___fladd,_cosf$2781
 13586   013404  C51F  F59F         	movff	?___fladd+1,_cosf$2781+1
 13587   013408  C520  F5A0         	movff	?___fladd+2,_cosf$2781+2
 13588   01340C  C521  F5A1         	movff	?___fladd+3,_cosf$2781+3
 13589   013410  EF24  F09A         	goto	l9575
 13590   013414                     l9573:
 13591                           
 13592                           ; BSR set to: 5
 13593   013414  C596  F51E         	movff	cosf@x,___fladd@b
 13594   013418  C597  F51F         	movff	cosf@x+1,___fladd@b+1
 13595   01341C  C598  F520         	movff	cosf@x+2,___fladd@b+2
 13596   013420  C599  F521         	movff	cosf@x+3,___fladd@b+3
 13597   013424  0EDB               	movlw	219
 13598   013426  6E22               	movwf	___fladd@a^(0+1280),c
 13599   013428  0E0F               	movlw	15
 13600   01342A  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13601   01342C  0EC9               	movlw	201
 13602   01342E  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13603   013430  0E40               	movlw	64
 13604   013432  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13605   013434  EC1B  F09B         	call	___fladd	;wreg free
 13606   013438  C51E  F59E         	movff	?___fladd,_cosf$2781
 13607   01343C  C51F  F59F         	movff	?___fladd+1,_cosf$2781+1
 13608   013440  C520  F5A0         	movff	?___fladd+2,_cosf$2781+2
 13609   013444  C521  F5A1         	movff	?___fladd+3,_cosf$2781+3
 13610   013448                     l9575:
 13611   013448  C59E  F52E         	movff	_cosf$2781,___cosdf@x
 13612   01344C  C59F  F52F         	movff	_cosf$2781+1,___cosdf@x+1
 13613   013450  C5A0  F530         	movff	_cosf$2781+2,___cosdf@x+2
 13614   013454  C5A1  F531         	movff	_cosf$2781+3,___cosdf@x+3
 13615   013458  ECCD  F0AA         	call	___cosdf	;wreg free
 13616   01345C  C52E  F596         	movff	?___cosdf,?_cosf
 13617   013460  C52F  F597         	movff	?___cosdf+1,?_cosf+1
 13618   013464  C530  F598         	movff	?___cosdf+2,?_cosf+2
 13619   013468  C531  F599         	movff	?___cosdf+3,?_cosf+3
 13620   01346C  EF1A  F09B         	goto	l2187
 13621   013470                     l9581:
 13622                           
 13623                           ; BSR set to: 5
 13624   013470  51A7               	movf	cosf@sign& (0+255),w,b
 13625   013472  B4D8               	btfsc	status,2,c
 13626   013474  EF3E  F09A         	goto	u7561
 13627   013478  EF40  F09A         	goto	u7560
 13628   01347C                     u7561:
 13629   01347C  EF66  F09A         	goto	l9589
 13630   013480                     u7560:
 13631   013480                     
 13632                           ; BSR set to: 5
 13633   013480  0EE4               	movlw	228
 13634   013482  6F6D               	movwf	___flsub@b& (0+255),b
 13635   013484  0ECB               	movlw	203
 13636   013486  6F6E               	movwf	(___flsub@b+1)& (0+255),b
 13637   013488  0E96               	movlw	150
 13638   01348A  6F6F               	movwf	(___flsub@b+2)& (0+255),b
 13639   01348C  0EC0               	movlw	192
 13640   01348E  6F70               	movwf	(___flsub@b+3)& (0+255),b
 13641   013490  C596  F571         	movff	cosf@x,___flsub@a
 13642   013494  C597  F572         	movff	cosf@x+1,___flsub@a+1
 13643   013498  C598  F573         	movff	cosf@x+2,___flsub@a+2
 13644   01349C  C599  F574         	movff	cosf@x+3,___flsub@a+3
 13645   0134A0  ECD5  F0B5         	call	___flsub	;wreg free
 13646   0134A4  C56D  F575         	movff	?___flsub,___sindf@x
 13647   0134A8  C56E  F576         	movff	?___flsub+1,___sindf@x+1
 13648   0134AC  C56F  F577         	movff	?___flsub+2,___sindf@x+2
 13649   0134B0  C570  F578         	movff	?___flsub+3,___sindf@x+3
 13650   0134B4  ECA9  F0A8         	call	___sindf	;wreg free
 13651   0134B8  C575  F596         	movff	?___sindf,?_cosf
 13652   0134BC  C576  F597         	movff	?___sindf+1,?_cosf+1
 13653   0134C0  C577  F598         	movff	?___sindf+2,?_cosf+2
 13654   0134C4  C578  F599         	movff	?___sindf+3,?_cosf+3
 13655   0134C8  EF1A  F09B         	goto	l2187
 13656   0134CC                     l9589:
 13657                           
 13658                           ; BSR set to: 5
 13659   0134CC  C596  F51E         	movff	cosf@x,___fladd@b
 13660   0134D0  C597  F51F         	movff	cosf@x+1,___fladd@b+1
 13661   0134D4  C598  F520         	movff	cosf@x+2,___fladd@b+2
 13662   0134D8  C599  F521         	movff	cosf@x+3,___fladd@b+3
 13663   0134DC  0EE4               	movlw	228
 13664   0134DE  6E22               	movwf	___fladd@a^(0+1280),c
 13665   0134E0  0ECB               	movlw	203
 13666   0134E2  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13667   0134E4  0E96               	movlw	150
 13668   0134E6  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13669   0134E8  0EC0               	movlw	192
 13670   0134EA  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13671   0134EC  EC1B  F09B         	call	___fladd	;wreg free
 13672   0134F0  C51E  F5A3         	movff	?___fladd,_cosf$3497
 13673   0134F4  C51F  F5A4         	movff	?___fladd+1,_cosf$3497+1
 13674   0134F8  C520  F5A5         	movff	?___fladd+2,_cosf$3497+2
 13675   0134FC  C521  F5A6         	movff	?___fladd+3,_cosf$3497+3
 13676   013500  EF8E  F099         	goto	l9555
 13677   013504                     l9595:
 13678                           
 13679                           ; BSR set to: 5
 13680   013504  0E80               	movlw	128
 13681   013506  5DAE               	subwf	(cosf@ix+2)& (0+255),w,b
 13682   013508  0E7F               	movlw	127
 13683   01350A  59AF               	subwfb	(cosf@ix+3)& (0+255),w,b
 13684   01350C  A0D8               	btfss	status,0,c
 13685   01350E  EF8B  F09A         	goto	u7571
 13686   013512  EF8D  F09A         	goto	u7570
 13687   013516                     u7571:
 13688   013516  EF9F  F09A         	goto	l9603
 13689   01351A                     u7570:
 13690   01351A                     
 13691                           ; BSR set to: 5
 13692   01351A  0EFF               	movlw	255
 13693   01351C  6FAC               	movwf	cosf@ix& (0+255),b
 13694   01351E  0EFF               	movlw	255
 13695   013520  6FAD               	movwf	(cosf@ix+1)& (0+255),b
 13696   013522  0EFF               	movlw	255
 13697   013524  6FAE               	movwf	(cosf@ix+2)& (0+255),b
 13698   013526  0E7F               	movlw	127
 13699   013528  6FAF               	movwf	(cosf@ix+3)& (0+255),b
 13700   01352A                     
 13701                           ; BSR set to: 5
 13702   01352A  C5AC  F596         	movff	cosf@ix,?_cosf
 13703   01352E  C5AD  F597         	movff	cosf@ix+1,?_cosf+1
 13704   013532  C5AE  F598         	movff	cosf@ix+2,?_cosf+2
 13705   013536  C5AF  F599         	movff	cosf@ix+3,?_cosf+3
 13706   01353A  EF1A  F09B         	goto	l2187
 13707   01353E                     l9603:
 13708                           
 13709                           ; BSR set to: 5
 13710   01353E  C596  F575         	movff	cosf@x,___rem_pio2f@x
 13711   013542  C597  F576         	movff	cosf@x+1,___rem_pio2f@x+1
 13712   013546  C598  F577         	movff	cosf@x+2,___rem_pio2f@x+2
 13713   01354A  C599  F578         	movff	cosf@x+3,___rem_pio2f@x+3
 13714   01354E  0EA8               	movlw	low cosf@y
 13715   013550  6F79               	movwf	___rem_pio2f@y& (0+255),b
 13716   013552  0E05               	movlw	high cosf@y
 13717   013554  6F7A               	movwf	(___rem_pio2f@y+1)& (0+255),b
 13718   013556  EC78  F0A1         	call	___rem_pio2f	;wreg free
 13719   01355A  0105               	movlb	5	; () banked
 13720   01355C  5175               	movf	?___rem_pio2f& (0+255),w,b
 13721   01355E  0B03               	andlw	3
 13722   013560  6FA2               	movwf	cosf@n& (0+255),b
 13723   013562  EF0B  F09B         	goto	l9621
 13724   013566                     l9605:
 13725                           
 13726                           ; BSR set to: 5
 13727   013566  C5A8  F52E         	movff	cosf@y,___cosdf@x
 13728   01356A  C5A9  F52F         	movff	cosf@y+1,___cosdf@x+1
 13729   01356E  C5AA  F530         	movff	cosf@y+2,___cosdf@x+2
 13730   013572  C5AB  F531         	movff	cosf@y+3,___cosdf@x+3
 13731   013576  ECCD  F0AA         	call	___cosdf	;wreg free
 13732   01357A  C52E  F596         	movff	?___cosdf,?_cosf
 13733   01357E  C52F  F597         	movff	?___cosdf+1,?_cosf+1
 13734   013582  C530  F598         	movff	?___cosdf+2,?_cosf+2
 13735   013586  C531  F599         	movff	?___cosdf+3,?_cosf+3
 13736   01358A  EF1A  F09B         	goto	l2187
 13737   01358E                     l9609:
 13738                           
 13739                           ; BSR set to: 5
 13740   01358E  C5A8  F52E         	movff	cosf@y,___cosdf@x
 13741   013592  C5A9  F52F         	movff	cosf@y+1,___cosdf@x+1
 13742   013596  C5AA  F530         	movff	cosf@y+2,___cosdf@x+2
 13743   01359A  C5AB  F531         	movff	cosf@y+3,___cosdf@x+3
 13744   01359E  ECCD  F0AA         	call	___cosdf	;wreg free
 13745   0135A2  C52E  F501         	movff	?___cosdf,___flneg@f1
 13746   0135A6  C52F  F502         	movff	?___cosdf+1,___flneg@f1+1
 13747   0135AA  C530  F503         	movff	?___cosdf+2,___flneg@f1+2
 13748   0135AE  C531  F504         	movff	?___cosdf+3,___flneg@f1+3
 13749   0135B2  EC57  F0B6         	call	___flneg	;wreg free
 13750   0135B6  C501  F596         	movff	?___flneg,?_cosf
 13751   0135BA  C502  F597         	movff	?___flneg+1,?_cosf+1
 13752   0135BE  C503  F598         	movff	?___flneg+2,?_cosf+2
 13753   0135C2  C504  F599         	movff	?___flneg+3,?_cosf+3
 13754   0135C6  EF1A  F09B         	goto	l2187
 13755   0135CA                     l9613:
 13756                           
 13757                           ; BSR set to: 5
 13758   0135CA  C5A8  F501         	movff	cosf@y,___flneg@f1
 13759   0135CE  C5A9  F502         	movff	cosf@y+1,___flneg@f1+1
 13760   0135D2  C5AA  F503         	movff	cosf@y+2,___flneg@f1+2
 13761   0135D6  C5AB  F504         	movff	cosf@y+3,___flneg@f1+3
 13762   0135DA  EC57  F0B6         	call	___flneg	;wreg free
 13763   0135DE  C501  F5A8         	movff	?___flneg,cosf@y
 13764   0135E2  C502  F5A9         	movff	?___flneg+1,cosf@y+1
 13765   0135E6  C503  F5AA         	movff	?___flneg+2,cosf@y+2
 13766   0135EA  C504  F5AB         	movff	?___flneg+3,cosf@y+3
 13767   0135EE                     l9615:
 13768   0135EE  C5A8  F575         	movff	cosf@y,___sindf@x
 13769   0135F2  C5A9  F576         	movff	cosf@y+1,___sindf@x+1
 13770   0135F6  C5AA  F577         	movff	cosf@y+2,___sindf@x+2
 13771   0135FA  C5AB  F578         	movff	cosf@y+3,___sindf@x+3
 13772   0135FE  ECA9  F0A8         	call	___sindf	;wreg free
 13773   013602  C575  F596         	movff	?___sindf,?_cosf
 13774   013606  C576  F597         	movff	?___sindf+1,?_cosf+1
 13775   01360A  C577  F598         	movff	?___sindf+2,?_cosf+2
 13776   01360E  C578  F599         	movff	?___sindf+3,?_cosf+3
 13777   013612  EF1A  F09B         	goto	l2187
 13778   013616                     l9621:
 13779                           
 13780                           ; BSR set to: 5
 13781   013616  51A2               	movf	cosf@n& (0+255),w,b
 13782                           
 13783                           ; Switch size 1, requested type "simple"
 13784                           ; Number of cases is 3, Range of values is 0 to 2
 13785                           ; switch strategies available:
 13786                           ; Name         Instructions Cycles
 13787                           ; simple_byte           10     6 (average)
 13788                           ;	Chosen strategy is simple_byte
 13789   013618  0A00               	xorlw	0	; case 0
 13790   01361A  B4D8               	btfsc	status,2,c
 13791   01361C  EFB3  F09A         	goto	l9605
 13792   013620  0A01               	xorlw	1	; case 1
 13793   013622  B4D8               	btfsc	status,2,c
 13794   013624  EFE5  F09A         	goto	l9613
 13795   013628  0A03               	xorlw	3	; case 2
 13796   01362A  B4D8               	btfsc	status,2,c
 13797   01362C  EFC7  F09A         	goto	l9609
 13798   013630  EFF7  F09A         	goto	l9615
 13799   013634                     l2187:
 13800   013634  0012               	return		;funcret
 13801   013636                     __end_of_cosf:
 13802                           	callstack 0
 13803                           
 13804 ;; *************** function ___sindf *****************
 13805 ;; Defined at:
 13806 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__sindf.c"
 13807 ;; Parameters:    Size  Location     Type
 13808 ;;  x               4   21[BANK5 ] float 
 13809 ;; Auto vars:     Size  Location     Type
 13810 ;;  z               4   49[BANK5 ] float 
 13811 ;;  s               4   45[BANK5 ] float 
 13812 ;;  w               4   29[BANK5 ] float 
 13813 ;;  r               4   25[BANK5 ] float 
 13814 ;; Return value:  Size  Location     Type
 13815 ;;                  4   21[BANK5 ] float 
 13816 ;; Registers used:
 13817 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13818 ;; Tracked objects:
 13819 ;;		On entry : 0/0
 13820 ;;		On exit  : 0/0
 13821 ;;		Unchanged: 0/0
 13822 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13823 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13824 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13826 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13827 ;;Total ram usage:       32 bytes
 13828 ;; Hardware stack levels used: 1
 13829 ;; Hardware stack levels required when called: 1
 13830 ;; This function calls:
 13831 ;;		___fladd
 13832 ;;		___flmul
 13833 ;; This function is called by:
 13834 ;;		_cosf
 13835 ;;		_sinf
 13836 ;; This function uses a non-reentrant model
 13837 ;;
 13838                           
 13839                           	psect	text29
 13840   015152                     __ptext29:
 13841                           	callstack 0
 13842   015152                     ___sindf:
 13843                           	callstack 123
 13844   015152  C575  F505         	movff	___sindf@x,___flmul@b
 13845   015156  C576  F506         	movff	___sindf@x+1,___flmul@b+1
 13846   01515A  C577  F507         	movff	___sindf@x+2,___flmul@b+2
 13847   01515E  C578  F508         	movff	___sindf@x+3,___flmul@b+3
 13848   015162  C575  F509         	movff	___sindf@x,___flmul@a
 13849   015166  C576  F50A         	movff	___sindf@x+1,___flmul@a+1
 13850   01516A  C577  F50B         	movff	___sindf@x+2,___flmul@a+2
 13851   01516E  C578  F50C         	movff	___sindf@x+3,___flmul@a+3
 13852   015172  EC76  F09D         	call	___flmul	;wreg free
 13853   015176  C505  F591         	movff	?___flmul,___sindf@z
 13854   01517A  C506  F592         	movff	?___flmul+1,___sindf@z+1
 13855   01517E  C507  F593         	movff	?___flmul+2,___sindf@z+2
 13856   015182  C508  F594         	movff	?___flmul+3,___sindf@z+3
 13857   015186  C591  F505         	movff	___sindf@z,___flmul@b
 13858   01518A  C592  F506         	movff	___sindf@z+1,___flmul@b+1
 13859   01518E  C593  F507         	movff	___sindf@z+2,___flmul@b+2
 13860   015192  C594  F508         	movff	___sindf@z+3,___flmul@b+3
 13861   015196  C591  F509         	movff	___sindf@z,___flmul@a
 13862   01519A  C592  F50A         	movff	___sindf@z+1,___flmul@a+1
 13863   01519E  C593  F50B         	movff	___sindf@z+2,___flmul@a+2
 13864   0151A2  C594  F50C         	movff	___sindf@z+3,___flmul@a+3
 13865   0151A6  EC76  F09D         	call	___flmul	;wreg free
 13866   0151AA  C505  F57D         	movff	?___flmul,___sindf@w
 13867   0151AE  C506  F57E         	movff	?___flmul+1,___sindf@w+1
 13868   0151B2  C507  F57F         	movff	?___flmul+2,___sindf@w+2
 13869   0151B6  C508  F580         	movff	?___flmul+3,___sindf@w+3
 13870   0151BA  0E3C               	movlw	60
 13871   0151BC  6E09               	movwf	___flmul@a^(0+1280),c
 13872   0151BE  0E6C               	movlw	108
 13873   0151C0  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 13874   0151C2  0E36               	movlw	54
 13875   0151C4  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 13876   0151C6  0E36               	movlw	54
 13877   0151C8  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 13878   0151CA  C591  F505         	movff	___sindf@z,___flmul@b
 13879   0151CE  C592  F506         	movff	___sindf@z+1,___flmul@b+1
 13880   0151D2  C593  F507         	movff	___sindf@z+2,___flmul@b+2
 13881   0151D6  C594  F508         	movff	___sindf@z+3,___flmul@b+3
 13882   0151DA  EC76  F09D         	call	___flmul	;wreg free
 13883   0151DE  C505  F51E         	movff	?___flmul,___fladd@b
 13884   0151E2  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 13885   0151E6  C507  F520         	movff	?___flmul+2,___fladd@b+2
 13886   0151EA  C508  F521         	movff	?___flmul+3,___fladd@b+3
 13887   0151EE  0ECF               	movlw	207
 13888   0151F0  6E22               	movwf	___fladd@a^(0+1280),c
 13889   0151F2  0E07               	movlw	7
 13890   0151F4  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13891   0151F6  0E50               	movlw	80
 13892   0151F8  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13893   0151FA  0EB9               	movlw	185
 13894   0151FC  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13895   0151FE  EC1B  F09B         	call	___fladd	;wreg free
 13896   015202  C51E  F579         	movff	?___fladd,___sindf@r
 13897   015206  C51F  F57A         	movff	?___fladd+1,___sindf@r+1
 13898   01520A  C520  F57B         	movff	?___fladd+2,___sindf@r+2
 13899   01520E  C521  F57C         	movff	?___fladd+3,___sindf@r+3
 13900   015212  C591  F505         	movff	___sindf@z,___flmul@b
 13901   015216  C592  F506         	movff	___sindf@z+1,___flmul@b+1
 13902   01521A  C593  F507         	movff	___sindf@z+2,___flmul@b+2
 13903   01521E  C594  F508         	movff	___sindf@z+3,___flmul@b+3
 13904   015222  C575  F509         	movff	___sindf@x,___flmul@a
 13905   015226  C576  F50A         	movff	___sindf@x+1,___flmul@a+1
 13906   01522A  C577  F50B         	movff	___sindf@x+2,___flmul@a+2
 13907   01522E  C578  F50C         	movff	___sindf@x+3,___flmul@a+3
 13908   015232  EC76  F09D         	call	___flmul	;wreg free
 13909   015236  C505  F58D         	movff	?___flmul,___sindf@s
 13910   01523A  C506  F58E         	movff	?___flmul+1,___sindf@s+1
 13911   01523E  C507  F58F         	movff	?___flmul+2,___sindf@s+2
 13912   015242  C508  F590         	movff	?___flmul+3,___sindf@s+3
 13913   015246  0EAB               	movlw	171
 13914   015248  6E22               	movwf	___fladd@a^(0+1280),c
 13915   01524A  0EAA               	movlw	170
 13916   01524C  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13917   01524E  0E2A               	movlw	42
 13918   015250  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13919   015252  0EBE               	movlw	190
 13920   015254  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13921   015256  0E84               	movlw	132
 13922   015258  6E09               	movwf	___flmul@a^(0+1280),c
 13923   01525A  0E88               	movlw	136
 13924   01525C  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 13925   01525E  0E08               	movlw	8
 13926   015260  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 13927   015262  0E3C               	movlw	60
 13928   015264  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 13929   015266  C591  F505         	movff	___sindf@z,___flmul@b
 13930   01526A  C592  F506         	movff	___sindf@z+1,___flmul@b+1
 13931   01526E  C593  F507         	movff	___sindf@z+2,___flmul@b+2
 13932   015272  C594  F508         	movff	___sindf@z+3,___flmul@b+3
 13933   015276  EC76  F09D         	call	___flmul	;wreg free
 13934   01527A  C505  F51E         	movff	?___flmul,___fladd@b
 13935   01527E  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 13936   015282  C507  F520         	movff	?___flmul+2,___fladd@b+2
 13937   015286  C508  F521         	movff	?___flmul+3,___fladd@b+3
 13938   01528A  EC1B  F09B         	call	___fladd	;wreg free
 13939   01528E  C51E  F581         	movff	?___fladd,___sindf$3502
 13940   015292  C51F  F582         	movff	?___fladd+1,___sindf$3502+1
 13941   015296  C520  F583         	movff	?___fladd+2,___sindf$3502+2
 13942   01529A  C521  F584         	movff	?___fladd+3,___sindf$3502+3
 13943   01529E  C57D  F509         	movff	___sindf@w,___flmul@a
 13944   0152A2  C57E  F50A         	movff	___sindf@w+1,___flmul@a+1
 13945   0152A6  C57F  F50B         	movff	___sindf@w+2,___flmul@a+2
 13946   0152AA  C580  F50C         	movff	___sindf@w+3,___flmul@a+3
 13947   0152AE  C58D  F505         	movff	___sindf@s,___flmul@b
 13948   0152B2  C58E  F506         	movff	___sindf@s+1,___flmul@b+1
 13949   0152B6  C58F  F507         	movff	___sindf@s+2,___flmul@b+2
 13950   0152BA  C590  F508         	movff	___sindf@s+3,___flmul@b+3
 13951   0152BE  EC76  F09D         	call	___flmul	;wreg free
 13952   0152C2  C505  F585         	movff	?___flmul,___sindf$3503
 13953   0152C6  C506  F586         	movff	?___flmul+1,___sindf$3503+1
 13954   0152CA  C507  F587         	movff	?___flmul+2,___sindf$3503+2
 13955   0152CE  C508  F588         	movff	?___flmul+3,___sindf$3503+3
 13956   0152D2  C575  F522         	movff	___sindf@x,___fladd@a
 13957   0152D6  C576  F523         	movff	___sindf@x+1,___fladd@a+1
 13958   0152DA  C577  F524         	movff	___sindf@x+2,___fladd@a+2
 13959   0152DE  C578  F525         	movff	___sindf@x+3,___fladd@a+3
 13960   0152E2  C58D  F509         	movff	___sindf@s,___flmul@a
 13961   0152E6  C58E  F50A         	movff	___sindf@s+1,___flmul@a+1
 13962   0152EA  C58F  F50B         	movff	___sindf@s+2,___flmul@a+2
 13963   0152EE  C590  F50C         	movff	___sindf@s+3,___flmul@a+3
 13964   0152F2  C581  F505         	movff	___sindf$3502,___flmul@b
 13965   0152F6  C582  F506         	movff	___sindf$3502+1,___flmul@b+1
 13966   0152FA  C583  F507         	movff	___sindf$3502+2,___flmul@b+2
 13967   0152FE  C584  F508         	movff	___sindf$3502+3,___flmul@b+3
 13968   015302  EC76  F09D         	call	___flmul	;wreg free
 13969   015306  C505  F51E         	movff	?___flmul,___fladd@b
 13970   01530A  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 13971   01530E  C507  F520         	movff	?___flmul+2,___fladd@b+2
 13972   015312  C508  F521         	movff	?___flmul+3,___fladd@b+3
 13973   015316  EC1B  F09B         	call	___fladd	;wreg free
 13974   01531A  C51E  F589         	movff	?___fladd,___sindf$3504
 13975   01531E  C51F  F58A         	movff	?___fladd+1,___sindf$3504+1
 13976   015322  C520  F58B         	movff	?___fladd+2,___sindf$3504+2
 13977   015326  C521  F58C         	movff	?___fladd+3,___sindf$3504+3
 13978   01532A  C589  F51E         	movff	___sindf$3504,___fladd@b
 13979   01532E  C58A  F51F         	movff	___sindf$3504+1,___fladd@b+1
 13980   015332  C58B  F520         	movff	___sindf$3504+2,___fladd@b+2
 13981   015336  C58C  F521         	movff	___sindf$3504+3,___fladd@b+3
 13982   01533A  C579  F509         	movff	___sindf@r,___flmul@a
 13983   01533E  C57A  F50A         	movff	___sindf@r+1,___flmul@a+1
 13984   015342  C57B  F50B         	movff	___sindf@r+2,___flmul@a+2
 13985   015346  C57C  F50C         	movff	___sindf@r+3,___flmul@a+3
 13986   01534A  C585  F505         	movff	___sindf$3503,___flmul@b
 13987   01534E  C586  F506         	movff	___sindf$3503+1,___flmul@b+1
 13988   015352  C587  F507         	movff	___sindf$3503+2,___flmul@b+2
 13989   015356  C588  F508         	movff	___sindf$3503+3,___flmul@b+3
 13990   01535A  EC76  F09D         	call	___flmul	;wreg free
 13991   01535E  C505  F522         	movff	?___flmul,___fladd@a
 13992   015362  C506  F523         	movff	?___flmul+1,___fladd@a+1
 13993   015366  C507  F524         	movff	?___flmul+2,___fladd@a+2
 13994   01536A  C508  F525         	movff	?___flmul+3,___fladd@a+3
 13995   01536E  EC1B  F09B         	call	___fladd	;wreg free
 13996   015372  C51E  F575         	movff	?___fladd,?___sindf
 13997   015376  C51F  F576         	movff	?___fladd+1,?___sindf+1
 13998   01537A  C520  F577         	movff	?___fladd+2,?___sindf+2
 13999   01537E  C521  F578         	movff	?___fladd+3,?___sindf+3
 14000   015382  0012               	return		;funcret
 14001   015384                     __end_of___sindf:
 14002                           	callstack 0
 14003                           
 14004 ;; *************** function ___rem_pio2f *****************
 14005 ;; Defined at:
 14006 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__rem_pio2f.c"
 14007 ;; Parameters:    Size  Location     Type
 14008 ;;  x               4   21[BANK5 ] float 
 14009 ;;  y               2   25[BANK5 ] PTR 
 14010 ;;		 -> sinf@y(4), cosf@y(4), 
 14011 ;; Auto vars:     Size  Location     Type
 14012 ;;  n               4   50[BANK5 ] long 
 14013 ;;  t               4   46[BANK5 ] float 
 14014 ;;  fn              4   42[BANK5 ] float 
 14015 ;;  ux              4   38[BANK5 ] struct .
 14016 ;;  ty              4   29[BANK5 ] [1]
 14017 ;;  sign            1   37[BANK5 ] _Bool 
 14018 ;; Return value:  Size  Location     Type
 14019 ;;                  2   21[BANK5 ] int 
 14020 ;; Registers used:
 14021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14022 ;; Tracked objects:
 14023 ;;		On entry : 0/0
 14024 ;;		On exit  : 0/0
 14025 ;;		Unchanged: 0/0
 14026 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14027 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14028 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14029 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14030 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14031 ;;Total ram usage:       33 bytes
 14032 ;; Hardware stack levels used: 1
 14033 ;; Hardware stack levels required when called: 2
 14034 ;; This function calls:
 14035 ;;		___fladd
 14036 ;;		___flmul
 14037 ;;		___flneg
 14038 ;;		___flsub
 14039 ;;		___fltol
 14040 ;;		___xxtofl
 14041 ;;		_fabsf
 14042 ;; This function is called by:
 14043 ;;		_cosf
 14044 ;;		_sinf
 14045 ;; This function uses a non-reentrant model
 14046 ;;
 14047                           
 14048                           	psect	text30
 14049   0142F0                     __ptext30:
 14050                           	callstack 0
 14051   0142F0                     ___rem_pio2f:
 14052                           	callstack 122
 14053   0142F0  C708  F586         	movff	___rem_pio2f@F526,___rem_pio2f@ux
 14054   0142F4  C709  F587         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
 14055   0142F8  C70A  F588         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
 14056   0142FC  C70B  F589         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
 14057   014300  C575  F586         	movff	___rem_pio2f@x,___rem_pio2f@ux
 14058   014304  C576  F587         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
 14059   014308  C577  F588         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
 14060   01430C  C578  F589         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
 14061   014310  0105               	movlb	5	; () banked
 14062   014312  BF89               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
 14063   014314  EF8E  F0A1         	goto	u7261
 14064   014318  EF91  F0A1         	goto	u7260
 14065   01431C                     u7261:
 14066   01431C  0E01               	movlw	1
 14067   01431E  EF92  F0A1         	goto	u7270
 14068   014322                     u7260:
 14069   014322  0E00               	movlw	0
 14070   014324                     u7270:
 14071   014324  6F85               	movwf	___rem_pio2f@sign& (0+255),b
 14072   014326                     
 14073                           ; BSR set to: 5
 14074   014326  9F89               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
 14075   014328                     
 14076                           ; BSR set to: 5
 14077   014328  0EDB               	movlw	219
 14078   01432A  5D86               	subwf	___rem_pio2f@ux& (0+255),w,b
 14079   01432C  0E0F               	movlw	15
 14080   01432E  5987               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
 14081   014330  0EC9               	movlw	201
 14082   014332  5988               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
 14083   014334  0E4D               	movlw	77
 14084   014336  5989               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
 14085   014338  B0D8               	btfsc	status,0,c
 14086   01433A  EFA1  F0A1         	goto	u7281
 14087   01433E  EFA3  F0A1         	goto	u7280
 14088   014342                     u7281:
 14089   014342  EF92  F0A2         	goto	l9305
 14090   014346                     u7280:
 14091   014346                     
 14092                           ; BSR set to: 5
 14093   014346  C575  F56D         	movff	___rem_pio2f@x,fabsf@x
 14094   01434A  C576  F56E         	movff	___rem_pio2f@x+1,fabsf@x+1
 14095   01434E  C577  F56F         	movff	___rem_pio2f@x+2,fabsf@x+2
 14096   014352  C578  F570         	movff	___rem_pio2f@x+3,fabsf@x+3
 14097   014356  EC73  F0B6         	call	_fabsf	;wreg free
 14098   01435A  C56D  F58E         	movff	?_fabsf,___rem_pio2f@t
 14099   01435E  C56E  F58F         	movff	?_fabsf+1,___rem_pio2f@t+1
 14100   014362  C56F  F590         	movff	?_fabsf+2,___rem_pio2f@t+2
 14101   014366  C570  F591         	movff	?_fabsf+3,___rem_pio2f@t+3
 14102   01436A  0E00               	movlw	0
 14103   01436C  6E22               	movwf	___fladd@a^(0+1280),c
 14104   01436E  0E00               	movlw	0
 14105   014370  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 14106   014372  0E00               	movlw	0
 14107   014374  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 14108   014376  0E3F               	movlw	63
 14109   014378  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 14110   01437A  0E83               	movlw	131
 14111   01437C  6E09               	movwf	___flmul@a^(0+1280),c
 14112   01437E  0EF9               	movlw	249
 14113   014380  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14114   014382  0E22               	movlw	34
 14115   014384  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14116   014386  0E3F               	movlw	63
 14117   014388  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14118   01438A  C58E  F505         	movff	___rem_pio2f@t,___flmul@b
 14119   01438E  C58F  F506         	movff	___rem_pio2f@t+1,___flmul@b+1
 14120   014392  C590  F507         	movff	___rem_pio2f@t+2,___flmul@b+2
 14121   014396  C591  F508         	movff	___rem_pio2f@t+3,___flmul@b+3
 14122   01439A  EC76  F09D         	call	___flmul	;wreg free
 14123   01439E  C505  F51E         	movff	?___flmul,___fladd@b
 14124   0143A2  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 14125   0143A6  C507  F520         	movff	?___flmul+2,___fladd@b+2
 14126   0143AA  C508  F521         	movff	?___flmul+3,___fladd@b+3
 14127   0143AE  EC1B  F09B         	call	___fladd	;wreg free
 14128   0143B2  C51E  F52E         	movff	?___fladd,___fltol@f1
 14129   0143B6  C51F  F52F         	movff	?___fladd+1,___fltol@f1+1
 14130   0143BA  C520  F530         	movff	?___fladd+2,___fltol@f1+2
 14131   0143BE  C521  F531         	movff	?___fladd+3,___fltol@f1+3
 14132   0143C2  ECA4  F0AF         	call	___fltol	;wreg free
 14133   0143C6  C52E  F592         	movff	?___fltol,___rem_pio2f@n
 14134   0143CA  C52F  F593         	movff	?___fltol+1,___rem_pio2f@n+1
 14135   0143CE  C530  F594         	movff	?___fltol+2,___rem_pio2f@n+2
 14136   0143D2  C531  F595         	movff	?___fltol+3,___rem_pio2f@n+3
 14137   0143D6  C592  F501         	movff	___rem_pio2f@n,___xxtofl@val
 14138   0143DA  C593  F502         	movff	___rem_pio2f@n+1,___xxtofl@val+1
 14139   0143DE  C594  F503         	movff	___rem_pio2f@n+2,___xxtofl@val+2
 14140   0143E2  C595  F504         	movff	___rem_pio2f@n+3,___xxtofl@val+3
 14141   0143E6  0E01               	movlw	1
 14142   0143E8  ECCC  F0AB         	call	___xxtofl
 14143   0143EC  C501  F58A         	movff	?___xxtofl,___rem_pio2f@fn
 14144   0143F0  C502  F58B         	movff	?___xxtofl+1,___rem_pio2f@fn+1
 14145   0143F4  C503  F58C         	movff	?___xxtofl+2,___rem_pio2f@fn+2
 14146   0143F8  C504  F58D         	movff	?___xxtofl+3,___rem_pio2f@fn+3
 14147   0143FC  0EDA               	movlw	218
 14148   0143FE  6E09               	movwf	___flmul@a^(0+1280),c
 14149   014400  0E0F               	movlw	15
 14150   014402  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14151   014404  0EC9               	movlw	201
 14152   014406  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14153   014408  0E3F               	movlw	63
 14154   01440A  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14155   01440C  C58A  F505         	movff	___rem_pio2f@fn,___flmul@b
 14156   014410  C58B  F506         	movff	___rem_pio2f@fn+1,___flmul@b+1
 14157   014414  C58C  F507         	movff	___rem_pio2f@fn+2,___flmul@b+2
 14158   014418  C58D  F508         	movff	___rem_pio2f@fn+3,___flmul@b+3
 14159   01441C  EC76  F09D         	call	___flmul	;wreg free
 14160   014420  C505  F571         	movff	?___flmul,___flsub@a
 14161   014424  C506  F572         	movff	?___flmul+1,___flsub@a+1
 14162   014428  C507  F573         	movff	?___flmul+2,___flsub@a+2
 14163   01442C  C508  F574         	movff	?___flmul+3,___flsub@a+3
 14164   014430  C58E  F56D         	movff	___rem_pio2f@t,___flsub@b
 14165   014434  C58F  F56E         	movff	___rem_pio2f@t+1,___flsub@b+1
 14166   014438  C590  F56F         	movff	___rem_pio2f@t+2,___flsub@b+2
 14167   01443C  C591  F570         	movff	___rem_pio2f@t+3,___flsub@b+3
 14168   014440  ECD5  F0B5         	call	___flsub	;wreg free
 14169   014444  C56D  F581         	movff	?___flsub,___rem_pio2f$3501
 14170   014448  C56E  F582         	movff	?___flsub+1,___rem_pio2f$3501+1
 14171   01444C  C56F  F583         	movff	?___flsub+2,___rem_pio2f$3501+2
 14172   014450  C570  F584         	movff	?___flsub+3,___rem_pio2f$3501+3
 14173   014454  C581  F56D         	movff	___rem_pio2f$3501,___flsub@b
 14174   014458  C582  F56E         	movff	___rem_pio2f$3501+1,___flsub@b+1
 14175   01445C  C583  F56F         	movff	___rem_pio2f$3501+2,___flsub@b+2
 14176   014460  C584  F570         	movff	___rem_pio2f$3501+3,___flsub@b+3
 14177   014464  0EA3               	movlw	163
 14178   014466  6E09               	movwf	___flmul@a^(0+1280),c
 14179   014468  0E85               	movlw	133
 14180   01446A  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14181   01446C  0E88               	movlw	136
 14182   01446E  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14183   014470  0E32               	movlw	50
 14184   014472  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14185   014474  C58A  F505         	movff	___rem_pio2f@fn,___flmul@b
 14186   014478  C58B  F506         	movff	___rem_pio2f@fn+1,___flmul@b+1
 14187   01447C  C58C  F507         	movff	___rem_pio2f@fn+2,___flmul@b+2
 14188   014480  C58D  F508         	movff	___rem_pio2f@fn+3,___flmul@b+3
 14189   014484  EC76  F09D         	call	___flmul	;wreg free
 14190   014488  C505  F571         	movff	?___flmul,___flsub@a
 14191   01448C  C506  F572         	movff	?___flmul+1,___flsub@a+1
 14192   014490  C507  F573         	movff	?___flmul+2,___flsub@a+2
 14193   014494  C508  F574         	movff	?___flmul+3,___flsub@a+3
 14194   014498  ECD5  F0B5         	call	___flsub	;wreg free
 14195   01449C  C579  F4D9         	movff	___rem_pio2f@y,fsr2l
 14196   0144A0  C57A  F4DA         	movff	___rem_pio2f@y+1,fsr2h
 14197   0144A4  0105               	movlb	5	; () banked
 14198   0144A6  C56D  F4DE         	movff	?___flsub,postinc2
 14199   0144AA  C56E  F4DE         	movff	?___flsub+1,postinc2
 14200   0144AE  C56F  F4DE         	movff	?___flsub+2,postinc2
 14201   0144B2  C570  F4DE         	movff	?___flsub+3,postinc2
 14202   0144B6                     
 14203                           ; BSR set to: 5
 14204   0144B6  5185               	movf	___rem_pio2f@sign& (0+255),w,b
 14205   0144B8  B4D8               	btfsc	status,2,c
 14206   0144BA  EF61  F0A2         	goto	u7291
 14207   0144BE  EF63  F0A2         	goto	u7290
 14208   0144C2                     u7291:
 14209   0144C2  EF8C  F0A2         	goto	l2239
 14210   0144C6                     u7290:
 14211   0144C6                     l9299:
 14212                           
 14213                           ; BSR set to: 5
 14214   0144C6  C579  F4D9         	movff	___rem_pio2f@y,fsr2l
 14215   0144CA  C57A  F4DA         	movff	___rem_pio2f@y+1,fsr2h
 14216   0144CE  C4DE F501          	movff	postinc2,___flneg@f1
 14217   0144D2  C4DE F502          	movff	postinc2,___flneg@f1+1
 14218   0144D6  C4DE F503          	movff	postinc2,___flneg@f1+2
 14219   0144DA  C4DE F504          	movff	postinc2,___flneg@f1+3
 14220   0144DE  EC57  F0B6         	call	___flneg	;wreg free
 14221   0144E2  C579  F4D9         	movff	___rem_pio2f@y,fsr2l
 14222   0144E6  C57A  F4DA         	movff	___rem_pio2f@y+1,fsr2h
 14223   0144EA  C501  F4DE         	movff	?___flneg,postinc2
 14224   0144EE  C502  F4DE         	movff	?___flneg+1,postinc2
 14225   0144F2  C503  F4DE         	movff	?___flneg+2,postinc2
 14226   0144F6  C504  F4DE         	movff	?___flneg+3,postinc2
 14227   0144FA  C592  F57B         	movff	___rem_pio2f@n,??___rem_pio2f
 14228   0144FE  C593  F57C         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
 14229   014502  0105               	movlb	5	; () banked
 14230   014504  1F7B               	comf	??___rem_pio2f& (0+255),f,b
 14231   014506  1F7C               	comf	(??___rem_pio2f+1)& (0+255),f,b
 14232   014508  4B7B               	infsnz	??___rem_pio2f& (0+255),f,b
 14233   01450A  2B7C               	incf	(??___rem_pio2f+1)& (0+255),f,b
 14234   01450C  C57B  F575         	movff	??___rem_pio2f,?___rem_pio2f
 14235   014510  C57C  F576         	movff	??___rem_pio2f+1,?___rem_pio2f+1
 14236   014514  EF5C  F0A3         	goto	l2240
 14237   014518                     l2239:
 14238                           
 14239                           ; BSR set to: 5
 14240   014518  C592  F575         	movff	___rem_pio2f@n,?___rem_pio2f
 14241   01451C  C593  F576         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
 14242   014520  EF5C  F0A3         	goto	l2240
 14243   014524                     l9305:
 14244                           
 14245                           ; BSR set to: 5
 14246   014524  C575  F56D         	movff	___rem_pio2f@x,fabsf@x
 14247   014528  C576  F56E         	movff	___rem_pio2f@x+1,fabsf@x+1
 14248   01452C  C577  F56F         	movff	___rem_pio2f@x+2,fabsf@x+2
 14249   014530  C578  F570         	movff	___rem_pio2f@x+3,fabsf@x+3
 14250   014534  EC73  F0B6         	call	_fabsf	;wreg free
 14251   014538  C56D  F58E         	movff	?_fabsf,___rem_pio2f@t
 14252   01453C  C56E  F58F         	movff	?_fabsf+1,___rem_pio2f@t+1
 14253   014540  C56F  F590         	movff	?_fabsf+2,___rem_pio2f@t+2
 14254   014544  C570  F591         	movff	?_fabsf+3,___rem_pio2f@t+3
 14255   014548  0E00               	movlw	0
 14256   01454A  6E22               	movwf	___fladd@a^(0+1280),c
 14257   01454C  0E00               	movlw	0
 14258   01454E  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 14259   014550  0E00               	movlw	0
 14260   014552  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 14261   014554  0E3F               	movlw	63
 14262   014556  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 14263   014558  0E83               	movlw	131
 14264   01455A  6E09               	movwf	___flmul@a^(0+1280),c
 14265   01455C  0EF9               	movlw	249
 14266   01455E  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14267   014560  0E22               	movlw	34
 14268   014562  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14269   014564  0E3F               	movlw	63
 14270   014566  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14271   014568  C58E  F505         	movff	___rem_pio2f@t,___flmul@b
 14272   01456C  C58F  F506         	movff	___rem_pio2f@t+1,___flmul@b+1
 14273   014570  C590  F507         	movff	___rem_pio2f@t+2,___flmul@b+2
 14274   014574  C591  F508         	movff	___rem_pio2f@t+3,___flmul@b+3
 14275   014578  EC76  F09D         	call	___flmul	;wreg free
 14276   01457C  C505  F51E         	movff	?___flmul,___fladd@b
 14277   014580  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 14278   014584  C507  F520         	movff	?___flmul+2,___fladd@b+2
 14279   014588  C508  F521         	movff	?___flmul+3,___fladd@b+3
 14280   01458C  EC1B  F09B         	call	___fladd	;wreg free
 14281   014590  C51E  F52E         	movff	?___fladd,___fltol@f1
 14282   014594  C51F  F52F         	movff	?___fladd+1,___fltol@f1+1
 14283   014598  C520  F530         	movff	?___fladd+2,___fltol@f1+2
 14284   01459C  C521  F531         	movff	?___fladd+3,___fltol@f1+3
 14285   0145A0  ECA4  F0AF         	call	___fltol	;wreg free
 14286   0145A4  C52E  F592         	movff	?___fltol,___rem_pio2f@n
 14287   0145A8  C52F  F593         	movff	?___fltol+1,___rem_pio2f@n+1
 14288   0145AC  C530  F594         	movff	?___fltol+2,___rem_pio2f@n+2
 14289   0145B0  C531  F595         	movff	?___fltol+3,___rem_pio2f@n+3
 14290   0145B4  C592  F501         	movff	___rem_pio2f@n,___xxtofl@val
 14291   0145B8  C593  F502         	movff	___rem_pio2f@n+1,___xxtofl@val+1
 14292   0145BC  C594  F503         	movff	___rem_pio2f@n+2,___xxtofl@val+2
 14293   0145C0  C595  F504         	movff	___rem_pio2f@n+3,___xxtofl@val+3
 14294   0145C4  0E01               	movlw	1
 14295   0145C6  ECCC  F0AB         	call	___xxtofl
 14296   0145CA  C501  F58A         	movff	?___xxtofl,___rem_pio2f@fn
 14297   0145CE  C502  F58B         	movff	?___xxtofl+1,___rem_pio2f@fn+1
 14298   0145D2  C503  F58C         	movff	?___xxtofl+2,___rem_pio2f@fn+2
 14299   0145D6  C504  F58D         	movff	?___xxtofl+3,___rem_pio2f@fn+3
 14300   0145DA  0EDA               	movlw	218
 14301   0145DC  6E09               	movwf	___flmul@a^(0+1280),c
 14302   0145DE  0E0F               	movlw	15
 14303   0145E0  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14304   0145E2  0EC9               	movlw	201
 14305   0145E4  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14306   0145E6  0E3F               	movlw	63
 14307   0145E8  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14308   0145EA  C58A  F505         	movff	___rem_pio2f@fn,___flmul@b
 14309   0145EE  C58B  F506         	movff	___rem_pio2f@fn+1,___flmul@b+1
 14310   0145F2  C58C  F507         	movff	___rem_pio2f@fn+2,___flmul@b+2
 14311   0145F6  C58D  F508         	movff	___rem_pio2f@fn+3,___flmul@b+3
 14312   0145FA  EC76  F09D         	call	___flmul	;wreg free
 14313   0145FE  C505  F571         	movff	?___flmul,___flsub@a
 14314   014602  C506  F572         	movff	?___flmul+1,___flsub@a+1
 14315   014606  C507  F573         	movff	?___flmul+2,___flsub@a+2
 14316   01460A  C508  F574         	movff	?___flmul+3,___flsub@a+3
 14317   01460E  C58E  F56D         	movff	___rem_pio2f@t,___flsub@b
 14318   014612  C58F  F56E         	movff	___rem_pio2f@t+1,___flsub@b+1
 14319   014616  C590  F56F         	movff	___rem_pio2f@t+2,___flsub@b+2
 14320   01461A  C591  F570         	movff	___rem_pio2f@t+3,___flsub@b+3
 14321   01461E  ECD5  F0B5         	call	___flsub	;wreg free
 14322   014622  C56D  F581         	movff	?___flsub,___rem_pio2f$3501
 14323   014626  C56E  F582         	movff	?___flsub+1,___rem_pio2f$3501+1
 14324   01462A  C56F  F583         	movff	?___flsub+2,___rem_pio2f$3501+2
 14325   01462E  C570  F584         	movff	?___flsub+3,___rem_pio2f$3501+3
 14326   014632  C581  F56D         	movff	___rem_pio2f$3501,___flsub@b
 14327   014636  C582  F56E         	movff	___rem_pio2f$3501+1,___flsub@b+1
 14328   01463A  C583  F56F         	movff	___rem_pio2f$3501+2,___flsub@b+2
 14329   01463E  C584  F570         	movff	___rem_pio2f$3501+3,___flsub@b+3
 14330   014642  0EA3               	movlw	163
 14331   014644  6E09               	movwf	___flmul@a^(0+1280),c
 14332   014646  0E85               	movlw	133
 14333   014648  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14334   01464A  0E88               	movlw	136
 14335   01464C  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14336   01464E  0E32               	movlw	50
 14337   014650  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14338   014652  C58A  F505         	movff	___rem_pio2f@fn,___flmul@b
 14339   014656  C58B  F506         	movff	___rem_pio2f@fn+1,___flmul@b+1
 14340   01465A  C58C  F507         	movff	___rem_pio2f@fn+2,___flmul@b+2
 14341   01465E  C58D  F508         	movff	___rem_pio2f@fn+3,___flmul@b+3
 14342   014662  EC76  F09D         	call	___flmul	;wreg free
 14343   014666  C505  F571         	movff	?___flmul,___flsub@a
 14344   01466A  C506  F572         	movff	?___flmul+1,___flsub@a+1
 14345   01466E  C507  F573         	movff	?___flmul+2,___flsub@a+2
 14346   014672  C508  F574         	movff	?___flmul+3,___flsub@a+3
 14347   014676  ECD5  F0B5         	call	___flsub	;wreg free
 14348   01467A  C56D  F57D         	movff	?___flsub,___rem_pio2f@ty
 14349   01467E  C56E  F57E         	movff	?___flsub+1,___rem_pio2f@ty+1
 14350   014682  C56F  F57F         	movff	?___flsub+2,___rem_pio2f@ty+2
 14351   014686  C570  F580         	movff	?___flsub+3,___rem_pio2f@ty+3
 14352   01468A  C579  F4D9         	movff	___rem_pio2f@y,fsr2l
 14353   01468E  C57A  F4DA         	movff	___rem_pio2f@y+1,fsr2h
 14354   014692  C57D  F4DE         	movff	___rem_pio2f@ty,postinc2
 14355   014696  C57E  F4DE         	movff	___rem_pio2f@ty+1,postinc2
 14356   01469A  C57F  F4DE         	movff	___rem_pio2f@ty+2,postinc2
 14357   01469E  C580  F4DE         	movff	___rem_pio2f@ty+3,postinc2
 14358   0146A2  0105               	movlb	5	; () banked
 14359   0146A4  5185               	movf	___rem_pio2f@sign& (0+255),w,b
 14360   0146A6  B4D8               	btfsc	status,2,c
 14361   0146A8  EF58  F0A3         	goto	u7301
 14362   0146AC  EF5A  F0A3         	goto	u7300
 14363   0146B0                     u7301:
 14364   0146B0  EF8C  F0A2         	goto	l2239
 14365   0146B4                     u7300:
 14366   0146B4  EF63  F0A2         	goto	l9299
 14367   0146B8                     l2240:
 14368                           
 14369                           ; BSR set to: 5
 14370   0146B8  0012               	return		;funcret
 14371   0146BA                     __end_of___rem_pio2f:
 14372                           	callstack 0
 14373                           
 14374 ;; *************** function ___fltol *****************
 14375 ;; Defined at:
 14376 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
 14377 ;; Parameters:    Size  Location     Type
 14378 ;;  f1              4   45[COMRAM] int 
 14379 ;; Auto vars:     Size  Location     Type
 14380 ;;  exp1            1   54[COMRAM] unsigned char 
 14381 ;;  sign1           1   53[COMRAM] unsigned char 
 14382 ;; Return value:  Size  Location     Type
 14383 ;;                  4   45[COMRAM] long 
 14384 ;; Registers used:
 14385 ;;		wreg, status,2, status,0
 14386 ;; Tracked objects:
 14387 ;;		On entry : 0/0
 14388 ;;		On exit  : 0/0
 14389 ;;		Unchanged: 0/0
 14390 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14391 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14393 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14394 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14395 ;;Total ram usage:       10 bytes
 14396 ;; Hardware stack levels used: 1
 14397 ;; This function calls:
 14398 ;;		Nothing
 14399 ;; This function is called by:
 14400 ;;		___rem_pio2f
 14401 ;;		_efgtoa
 14402 ;; This function uses a non-reentrant model
 14403 ;;
 14404                           
 14405                           	psect	text31
 14406   015F48                     __ptext31:
 14407                           	callstack 0
 14408   015F48                     ___fltol:
 14409                           	callstack 122
 14410   015F48  3430               	rlcf	(___fltol@f1+2)^(0+1280),w,c
 14411   015F4A  3431               	rlcf	(___fltol@f1+3)^(0+1280),w,c
 14412   015F4C  6E37               	movwf	___fltol@exp1^(0+1280),c
 14413   015F4E  5037               	movf	___fltol@exp1^(0+1280),w,c
 14414   015F50  A4D8               	btfss	status,2,c
 14415   015F52  EFAD  F0AF         	goto	u5821
 14416   015F56  EFAF  F0AF         	goto	u5820
 14417   015F5A                     u5821:
 14418   015F5A  EFB9  F0AF         	goto	l8317
 14419   015F5E                     u5820:
 14420   015F5E                     l8313:
 14421   015F5E  0E00               	movlw	0
 14422   015F60  6E2E               	movwf	?___fltol^(0+1280),c
 14423   015F62  0E00               	movlw	0
 14424   015F64  6E2F               	movwf	(?___fltol+1)^(0+1280),c
 14425   015F66  0E00               	movlw	0
 14426   015F68  6E30               	movwf	(?___fltol+2)^(0+1280),c
 14427   015F6A  0E00               	movlw	0
 14428   015F6C  6E31               	movwf	(?___fltol+3)^(0+1280),c
 14429   015F6E  EF26  F0B0         	goto	l1682
 14430   015F72                     l8317:
 14431   015F72  C52E  F532         	movff	___fltol@f1,??___fltol
 14432   015F76  C52F  F533         	movff	___fltol@f1+1,??___fltol+1
 14433   015F7A  C530  F534         	movff	___fltol@f1+2,??___fltol+2
 14434   015F7E  C531  F535         	movff	___fltol@f1+3,??___fltol+3
 14435   015F82  0E20               	movlw	32
 14436   015F84  EFC9  F0AF         	goto	u5830
 14437   015F88                     u5835:
 14438   015F88  90D8               	bcf	status,0,c
 14439   015F8A  3235               	rrcf	(??___fltol+3)^(0+1280),f,c
 14440   015F8C  3234               	rrcf	(??___fltol+2)^(0+1280),f,c
 14441   015F8E  3233               	rrcf	(??___fltol+1)^(0+1280),f,c
 14442   015F90  3232               	rrcf	??___fltol^(0+1280),f,c
 14443   015F92                     u5830:
 14444   015F92  2EE8               	decfsz	wreg,f,c
 14445   015F94  EFC4  F0AF         	goto	u5835
 14446   015F98  5032               	movf	??___fltol^(0+1280),w,c
 14447   015F9A  6E36               	movwf	___fltol@sign1^(0+1280),c
 14448   015F9C  8E30               	bsf	(___fltol@f1+2)^(0+1280),7,c
 14449   015F9E  0EFF               	movlw	255
 14450   015FA0  162E               	andwf	___fltol@f1^(0+1280),f,c
 14451   015FA2  0EFF               	movlw	255
 14452   015FA4  162F               	andwf	(___fltol@f1+1)^(0+1280),f,c
 14453   015FA6  0EFF               	movlw	255
 14454   015FA8  1630               	andwf	(___fltol@f1+2)^(0+1280),f,c
 14455   015FAA  0E00               	movlw	0
 14456   015FAC  1631               	andwf	(___fltol@f1+3)^(0+1280),f,c
 14457   015FAE  0E96               	movlw	150
 14458   015FB0  5E37               	subwf	___fltol@exp1^(0+1280),f,c
 14459   015FB2  BE37               	btfsc	___fltol@exp1^(0+1280),7,c
 14460   015FB4  EFE0  F0AF         	goto	u5840
 14461   015FB8  EFDE  F0AF         	goto	u5841
 14462   015FBC                     u5841:
 14463   015FBC  EFF6  F0AF         	goto	l8337
 14464   015FC0                     u5840:
 14465   015FC0  5037               	movf	___fltol@exp1^(0+1280),w,c
 14466   015FC2  0A80               	xorlw	128
 14467   015FC4  0F97               	addlw	151
 14468   015FC6  B0D8               	btfsc	status,0,c
 14469   015FC8  EFE8  F0AF         	goto	u5851
 14470   015FCC  EFEA  F0AF         	goto	u5850
 14471   015FD0                     u5851:
 14472   015FD0  EFEC  F0AF         	goto	l8333
 14473   015FD4                     u5850:
 14474   015FD4  EFAF  F0AF         	goto	l8313
 14475   015FD8                     l8333:
 14476   015FD8  90D8               	bcf	status,0,c
 14477   015FDA  3231               	rrcf	(___fltol@f1+3)^(0+1280),f,c
 14478   015FDC  3230               	rrcf	(___fltol@f1+2)^(0+1280),f,c
 14479   015FDE  322F               	rrcf	(___fltol@f1+1)^(0+1280),f,c
 14480   015FE0  322E               	rrcf	___fltol@f1^(0+1280),f,c
 14481   015FE2  3E37               	incfsz	___fltol@exp1^(0+1280),f,c
 14482   015FE4  EFEC  F0AF         	goto	l8333
 14483   015FE8  EF0E  F0B0         	goto	l8347
 14484   015FEC                     l8337:
 14485   015FEC  0E1F               	movlw	31
 14486   015FEE  6437               	cpfsgt	___fltol@exp1^(0+1280),c
 14487   015FF0  EFFC  F0AF         	goto	u5861
 14488   015FF4  EFFE  F0AF         	goto	u5860
 14489   015FF8                     u5861:
 14490   015FF8  EF06  F0B0         	goto	l8345
 14491   015FFC                     u5860:
 14492   015FFC  EFAF  F0AF         	goto	l8313
 14493   016000                     l8343:
 14494   016000  90D8               	bcf	status,0,c
 14495   016002  362E               	rlcf	___fltol@f1^(0+1280),f,c
 14496   016004  362F               	rlcf	(___fltol@f1+1)^(0+1280),f,c
 14497   016006  3630               	rlcf	(___fltol@f1+2)^(0+1280),f,c
 14498   016008  3631               	rlcf	(___fltol@f1+3)^(0+1280),f,c
 14499   01600A  0637               	decf	___fltol@exp1^(0+1280),f,c
 14500   01600C                     l8345:
 14501   01600C  5037               	movf	___fltol@exp1^(0+1280),w,c
 14502   01600E  A4D8               	btfss	status,2,c
 14503   016010  EF0C  F0B0         	goto	u5871
 14504   016014  EF0E  F0B0         	goto	u5870
 14505   016018                     u5871:
 14506   016018  EF00  F0B0         	goto	l8343
 14507   01601C                     u5870:
 14508   01601C                     l8347:
 14509   01601C  5036               	movf	___fltol@sign1^(0+1280),w,c
 14510   01601E  B4D8               	btfsc	status,2,c
 14511   016020  EF14  F0B0         	goto	u5881
 14512   016024  EF16  F0B0         	goto	u5880
 14513   016028                     u5881:
 14514   016028  EF1E  F0B0         	goto	l8351
 14515   01602C                     u5880:
 14516   01602C  1E31               	comf	(___fltol@f1+3)^(0+1280),f,c
 14517   01602E  1E30               	comf	(___fltol@f1+2)^(0+1280),f,c
 14518   016030  1E2F               	comf	(___fltol@f1+1)^(0+1280),f,c
 14519   016032  6C2E               	negf	___fltol@f1^(0+1280),c
 14520   016034  0E00               	movlw	0
 14521   016036  222F               	addwfc	(___fltol@f1+1)^(0+1280),f,c
 14522   016038  2230               	addwfc	(___fltol@f1+2)^(0+1280),f,c
 14523   01603A  2231               	addwfc	(___fltol@f1+3)^(0+1280),f,c
 14524   01603C                     l8351:
 14525   01603C  C52E  F52E         	movff	___fltol@f1,?___fltol
 14526   016040  C52F  F52F         	movff	___fltol@f1+1,?___fltol+1
 14527   016044  C530  F530         	movff	___fltol@f1+2,?___fltol+2
 14528   016048  C531  F531         	movff	___fltol@f1+3,?___fltol+3
 14529   01604C                     l1682:
 14530   01604C  0012               	return		;funcret
 14531   01604E                     __end_of___fltol:
 14532                           	callstack 0
 14533                           
 14534 ;; *************** function ___cosdf *****************
 14535 ;; Defined at:
 14536 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__cosdf.c"
 14537 ;; Parameters:    Size  Location     Type
 14538 ;;  x               4   45[COMRAM] long 
 14539 ;; Auto vars:     Size  Location     Type
 14540 ;;  z               4   69[COMRAM] long 
 14541 ;;  w               4   65[COMRAM] long 
 14542 ;;  r               4   49[COMRAM] long 
 14543 ;; Return value:  Size  Location     Type
 14544 ;;                  4   45[COMRAM] float 
 14545 ;; Registers used:
 14546 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14547 ;; Tracked objects:
 14548 ;;		On entry : 0/0
 14549 ;;		On exit  : 0/0
 14550 ;;		Unchanged: 0/0
 14551 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14552 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14553 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14555 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14556 ;;Total ram usage:       28 bytes
 14557 ;; Hardware stack levels used: 1
 14558 ;; Hardware stack levels required when called: 1
 14559 ;; This function calls:
 14560 ;;		___fladd
 14561 ;;		___flmul
 14562 ;; This function is called by:
 14563 ;;		_cosf
 14564 ;;		_sinf
 14565 ;; This function uses a non-reentrant model
 14566 ;;
 14567                           
 14568                           	psect	text32
 14569   01559A                     __ptext32:
 14570                           	callstack 0
 14571   01559A                     ___cosdf:
 14572                           	callstack 123
 14573   01559A  C52E  F505         	movff	___cosdf@x,___flmul@b
 14574   01559E  C52F  F506         	movff	___cosdf@x+1,___flmul@b+1
 14575   0155A2  C530  F507         	movff	___cosdf@x+2,___flmul@b+2
 14576   0155A6  C531  F508         	movff	___cosdf@x+3,___flmul@b+3
 14577   0155AA  C52E  F509         	movff	___cosdf@x,___flmul@a
 14578   0155AE  C52F  F50A         	movff	___cosdf@x+1,___flmul@a+1
 14579   0155B2  C530  F50B         	movff	___cosdf@x+2,___flmul@a+2
 14580   0155B6  C531  F50C         	movff	___cosdf@x+3,___flmul@a+3
 14581   0155BA  EC76  F09D         	call	___flmul	;wreg free
 14582   0155BE  C505  F546         	movff	?___flmul,___cosdf@z
 14583   0155C2  C506  F547         	movff	?___flmul+1,___cosdf@z+1
 14584   0155C6  C507  F548         	movff	?___flmul+2,___cosdf@z+2
 14585   0155CA  C508  F549         	movff	?___flmul+3,___cosdf@z+3
 14586   0155CE  C546  F505         	movff	___cosdf@z,___flmul@b
 14587   0155D2  C547  F506         	movff	___cosdf@z+1,___flmul@b+1
 14588   0155D6  C548  F507         	movff	___cosdf@z+2,___flmul@b+2
 14589   0155DA  C549  F508         	movff	___cosdf@z+3,___flmul@b+3
 14590   0155DE  C546  F509         	movff	___cosdf@z,___flmul@a
 14591   0155E2  C547  F50A         	movff	___cosdf@z+1,___flmul@a+1
 14592   0155E6  C548  F50B         	movff	___cosdf@z+2,___flmul@a+2
 14593   0155EA  C549  F50C         	movff	___cosdf@z+3,___flmul@a+3
 14594   0155EE  EC76  F09D         	call	___flmul	;wreg free
 14595   0155F2  C505  F542         	movff	?___flmul,___cosdf@w
 14596   0155F6  C506  F543         	movff	?___flmul+1,___cosdf@w+1
 14597   0155FA  C507  F544         	movff	?___flmul+2,___cosdf@w+2
 14598   0155FE  C508  F545         	movff	?___flmul+3,___cosdf@w+3
 14599   015602  0E17               	movlw	23
 14600   015604  6E09               	movwf	___flmul@a^(0+1280),c
 14601   015606  0E9A               	movlw	154
 14602   015608  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14603   01560A  0ECC               	movlw	204
 14604   01560C  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14605   01560E  0E37               	movlw	55
 14606   015610  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14607   015612  C546  F505         	movff	___cosdf@z,___flmul@b
 14608   015616  C547  F506         	movff	___cosdf@z+1,___flmul@b+1
 14609   01561A  C548  F507         	movff	___cosdf@z+2,___flmul@b+2
 14610   01561E  C549  F508         	movff	___cosdf@z+3,___flmul@b+3
 14611   015622  EC76  F09D         	call	___flmul	;wreg free
 14612   015626  C505  F51E         	movff	?___flmul,___fladd@b
 14613   01562A  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 14614   01562E  C507  F520         	movff	?___flmul+2,___fladd@b+2
 14615   015632  C508  F521         	movff	?___flmul+3,___fladd@b+3
 14616   015636  0E3F               	movlw	63
 14617   015638  6E22               	movwf	___fladd@a^(0+1280),c
 14618   01563A  0E04               	movlw	4
 14619   01563C  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 14620   01563E  0EB6               	movlw	182
 14621   015640  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 14622   015642  0EBA               	movlw	186
 14623   015644  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 14624   015646  EC1B  F09B         	call	___fladd	;wreg free
 14625   01564A  C51E  F532         	movff	?___fladd,___cosdf@r
 14626   01564E  C51F  F533         	movff	?___fladd+1,___cosdf@r+1
 14627   015652  C520  F534         	movff	?___fladd+2,___cosdf@r+2
 14628   015656  C521  F535         	movff	?___fladd+3,___cosdf@r+3
 14629   01565A  0E00               	movlw	0
 14630   01565C  6E22               	movwf	___fladd@a^(0+1280),c
 14631   01565E  0E00               	movlw	0
 14632   015660  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 14633   015662  0E80               	movlw	128
 14634   015664  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 14635   015666  0E3F               	movlw	63
 14636   015668  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 14637   01566A  0E00               	movlw	0
 14638   01566C  6E09               	movwf	___flmul@a^(0+1280),c
 14639   01566E  0E00               	movlw	0
 14640   015670  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14641   015672  0E00               	movlw	0
 14642   015674  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14643   015676  0EBF               	movlw	191
 14644   015678  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14645   01567A  C546  F505         	movff	___cosdf@z,___flmul@b
 14646   01567E  C547  F506         	movff	___cosdf@z+1,___flmul@b+1
 14647   015682  C548  F507         	movff	___cosdf@z+2,___flmul@b+2
 14648   015686  C549  F508         	movff	___cosdf@z+3,___flmul@b+3
 14649   01568A  EC76  F09D         	call	___flmul	;wreg free
 14650   01568E  C505  F51E         	movff	?___flmul,___fladd@b
 14651   015692  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 14652   015696  C507  F520         	movff	?___flmul+2,___fladd@b+2
 14653   01569A  C508  F521         	movff	?___flmul+3,___fladd@b+3
 14654   01569E  EC1B  F09B         	call	___fladd	;wreg free
 14655   0156A2  C51E  F536         	movff	?___fladd,___cosdf$3498
 14656   0156A6  C51F  F537         	movff	?___fladd+1,___cosdf$3498+1
 14657   0156AA  C520  F538         	movff	?___fladd+2,___cosdf$3498+2
 14658   0156AE  C521  F539         	movff	?___fladd+3,___cosdf$3498+3
 14659   0156B2  C546  F509         	movff	___cosdf@z,___flmul@a
 14660   0156B6  C547  F50A         	movff	___cosdf@z+1,___flmul@a+1
 14661   0156BA  C548  F50B         	movff	___cosdf@z+2,___flmul@a+2
 14662   0156BE  C549  F50C         	movff	___cosdf@z+3,___flmul@a+3
 14663   0156C2  C542  F505         	movff	___cosdf@w,___flmul@b
 14664   0156C6  C543  F506         	movff	___cosdf@w+1,___flmul@b+1
 14665   0156CA  C544  F507         	movff	___cosdf@w+2,___flmul@b+2
 14666   0156CE  C545  F508         	movff	___cosdf@w+3,___flmul@b+3
 14667   0156D2  EC76  F09D         	call	___flmul	;wreg free
 14668   0156D6  C505  F53A         	movff	?___flmul,___cosdf$3499
 14669   0156DA  C506  F53B         	movff	?___flmul+1,___cosdf$3499+1
 14670   0156DE  C507  F53C         	movff	?___flmul+2,___cosdf$3499+2
 14671   0156E2  C508  F53D         	movff	?___flmul+3,___cosdf$3499+3
 14672   0156E6  0E9F               	movlw	159
 14673   0156E8  6E09               	movwf	___flmul@a^(0+1280),c
 14674   0156EA  0EAA               	movlw	170
 14675   0156EC  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14676   0156EE  0E2A               	movlw	42
 14677   0156F0  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14678   0156F2  0E3D               	movlw	61
 14679   0156F4  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14680   0156F6  C542  F505         	movff	___cosdf@w,___flmul@b
 14681   0156FA  C543  F506         	movff	___cosdf@w+1,___flmul@b+1
 14682   0156FE  C544  F507         	movff	___cosdf@w+2,___flmul@b+2
 14683   015702  C545  F508         	movff	___cosdf@w+3,___flmul@b+3
 14684   015706  EC76  F09D         	call	___flmul	;wreg free
 14685   01570A  C505  F522         	movff	?___flmul,___fladd@a
 14686   01570E  C506  F523         	movff	?___flmul+1,___fladd@a+1
 14687   015712  C507  F524         	movff	?___flmul+2,___fladd@a+2
 14688   015716  C508  F525         	movff	?___flmul+3,___fladd@a+3
 14689   01571A  C536  F51E         	movff	___cosdf$3498,___fladd@b
 14690   01571E  C537  F51F         	movff	___cosdf$3498+1,___fladd@b+1
 14691   015722  C538  F520         	movff	___cosdf$3498+2,___fladd@b+2
 14692   015726  C539  F521         	movff	___cosdf$3498+3,___fladd@b+3
 14693   01572A  EC1B  F09B         	call	___fladd	;wreg free
 14694   01572E  C51E  F53E         	movff	?___fladd,___cosdf$3500
 14695   015732  C51F  F53F         	movff	?___fladd+1,___cosdf$3500+1
 14696   015736  C520  F540         	movff	?___fladd+2,___cosdf$3500+2
 14697   01573A  C521  F541         	movff	?___fladd+3,___cosdf$3500+3
 14698   01573E  C53E  F51E         	movff	___cosdf$3500,___fladd@b
 14699   015742  C53F  F51F         	movff	___cosdf$3500+1,___fladd@b+1
 14700   015746  C540  F520         	movff	___cosdf$3500+2,___fladd@b+2
 14701   01574A  C541  F521         	movff	___cosdf$3500+3,___fladd@b+3
 14702   01574E  C532  F509         	movff	___cosdf@r,___flmul@a
 14703   015752  C533  F50A         	movff	___cosdf@r+1,___flmul@a+1
 14704   015756  C534  F50B         	movff	___cosdf@r+2,___flmul@a+2
 14705   01575A  C535  F50C         	movff	___cosdf@r+3,___flmul@a+3
 14706   01575E  C53A  F505         	movff	___cosdf$3499,___flmul@b
 14707   015762  C53B  F506         	movff	___cosdf$3499+1,___flmul@b+1
 14708   015766  C53C  F507         	movff	___cosdf$3499+2,___flmul@b+2
 14709   01576A  C53D  F508         	movff	___cosdf$3499+3,___flmul@b+3
 14710   01576E  EC76  F09D         	call	___flmul	;wreg free
 14711   015772  C505  F522         	movff	?___flmul,___fladd@a
 14712   015776  C506  F523         	movff	?___flmul+1,___fladd@a+1
 14713   01577A  C507  F524         	movff	?___flmul+2,___fladd@a+2
 14714   01577E  C508  F525         	movff	?___flmul+3,___fladd@a+3
 14715   015782  EC1B  F09B         	call	___fladd	;wreg free
 14716   015786  C51E  F52E         	movff	?___fladd,?___cosdf
 14717   01578A  C51F  F52F         	movff	?___fladd+1,?___cosdf+1
 14718   01578E  C520  F530         	movff	?___fladd+2,?___cosdf+2
 14719   015792  C521  F531         	movff	?___fladd+3,?___cosdf+3
 14720   015796  0012               	return		;funcret
 14721   015798                     __end_of___cosdf:
 14722                           	callstack 0
 14723                           
 14724 ;; *************** function ___flge *****************
 14725 ;; Defined at:
 14726 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flge.c"
 14727 ;; Parameters:    Size  Location     Type
 14728 ;;  ff1             4   29[COMRAM] float 
 14729 ;;  ff2             4   33[COMRAM] float 
 14730 ;; Auto vars:     Size  Location     Type
 14731 ;;		None
 14732 ;; Return value:  Size  Location     Type
 14733 ;;		None               void
 14734 ;; Registers used:
 14735 ;;		wreg, status,2, status,0
 14736 ;; Tracked objects:
 14737 ;;		On entry : 0/0
 14738 ;;		On exit  : 0/0
 14739 ;;		Unchanged: 0/0
 14740 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14741 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14743 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14744 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14745 ;;Total ram usage:       12 bytes
 14746 ;; Hardware stack levels used: 1
 14747 ;; This function calls:
 14748 ;;		Nothing
 14749 ;; This function is called by:
 14750 ;;		_MPU6050_DMP_GetData
 14751 ;;		_main
 14752 ;;		_efgtoa
 14753 ;;		_AnalyzeMovementPattern
 14754 ;;		_CalculateConfidence
 14755 ;; This function uses a non-reentrant model
 14756 ;;
 14757                           
 14758                           	psect	text33
 14759   01604E                     __ptext33:
 14760                           	callstack 0
 14761   01604E                     ___flge:
 14762                           	callstack 122
 14763   01604E  0E00               	movlw	0
 14764   016050  141E               	andwf	___flge@ff1^(0+1280),w,c
 14765   016052  6E26               	movwf	??___flge^(0+1280),c
 14766   016054  0E00               	movlw	0
 14767   016056  141F               	andwf	(___flge@ff1+1)^(0+1280),w,c
 14768   016058  6E27               	movwf	(??___flge+1)^(0+1280),c
 14769   01605A  0E80               	movlw	128
 14770   01605C  1420               	andwf	(___flge@ff1+2)^(0+1280),w,c
 14771   01605E  6E28               	movwf	(??___flge+2)^(0+1280),c
 14772   016060  0E7F               	movlw	127
 14773   016062  1421               	andwf	(___flge@ff1+3)^(0+1280),w,c
 14774   016064  6E29               	movwf	(??___flge+3)^(0+1280),c
 14775   016066  5026               	movf	??___flge^(0+1280),w,c
 14776   016068  1027               	iorwf	(??___flge+1)^(0+1280),w,c
 14777   01606A  1028               	iorwf	(??___flge+2)^(0+1280),w,c
 14778   01606C  1029               	iorwf	(??___flge+3)^(0+1280),w,c
 14779   01606E  A4D8               	btfss	status,2,c
 14780   016070  EF3C  F0B0         	goto	u5761
 14781   016074  EF3E  F0B0         	goto	u5760
 14782   016078                     u5761:
 14783   016078  EF46  F0B0         	goto	l8285
 14784   01607C                     u5760:
 14785   01607C  0E00               	movlw	0
 14786   01607E  6E1E               	movwf	___flge@ff1^(0+1280),c
 14787   016080  0E00               	movlw	0
 14788   016082  6E1F               	movwf	(___flge@ff1+1)^(0+1280),c
 14789   016084  0E00               	movlw	0
 14790   016086  6E20               	movwf	(___flge@ff1+2)^(0+1280),c
 14791   016088  0E00               	movlw	0
 14792   01608A  6E21               	movwf	(___flge@ff1+3)^(0+1280),c
 14793   01608C                     l8285:
 14794   01608C  0E00               	movlw	0
 14795   01608E  1422               	andwf	___flge@ff2^(0+1280),w,c
 14796   016090  6E26               	movwf	??___flge^(0+1280),c
 14797   016092  0E00               	movlw	0
 14798   016094  1423               	andwf	(___flge@ff2+1)^(0+1280),w,c
 14799   016096  6E27               	movwf	(??___flge+1)^(0+1280),c
 14800   016098  0E80               	movlw	128
 14801   01609A  1424               	andwf	(___flge@ff2+2)^(0+1280),w,c
 14802   01609C  6E28               	movwf	(??___flge+2)^(0+1280),c
 14803   01609E  0E7F               	movlw	127
 14804   0160A0  1425               	andwf	(___flge@ff2+3)^(0+1280),w,c
 14805   0160A2  6E29               	movwf	(??___flge+3)^(0+1280),c
 14806   0160A4  5026               	movf	??___flge^(0+1280),w,c
 14807   0160A6  1027               	iorwf	(??___flge+1)^(0+1280),w,c
 14808   0160A8  1028               	iorwf	(??___flge+2)^(0+1280),w,c
 14809   0160AA  1029               	iorwf	(??___flge+3)^(0+1280),w,c
 14810   0160AC  A4D8               	btfss	status,2,c
 14811   0160AE  EF5B  F0B0         	goto	u5771
 14812   0160B2  EF5D  F0B0         	goto	u5770
 14813   0160B6                     u5771:
 14814   0160B6  EF65  F0B0         	goto	l8289
 14815   0160BA                     u5770:
 14816   0160BA  0E00               	movlw	0
 14817   0160BC  6E22               	movwf	___flge@ff2^(0+1280),c
 14818   0160BE  0E00               	movlw	0
 14819   0160C0  6E23               	movwf	(___flge@ff2+1)^(0+1280),c
 14820   0160C2  0E00               	movlw	0
 14821   0160C4  6E24               	movwf	(___flge@ff2+2)^(0+1280),c
 14822   0160C6  0E00               	movlw	0
 14823   0160C8  6E25               	movwf	(___flge@ff2+3)^(0+1280),c
 14824   0160CA                     l8289:
 14825   0160CA  AE21               	btfss	(___flge@ff1+3)^(0+1280),7,c
 14826   0160CC  EF6A  F0B0         	goto	u5781
 14827   0160D0  EF6C  F0B0         	goto	u5780
 14828   0160D4                     u5781:
 14829   0160D4  EF75  F0B0         	goto	l8293
 14830   0160D8                     u5780:
 14831   0160D8  6C1E               	negf	___flge@ff1^(0+1280),c
 14832   0160DA  1E1F               	comf	(___flge@ff1+1)^(0+1280),f,c
 14833   0160DC  B0D8               	btfsc	status,0,c
 14834   0160DE  2A1F               	incf	(___flge@ff1+1)^(0+1280),f,c
 14835   0160E0  1E20               	comf	(___flge@ff1+2)^(0+1280),f,c
 14836   0160E2  B0D8               	btfsc	status,0,c
 14837   0160E4  2A20               	incf	(___flge@ff1+2)^(0+1280),f,c
 14838   0160E6  0E80               	movlw	128
 14839   0160E8  5621               	subfwb	(___flge@ff1+3)^(0+1280),f,c
 14840   0160EA                     l8293:
 14841   0160EA  AE25               	btfss	(___flge@ff2+3)^(0+1280),7,c
 14842   0160EC  EF7A  F0B0         	goto	u5791
 14843   0160F0  EF7C  F0B0         	goto	u5790
 14844   0160F4                     u5791:
 14845   0160F4  EF85  F0B0         	goto	l1650
 14846   0160F8                     u5790:
 14847   0160F8  6C22               	negf	___flge@ff2^(0+1280),c
 14848   0160FA  1E23               	comf	(___flge@ff2+1)^(0+1280),f,c
 14849   0160FC  B0D8               	btfsc	status,0,c
 14850   0160FE  2A23               	incf	(___flge@ff2+1)^(0+1280),f,c
 14851   016100  1E24               	comf	(___flge@ff2+2)^(0+1280),f,c
 14852   016102  B0D8               	btfsc	status,0,c
 14853   016104  2A24               	incf	(___flge@ff2+2)^(0+1280),f,c
 14854   016106  0E80               	movlw	128
 14855   016108  5625               	subfwb	(___flge@ff2+3)^(0+1280),f,c
 14856   01610A                     l1650:
 14857   01610A  0E00               	movlw	0
 14858   01610C  1A1E               	xorwf	___flge@ff1^(0+1280),f,c
 14859   01610E  0E00               	movlw	0
 14860   016110  1A1F               	xorwf	(___flge@ff1+1)^(0+1280),f,c
 14861   016112  0E00               	movlw	0
 14862   016114  1A20               	xorwf	(___flge@ff1+2)^(0+1280),f,c
 14863   016116  0E80               	movlw	128
 14864   016118  1A21               	xorwf	(___flge@ff1+3)^(0+1280),f,c
 14865   01611A  0E00               	movlw	0
 14866   01611C  1A22               	xorwf	___flge@ff2^(0+1280),f,c
 14867   01611E  0E00               	movlw	0
 14868   016120  1A23               	xorwf	(___flge@ff2+1)^(0+1280),f,c
 14869   016122  0E00               	movlw	0
 14870   016124  1A24               	xorwf	(___flge@ff2+2)^(0+1280),f,c
 14871   016126  0E80               	movlw	128
 14872   016128  1A25               	xorwf	(___flge@ff2+3)^(0+1280),f,c
 14873   01612A  5022               	movf	___flge@ff2^(0+1280),w,c
 14874   01612C  5C1E               	subwf	___flge@ff1^(0+1280),w,c
 14875   01612E  5023               	movf	(___flge@ff2+1)^(0+1280),w,c
 14876   016130  581F               	subwfb	(___flge@ff1+1)^(0+1280),w,c
 14877   016132  5024               	movf	(___flge@ff2+2)^(0+1280),w,c
 14878   016134  5820               	subwfb	(___flge@ff1+2)^(0+1280),w,c
 14879   016136  5025               	movf	(___flge@ff2+3)^(0+1280),w,c
 14880   016138  5821               	subwfb	(___flge@ff1+3)^(0+1280),w,c
 14881   01613A  B0D8               	btfsc	status,0,c
 14882   01613C  EFA2  F0B0         	goto	u5801
 14883   016140  EFA4  F0B0         	goto	u5800
 14884   016144                     u5801:
 14885   016144  EFA7  F0B0         	goto	l8299
 14886   016148                     u5800:
 14887   016148  90D8               	bcf	status,0,c
 14888   01614A  EFA8  F0B0         	goto	l1655
 14889   01614E                     l8299:
 14890   01614E  80D8               	bsf	status,0,c
 14891   016150                     l1655:
 14892   016150  0012               	return		;funcret
 14893   016152                     __end_of___flge:
 14894                           	callstack 0
 14895                           
 14896 ;; *************** function _MPU6050_ReadAll *****************
 14897 ;; Defined at:
 14898 ;;		line 249 in file "MPU6050_DMP.c"
 14899 ;; Parameters:    Size  Location     Type
 14900 ;;  data            2  108[BANK5 ] PTR struct .
 14901 ;;		 -> MPU6050_Calibrate@data(43), MPU6050_DMP_GetData@sensor_data(43), 
 14902 ;; Auto vars:     Size  Location     Type
 14903 ;;  raw_data       14  122[BANK5 ] unsigned char [14]
 14904 ;;  raw_gz          2  148[BANK5 ] short 
 14905 ;;  raw_gy          2  146[BANK5 ] short 
 14906 ;;  raw_gx          2  144[BANK5 ] short 
 14907 ;;  raw_temp        2  142[BANK5 ] short 
 14908 ;;  raw_az          2  140[BANK5 ] short 
 14909 ;;  raw_ay          2  138[BANK5 ] short 
 14910 ;;  raw_ax          2  136[BANK5 ] short 
 14911 ;; Return value:  Size  Location     Type
 14912 ;;                  1    wreg      _Bool 
 14913 ;; Registers used:
 14914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14915 ;; Tracked objects:
 14916 ;;		On entry : 0/0
 14917 ;;		On exit  : 0/0
 14918 ;;		Unchanged: 0/0
 14919 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14920 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14921 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14923 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14924 ;;Total ram usage:       46 bytes
 14925 ;; Hardware stack levels used: 1
 14926 ;; Hardware stack levels required when called: 5
 14927 ;; This function calls:
 14928 ;;		_GetTimestamp_ms
 14929 ;;		_MPU6050_CombineBytes
 14930 ;;		_MPU6050_ReadRegisters
 14931 ;;		___fladd
 14932 ;;		___fldiv
 14933 ;;		___flmul
 14934 ;;		___flneg
 14935 ;;		___flsub
 14936 ;;		___xxtofl
 14937 ;;		_atan2f
 14938 ;;		_sqrtf
 14939 ;; This function is called by:
 14940 ;;		_MPU6050_DMP_GetData
 14941 ;;		_MPU6050_Calibrate
 14942 ;; This function uses a non-reentrant model
 14943 ;;
 14944                           
 14945                           	psect	text34
 14946   011F30                     __ptext34:
 14947                           	callstack 0
 14948   011F30                     _MPU6050_ReadAll:
 14949                           	callstack 120
 14950   011F30                     
 14951                           ;MPU6050_DMP.c: 251:     uint8_t raw_data[14];;MPU6050_DMP.c: 254:     if (!MPU6050_Read
      +                          Registers(0x3B, raw_data, 14)) {
 14952   011F30  0EDA               	movlw	low MPU6050_ReadAll@raw_data
 14953   011F32  6E13               	movwf	MPU6050_ReadRegisters@data^(0+1280),c
 14954   011F34  0E05               	movlw	high MPU6050_ReadAll@raw_data
 14955   011F36  6E14               	movwf	(MPU6050_ReadRegisters@data+1)^(0+1280),c
 14956   011F38  0E0E               	movlw	14
 14957   011F3A  6E15               	movwf	MPU6050_ReadRegisters@length^(0+1280),c
 14958   011F3C  0E3B               	movlw	59
 14959   011F3E  ECF1  F0B6         	call	_MPU6050_ReadRegisters
 14960   011F42  0900               	iorlw	0
 14961   011F44  A4D8               	btfss	status,2,c
 14962   011F46  EFA7  F08F         	goto	u7441
 14963   011F4A  EFA9  F08F         	goto	u7440
 14964   011F4E                     u7441:
 14965   011F4E  EFAC  F08F         	goto	l9473
 14966   011F52                     u7440:
 14967   011F52                     
 14968                           ;MPU6050_DMP.c: 255:         return 0;
 14969   011F52  0E00               	movlw	0
 14970   011F54  EF3F  F093         	goto	l614
 14971   011F58                     l9473:
 14972                           
 14973                           ;MPU6050_DMP.c: 259:     int16_t raw_ax = MPU6050_CombineBytes(raw_data[0], raw_data[1])
      +                          ;
 14974   011F58  C5DB  F501         	movff	MPU6050_ReadAll@raw_data+1,MPU6050_CombineBytes@low
 14975   011F5C  0105               	movlb	5	; () banked
 14976   011F5E  51DA               	movf	MPU6050_ReadAll@raw_data& (0+255),w,b
 14977   011F60  EC6B  F0B7         	call	_MPU6050_CombineBytes
 14978   011F64  C501  F5E8         	movff	?_MPU6050_CombineBytes,MPU6050_ReadAll@raw_ax
 14979   011F68  C502  F5E9         	movff	?_MPU6050_CombineBytes+1,MPU6050_ReadAll@raw_ax+1
 14980                           
 14981                           ;MPU6050_DMP.c: 260:     int16_t raw_ay = MPU6050_CombineBytes(raw_data[2], raw_data[3])
      +                          ;
 14982   011F6C  C5DD  F501         	movff	MPU6050_ReadAll@raw_data+3,MPU6050_CombineBytes@low
 14983   011F70  0105               	movlb	5	; () banked
 14984   011F72  51DC               	movf	(MPU6050_ReadAll@raw_data+2)& (0+255),w,b
 14985   011F74  EC6B  F0B7         	call	_MPU6050_CombineBytes
 14986   011F78  C501  F5EA         	movff	?_MPU6050_CombineBytes,MPU6050_ReadAll@raw_ay
 14987   011F7C  C502  F5EB         	movff	?_MPU6050_CombineBytes+1,MPU6050_ReadAll@raw_ay+1
 14988                           
 14989                           ;MPU6050_DMP.c: 261:     int16_t raw_az = MPU6050_CombineBytes(raw_data[4], raw_data[5])
      +                          ;
 14990   011F80  C5DF  F501         	movff	MPU6050_ReadAll@raw_data+5,MPU6050_CombineBytes@low
 14991   011F84  0105               	movlb	5	; () banked
 14992   011F86  51DE               	movf	(MPU6050_ReadAll@raw_data+4)& (0+255),w,b
 14993   011F88  EC6B  F0B7         	call	_MPU6050_CombineBytes
 14994   011F8C  C501  F5EC         	movff	?_MPU6050_CombineBytes,MPU6050_ReadAll@raw_az
 14995   011F90  C502  F5ED         	movff	?_MPU6050_CombineBytes+1,MPU6050_ReadAll@raw_az+1
 14996   011F94                     
 14997                           ;MPU6050_DMP.c: 263:     data->accel.x = (raw_ax / 8192.0f) - accel_offset.x;
 14998   011F94  0E00               	movlw	0
 14999   011F96  6E57               	movwf	___fldiv@a^(0+1280),c
 15000   011F98  0E00               	movlw	0
 15001   011F9A  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15002   011F9C  0E00               	movlw	0
 15003   011F9E  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15004   011FA0  0E46               	movlw	70
 15005   011FA2  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15006   011FA4  C5E8  F501         	movff	MPU6050_ReadAll@raw_ax,___xxtofl@val
 15007   011FA8  C5E9  F502         	movff	MPU6050_ReadAll@raw_ax+1,___xxtofl@val+1
 15008   011FAC  0E00               	movlw	0
 15009   011FAE  BE02               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 15010   011FB0  0EFF               	movlw	-1
 15011   011FB2  6E03               	movwf	(___xxtofl@val+2)^(0+1280),c
 15012   011FB4  6E04               	movwf	(___xxtofl@val+3)^(0+1280),c
 15013   011FB6  0E01               	movlw	1
 15014   011FB8  ECCC  F0AB         	call	___xxtofl
 15015   011FBC  C501  F553         	movff	?___xxtofl,___fldiv@b
 15016   011FC0  C502  F554         	movff	?___xxtofl+1,___fldiv@b+1
 15017   011FC4  C503  F555         	movff	?___xxtofl+2,___fldiv@b+2
 15018   011FC8  C504  F556         	movff	?___xxtofl+3,___fldiv@b+3
 15019   011FCC  EC5D  F0A3         	call	___fldiv	;wreg free
 15020   011FD0  C553  F56D         	movff	?___fldiv,___flsub@b
 15021   011FD4  C554  F56E         	movff	?___fldiv+1,___flsub@b+1
 15022   011FD8  C555  F56F         	movff	?___fldiv+2,___flsub@b+2
 15023   011FDC  C556  F570         	movff	?___fldiv+3,___flsub@b+3
 15024   011FE0  C6E5  F571         	movff	_accel_offset,___flsub@a
 15025   011FE4  C6E6  F572         	movff	_accel_offset+1,___flsub@a+1
 15026   011FE8  C6E7  F573         	movff	_accel_offset+2,___flsub@a+2
 15027   011FEC  C6E8  F574         	movff	_accel_offset+3,___flsub@a+3
 15028   011FF0  ECD5  F0B5         	call	___flsub	;wreg free
 15029   011FF4  C5CC  F4D9         	movff	MPU6050_ReadAll@data,fsr2l
 15030   011FF8  C5CD  F4DA         	movff	MPU6050_ReadAll@data+1,fsr2h
 15031   011FFC  0105               	movlb	5	; () banked
 15032   011FFE  C56D  F4DE         	movff	?___flsub,postinc2
 15033   012002  C56E  F4DE         	movff	?___flsub+1,postinc2
 15034   012006  C56F  F4DE         	movff	?___flsub+2,postinc2
 15035   01200A  C570  F4DE         	movff	?___flsub+3,postinc2
 15036   01200E                     
 15037                           ; BSR set to: 5
 15038                           ;MPU6050_DMP.c: 264:     data->accel.y = (raw_ay / 8192.0f) - accel_offset.y;
 15039   01200E  0E00               	movlw	0
 15040   012010  6E57               	movwf	___fldiv@a^(0+1280),c
 15041   012012  0E00               	movlw	0
 15042   012014  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15043   012016  0E00               	movlw	0
 15044   012018  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15045   01201A  0E46               	movlw	70
 15046   01201C  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15047   01201E  C5EA  F501         	movff	MPU6050_ReadAll@raw_ay,___xxtofl@val
 15048   012022  C5EB  F502         	movff	MPU6050_ReadAll@raw_ay+1,___xxtofl@val+1
 15049   012026  0E00               	movlw	0
 15050   012028  BE02               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 15051   01202A  0EFF               	movlw	-1
 15052   01202C  6E03               	movwf	(___xxtofl@val+2)^(0+1280),c
 15053   01202E  6E04               	movwf	(___xxtofl@val+3)^(0+1280),c
 15054   012030  0E01               	movlw	1
 15055   012032  ECCC  F0AB         	call	___xxtofl
 15056   012036  C501  F553         	movff	?___xxtofl,___fldiv@b
 15057   01203A  C502  F554         	movff	?___xxtofl+1,___fldiv@b+1
 15058   01203E  C503  F555         	movff	?___xxtofl+2,___fldiv@b+2
 15059   012042  C504  F556         	movff	?___xxtofl+3,___fldiv@b+3
 15060   012046  EC5D  F0A3         	call	___fldiv	;wreg free
 15061   01204A  C553  F56D         	movff	?___fldiv,___flsub@b
 15062   01204E  C554  F56E         	movff	?___fldiv+1,___flsub@b+1
 15063   012052  C555  F56F         	movff	?___fldiv+2,___flsub@b+2
 15064   012056  C556  F570         	movff	?___fldiv+3,___flsub@b+3
 15065   01205A  C6E9  F571         	movff	_accel_offset+4,___flsub@a
 15066   01205E  C6EA  F572         	movff	_accel_offset+5,___flsub@a+1
 15067   012062  C6EB  F573         	movff	_accel_offset+6,___flsub@a+2
 15068   012066  C6EC  F574         	movff	_accel_offset+7,___flsub@a+3
 15069   01206A  ECD5  F0B5         	call	___flsub	;wreg free
 15070   01206E  0105               	movlb	5	; () banked
 15071   012070  EE20 F004          	lfsr	2,4
 15072   012074  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15073   012076  26D9               	addwf	fsr2l,f,c
 15074   012078  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15075   01207A  22DA               	addwfc	fsr2h,f,c
 15076   01207C  C56D  F4DE         	movff	?___flsub,postinc2
 15077   012080  C56E  F4DE         	movff	?___flsub+1,postinc2
 15078   012084  C56F  F4DE         	movff	?___flsub+2,postinc2
 15079   012088  C570  F4DE         	movff	?___flsub+3,postinc2
 15080   01208C                     
 15081                           ; BSR set to: 5
 15082                           ;MPU6050_DMP.c: 265:     data->accel.z = (raw_az / 8192.0f) - accel_offset.z;
 15083   01208C  0E00               	movlw	0
 15084   01208E  6E57               	movwf	___fldiv@a^(0+1280),c
 15085   012090  0E00               	movlw	0
 15086   012092  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15087   012094  0E00               	movlw	0
 15088   012096  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15089   012098  0E46               	movlw	70
 15090   01209A  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15091   01209C  C5EC  F501         	movff	MPU6050_ReadAll@raw_az,___xxtofl@val
 15092   0120A0  C5ED  F502         	movff	MPU6050_ReadAll@raw_az+1,___xxtofl@val+1
 15093   0120A4  0E00               	movlw	0
 15094   0120A6  BE02               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 15095   0120A8  0EFF               	movlw	-1
 15096   0120AA  6E03               	movwf	(___xxtofl@val+2)^(0+1280),c
 15097   0120AC  6E04               	movwf	(___xxtofl@val+3)^(0+1280),c
 15098   0120AE  0E01               	movlw	1
 15099   0120B0  ECCC  F0AB         	call	___xxtofl
 15100   0120B4  C501  F553         	movff	?___xxtofl,___fldiv@b
 15101   0120B8  C502  F554         	movff	?___xxtofl+1,___fldiv@b+1
 15102   0120BC  C503  F555         	movff	?___xxtofl+2,___fldiv@b+2
 15103   0120C0  C504  F556         	movff	?___xxtofl+3,___fldiv@b+3
 15104   0120C4  EC5D  F0A3         	call	___fldiv	;wreg free
 15105   0120C8  C553  F56D         	movff	?___fldiv,___flsub@b
 15106   0120CC  C554  F56E         	movff	?___fldiv+1,___flsub@b+1
 15107   0120D0  C555  F56F         	movff	?___fldiv+2,___flsub@b+2
 15108   0120D4  C556  F570         	movff	?___fldiv+3,___flsub@b+3
 15109   0120D8  C6ED  F571         	movff	_accel_offset+8,___flsub@a
 15110   0120DC  C6EE  F572         	movff	_accel_offset+9,___flsub@a+1
 15111   0120E0  C6EF  F573         	movff	_accel_offset+10,___flsub@a+2
 15112   0120E4  C6F0  F574         	movff	_accel_offset+11,___flsub@a+3
 15113   0120E8  ECD5  F0B5         	call	___flsub	;wreg free
 15114   0120EC  0105               	movlb	5	; () banked
 15115   0120EE  EE20 F008          	lfsr	2,8
 15116   0120F2  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15117   0120F4  26D9               	addwf	fsr2l,f,c
 15118   0120F6  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15119   0120F8  22DA               	addwfc	fsr2h,f,c
 15120   0120FA  C56D  F4DE         	movff	?___flsub,postinc2
 15121   0120FE  C56E  F4DE         	movff	?___flsub+1,postinc2
 15122   012102  C56F  F4DE         	movff	?___flsub+2,postinc2
 15123   012106  C570  F4DE         	movff	?___flsub+3,postinc2
 15124   01210A                     
 15125                           ; BSR set to: 5
 15126                           ;MPU6050_DMP.c: 268:     int16_t raw_temp = MPU6050_CombineBytes(raw_data[6], raw_data[7
      +                          ]);
 15127   01210A  C5E1  F501         	movff	MPU6050_ReadAll@raw_data+7,MPU6050_CombineBytes@low
 15128   01210E  51E0               	movf	(MPU6050_ReadAll@raw_data+6)& (0+255),w,b
 15129   012110  EC6B  F0B7         	call	_MPU6050_CombineBytes
 15130   012114  C501  F5EE         	movff	?_MPU6050_CombineBytes,MPU6050_ReadAll@raw_temp
 15131   012118  C502  F5EF         	movff	?_MPU6050_CombineBytes+1,MPU6050_ReadAll@raw_temp+1
 15132                           
 15133                           ;MPU6050_DMP.c: 269:     data->temperature = (raw_temp / 340.0f) + 36.53f;
 15134   01211C  0E00               	movlw	0
 15135   01211E  6E57               	movwf	___fldiv@a^(0+1280),c
 15136   012120  0E00               	movlw	0
 15137   012122  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15138   012124  0EAA               	movlw	170
 15139   012126  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15140   012128  0E43               	movlw	67
 15141   01212A  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15142   01212C  C5EE  F501         	movff	MPU6050_ReadAll@raw_temp,___xxtofl@val
 15143   012130  C5EF  F502         	movff	MPU6050_ReadAll@raw_temp+1,___xxtofl@val+1
 15144   012134  0E00               	movlw	0
 15145   012136  BE02               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 15146   012138  0EFF               	movlw	-1
 15147   01213A  6E03               	movwf	(___xxtofl@val+2)^(0+1280),c
 15148   01213C  6E04               	movwf	(___xxtofl@val+3)^(0+1280),c
 15149   01213E  0E01               	movlw	1
 15150   012140  ECCC  F0AB         	call	___xxtofl
 15151   012144  C501  F553         	movff	?___xxtofl,___fldiv@b
 15152   012148  C502  F554         	movff	?___xxtofl+1,___fldiv@b+1
 15153   01214C  C503  F555         	movff	?___xxtofl+2,___fldiv@b+2
 15154   012150  C504  F556         	movff	?___xxtofl+3,___fldiv@b+3
 15155   012154  EC5D  F0A3         	call	___fldiv	;wreg free
 15156   012158  C553  F51E         	movff	?___fldiv,___fladd@b
 15157   01215C  C554  F51F         	movff	?___fldiv+1,___fladd@b+1
 15158   012160  C555  F520         	movff	?___fldiv+2,___fladd@b+2
 15159   012164  C556  F521         	movff	?___fldiv+3,___fladd@b+3
 15160   012168  0EB8               	movlw	184
 15161   01216A  6E22               	movwf	___fladd@a^(0+1280),c
 15162   01216C  0E1E               	movlw	30
 15163   01216E  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 15164   012170  0E12               	movlw	18
 15165   012172  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 15166   012174  0E42               	movlw	66
 15167   012176  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 15168   012178  EC1B  F09B         	call	___fladd	;wreg free
 15169   01217C  0105               	movlb	5	; () banked
 15170   01217E  EE20 F024          	lfsr	2,36
 15171   012182  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15172   012184  26D9               	addwf	fsr2l,f,c
 15173   012186  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15174   012188  22DA               	addwfc	fsr2h,f,c
 15175   01218A  C51E  F4DE         	movff	?___fladd,postinc2
 15176   01218E  C51F  F4DE         	movff	?___fladd+1,postinc2
 15177   012192  C520  F4DE         	movff	?___fladd+2,postinc2
 15178   012196  C521  F4DE         	movff	?___fladd+3,postinc2
 15179   01219A                     
 15180                           ; BSR set to: 5
 15181                           ;MPU6050_DMP.c: 272:     int16_t raw_gx = MPU6050_CombineBytes(raw_data[8], raw_data[9])
      +                          ;
 15182   01219A  C5E3  F501         	movff	MPU6050_ReadAll@raw_data+9,MPU6050_CombineBytes@low
 15183   01219E  51E2               	movf	(MPU6050_ReadAll@raw_data+8)& (0+255),w,b
 15184   0121A0  EC6B  F0B7         	call	_MPU6050_CombineBytes
 15185   0121A4  C501  F5F0         	movff	?_MPU6050_CombineBytes,MPU6050_ReadAll@raw_gx
 15186   0121A8  C502  F5F1         	movff	?_MPU6050_CombineBytes+1,MPU6050_ReadAll@raw_gx+1
 15187   0121AC                     
 15188                           ;MPU6050_DMP.c: 273:     int16_t raw_gy = MPU6050_CombineBytes(raw_data[10], raw_data[11
      +                          ]);
 15189   0121AC  C5E5  F501         	movff	MPU6050_ReadAll@raw_data+11,MPU6050_CombineBytes@low
 15190   0121B0  0105               	movlb	5	; () banked
 15191   0121B2  51E4               	movf	(MPU6050_ReadAll@raw_data+10)& (0+255),w,b
 15192   0121B4  EC6B  F0B7         	call	_MPU6050_CombineBytes
 15193   0121B8  C501  F5F2         	movff	?_MPU6050_CombineBytes,MPU6050_ReadAll@raw_gy
 15194   0121BC  C502  F5F3         	movff	?_MPU6050_CombineBytes+1,MPU6050_ReadAll@raw_gy+1
 15195   0121C0                     
 15196                           ;MPU6050_DMP.c: 274:     int16_t raw_gz = MPU6050_CombineBytes(raw_data[12], raw_data[13
      +                          ]);
 15197   0121C0  C5E7  F501         	movff	MPU6050_ReadAll@raw_data+13,MPU6050_CombineBytes@low
 15198   0121C4  0105               	movlb	5	; () banked
 15199   0121C6  51E6               	movf	(MPU6050_ReadAll@raw_data+12)& (0+255),w,b
 15200   0121C8  EC6B  F0B7         	call	_MPU6050_CombineBytes
 15201   0121CC  C501  F5F4         	movff	?_MPU6050_CombineBytes,MPU6050_ReadAll@raw_gz
 15202   0121D0  C502  F5F5         	movff	?_MPU6050_CombineBytes+1,MPU6050_ReadAll@raw_gz+1
 15203   0121D4                     
 15204                           ;MPU6050_DMP.c: 276:     data->gyro.x = (raw_gx / 65.5f) - gyro_offset.x;
 15205   0121D4  0E00               	movlw	0
 15206   0121D6  6E57               	movwf	___fldiv@a^(0+1280),c
 15207   0121D8  0E00               	movlw	0
 15208   0121DA  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15209   0121DC  0E83               	movlw	131
 15210   0121DE  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15211   0121E0  0E42               	movlw	66
 15212   0121E2  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15213   0121E4  C5F0  F501         	movff	MPU6050_ReadAll@raw_gx,___xxtofl@val
 15214   0121E8  C5F1  F502         	movff	MPU6050_ReadAll@raw_gx+1,___xxtofl@val+1
 15215   0121EC  0E00               	movlw	0
 15216   0121EE  BE02               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 15217   0121F0  0EFF               	movlw	-1
 15218   0121F2  6E03               	movwf	(___xxtofl@val+2)^(0+1280),c
 15219   0121F4  6E04               	movwf	(___xxtofl@val+3)^(0+1280),c
 15220   0121F6  0E01               	movlw	1
 15221   0121F8  ECCC  F0AB         	call	___xxtofl
 15222   0121FC  C501  F553         	movff	?___xxtofl,___fldiv@b
 15223   012200  C502  F554         	movff	?___xxtofl+1,___fldiv@b+1
 15224   012204  C503  F555         	movff	?___xxtofl+2,___fldiv@b+2
 15225   012208  C504  F556         	movff	?___xxtofl+3,___fldiv@b+3
 15226   01220C  EC5D  F0A3         	call	___fldiv	;wreg free
 15227   012210  C553  F56D         	movff	?___fldiv,___flsub@b
 15228   012214  C554  F56E         	movff	?___fldiv+1,___flsub@b+1
 15229   012218  C555  F56F         	movff	?___fldiv+2,___flsub@b+2
 15230   01221C  C556  F570         	movff	?___fldiv+3,___flsub@b+3
 15231   012220  C6D9  F571         	movff	_gyro_offset,___flsub@a
 15232   012224  C6DA  F572         	movff	_gyro_offset+1,___flsub@a+1
 15233   012228  C6DB  F573         	movff	_gyro_offset+2,___flsub@a+2
 15234   01222C  C6DC  F574         	movff	_gyro_offset+3,___flsub@a+3
 15235   012230  ECD5  F0B5         	call	___flsub	;wreg free
 15236   012234  0105               	movlb	5	; () banked
 15237   012236  EE20 F00C          	lfsr	2,12
 15238   01223A  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15239   01223C  26D9               	addwf	fsr2l,f,c
 15240   01223E  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15241   012240  22DA               	addwfc	fsr2h,f,c
 15242   012242  C56D  F4DE         	movff	?___flsub,postinc2
 15243   012246  C56E  F4DE         	movff	?___flsub+1,postinc2
 15244   01224A  C56F  F4DE         	movff	?___flsub+2,postinc2
 15245   01224E  C570  F4DE         	movff	?___flsub+3,postinc2
 15246   012252                     
 15247                           ; BSR set to: 5
 15248                           ;MPU6050_DMP.c: 277:     data->gyro.y = (raw_gy / 65.5f) - gyro_offset.y;
 15249   012252  0E00               	movlw	0
 15250   012254  6E57               	movwf	___fldiv@a^(0+1280),c
 15251   012256  0E00               	movlw	0
 15252   012258  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15253   01225A  0E83               	movlw	131
 15254   01225C  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15255   01225E  0E42               	movlw	66
 15256   012260  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15257   012262  C5F2  F501         	movff	MPU6050_ReadAll@raw_gy,___xxtofl@val
 15258   012266  C5F3  F502         	movff	MPU6050_ReadAll@raw_gy+1,___xxtofl@val+1
 15259   01226A  0E00               	movlw	0
 15260   01226C  BE02               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 15261   01226E  0EFF               	movlw	-1
 15262   012270  6E03               	movwf	(___xxtofl@val+2)^(0+1280),c
 15263   012272  6E04               	movwf	(___xxtofl@val+3)^(0+1280),c
 15264   012274  0E01               	movlw	1
 15265   012276  ECCC  F0AB         	call	___xxtofl
 15266   01227A  C501  F553         	movff	?___xxtofl,___fldiv@b
 15267   01227E  C502  F554         	movff	?___xxtofl+1,___fldiv@b+1
 15268   012282  C503  F555         	movff	?___xxtofl+2,___fldiv@b+2
 15269   012286  C504  F556         	movff	?___xxtofl+3,___fldiv@b+3
 15270   01228A  EC5D  F0A3         	call	___fldiv	;wreg free
 15271   01228E  C553  F56D         	movff	?___fldiv,___flsub@b
 15272   012292  C554  F56E         	movff	?___fldiv+1,___flsub@b+1
 15273   012296  C555  F56F         	movff	?___fldiv+2,___flsub@b+2
 15274   01229A  C556  F570         	movff	?___fldiv+3,___flsub@b+3
 15275   01229E  C6DD  F571         	movff	_gyro_offset+4,___flsub@a
 15276   0122A2  C6DE  F572         	movff	_gyro_offset+5,___flsub@a+1
 15277   0122A6  C6DF  F573         	movff	_gyro_offset+6,___flsub@a+2
 15278   0122AA  C6E0  F574         	movff	_gyro_offset+7,___flsub@a+3
 15279   0122AE  ECD5  F0B5         	call	___flsub	;wreg free
 15280   0122B2  0105               	movlb	5	; () banked
 15281   0122B4  EE20 F010          	lfsr	2,16
 15282   0122B8  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15283   0122BA  26D9               	addwf	fsr2l,f,c
 15284   0122BC  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15285   0122BE  22DA               	addwfc	fsr2h,f,c
 15286   0122C0  C56D  F4DE         	movff	?___flsub,postinc2
 15287   0122C4  C56E  F4DE         	movff	?___flsub+1,postinc2
 15288   0122C8  C56F  F4DE         	movff	?___flsub+2,postinc2
 15289   0122CC  C570  F4DE         	movff	?___flsub+3,postinc2
 15290   0122D0                     
 15291                           ; BSR set to: 5
 15292                           ;MPU6050_DMP.c: 278:     data->gyro.z = (raw_gz / 65.5f) - gyro_offset.z;
 15293   0122D0  0E00               	movlw	0
 15294   0122D2  6E57               	movwf	___fldiv@a^(0+1280),c
 15295   0122D4  0E00               	movlw	0
 15296   0122D6  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15297   0122D8  0E83               	movlw	131
 15298   0122DA  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15299   0122DC  0E42               	movlw	66
 15300   0122DE  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15301   0122E0  C5F4  F501         	movff	MPU6050_ReadAll@raw_gz,___xxtofl@val
 15302   0122E4  C5F5  F502         	movff	MPU6050_ReadAll@raw_gz+1,___xxtofl@val+1
 15303   0122E8  0E00               	movlw	0
 15304   0122EA  BE02               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 15305   0122EC  0EFF               	movlw	-1
 15306   0122EE  6E03               	movwf	(___xxtofl@val+2)^(0+1280),c
 15307   0122F0  6E04               	movwf	(___xxtofl@val+3)^(0+1280),c
 15308   0122F2  0E01               	movlw	1
 15309   0122F4  ECCC  F0AB         	call	___xxtofl
 15310   0122F8  C501  F553         	movff	?___xxtofl,___fldiv@b
 15311   0122FC  C502  F554         	movff	?___xxtofl+1,___fldiv@b+1
 15312   012300  C503  F555         	movff	?___xxtofl+2,___fldiv@b+2
 15313   012304  C504  F556         	movff	?___xxtofl+3,___fldiv@b+3
 15314   012308  EC5D  F0A3         	call	___fldiv	;wreg free
 15315   01230C  C553  F56D         	movff	?___fldiv,___flsub@b
 15316   012310  C554  F56E         	movff	?___fldiv+1,___flsub@b+1
 15317   012314  C555  F56F         	movff	?___fldiv+2,___flsub@b+2
 15318   012318  C556  F570         	movff	?___fldiv+3,___flsub@b+3
 15319   01231C  C6E1  F571         	movff	_gyro_offset+8,___flsub@a
 15320   012320  C6E2  F572         	movff	_gyro_offset+9,___flsub@a+1
 15321   012324  C6E3  F573         	movff	_gyro_offset+10,___flsub@a+2
 15322   012328  C6E4  F574         	movff	_gyro_offset+11,___flsub@a+3
 15323   01232C  ECD5  F0B5         	call	___flsub	;wreg free
 15324   012330  0105               	movlb	5	; () banked
 15325   012332  EE20 F014          	lfsr	2,20
 15326   012336  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15327   012338  26D9               	addwf	fsr2l,f,c
 15328   01233A  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15329   01233C  22DA               	addwfc	fsr2h,f,c
 15330   01233E  C56D  F4DE         	movff	?___flsub,postinc2
 15331   012342  C56E  F4DE         	movff	?___flsub+1,postinc2
 15332   012346  C56F  F4DE         	movff	?___flsub+2,postinc2
 15333   01234A  C570  F4DE         	movff	?___flsub+3,postinc2
 15334   01234E                     
 15335                           ; BSR set to: 5
 15336                           ;MPU6050_DMP.c: 281:     data->angles.roll = ((atan2f(data->accel.y,sqrtf(data->accel.x 
      +                          * data->accel.x + data->accel.z * data->accel.z))) * 180.0f / 3.14159265358979323846);
 15337   01234E  EE20 F008          	lfsr	2,8
 15338   012352  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15339   012354  26D9               	addwf	fsr2l,f,c
 15340   012356  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15341   012358  22DA               	addwfc	fsr2h,f,c
 15342   01235A  C4DE F509          	movff	postinc2,___flmul@a
 15343   01235E  C4DE F50A          	movff	postinc2,___flmul@a+1
 15344   012362  C4DE F50B          	movff	postinc2,___flmul@a+2
 15345   012366  C4DE F50C          	movff	postinc2,___flmul@a+3
 15346   01236A  EE20 F008          	lfsr	2,8
 15347   01236E  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15348   012370  26D9               	addwf	fsr2l,f,c
 15349   012372  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15350   012374  22DA               	addwfc	fsr2h,f,c
 15351   012376  C4DE F505          	movff	postinc2,___flmul@b
 15352   01237A  C4DE F506          	movff	postinc2,___flmul@b+1
 15353   01237E  C4DE F507          	movff	postinc2,___flmul@b+2
 15354   012382  C4DE F508          	movff	postinc2,___flmul@b+3
 15355   012386  EC76  F09D         	call	___flmul	;wreg free
 15356   01238A  C505  F522         	movff	?___flmul,___fladd@a
 15357   01238E  C506  F523         	movff	?___flmul+1,___fladd@a+1
 15358   012392  C507  F524         	movff	?___flmul+2,___fladd@a+2
 15359   012396  C508  F525         	movff	?___flmul+3,___fladd@a+3
 15360   01239A  C5CC  F4D9         	movff	MPU6050_ReadAll@data,fsr2l
 15361   01239E  C5CD  F4DA         	movff	MPU6050_ReadAll@data+1,fsr2h
 15362   0123A2  C4DE F509          	movff	postinc2,___flmul@a
 15363   0123A6  C4DE F50A          	movff	postinc2,___flmul@a+1
 15364   0123AA  C4DE F50B          	movff	postinc2,___flmul@a+2
 15365   0123AE  C4DE F50C          	movff	postinc2,___flmul@a+3
 15366   0123B2  C5CC  F4D9         	movff	MPU6050_ReadAll@data,fsr2l
 15367   0123B6  C5CD  F4DA         	movff	MPU6050_ReadAll@data+1,fsr2h
 15368   0123BA  C4DE F505          	movff	postinc2,___flmul@b
 15369   0123BE  C4DE F506          	movff	postinc2,___flmul@b+1
 15370   0123C2  C4DE F507          	movff	postinc2,___flmul@b+2
 15371   0123C6  C4DE F508          	movff	postinc2,___flmul@b+3
 15372   0123CA  EC76  F09D         	call	___flmul	;wreg free
 15373   0123CE  C505  F51E         	movff	?___flmul,___fladd@b
 15374   0123D2  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 15375   0123D6  C507  F520         	movff	?___flmul+2,___fladd@b+2
 15376   0123DA  C508  F521         	movff	?___flmul+3,___fladd@b+3
 15377   0123DE  EC1B  F09B         	call	___fladd	;wreg free
 15378   0123E2  C51E  F52E         	movff	?___fladd,sqrtf@x
 15379   0123E6  C51F  F52F         	movff	?___fladd+1,sqrtf@x+1
 15380   0123EA  C520  F530         	movff	?___fladd+2,sqrtf@x+2
 15381   0123EE  C521  F531         	movff	?___fladd+3,sqrtf@x+3
 15382   0123F2  EC89  F09F         	call	_sqrtf	;wreg free
 15383   0123F6  C52E  F5F6         	movff	?_sqrtf,_MPU6050_ReadAll$3484
 15384   0123FA  C52F  F5F7         	movff	?_sqrtf+1,_MPU6050_ReadAll$3484+1
 15385   0123FE  C530  F5F8         	movff	?_sqrtf+2,_MPU6050_ReadAll$3484+2
 15386   012402  C531  F5F9         	movff	?_sqrtf+3,_MPU6050_ReadAll$3484+3
 15387   012406                     
 15388                           ;MPU6050_DMP.c: 281:     data->angles.roll = ((atan2f(data->accel.y,sqrtf(data->accel.x 
      +                          * data->accel.x + data->accel.z * data->accel.z))) * 180.0f / 3.14159265358979323846);
 15389   012406  C5F6  F5A7         	movff	_MPU6050_ReadAll$3484,atan2f@x
 15390   01240A  C5F7  F5A8         	movff	_MPU6050_ReadAll$3484+1,atan2f@x+1
 15391   01240E  C5F8  F5A9         	movff	_MPU6050_ReadAll$3484+2,atan2f@x+2
 15392   012412  C5F9  F5AA         	movff	_MPU6050_ReadAll$3484+3,atan2f@x+3
 15393   012416  0105               	movlb	5	; () banked
 15394   012418  EE20 F004          	lfsr	2,4
 15395   01241C  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15396   01241E  26D9               	addwf	fsr2l,f,c
 15397   012420  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15398   012422  22DA               	addwfc	fsr2h,f,c
 15399   012424  C4DE F5A3          	movff	postinc2,atan2f@y
 15400   012428  C4DE F5A4          	movff	postinc2,atan2f@y+1
 15401   01242C  C4DE F5A5          	movff	postinc2,atan2f@y+2
 15402   012430  C4DE F5A6          	movff	postinc2,atan2f@y+3
 15403   012434  EC40  F093         	call	_atan2f	;wreg free
 15404   012438  C5A3  F5CE         	movff	?_atan2f,_MPU6050_ReadAll$3485
 15405   01243C  C5A4  F5CF         	movff	?_atan2f+1,_MPU6050_ReadAll$3485+1
 15406   012440  C5A5  F5D0         	movff	?_atan2f+2,_MPU6050_ReadAll$3485+2
 15407   012444  C5A6  F5D1         	movff	?_atan2f+3,_MPU6050_ReadAll$3485+3
 15408   012448                     
 15409                           ;MPU6050_DMP.c: 281:     data->angles.roll = ((atan2f(data->accel.y,sqrtf(data->accel.x 
      +                          * data->accel.x + data->accel.z * data->accel.z))) * 180.0f / 3.14159265358979323846);
 15410   012448  0E00               	movlw	0
 15411   01244A  6E09               	movwf	___flmul@a^(0+1280),c
 15412   01244C  0E00               	movlw	0
 15413   01244E  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 15414   012450  0E34               	movlw	52
 15415   012452  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 15416   012454  0E43               	movlw	67
 15417   012456  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 15418   012458  C5CE  F505         	movff	_MPU6050_ReadAll$3485,___flmul@b
 15419   01245C  C5CF  F506         	movff	_MPU6050_ReadAll$3485+1,___flmul@b+1
 15420   012460  C5D0  F507         	movff	_MPU6050_ReadAll$3485+2,___flmul@b+2
 15421   012464  C5D1  F508         	movff	_MPU6050_ReadAll$3485+3,___flmul@b+3
 15422   012468  EC76  F09D         	call	___flmul	;wreg free
 15423   01246C  C505  F553         	movff	?___flmul,___fldiv@b
 15424   012470  C506  F554         	movff	?___flmul+1,___fldiv@b+1
 15425   012474  C507  F555         	movff	?___flmul+2,___fldiv@b+2
 15426   012478  C508  F556         	movff	?___flmul+3,___fldiv@b+3
 15427   01247C  0EDB               	movlw	219
 15428   01247E  6E57               	movwf	___fldiv@a^(0+1280),c
 15429   012480  0E0F               	movlw	15
 15430   012482  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15431   012484  0E49               	movlw	73
 15432   012486  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15433   012488  0E40               	movlw	64
 15434   01248A  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15435   01248C  EC5D  F0A3         	call	___fldiv	;wreg free
 15436   012490  0105               	movlb	5	; () banked
 15437   012492  EE20 F020          	lfsr	2,32
 15438   012496  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15439   012498  26D9               	addwf	fsr2l,f,c
 15440   01249A  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15441   01249C  22DA               	addwfc	fsr2h,f,c
 15442   01249E  C553  F4DE         	movff	?___fldiv,postinc2
 15443   0124A2  C554  F4DE         	movff	?___fldiv+1,postinc2
 15444   0124A6  C555  F4DE         	movff	?___fldiv+2,postinc2
 15445   0124AA  C556  F4DE         	movff	?___fldiv+3,postinc2
 15446   0124AE                     
 15447                           ; BSR set to: 5
 15448                           ;MPU6050_DMP.c: 285:     data->angles.pitch = ((atan2f(-data->accel.x,sqrtf(data->accel.
      +                          y * data->accel.y + data->accel.z * data->accel.z))) * 180.0f / 3.14159265358979323846);
 15449   0124AE  EE20 F008          	lfsr	2,8
 15450   0124B2  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15451   0124B4  26D9               	addwf	fsr2l,f,c
 15452   0124B6  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15453   0124B8  22DA               	addwfc	fsr2h,f,c
 15454   0124BA  C4DE F509          	movff	postinc2,___flmul@a
 15455   0124BE  C4DE F50A          	movff	postinc2,___flmul@a+1
 15456   0124C2  C4DE F50B          	movff	postinc2,___flmul@a+2
 15457   0124C6  C4DE F50C          	movff	postinc2,___flmul@a+3
 15458   0124CA  EE20 F008          	lfsr	2,8
 15459   0124CE  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15460   0124D0  26D9               	addwf	fsr2l,f,c
 15461   0124D2  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15462   0124D4  22DA               	addwfc	fsr2h,f,c
 15463   0124D6  C4DE F505          	movff	postinc2,___flmul@b
 15464   0124DA  C4DE F506          	movff	postinc2,___flmul@b+1
 15465   0124DE  C4DE F507          	movff	postinc2,___flmul@b+2
 15466   0124E2  C4DE F508          	movff	postinc2,___flmul@b+3
 15467   0124E6  EC76  F09D         	call	___flmul	;wreg free
 15468   0124EA  C505  F522         	movff	?___flmul,___fladd@a
 15469   0124EE  C506  F523         	movff	?___flmul+1,___fladd@a+1
 15470   0124F2  C507  F524         	movff	?___flmul+2,___fladd@a+2
 15471   0124F6  C508  F525         	movff	?___flmul+3,___fladd@a+3
 15472   0124FA  0105               	movlb	5	; () banked
 15473   0124FC  EE20 F004          	lfsr	2,4
 15474   012500  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15475   012502  26D9               	addwf	fsr2l,f,c
 15476   012504  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15477   012506  22DA               	addwfc	fsr2h,f,c
 15478   012508  C4DE F509          	movff	postinc2,___flmul@a
 15479   01250C  C4DE F50A          	movff	postinc2,___flmul@a+1
 15480   012510  C4DE F50B          	movff	postinc2,___flmul@a+2
 15481   012514  C4DE F50C          	movff	postinc2,___flmul@a+3
 15482   012518  EE20 F004          	lfsr	2,4
 15483   01251C  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15484   01251E  26D9               	addwf	fsr2l,f,c
 15485   012520  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15486   012522  22DA               	addwfc	fsr2h,f,c
 15487   012524  C4DE F505          	movff	postinc2,___flmul@b
 15488   012528  C4DE F506          	movff	postinc2,___flmul@b+1
 15489   01252C  C4DE F507          	movff	postinc2,___flmul@b+2
 15490   012530  C4DE F508          	movff	postinc2,___flmul@b+3
 15491   012534  EC76  F09D         	call	___flmul	;wreg free
 15492   012538  C505  F51E         	movff	?___flmul,___fladd@b
 15493   01253C  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 15494   012540  C507  F520         	movff	?___flmul+2,___fladd@b+2
 15495   012544  C508  F521         	movff	?___flmul+3,___fladd@b+3
 15496   012548  EC1B  F09B         	call	___fladd	;wreg free
 15497   01254C  C51E  F52E         	movff	?___fladd,sqrtf@x
 15498   012550  C51F  F52F         	movff	?___fladd+1,sqrtf@x+1
 15499   012554  C520  F530         	movff	?___fladd+2,sqrtf@x+2
 15500   012558  C521  F531         	movff	?___fladd+3,sqrtf@x+3
 15501   01255C  EC89  F09F         	call	_sqrtf	;wreg free
 15502   012560  C52E  F5F6         	movff	?_sqrtf,_MPU6050_ReadAll$3484
 15503   012564  C52F  F5F7         	movff	?_sqrtf+1,_MPU6050_ReadAll$3484+1
 15504   012568  C530  F5F8         	movff	?_sqrtf+2,_MPU6050_ReadAll$3484+2
 15505   01256C  C531  F5F9         	movff	?_sqrtf+3,_MPU6050_ReadAll$3484+3
 15506   012570                     
 15507                           ;MPU6050_DMP.c: 285:     data->angles.pitch = ((atan2f(-data->accel.x,sqrtf(data->accel.
      +                          y * data->accel.y + data->accel.z * data->accel.z))) * 180.0f / 3.14159265358979323846);
 15508   012570  C5CC  F4D9         	movff	MPU6050_ReadAll@data,fsr2l
 15509   012574  C5CD  F4DA         	movff	MPU6050_ReadAll@data+1,fsr2h
 15510   012578  C4DE F501          	movff	postinc2,___flneg@f1
 15511   01257C  C4DE F502          	movff	postinc2,___flneg@f1+1
 15512   012580  C4DE F503          	movff	postinc2,___flneg@f1+2
 15513   012584  C4DE F504          	movff	postinc2,___flneg@f1+3
 15514   012588  EC57  F0B6         	call	___flneg	;wreg free
 15515   01258C  C501  F5D2         	movff	?___flneg,_MPU6050_ReadAll$3486
 15516   012590  C502  F5D3         	movff	?___flneg+1,_MPU6050_ReadAll$3486+1
 15517   012594  C503  F5D4         	movff	?___flneg+2,_MPU6050_ReadAll$3486+2
 15518   012598  C504  F5D5         	movff	?___flneg+3,_MPU6050_ReadAll$3486+3
 15519   01259C                     
 15520                           ;MPU6050_DMP.c: 285:     data->angles.pitch = ((atan2f(-data->accel.x,sqrtf(data->accel.
      +                          y * data->accel.y + data->accel.z * data->accel.z))) * 180.0f / 3.14159265358979323846);
 15521   01259C  C5F6  F5A7         	movff	_MPU6050_ReadAll$3484,atan2f@x
 15522   0125A0  C5F7  F5A8         	movff	_MPU6050_ReadAll$3484+1,atan2f@x+1
 15523   0125A4  C5F8  F5A9         	movff	_MPU6050_ReadAll$3484+2,atan2f@x+2
 15524   0125A8  C5F9  F5AA         	movff	_MPU6050_ReadAll$3484+3,atan2f@x+3
 15525   0125AC  C5D2  F5A3         	movff	_MPU6050_ReadAll$3486,atan2f@y
 15526   0125B0  C5D3  F5A4         	movff	_MPU6050_ReadAll$3486+1,atan2f@y+1
 15527   0125B4  C5D4  F5A5         	movff	_MPU6050_ReadAll$3486+2,atan2f@y+2
 15528   0125B8  C5D5  F5A6         	movff	_MPU6050_ReadAll$3486+3,atan2f@y+3
 15529   0125BC  EC40  F093         	call	_atan2f	;wreg free
 15530   0125C0  C5A3  F5D6         	movff	?_atan2f,_MPU6050_ReadAll$3487
 15531   0125C4  C5A4  F5D7         	movff	?_atan2f+1,_MPU6050_ReadAll$3487+1
 15532   0125C8  C5A5  F5D8         	movff	?_atan2f+2,_MPU6050_ReadAll$3487+2
 15533   0125CC  C5A6  F5D9         	movff	?_atan2f+3,_MPU6050_ReadAll$3487+3
 15534                           
 15535                           ;MPU6050_DMP.c: 285:     data->angles.pitch = ((atan2f(-data->accel.x,sqrtf(data->accel.
      +                          y * data->accel.y + data->accel.z * data->accel.z))) * 180.0f / 3.14159265358979323846);
 15536   0125D0  0E00               	movlw	0
 15537   0125D2  6E09               	movwf	___flmul@a^(0+1280),c
 15538   0125D4  0E00               	movlw	0
 15539   0125D6  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 15540   0125D8  0E34               	movlw	52
 15541   0125DA  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 15542   0125DC  0E43               	movlw	67
 15543   0125DE  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 15544   0125E0  C5D6  F505         	movff	_MPU6050_ReadAll$3487,___flmul@b
 15545   0125E4  C5D7  F506         	movff	_MPU6050_ReadAll$3487+1,___flmul@b+1
 15546   0125E8  C5D8  F507         	movff	_MPU6050_ReadAll$3487+2,___flmul@b+2
 15547   0125EC  C5D9  F508         	movff	_MPU6050_ReadAll$3487+3,___flmul@b+3
 15548   0125F0  EC76  F09D         	call	___flmul	;wreg free
 15549   0125F4  C505  F553         	movff	?___flmul,___fldiv@b
 15550   0125F8  C506  F554         	movff	?___flmul+1,___fldiv@b+1
 15551   0125FC  C507  F555         	movff	?___flmul+2,___fldiv@b+2
 15552   012600  C508  F556         	movff	?___flmul+3,___fldiv@b+3
 15553   012604  0EDB               	movlw	219
 15554   012606  6E57               	movwf	___fldiv@a^(0+1280),c
 15555   012608  0E0F               	movlw	15
 15556   01260A  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15557   01260C  0E49               	movlw	73
 15558   01260E  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15559   012610  0E40               	movlw	64
 15560   012612  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15561   012614  EC5D  F0A3         	call	___fldiv	;wreg free
 15562   012618  0105               	movlb	5	; () banked
 15563   01261A  EE20 F01C          	lfsr	2,28
 15564   01261E  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15565   012620  26D9               	addwf	fsr2l,f,c
 15566   012622  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15567   012624  22DA               	addwfc	fsr2h,f,c
 15568   012626  C553  F4DE         	movff	?___fldiv,postinc2
 15569   01262A  C554  F4DE         	movff	?___fldiv+1,postinc2
 15570   01262E  C555  F4DE         	movff	?___fldiv+2,postinc2
 15571   012632  C556  F4DE         	movff	?___fldiv+3,postinc2
 15572   012636                     
 15573                           ; BSR set to: 5
 15574                           ;MPU6050_DMP.c: 289:     data->angles.yaw = 0.0f;
 15575   012636  EE20 F018          	lfsr	2,24
 15576   01263A  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15577   01263C  26D9               	addwf	fsr2l,f,c
 15578   01263E  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15579   012640  22DA               	addwfc	fsr2h,f,c
 15580   012642  0E00               	movlw	0
 15581   012644  6EDE               	movwf	postinc2,c
 15582   012646  0E00               	movlw	0
 15583   012648  6EDE               	movwf	postinc2,c
 15584   01264A  0E00               	movlw	0
 15585   01264C  6EDE               	movwf	postinc2,c
 15586   01264E  0E00               	movlw	0
 15587   012650  6EDD               	movwf	postdec2,c
 15588   012652                     
 15589                           ; BSR set to: 5
 15590                           ;MPU6050_DMP.c: 292:     data->timestamp = GetTimestamp_ms();
 15591   012652  EC8D  F0B7         	call	_GetTimestamp_ms	;wreg free
 15592   012656  0105               	movlb	5	; () banked
 15593   012658  EE20 F028          	lfsr	2,40
 15594   01265C  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15595   01265E  26D9               	addwf	fsr2l,f,c
 15596   012660  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15597   012662  22DA               	addwfc	fsr2h,f,c
 15598   012664  C501  F4DE         	movff	?_GetTimestamp_ms,postinc2
 15599   012668  C502  F4DD         	movff	?_GetTimestamp_ms+1,postdec2
 15600   01266C                     
 15601                           ; BSR set to: 5
 15602                           ;MPU6050_DMP.c: 293:     data->data_ready = 1;
 15603   01266C  EE20 F02A          	lfsr	2,42
 15604   012670  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15605   012672  26D9               	addwf	fsr2l,f,c
 15606   012674  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15607   012676  22DA               	addwfc	fsr2h,f,c
 15608   012678  0E01               	movlw	1
 15609   01267A  6EDF               	movwf	indf2,c
 15610   01267C                     
 15611                           ; BSR set to: 5
 15612                           ;MPU6050_DMP.c: 295:     return 1;
 15613   01267C  0E01               	movlw	1
 15614   01267E                     l614:
 15615   01267E  0012               	return		;funcret
 15616   012680                     __end_of_MPU6050_ReadAll:
 15617                           	callstack 0
 15618                           
 15619 ;; *************** function _sqrtf *****************
 15620 ;; Defined at:
 15621 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sqrtf.c"
 15622 ;; Parameters:    Size  Location     Type
 15623 ;;  x               4   45[COMRAM] float 
 15624 ;; Auto vars:     Size  Location     Type
 15625 ;;  ix              4   78[COMRAM] struct .
 15626 ;;  r               4   74[COMRAM] unsigned long 
 15627 ;;  m               4   70[COMRAM] long 
 15628 ;;  t               4   66[COMRAM] long 
 15629 ;;  q               4   62[COMRAM] long 
 15630 ;;  i               4   58[COMRAM] long 
 15631 ;;  s               4   54[COMRAM] long 
 15632 ;;  z               4    0        float 
 15633 ;; Return value:  Size  Location     Type
 15634 ;;                  4   45[COMRAM] float 
 15635 ;; Registers used:
 15636 ;;		wreg, status,2, status,0
 15637 ;; Tracked objects:
 15638 ;;		On entry : 0/0
 15639 ;;		On exit  : 0/0
 15640 ;;		Unchanged: 0/0
 15641 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15643 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15644 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15645 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15646 ;;Total ram usage:       37 bytes
 15647 ;; Hardware stack levels used: 1
 15648 ;; This function calls:
 15649 ;;		Nothing
 15650 ;; This function is called by:
 15651 ;;		_MPU6050_DMP_GetData
 15652 ;;		_MPU6050_ReadAll
 15653 ;; This function uses a non-reentrant model
 15654 ;;
 15655                           
 15656                           	psect	text35
 15657   013F12                     __ptext35:
 15658                           	callstack 0
 15659   013F12                     _sqrtf:
 15660                           	callstack 125
 15661   013F12  C52E  F54F         	movff	sqrtf@x,sqrtf@ix
 15662   013F16  C52F  F550         	movff	sqrtf@x+1,sqrtf@ix+1
 15663   013F1A  C530  F551         	movff	sqrtf@x+2,sqrtf@ix+2
 15664   013F1E  C531  F552         	movff	sqrtf@x+3,sqrtf@ix+3
 15665   013F22  0E00               	movlw	0
 15666   013F24  144F               	andwf	sqrtf@ix^(0+1280),w,c
 15667   013F26  6E32               	movwf	??_sqrtf^(0+1280),c
 15668   013F28  0E00               	movlw	0
 15669   013F2A  1450               	andwf	(sqrtf@ix+1)^(0+1280),w,c
 15670   013F2C  6E33               	movwf	(??_sqrtf+1)^(0+1280),c
 15671   013F2E  0E80               	movlw	128
 15672   013F30  1451               	andwf	(sqrtf@ix+2)^(0+1280),w,c
 15673   013F32  6E34               	movwf	(??_sqrtf+2)^(0+1280),c
 15674   013F34  0E7F               	movlw	127
 15675   013F36  1452               	andwf	(sqrtf@ix+3)^(0+1280),w,c
 15676   013F38  6E35               	movwf	(??_sqrtf+3)^(0+1280),c
 15677   013F3A  0E80               	movlw	128
 15678   013F3C  1834               	xorwf	(??_sqrtf+2)^(0+1280),w,c
 15679   013F3E  E109               	bnz	u6951
 15680   013F40  0E7F               	movlw	127
 15681   013F42  1835               	xorwf	(??_sqrtf+3)^(0+1280),w,c
 15682   013F44  1032               	iorwf	??_sqrtf^(0+1280),w,c
 15683   013F46  1033               	iorwf	(??_sqrtf+1)^(0+1280),w,c
 15684   013F48  A4D8               	btfss	status,2,c
 15685   013F4A  EFA9  F09F         	goto	u6951
 15686   013F4E  EFAB  F09F         	goto	u6950
 15687   013F52                     u6951:
 15688   013F52  EFDB  F09F         	goto	l9065
 15689   013F56                     u6950:
 15690   013F56  0EFF               	movlw	255
 15691   013F58  144F               	andwf	sqrtf@ix^(0+1280),w,c
 15692   013F5A  6E32               	movwf	??_sqrtf^(0+1280),c
 15693   013F5C  0EFF               	movlw	255
 15694   013F5E  1450               	andwf	(sqrtf@ix+1)^(0+1280),w,c
 15695   013F60  6E33               	movwf	(??_sqrtf+1)^(0+1280),c
 15696   013F62  0E7F               	movlw	127
 15697   013F64  1451               	andwf	(sqrtf@ix+2)^(0+1280),w,c
 15698   013F66  6E34               	movwf	(??_sqrtf+2)^(0+1280),c
 15699   013F68  0E00               	movlw	0
 15700   013F6A  1452               	andwf	(sqrtf@ix+3)^(0+1280),w,c
 15701   013F6C  6E35               	movwf	(??_sqrtf+3)^(0+1280),c
 15702   013F6E  5032               	movf	??_sqrtf^(0+1280),w,c
 15703   013F70  1033               	iorwf	(??_sqrtf+1)^(0+1280),w,c
 15704   013F72  1034               	iorwf	(??_sqrtf+2)^(0+1280),w,c
 15705   013F74  1035               	iorwf	(??_sqrtf+3)^(0+1280),w,c
 15706   013F76  A4D8               	btfss	status,2,c
 15707   013F78  EFC0  F09F         	goto	u6961
 15708   013F7C  EFC2  F09F         	goto	u6960
 15709   013F80                     u6961:
 15710   013F80  EFC9  F09F         	goto	l9059
 15711   013F84                     u6960:
 15712   013F84  BE52               	btfsc	(sqrtf@ix+3)^(0+1280),7,c
 15713   013F86  EFC9  F09F         	goto	u6970
 15714   013F8A  EFC7  F09F         	goto	u6971
 15715   013F8E                     u6971:
 15716   013F8E  EFD1  F09F         	goto	l9061
 15717   013F92                     u6970:
 15718   013F92                     l9059:
 15719   013F92  0EFF               	movlw	255
 15720   013F94  124F               	iorwf	sqrtf@ix^(0+1280),f,c
 15721   013F96  0EFF               	movlw	255
 15722   013F98  1250               	iorwf	(sqrtf@ix+1)^(0+1280),f,c
 15723   013F9A  0E7F               	movlw	127
 15724   013F9C  1251               	iorwf	(sqrtf@ix+2)^(0+1280),f,c
 15725   013F9E  0E00               	movlw	0
 15726   013FA0  1252               	iorwf	(sqrtf@ix+3)^(0+1280),f,c
 15727   013FA2                     l9061:
 15728   013FA2  C54F  F52E         	movff	sqrtf@ix,?_sqrtf
 15729   013FA6  C550  F52F         	movff	sqrtf@ix+1,?_sqrtf+1
 15730   013FAA  C551  F530         	movff	sqrtf@ix+2,?_sqrtf+2
 15731   013FAE  C552  F531         	movff	sqrtf@ix+3,?_sqrtf+3
 15732   013FB2  EF77  F0A1         	goto	l2482
 15733   013FB6                     l9065:
 15734   013FB6  BE52               	btfsc	(sqrtf@ix+3)^(0+1280),7,c
 15735   013FB8  EFEA  F09F         	goto	u6980
 15736   013FBC  5052               	movf	(sqrtf@ix+3)^(0+1280),w,c
 15737   013FBE  1051               	iorwf	(sqrtf@ix+2)^(0+1280),w,c
 15738   013FC0  1050               	iorwf	(sqrtf@ix+1)^(0+1280),w,c
 15739   013FC2  E106               	bnz	u6981
 15740   013FC4  044F               	decf	sqrtf@ix^(0+1280),w,c
 15741   013FC6  B0D8               	btfsc	status,0,c
 15742   013FC8  EFE8  F09F         	goto	u6981
 15743   013FCC  EFEA  F09F         	goto	u6980
 15744   013FD0                     u6981:
 15745   013FD0  EF21  F0A0         	goto	l9081
 15746   013FD4                     u6980:
 15747   013FD4  0EFF               	movlw	255
 15748   013FD6  144F               	andwf	sqrtf@ix^(0+1280),w,c
 15749   013FD8  6E32               	movwf	??_sqrtf^(0+1280),c
 15750   013FDA  0EFF               	movlw	255
 15751   013FDC  1450               	andwf	(sqrtf@ix+1)^(0+1280),w,c
 15752   013FDE  6E33               	movwf	(??_sqrtf+1)^(0+1280),c
 15753   013FE0  0EFF               	movlw	255
 15754   013FE2  1451               	andwf	(sqrtf@ix+2)^(0+1280),w,c
 15755   013FE4  6E34               	movwf	(??_sqrtf+2)^(0+1280),c
 15756   013FE6  0E7F               	movlw	127
 15757   013FE8  1452               	andwf	(sqrtf@ix+3)^(0+1280),w,c
 15758   013FEA  6E35               	movwf	(??_sqrtf+3)^(0+1280),c
 15759   013FEC  5032               	movf	??_sqrtf^(0+1280),w,c
 15760   013FEE  1033               	iorwf	(??_sqrtf+1)^(0+1280),w,c
 15761   013FF0  1034               	iorwf	(??_sqrtf+2)^(0+1280),w,c
 15762   013FF2  1035               	iorwf	(??_sqrtf+3)^(0+1280),w,c
 15763   013FF4  A4D8               	btfss	status,2,c
 15764   013FF6  EFFF  F09F         	goto	u6991
 15765   013FFA  EF01  F0A0         	goto	u6990
 15766   013FFE                     u6991:
 15767   013FFE  EF0B  F0A0         	goto	l9073
 15768   014002                     u6990:
 15769   014002  0E00               	movlw	0
 15770   014004  6E2E               	movwf	?_sqrtf^(0+1280),c
 15771   014006  0E00               	movlw	0
 15772   014008  6E2F               	movwf	(?_sqrtf+1)^(0+1280),c
 15773   01400A  0E00               	movlw	0
 15774   01400C  6E30               	movwf	(?_sqrtf+2)^(0+1280),c
 15775   01400E  0E00               	movlw	0
 15776   014010  6E31               	movwf	(?_sqrtf+3)^(0+1280),c
 15777   014012  EF77  F0A1         	goto	l2482
 15778   014016                     l9073:
 15779   014016  BE52               	btfsc	(sqrtf@ix+3)^(0+1280),7,c
 15780   014018  EF12  F0A0         	goto	u7000
 15781   01401C  EF10  F0A0         	goto	u7001
 15782   014020                     u7001:
 15783   014020  EF21  F0A0         	goto	l9081
 15784   014024                     u7000:
 15785   014024  0E00               	movlw	0
 15786   014026  0107               	movlb	7	; () banked
 15787   014028  6F11               	movwf	(_errno+1)& (0+255),b
 15788   01402A  0E21               	movlw	33
 15789   01402C  6F10               	movwf	_errno& (0+255),b
 15790   01402E  0EFF               	movlw	255
 15791   014030  6E4F               	movwf	sqrtf@ix^(0+1280),c
 15792   014032  0EFF               	movlw	255
 15793   014034  6E50               	movwf	(sqrtf@ix+1)^(0+1280),c
 15794   014036  0EFF               	movlw	255
 15795   014038  6E51               	movwf	(sqrtf@ix+2)^(0+1280),c
 15796   01403A  0E7F               	movlw	127
 15797   01403C  6E52               	movwf	(sqrtf@ix+3)^(0+1280),c
 15798   01403E  EFD1  F09F         	goto	l9061
 15799   014042                     l9081:
 15800   014042  0E17               	movlw	23
 15801   014044  6E32               	movwf	??_sqrtf^(0+1280),c
 15802   014046  C54F  F533         	movff	sqrtf@ix,??_sqrtf+1
 15803   01404A  C550  F534         	movff	sqrtf@ix+1,??_sqrtf+2
 15804   01404E  C551  F535         	movff	sqrtf@ix+2,??_sqrtf+3
 15805   014052  C552  F536         	movff	sqrtf@ix+3,??_sqrtf+4
 15806   014056                     u7015:
 15807   014056  6632               	tstfsz	??_sqrtf^(0+1280),c
 15808   014058  EF30  F0A0         	goto	u7016
 15809   01405C  EF38  F0A0         	goto	u7017
 15810   014060                     u7016:
 15811   014060  3436               	rlcf	(??_sqrtf+4)^(0+1280),w,c
 15812   014062  3236               	rrcf	(??_sqrtf+4)^(0+1280),f,c
 15813   014064  3235               	rrcf	(??_sqrtf+3)^(0+1280),f,c
 15814   014066  3234               	rrcf	(??_sqrtf+2)^(0+1280),f,c
 15815   014068  3233               	rrcf	(??_sqrtf+1)^(0+1280),f,c
 15816   01406A  2E32               	decfsz	??_sqrtf^(0+1280),f,c
 15817   01406C  EF2B  F0A0         	goto	u7015
 15818   014070                     u7017:
 15819   014070  C533  F547         	movff	??_sqrtf+1,sqrtf@m
 15820   014074  C534  F548         	movff	??_sqrtf+2,sqrtf@m+1
 15821   014078  C535  F549         	movff	??_sqrtf+3,sqrtf@m+2
 15822   01407C  C536  F54A         	movff	??_sqrtf+4,sqrtf@m+3
 15823   014080  5047               	movf	sqrtf@m^(0+1280),w,c
 15824   014082  1048               	iorwf	(sqrtf@m+1)^(0+1280),w,c
 15825   014084  1049               	iorwf	(sqrtf@m+2)^(0+1280),w,c
 15826   014086  104A               	iorwf	(sqrtf@m+3)^(0+1280),w,c
 15827   014088  A4D8               	btfss	status,2,c
 15828   01408A  EF49  F0A0         	goto	u7021
 15829   01408E  EF4B  F0A0         	goto	u7020
 15830   014092                     u7021:
 15831   014092  EF7B  F0A0         	goto	l2486
 15832   014096                     u7020:
 15833   014096  0E00               	movlw	0
 15834   014098  6E3B               	movwf	sqrtf@i^(0+1280),c
 15835   01409A  0E00               	movlw	0
 15836   01409C  6E3C               	movwf	(sqrtf@i+1)^(0+1280),c
 15837   01409E  0E00               	movlw	0
 15838   0140A0  6E3D               	movwf	(sqrtf@i+2)^(0+1280),c
 15839   0140A2  0E00               	movlw	0
 15840   0140A4  6E3E               	movwf	(sqrtf@i+3)^(0+1280),c
 15841   0140A6  EF60  F0A0         	goto	l9089
 15842   0140AA                     l9085:
 15843   0140AA  90D8               	bcf	status,0,c
 15844   0140AC  364F               	rlcf	sqrtf@ix^(0+1280),f,c
 15845   0140AE  3650               	rlcf	(sqrtf@ix+1)^(0+1280),f,c
 15846   0140B0  3651               	rlcf	(sqrtf@ix+2)^(0+1280),f,c
 15847   0140B2  3652               	rlcf	(sqrtf@ix+3)^(0+1280),f,c
 15848   0140B4  0E01               	movlw	1
 15849   0140B6  263B               	addwf	sqrtf@i^(0+1280),f,c
 15850   0140B8  0E00               	movlw	0
 15851   0140BA  223C               	addwfc	(sqrtf@i+1)^(0+1280),f,c
 15852   0140BC  223D               	addwfc	(sqrtf@i+2)^(0+1280),f,c
 15853   0140BE  223E               	addwfc	(sqrtf@i+3)^(0+1280),f,c
 15854   0140C0                     l9089:
 15855   0140C0  AE51               	btfss	(sqrtf@ix+2)^(0+1280),7,c
 15856   0140C2  EF65  F0A0         	goto	u7031
 15857   0140C6  EF67  F0A0         	goto	u7030
 15858   0140CA                     u7031:
 15859   0140CA  EF55  F0A0         	goto	l9085
 15860   0140CE                     u7030:
 15861   0140CE  0EFF               	movlw	255
 15862   0140D0  243B               	addwf	sqrtf@i^(0+1280),w,c
 15863   0140D2  6E32               	movwf	??_sqrtf^(0+1280),c
 15864   0140D4  0EFF               	movlw	255
 15865   0140D6  203C               	addwfc	(sqrtf@i+1)^(0+1280),w,c
 15866   0140D8  6E33               	movwf	(??_sqrtf+1)^(0+1280),c
 15867   0140DA  0EFF               	movlw	255
 15868   0140DC  203D               	addwfc	(sqrtf@i+2)^(0+1280),w,c
 15869   0140DE  6E34               	movwf	(??_sqrtf+2)^(0+1280),c
 15870   0140E0  0EFF               	movlw	255
 15871   0140E2  203E               	addwfc	(sqrtf@i+3)^(0+1280),w,c
 15872   0140E4  6E35               	movwf	(??_sqrtf+3)^(0+1280),c
 15873   0140E6  5032               	movf	??_sqrtf^(0+1280),w,c
 15874   0140E8  5E47               	subwf	sqrtf@m^(0+1280),f,c
 15875   0140EA  5033               	movf	(??_sqrtf+1)^(0+1280),w,c
 15876   0140EC  5A48               	subwfb	(sqrtf@m+1)^(0+1280),f,c
 15877   0140EE  5034               	movf	(??_sqrtf+2)^(0+1280),w,c
 15878   0140F0  5A49               	subwfb	(sqrtf@m+2)^(0+1280),f,c
 15879   0140F2  5035               	movf	(??_sqrtf+3)^(0+1280),w,c
 15880   0140F4  5A4A               	subwfb	(sqrtf@m+3)^(0+1280),f,c
 15881   0140F6                     l2486:
 15882   0140F6  0E81               	movlw	129
 15883   0140F8  2647               	addwf	sqrtf@m^(0+1280),f,c
 15884   0140FA  0EFF               	movlw	255
 15885   0140FC  2248               	addwfc	(sqrtf@m+1)^(0+1280),f,c
 15886   0140FE  0EFF               	movlw	255
 15887   014100  2249               	addwfc	(sqrtf@m+2)^(0+1280),f,c
 15888   014102  0EFF               	movlw	255
 15889   014104  224A               	addwfc	(sqrtf@m+3)^(0+1280),f,c
 15890   014106  0EFF               	movlw	255
 15891   014108  144F               	andwf	sqrtf@ix^(0+1280),w,c
 15892   01410A  6E32               	movwf	??_sqrtf^(0+1280),c
 15893   01410C  0EFF               	movlw	255
 15894   01410E  1450               	andwf	(sqrtf@ix+1)^(0+1280),w,c
 15895   014110  6E33               	movwf	(??_sqrtf+1)^(0+1280),c
 15896   014112  0E7F               	movlw	127
 15897   014114  1451               	andwf	(sqrtf@ix+2)^(0+1280),w,c
 15898   014116  6E34               	movwf	(??_sqrtf+2)^(0+1280),c
 15899   014118  0E00               	movlw	0
 15900   01411A  1452               	andwf	(sqrtf@ix+3)^(0+1280),w,c
 15901   01411C  6E35               	movwf	(??_sqrtf+3)^(0+1280),c
 15902   01411E  0E00               	movlw	0
 15903   014120  1032               	iorwf	??_sqrtf^(0+1280),w,c
 15904   014122  6E4F               	movwf	sqrtf@ix^(0+1280),c
 15905   014124  0E00               	movlw	0
 15906   014126  1033               	iorwf	(??_sqrtf+1)^(0+1280),w,c
 15907   014128  6E50               	movwf	(sqrtf@ix+1)^(0+1280),c
 15908   01412A  0E80               	movlw	128
 15909   01412C  1034               	iorwf	(??_sqrtf+2)^(0+1280),w,c
 15910   01412E  6E51               	movwf	(sqrtf@ix+2)^(0+1280),c
 15911   014130  0E00               	movlw	0
 15912   014132  1035               	iorwf	(??_sqrtf+3)^(0+1280),w,c
 15913   014134  6E52               	movwf	(sqrtf@ix+3)^(0+1280),c
 15914   014136  A047               	btfss	sqrtf@m^(0+1280),0,c
 15915   014138  EFA0  F0A0         	goto	u7041
 15916   01413C  EFA2  F0A0         	goto	u7040
 15917   014140                     u7041:
 15918   014140  EFAA  F0A0         	goto	l2490
 15919   014144                     u7040:
 15920   014144  504F               	movf	sqrtf@ix^(0+1280),w,c
 15921   014146  264F               	addwf	sqrtf@ix^(0+1280),f,c
 15922   014148  5050               	movf	(sqrtf@ix+1)^(0+1280),w,c
 15923   01414A  2250               	addwfc	(sqrtf@ix+1)^(0+1280),f,c
 15924   01414C  5051               	movf	(sqrtf@ix+2)^(0+1280),w,c
 15925   01414E  2251               	addwfc	(sqrtf@ix+2)^(0+1280),f,c
 15926   014150  5052               	movf	(sqrtf@ix+3)^(0+1280),w,c
 15927   014152  2252               	addwfc	(sqrtf@ix+3)^(0+1280),f,c
 15928   014154                     l2490:
 15929   014154  344A               	rlcf	(sqrtf@m+3)^(0+1280),w,c
 15930   014156  324A               	rrcf	(sqrtf@m+3)^(0+1280),f,c
 15931   014158  3249               	rrcf	(sqrtf@m+2)^(0+1280),f,c
 15932   01415A  3248               	rrcf	(sqrtf@m+1)^(0+1280),f,c
 15933   01415C  3247               	rrcf	sqrtf@m^(0+1280),f,c
 15934   01415E  504F               	movf	sqrtf@ix^(0+1280),w,c
 15935   014160  264F               	addwf	sqrtf@ix^(0+1280),f,c
 15936   014162  5050               	movf	(sqrtf@ix+1)^(0+1280),w,c
 15937   014164  2250               	addwfc	(sqrtf@ix+1)^(0+1280),f,c
 15938   014166  5051               	movf	(sqrtf@ix+2)^(0+1280),w,c
 15939   014168  2251               	addwfc	(sqrtf@ix+2)^(0+1280),f,c
 15940   01416A  5052               	movf	(sqrtf@ix+3)^(0+1280),w,c
 15941   01416C  2252               	addwfc	(sqrtf@ix+3)^(0+1280),f,c
 15942   01416E  0E00               	movlw	0
 15943   014170  6E37               	movwf	sqrtf@s^(0+1280),c
 15944   014172  0E00               	movlw	0
 15945   014174  6E38               	movwf	(sqrtf@s+1)^(0+1280),c
 15946   014176  0E00               	movlw	0
 15947   014178  6E39               	movwf	(sqrtf@s+2)^(0+1280),c
 15948   01417A  0E00               	movlw	0
 15949   01417C  6E3A               	movwf	(sqrtf@s+3)^(0+1280),c
 15950   01417E  C537  F53F         	movff	sqrtf@s,sqrtf@q
 15951   014182  C538  F540         	movff	sqrtf@s+1,sqrtf@q+1
 15952   014186  C539  F541         	movff	sqrtf@s+2,sqrtf@q+2
 15953   01418A  C53A  F542         	movff	sqrtf@s+3,sqrtf@q+3
 15954   01418E  0E00               	movlw	0
 15955   014190  6E4B               	movwf	sqrtf@r^(0+1280),c
 15956   014192  0E00               	movlw	0
 15957   014194  6E4C               	movwf	(sqrtf@r+1)^(0+1280),c
 15958   014196  0E00               	movlw	0
 15959   014198  6E4D               	movwf	(sqrtf@r+2)^(0+1280),c
 15960   01419A  0E01               	movlw	1
 15961   01419C  6E4E               	movwf	(sqrtf@r+3)^(0+1280),c
 15962   01419E  EF19  F0A1         	goto	l9107
 15963   0141A2                     l9101:
 15964   0141A2  5037               	movf	sqrtf@s^(0+1280),w,c
 15965   0141A4  244B               	addwf	sqrtf@r^(0+1280),w,c
 15966   0141A6  6E43               	movwf	sqrtf@t^(0+1280),c
 15967   0141A8  5038               	movf	(sqrtf@s+1)^(0+1280),w,c
 15968   0141AA  204C               	addwfc	(sqrtf@r+1)^(0+1280),w,c
 15969   0141AC  6E44               	movwf	(sqrtf@t+1)^(0+1280),c
 15970   0141AE  5039               	movf	(sqrtf@s+2)^(0+1280),w,c
 15971   0141B0  204D               	addwfc	(sqrtf@r+2)^(0+1280),w,c
 15972   0141B2  6E45               	movwf	(sqrtf@t+2)^(0+1280),c
 15973   0141B4  503A               	movf	(sqrtf@s+3)^(0+1280),w,c
 15974   0141B6  204E               	addwfc	(sqrtf@r+3)^(0+1280),w,c
 15975   0141B8  6E46               	movwf	(sqrtf@t+3)^(0+1280),c
 15976   0141BA  5043               	movf	sqrtf@t^(0+1280),w,c
 15977   0141BC  5C4F               	subwf	sqrtf@ix^(0+1280),w,c
 15978   0141BE  5044               	movf	(sqrtf@t+1)^(0+1280),w,c
 15979   0141C0  5850               	subwfb	(sqrtf@ix+1)^(0+1280),w,c
 15980   0141C2  5045               	movf	(sqrtf@t+2)^(0+1280),w,c
 15981   0141C4  5851               	subwfb	(sqrtf@ix+2)^(0+1280),w,c
 15982   0141C6  5052               	movf	(sqrtf@ix+3)^(0+1280),w,c
 15983   0141C8  0A80               	xorlw	128
 15984   0141CA  6E32               	movwf	??_sqrtf^(0+1280),c
 15985   0141CC  5046               	movf	(sqrtf@t+3)^(0+1280),w,c
 15986   0141CE  0A80               	xorlw	128
 15987   0141D0  5832               	subwfb	??_sqrtf^(0+1280),w,c
 15988   0141D2  A0D8               	btfss	status,0,c
 15989   0141D4  EFEE  F0A0         	goto	u7051
 15990   0141D8  EFF0  F0A0         	goto	u7050
 15991   0141DC                     u7051:
 15992   0141DC  EF0C  F0A1         	goto	l2493
 15993   0141E0                     u7050:
 15994   0141E0  5043               	movf	sqrtf@t^(0+1280),w,c
 15995   0141E2  244B               	addwf	sqrtf@r^(0+1280),w,c
 15996   0141E4  6E37               	movwf	sqrtf@s^(0+1280),c
 15997   0141E6  5044               	movf	(sqrtf@t+1)^(0+1280),w,c
 15998   0141E8  204C               	addwfc	(sqrtf@r+1)^(0+1280),w,c
 15999   0141EA  6E38               	movwf	(sqrtf@s+1)^(0+1280),c
 16000   0141EC  5045               	movf	(sqrtf@t+2)^(0+1280),w,c
 16001   0141EE  204D               	addwfc	(sqrtf@r+2)^(0+1280),w,c
 16002   0141F0  6E39               	movwf	(sqrtf@s+2)^(0+1280),c
 16003   0141F2  5046               	movf	(sqrtf@t+3)^(0+1280),w,c
 16004   0141F4  204E               	addwfc	(sqrtf@r+3)^(0+1280),w,c
 16005   0141F6  6E3A               	movwf	(sqrtf@s+3)^(0+1280),c
 16006   0141F8  5043               	movf	sqrtf@t^(0+1280),w,c
 16007   0141FA  5E4F               	subwf	sqrtf@ix^(0+1280),f,c
 16008   0141FC  5044               	movf	(sqrtf@t+1)^(0+1280),w,c
 16009   0141FE  5A50               	subwfb	(sqrtf@ix+1)^(0+1280),f,c
 16010   014200  5045               	movf	(sqrtf@t+2)^(0+1280),w,c
 16011   014202  5A51               	subwfb	(sqrtf@ix+2)^(0+1280),f,c
 16012   014204  5046               	movf	(sqrtf@t+3)^(0+1280),w,c
 16013   014206  5A52               	subwfb	(sqrtf@ix+3)^(0+1280),f,c
 16014   014208  504B               	movf	sqrtf@r^(0+1280),w,c
 16015   01420A  263F               	addwf	sqrtf@q^(0+1280),f,c
 16016   01420C  504C               	movf	(sqrtf@r+1)^(0+1280),w,c
 16017   01420E  2240               	addwfc	(sqrtf@q+1)^(0+1280),f,c
 16018   014210  504D               	movf	(sqrtf@r+2)^(0+1280),w,c
 16019   014212  2241               	addwfc	(sqrtf@q+2)^(0+1280),f,c
 16020   014214  504E               	movf	(sqrtf@r+3)^(0+1280),w,c
 16021   014216  2242               	addwfc	(sqrtf@q+3)^(0+1280),f,c
 16022   014218                     l2493:
 16023   014218  504F               	movf	sqrtf@ix^(0+1280),w,c
 16024   01421A  264F               	addwf	sqrtf@ix^(0+1280),f,c
 16025   01421C  5050               	movf	(sqrtf@ix+1)^(0+1280),w,c
 16026   01421E  2250               	addwfc	(sqrtf@ix+1)^(0+1280),f,c
 16027   014220  5051               	movf	(sqrtf@ix+2)^(0+1280),w,c
 16028   014222  2251               	addwfc	(sqrtf@ix+2)^(0+1280),f,c
 16029   014224  5052               	movf	(sqrtf@ix+3)^(0+1280),w,c
 16030   014226  2252               	addwfc	(sqrtf@ix+3)^(0+1280),f,c
 16031   014228  90D8               	bcf	status,0,c
 16032   01422A  324E               	rrcf	(sqrtf@r+3)^(0+1280),f,c
 16033   01422C  324D               	rrcf	(sqrtf@r+2)^(0+1280),f,c
 16034   01422E  324C               	rrcf	(sqrtf@r+1)^(0+1280),f,c
 16035   014230  324B               	rrcf	sqrtf@r^(0+1280),f,c
 16036   014232                     l9107:
 16037   014232  504B               	movf	sqrtf@r^(0+1280),w,c
 16038   014234  104C               	iorwf	(sqrtf@r+1)^(0+1280),w,c
 16039   014236  104D               	iorwf	(sqrtf@r+2)^(0+1280),w,c
 16040   014238  104E               	iorwf	(sqrtf@r+3)^(0+1280),w,c
 16041   01423A  A4D8               	btfss	status,2,c
 16042   01423C  EF22  F0A1         	goto	u7061
 16043   014240  EF24  F0A1         	goto	u7060
 16044   014244                     u7061:
 16045   014244  EFD1  F0A0         	goto	l9101
 16046   014248                     u7060:
 16047   014248  504F               	movf	sqrtf@ix^(0+1280),w,c
 16048   01424A  1050               	iorwf	(sqrtf@ix+1)^(0+1280),w,c
 16049   01424C  1051               	iorwf	(sqrtf@ix+2)^(0+1280),w,c
 16050   01424E  1052               	iorwf	(sqrtf@ix+3)^(0+1280),w,c
 16051   014250  B4D8               	btfsc	status,2,c
 16052   014252  EF2D  F0A1         	goto	u7071
 16053   014256  EF2F  F0A1         	goto	u7070
 16054   01425A                     u7071:
 16055   01425A  EF43  F0A1         	goto	l2495
 16056   01425E                     u7070:
 16057   01425E  0E01               	movlw	1
 16058   014260  143F               	andwf	sqrtf@q^(0+1280),w,c
 16059   014262  6E32               	movwf	??_sqrtf^(0+1280),c
 16060   014264  0E00               	movlw	0
 16061   014266  1440               	andwf	(sqrtf@q+1)^(0+1280),w,c
 16062   014268  6E33               	movwf	(??_sqrtf+1)^(0+1280),c
 16063   01426A  0E00               	movlw	0
 16064   01426C  1441               	andwf	(sqrtf@q+2)^(0+1280),w,c
 16065   01426E  6E34               	movwf	(??_sqrtf+2)^(0+1280),c
 16066   014270  0E00               	movlw	0
 16067   014272  1442               	andwf	(sqrtf@q+3)^(0+1280),w,c
 16068   014274  6E35               	movwf	(??_sqrtf+3)^(0+1280),c
 16069   014276  5032               	movf	??_sqrtf^(0+1280),w,c
 16070   014278  263F               	addwf	sqrtf@q^(0+1280),f,c
 16071   01427A  5033               	movf	(??_sqrtf+1)^(0+1280),w,c
 16072   01427C  2240               	addwfc	(sqrtf@q+1)^(0+1280),f,c
 16073   01427E  5034               	movf	(??_sqrtf+2)^(0+1280),w,c
 16074   014280  2241               	addwfc	(sqrtf@q+2)^(0+1280),f,c
 16075   014282  5035               	movf	(??_sqrtf+3)^(0+1280),w,c
 16076   014284  2242               	addwfc	(sqrtf@q+3)^(0+1280),f,c
 16077   014286                     l2495:
 16078   014286  C53F  F532         	movff	sqrtf@q,??_sqrtf
 16079   01428A  C540  F533         	movff	sqrtf@q+1,??_sqrtf+1
 16080   01428E  C541  F534         	movff	sqrtf@q+2,??_sqrtf+2
 16081   014292  C542  F535         	movff	sqrtf@q+3,??_sqrtf+3
 16082   014296  3435               	rlcf	(??_sqrtf+3)^(0+1280),w,c
 16083   014298  3235               	rrcf	(??_sqrtf+3)^(0+1280),f,c
 16084   01429A  3234               	rrcf	(??_sqrtf+2)^(0+1280),f,c
 16085   01429C  3233               	rrcf	(??_sqrtf+1)^(0+1280),f,c
 16086   01429E  3232               	rrcf	??_sqrtf^(0+1280),f,c
 16087   0142A0  0E00               	movlw	0
 16088   0142A2  2432               	addwf	??_sqrtf^(0+1280),w,c
 16089   0142A4  6E4F               	movwf	sqrtf@ix^(0+1280),c
 16090   0142A6  0E00               	movlw	0
 16091   0142A8  2033               	addwfc	(??_sqrtf+1)^(0+1280),w,c
 16092   0142AA  6E50               	movwf	(sqrtf@ix+1)^(0+1280),c
 16093   0142AC  0E00               	movlw	0
 16094   0142AE  2034               	addwfc	(??_sqrtf+2)^(0+1280),w,c
 16095   0142B0  6E51               	movwf	(sqrtf@ix+2)^(0+1280),c
 16096   0142B2  0E3F               	movlw	63
 16097   0142B4  2035               	addwfc	(??_sqrtf+3)^(0+1280),w,c
 16098   0142B6  6E52               	movwf	(sqrtf@ix+3)^(0+1280),c
 16099   0142B8  C547  F532         	movff	sqrtf@m,??_sqrtf
 16100   0142BC  C548  F533         	movff	sqrtf@m+1,??_sqrtf+1
 16101   0142C0  C549  F534         	movff	sqrtf@m+2,??_sqrtf+2
 16102   0142C4  C54A  F535         	movff	sqrtf@m+3,??_sqrtf+3
 16103   0142C8  0E17               	movlw	23
 16104   0142CA                     u7085:
 16105   0142CA  90D8               	bcf	status,0,c
 16106   0142CC  3632               	rlcf	??_sqrtf^(0+1280),f,c
 16107   0142CE  3633               	rlcf	(??_sqrtf+1)^(0+1280),f,c
 16108   0142D0  3634               	rlcf	(??_sqrtf+2)^(0+1280),f,c
 16109   0142D2  3635               	rlcf	(??_sqrtf+3)^(0+1280),f,c
 16110   0142D4  2EE8               	decfsz	wreg,f,c
 16111   0142D6  EF65  F0A1         	goto	u7085
 16112   0142DA  5032               	movf	??_sqrtf^(0+1280),w,c
 16113   0142DC  264F               	addwf	sqrtf@ix^(0+1280),f,c
 16114   0142DE  5033               	movf	(??_sqrtf+1)^(0+1280),w,c
 16115   0142E0  2250               	addwfc	(sqrtf@ix+1)^(0+1280),f,c
 16116   0142E2  5034               	movf	(??_sqrtf+2)^(0+1280),w,c
 16117   0142E4  2251               	addwfc	(sqrtf@ix+2)^(0+1280),f,c
 16118   0142E6  5035               	movf	(??_sqrtf+3)^(0+1280),w,c
 16119   0142E8  2252               	addwfc	(sqrtf@ix+3)^(0+1280),f,c
 16120   0142EA  EFD1  F09F         	goto	l9061
 16121   0142EE                     l2482:
 16122   0142EE  0012               	return		;funcret
 16123   0142F0                     __end_of_sqrtf:
 16124                           	callstack 0
 16125                           
 16126 ;; *************** function _atan2f *****************
 16127 ;; Defined at:
 16128 ;;		line 22 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\atan2f.c"
 16129 ;; Parameters:    Size  Location     Type
 16130 ;;  y               4   67[BANK5 ] float 
 16131 ;;  x               4   71[BANK5 ] float 
 16132 ;; Auto vars:     Size  Location     Type
 16133 ;;  iy              4  103[BANK5 ] struct .
 16134 ;;  ix              4   99[BANK5 ] struct .
 16135 ;;  z               4   95[BANK5 ] float 
 16136 ;;  m               1  107[BANK5 ] unsigned char 
 16137 ;; Return value:  Size  Location     Type
 16138 ;;                  4   67[BANK5 ] float 
 16139 ;; Registers used:
 16140 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16141 ;; Tracked objects:
 16142 ;;		On entry : 0/0
 16143 ;;		On exit  : 0/0
 16144 ;;		Unchanged: 0/0
 16145 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16146 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16147 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16148 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16149 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16150 ;;Total ram usage:       41 bytes
 16151 ;; Hardware stack levels used: 1
 16152 ;; Hardware stack levels required when called: 3
 16153 ;; This function calls:
 16154 ;;		___fladd
 16155 ;;		___fldiv
 16156 ;;		___flneg
 16157 ;;		___flsub
 16158 ;;		___fpclassifyf
 16159 ;;		_atanf
 16160 ;;		_fabsf
 16161 ;; This function is called by:
 16162 ;;		_MPU6050_DMP_GetData
 16163 ;;		_MPU6050_ReadAll
 16164 ;; This function uses a non-reentrant model
 16165 ;;
 16166                           
 16167                           	psect	text36
 16168   012680                     __ptext36:
 16169                           	callstack 0
 16170   012680                     _atan2f:
 16171                           	callstack 122
 16172   012680  C5A7  F501         	movff	atan2f@x,___fpclassifyf@x
 16173   012684  C5A8  F502         	movff	atan2f@x+1,___fpclassifyf@x+1
 16174   012688  C5A9  F503         	movff	atan2f@x+2,___fpclassifyf@x+2
 16175   01268C  C5AA  F504         	movff	atan2f@x+3,___fpclassifyf@x+3
 16176   012690  EC2B  F0B1         	call	___fpclassifyf	;wreg free
 16177   012694  5001               	movf	?___fpclassifyf^(0+1280),w,c
 16178   012696  1002               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 16179   012698  B4D8               	btfsc	status,2,c
 16180   01269A  EF51  F093         	goto	u7091
 16181   01269E  EF53  F093         	goto	u7090
 16182   0126A2                     u7091:
 16183   0126A2  EF66  F093         	goto	l9121
 16184   0126A6                     u7090:
 16185   0126A6  C5A3  F501         	movff	atan2f@y,___fpclassifyf@x
 16186   0126AA  C5A4  F502         	movff	atan2f@y+1,___fpclassifyf@x+1
 16187   0126AE  C5A5  F503         	movff	atan2f@y+2,___fpclassifyf@x+2
 16188   0126B2  C5A6  F504         	movff	atan2f@y+3,___fpclassifyf@x+3
 16189   0126B6  EC2B  F0B1         	call	___fpclassifyf	;wreg free
 16190   0126BA  5001               	movf	?___fpclassifyf^(0+1280),w,c
 16191   0126BC  1002               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 16192   0126BE  A4D8               	btfss	status,2,c
 16193   0126C0  EF64  F093         	goto	u7101
 16194   0126C4  EF66  F093         	goto	u7100
 16195   0126C8                     u7101:
 16196   0126C8  EF82  F093         	goto	l2069
 16197   0126CC                     u7100:
 16198   0126CC                     l9121:
 16199   0126CC  C5A7  F51E         	movff	atan2f@x,___fladd@b
 16200   0126D0  C5A8  F51F         	movff	atan2f@x+1,___fladd@b+1
 16201   0126D4  C5A9  F520         	movff	atan2f@x+2,___fladd@b+2
 16202   0126D8  C5AA  F521         	movff	atan2f@x+3,___fladd@b+3
 16203   0126DC  C5A3  F522         	movff	atan2f@y,___fladd@a
 16204   0126E0  C5A4  F523         	movff	atan2f@y+1,___fladd@a+1
 16205   0126E4  C5A5  F524         	movff	atan2f@y+2,___fladd@a+2
 16206   0126E8  C5A6  F525         	movff	atan2f@y+3,___fladd@a+3
 16207   0126EC  EC1B  F09B         	call	___fladd	;wreg free
 16208   0126F0  C51E  F5A3         	movff	?___fladd,?_atan2f
 16209   0126F4  C51F  F5A4         	movff	?___fladd+1,?_atan2f+1
 16210   0126F8  C520  F5A5         	movff	?___fladd+2,?_atan2f+2
 16211   0126FC  C521  F5A6         	movff	?___fladd+3,?_atan2f+3
 16212   012700  EF1E  F096         	goto	l2072
 16213   012704                     l2069:
 16214   012704  C5A7  F5C3         	movff	atan2f@x,atan2f@ix
 16215   012708  C5A8  F5C4         	movff	atan2f@x+1,atan2f@ix+1
 16216   01270C  C5A9  F5C5         	movff	atan2f@x+2,atan2f@ix+2
 16217   012710  C5AA  F5C6         	movff	atan2f@x+3,atan2f@ix+3
 16218   012714  C5A3  F5C7         	movff	atan2f@y,atan2f@iy
 16219   012718  C5A4  F5C8         	movff	atan2f@y+1,atan2f@iy+1
 16220   01271C  C5A5  F5C9         	movff	atan2f@y+2,atan2f@iy+2
 16221   012720  C5A6  F5CA         	movff	atan2f@y+3,atan2f@iy+3
 16222   012724  0E80               	movlw	128
 16223   012726  0105               	movlb	5	; () banked
 16224   012728  19C5               	xorwf	(atan2f@ix+2)& (0+255),w,b
 16225   01272A  E109               	bnz	u7111
 16226   01272C  0E3F               	movlw	63
 16227   01272E  19C6               	xorwf	(atan2f@ix+3)& (0+255),w,b
 16228   012730  11C3               	iorwf	atan2f@ix& (0+255),w,b
 16229   012732  11C4               	iorwf	(atan2f@ix+1)& (0+255),w,b
 16230   012734  A4D8               	btfss	status,2,c
 16231   012736  EF9F  F093         	goto	u7111
 16232   01273A  EFA1  F093         	goto	u7110
 16233   01273E                     u7111:
 16234   01273E  EFB5  F093         	goto	l9131
 16235   012742                     u7110:
 16236   012742                     
 16237                           ; BSR set to: 5
 16238   012742  C5A3  F575         	movff	atan2f@y,atanf@x
 16239   012746  C5A4  F576         	movff	atan2f@y+1,atanf@x+1
 16240   01274A  C5A5  F577         	movff	atan2f@y+2,atanf@x+2
 16241   01274E  C5A6  F578         	movff	atan2f@y+3,atanf@x+3
 16242   012752  ECDB  F08B         	call	_atanf	;wreg free
 16243   012756  C575  F5A3         	movff	?_atanf,?_atan2f
 16244   01275A  C576  F5A4         	movff	?_atanf+1,?_atan2f+1
 16245   01275E  C577  F5A5         	movff	?_atanf+2,?_atan2f+2
 16246   012762  C578  F5A6         	movff	?_atanf+3,?_atan2f+3
 16247   012766  EF1E  F096         	goto	l2072
 16248   01276A                     l9131:
 16249                           
 16250                           ; BSR set to: 5
 16251   01276A  C5C3  F5AB         	movff	atan2f@ix,??_atan2f
 16252   01276E  C5C4  F5AC         	movff	atan2f@ix+1,??_atan2f+1
 16253   012772  C5C5  F5AD         	movff	atan2f@ix+2,??_atan2f+2
 16254   012776  C5C6  F5AE         	movff	atan2f@ix+3,??_atan2f+3
 16255   01277A  0E1F               	movlw	31
 16256   01277C  EFC5  F093         	goto	u7120
 16257   012780                     u7125:
 16258   012780  90D8               	bcf	status,0,c
 16259   012782  33AE               	rrcf	(??_atan2f+3)& (0+255),f,b
 16260   012784  33AD               	rrcf	(??_atan2f+2)& (0+255),f,b
 16261   012786  33AC               	rrcf	(??_atan2f+1)& (0+255),f,b
 16262   012788  33AB               	rrcf	??_atan2f& (0+255),f,b
 16263   01278A                     u7120:
 16264   01278A  2EE8               	decfsz	wreg,f,c
 16265   01278C  EFC0  F093         	goto	u7125
 16266   012790  0E02               	movlw	2
 16267   012792  17AB               	andwf	??_atan2f& (0+255),f,b
 16268   012794  C5C7  F5AF         	movff	atan2f@iy,??_atan2f+4
 16269   012798  C5C8  F5B0         	movff	atan2f@iy+1,??_atan2f+5
 16270   01279C  C5C9  F5B1         	movff	atan2f@iy+2,??_atan2f+6
 16271   0127A0  C5CA  F5B2         	movff	atan2f@iy+3,??_atan2f+7
 16272   0127A4  0E20               	movlw	32
 16273   0127A6  EFDA  F093         	goto	u7130
 16274   0127AA                     u7135:
 16275   0127AA  90D8               	bcf	status,0,c
 16276   0127AC  33B2               	rrcf	(??_atan2f+7)& (0+255),f,b
 16277   0127AE  33B1               	rrcf	(??_atan2f+6)& (0+255),f,b
 16278   0127B0  33B0               	rrcf	(??_atan2f+5)& (0+255),f,b
 16279   0127B2  33AF               	rrcf	(??_atan2f+4)& (0+255),f,b
 16280   0127B4                     u7130:
 16281   0127B4  2EE8               	decfsz	wreg,f,c
 16282   0127B6  EFD5  F093         	goto	u7135
 16283   0127BA  51AF               	movf	(??_atan2f+4)& (0+255),w,b
 16284   0127BC  0B01               	andlw	1
 16285   0127BE  11AB               	iorwf	??_atan2f& (0+255),w,b
 16286   0127C0  6FCB               	movwf	atan2f@m& (0+255),b
 16287   0127C2                     
 16288                           ; BSR set to: 5
 16289   0127C2  9FC6               	bcf	(atan2f@ix+3)& (0+255),7,b
 16290   0127C4                     
 16291                           ; BSR set to: 5
 16292   0127C4  9FCA               	bcf	(atan2f@iy+3)& (0+255),7,b
 16293   0127C6  51C7               	movf	atan2f@iy& (0+255),w,b
 16294   0127C8  11C8               	iorwf	(atan2f@iy+1)& (0+255),w,b
 16295   0127CA  11C9               	iorwf	(atan2f@iy+2)& (0+255),w,b
 16296   0127CC  11CA               	iorwf	(atan2f@iy+3)& (0+255),w,b
 16297   0127CE  A4D8               	btfss	status,2,c
 16298   0127D0  EFEC  F093         	goto	u7141
 16299   0127D4  EFEE  F093         	goto	u7140
 16300   0127D8                     u7141:
 16301   0127D8  EF21  F094         	goto	l9151
 16302   0127DC                     u7140:
 16303   0127DC  EF0E  F094         	goto	l9149
 16304   0127E0                     l2077:
 16305                           
 16306                           ; BSR set to: 5
 16307   0127E0  C5A3  F5A3         	movff	atan2f@y,?_atan2f
 16308   0127E4  C5A4  F5A4         	movff	atan2f@y+1,?_atan2f+1
 16309   0127E8  C5A5  F5A5         	movff	atan2f@y+2,?_atan2f+2
 16310   0127EC  C5A6  F5A6         	movff	atan2f@y+3,?_atan2f+3
 16311   0127F0  EF1E  F096         	goto	l2072
 16312   0127F4                     l9139:
 16313                           
 16314                           ; BSR set to: 5
 16315   0127F4  0EDB               	movlw	219
 16316   0127F6  6FA3               	movwf	?_atan2f& (0+255),b
 16317   0127F8  0E0F               	movlw	15
 16318   0127FA  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16319   0127FC  0E49               	movlw	73
 16320   0127FE  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16321   012800  0E40               	movlw	64
 16322   012802  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16323   012804  EF1E  F096         	goto	l2072
 16324   012808                     l9143:
 16325                           
 16326                           ; BSR set to: 5
 16327   012808  0EDB               	movlw	219
 16328   01280A  6FA3               	movwf	?_atan2f& (0+255),b
 16329   01280C  0E0F               	movlw	15
 16330   01280E  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16331   012810  0E49               	movlw	73
 16332   012812  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16333   012814  0EC0               	movlw	192
 16334   012816  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16335   012818  EF1E  F096         	goto	l2072
 16336   01281C                     l9149:
 16337                           
 16338                           ; BSR set to: 5
 16339   01281C  51CB               	movf	atan2f@m& (0+255),w,b
 16340                           
 16341                           ; Switch size 1, requested type "simple"
 16342                           ; Number of cases is 4, Range of values is 0 to 3
 16343                           ; switch strategies available:
 16344                           ; Name         Instructions Cycles
 16345                           ; simple_byte           13     7 (average)
 16346                           ;	Chosen strategy is simple_byte
 16347   01281E  0A00               	xorlw	0	; case 0
 16348   012820  B4D8               	btfsc	status,2,c
 16349   012822  EFF0  F093         	goto	l2077
 16350   012826  0A01               	xorlw	1	; case 1
 16351   012828  B4D8               	btfsc	status,2,c
 16352   01282A  EFF0  F093         	goto	l2077
 16353   01282E  0A03               	xorlw	3	; case 2
 16354   012830  B4D8               	btfsc	status,2,c
 16355   012832  EFFA  F093         	goto	l9139
 16356   012836  0A01               	xorlw	1	; case 3
 16357   012838  B4D8               	btfsc	status,2,c
 16358   01283A  EF04  F094         	goto	l9143
 16359   01283E  EF21  F094         	goto	l9151
 16360   012842                     l9151:
 16361                           
 16362                           ; BSR set to: 5
 16363   012842  51C3               	movf	atan2f@ix& (0+255),w,b
 16364   012844  11C4               	iorwf	(atan2f@ix+1)& (0+255),w,b
 16365   012846  11C5               	iorwf	(atan2f@ix+2)& (0+255),w,b
 16366   012848  11C6               	iorwf	(atan2f@ix+3)& (0+255),w,b
 16367   01284A  A4D8               	btfss	status,2,c
 16368   01284C  EF2A  F094         	goto	u7151
 16369   012850  EF2C  F094         	goto	u7150
 16370   012854                     u7151:
 16371   012854  EF47  F094         	goto	l9161
 16372   012858                     u7150:
 16373   012858                     
 16374                           ; BSR set to: 5
 16375   012858  B1CB               	btfsc	atan2f@m& (0+255),0,b
 16376   01285A  EF31  F094         	goto	u7161
 16377   01285E  EF33  F094         	goto	u7160
 16378   012862                     u7161:
 16379   012862  EF3D  F094         	goto	l9157
 16380   012866                     u7160:
 16381   012866                     
 16382                           ; BSR set to: 5
 16383   012866  0EDB               	movlw	219
 16384   012868  6FA3               	movwf	?_atan2f& (0+255),b
 16385   01286A  0E0F               	movlw	15
 16386   01286C  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16387   01286E  0EC9               	movlw	201
 16388   012870  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16389   012872  0E3F               	movlw	63
 16390   012874  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16391   012876  EF1E  F096         	goto	l2072
 16392   01287A                     l9157:
 16393                           
 16394                           ; BSR set to: 5
 16395   01287A  0EDB               	movlw	219
 16396   01287C  6FA3               	movwf	?_atan2f& (0+255),b
 16397   01287E  0E0F               	movlw	15
 16398   012880  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16399   012882  0EC9               	movlw	201
 16400   012884  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16401   012886  0EBF               	movlw	191
 16402   012888  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16403   01288A  EF1E  F096         	goto	l2072
 16404   01288E                     l9161:
 16405                           
 16406                           ; BSR set to: 5
 16407   01288E  0E80               	movlw	128
 16408   012890  19C5               	xorwf	(atan2f@ix+2)& (0+255),w,b
 16409   012892  E109               	bnz	u7171
 16410   012894  0E7F               	movlw	127
 16411   012896  19C6               	xorwf	(atan2f@ix+3)& (0+255),w,b
 16412   012898  11C3               	iorwf	atan2f@ix& (0+255),w,b
 16413   01289A  11C4               	iorwf	(atan2f@ix+1)& (0+255),w,b
 16414   01289C  A4D8               	btfss	status,2,c
 16415   01289E  EF53  F094         	goto	u7171
 16416   0128A2  EF55  F094         	goto	u7170
 16417   0128A6                     u7171:
 16418   0128A6  EFDB  F094         	goto	l9207
 16419   0128AA                     u7170:
 16420   0128AA                     
 16421                           ; BSR set to: 5
 16422   0128AA  0E80               	movlw	128
 16423   0128AC  19C9               	xorwf	(atan2f@iy+2)& (0+255),w,b
 16424   0128AE  E109               	bnz	u7181
 16425   0128B0  0E7F               	movlw	127
 16426   0128B2  19CA               	xorwf	(atan2f@iy+3)& (0+255),w,b
 16427   0128B4  11C7               	iorwf	atan2f@iy& (0+255),w,b
 16428   0128B6  11C8               	iorwf	(atan2f@iy+1)& (0+255),w,b
 16429   0128B8  A4D8               	btfss	status,2,c
 16430   0128BA  EF61  F094         	goto	u7181
 16431   0128BE  EF63  F094         	goto	u7180
 16432   0128C2                     u7181:
 16433   0128C2  EFC8  F094         	goto	l9205
 16434   0128C6                     u7180:
 16435   0128C6  EF8D  F094         	goto	l9185
 16436   0128CA                     l9167:
 16437                           
 16438                           ; BSR set to: 5
 16439   0128CA  0EDB               	movlw	219
 16440   0128CC  6FA3               	movwf	?_atan2f& (0+255),b
 16441   0128CE  0E0F               	movlw	15
 16442   0128D0  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16443   0128D2  0E49               	movlw	73
 16444   0128D4  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16445   0128D6  0E3F               	movlw	63
 16446   0128D8  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16447   0128DA  EF1E  F096         	goto	l2072
 16448   0128DE                     l9171:
 16449                           
 16450                           ; BSR set to: 5
 16451   0128DE  0EDB               	movlw	219
 16452   0128E0  6FA3               	movwf	?_atan2f& (0+255),b
 16453   0128E2  0E0F               	movlw	15
 16454   0128E4  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16455   0128E6  0E49               	movlw	73
 16456   0128E8  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16457   0128EA  0EBF               	movlw	191
 16458   0128EC  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16459   0128EE  EF1E  F096         	goto	l2072
 16460   0128F2                     l9175:
 16461                           
 16462                           ; BSR set to: 5
 16463   0128F2  0EE4               	movlw	228
 16464   0128F4  6FA3               	movwf	?_atan2f& (0+255),b
 16465   0128F6  0ECB               	movlw	203
 16466   0128F8  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16467   0128FA  0E16               	movlw	22
 16468   0128FC  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16469   0128FE  0E40               	movlw	64
 16470   012900  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16471   012902  EF1E  F096         	goto	l2072
 16472   012906                     l9179:
 16473                           
 16474                           ; BSR set to: 5
 16475   012906  0EE4               	movlw	228
 16476   012908  6FA3               	movwf	?_atan2f& (0+255),b
 16477   01290A  0ECB               	movlw	203
 16478   01290C  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16479   01290E  0E16               	movlw	22
 16480   012910  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16481   012912  0EC0               	movlw	192
 16482   012914  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16483   012916  EF1E  F096         	goto	l2072
 16484   01291A                     l9185:
 16485                           
 16486                           ; BSR set to: 5
 16487   01291A  51CB               	movf	atan2f@m& (0+255),w,b
 16488                           
 16489                           ; Switch size 1, requested type "simple"
 16490                           ; Number of cases is 4, Range of values is 0 to 3
 16491                           ; switch strategies available:
 16492                           ; Name         Instructions Cycles
 16493                           ; simple_byte           13     7 (average)
 16494                           ;	Chosen strategy is simple_byte
 16495   01291C  0A00               	xorlw	0	; case 0
 16496   01291E  B4D8               	btfsc	status,2,c
 16497   012920  EF65  F094         	goto	l9167
 16498   012924  0A01               	xorlw	1	; case 1
 16499   012926  B4D8               	btfsc	status,2,c
 16500   012928  EF6F  F094         	goto	l9171
 16501   01292C  0A03               	xorlw	3	; case 2
 16502   01292E  B4D8               	btfsc	status,2,c
 16503   012930  EF79  F094         	goto	l9175
 16504   012934  0A01               	xorlw	1	; case 3
 16505   012936  B4D8               	btfsc	status,2,c
 16506   012938  EF83  F094         	goto	l9179
 16507   01293C  EFDB  F094         	goto	l9207
 16508   012940                     l9187:
 16509                           
 16510                           ; BSR set to: 5
 16511   012940  0E00               	movlw	0
 16512   012942  6FA3               	movwf	?_atan2f& (0+255),b
 16513   012944  0E00               	movlw	0
 16514   012946  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16515   012948  0E00               	movlw	0
 16516   01294A  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16517   01294C  0E00               	movlw	0
 16518   01294E  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16519   012950  EF1E  F096         	goto	l2072
 16520   012954                     l9191:
 16521                           
 16522                           ; BSR set to: 5
 16523   012954  0E00               	movlw	0
 16524   012956  6FA3               	movwf	?_atan2f& (0+255),b
 16525   012958  0E00               	movlw	0
 16526   01295A  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16527   01295C  0E00               	movlw	0
 16528   01295E  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16529   012960  0E80               	movlw	128
 16530   012962  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16531   012964  EF1E  F096         	goto	l2072
 16532   012968                     l9195:
 16533                           
 16534                           ; BSR set to: 5
 16535   012968  0EDB               	movlw	219
 16536   01296A  6FA3               	movwf	?_atan2f& (0+255),b
 16537   01296C  0E0F               	movlw	15
 16538   01296E  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16539   012970  0E49               	movlw	73
 16540   012972  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16541   012974  0E40               	movlw	64
 16542   012976  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16543   012978  EF1E  F096         	goto	l2072
 16544   01297C                     l9199:
 16545                           
 16546                           ; BSR set to: 5
 16547   01297C  0EDB               	movlw	219
 16548   01297E  6FA3               	movwf	?_atan2f& (0+255),b
 16549   012980  0E0F               	movlw	15
 16550   012982  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16551   012984  0E49               	movlw	73
 16552   012986  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16553   012988  0EC0               	movlw	192
 16554   01298A  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16555   01298C  EF1E  F096         	goto	l2072
 16556   012990                     l9205:
 16557                           
 16558                           ; BSR set to: 5
 16559   012990  51CB               	movf	atan2f@m& (0+255),w,b
 16560                           
 16561                           ; Switch size 1, requested type "simple"
 16562                           ; Number of cases is 4, Range of values is 0 to 3
 16563                           ; switch strategies available:
 16564                           ; Name         Instructions Cycles
 16565                           ; simple_byte           13     7 (average)
 16566                           ;	Chosen strategy is simple_byte
 16567   012992  0A00               	xorlw	0	; case 0
 16568   012994  B4D8               	btfsc	status,2,c
 16569   012996  EFA0  F094         	goto	l9187
 16570   01299A  0A01               	xorlw	1	; case 1
 16571   01299C  B4D8               	btfsc	status,2,c
 16572   01299E  EFAA  F094         	goto	l9191
 16573   0129A2  0A03               	xorlw	3	; case 2
 16574   0129A4  B4D8               	btfsc	status,2,c
 16575   0129A6  EFB4  F094         	goto	l9195
 16576   0129AA  0A01               	xorlw	1	; case 3
 16577   0129AC  B4D8               	btfsc	status,2,c
 16578   0129AE  EFBE  F094         	goto	l9199
 16579   0129B2  EFDB  F094         	goto	l9207
 16580   0129B6                     l9207:
 16581                           
 16582                           ; BSR set to: 5
 16583   0129B6  0E00               	movlw	0
 16584   0129B8  25C3               	addwf	atan2f@ix& (0+255),w,b
 16585   0129BA  6FAB               	movwf	??_atan2f& (0+255),b
 16586   0129BC  0E00               	movlw	0
 16587   0129BE  21C4               	addwfc	(atan2f@ix+1)& (0+255),w,b
 16588   0129C0  6FAC               	movwf	(??_atan2f+1)& (0+255),b
 16589   0129C2  0E00               	movlw	0
 16590   0129C4  21C5               	addwfc	(atan2f@ix+2)& (0+255),w,b
 16591   0129C6  6FAD               	movwf	(??_atan2f+2)& (0+255),b
 16592   0129C8  0E0D               	movlw	13
 16593   0129CA  21C6               	addwfc	(atan2f@ix+3)& (0+255),w,b
 16594   0129CC  6FAE               	movwf	(??_atan2f+3)& (0+255),b
 16595   0129CE  51C7               	movf	atan2f@iy& (0+255),w,b
 16596   0129D0  5DAB               	subwf	??_atan2f& (0+255),w,b
 16597   0129D2  51C8               	movf	(atan2f@iy+1)& (0+255),w,b
 16598   0129D4  59AC               	subwfb	(??_atan2f+1)& (0+255),w,b
 16599   0129D6  51C9               	movf	(atan2f@iy+2)& (0+255),w,b
 16600   0129D8  59AD               	subwfb	(??_atan2f+2)& (0+255),w,b
 16601   0129DA  51CA               	movf	(atan2f@iy+3)& (0+255),w,b
 16602   0129DC  59AE               	subwfb	(??_atan2f+3)& (0+255),w,b
 16603   0129DE  A0D8               	btfss	status,0,c
 16604   0129E0  EFF4  F094         	goto	u7191
 16605   0129E4  EFF6  F094         	goto	u7190
 16606   0129E8                     u7191:
 16607   0129E8  EF04  F095         	goto	l2103
 16608   0129EC                     u7190:
 16609   0129EC                     
 16610                           ; BSR set to: 5
 16611   0129EC  0E80               	movlw	128
 16612   0129EE  19C9               	xorwf	(atan2f@iy+2)& (0+255),w,b
 16613   0129F0  E109               	bnz	u7201
 16614   0129F2  0E7F               	movlw	127
 16615   0129F4  19CA               	xorwf	(atan2f@iy+3)& (0+255),w,b
 16616   0129F6  11C7               	iorwf	atan2f@iy& (0+255),w,b
 16617   0129F8  11C8               	iorwf	(atan2f@iy+1)& (0+255),w,b
 16618   0129FA  A4D8               	btfss	status,2,c
 16619   0129FC  EF02  F095         	goto	u7201
 16620   012A00  EF04  F095         	goto	u7200
 16621   012A04                     u7201:
 16622   012A04  EF1F  F095         	goto	l2101
 16623   012A08                     u7200:
 16624   012A08                     l2103:
 16625                           
 16626                           ; BSR set to: 5
 16627   012A08  B1CB               	btfsc	atan2f@m& (0+255),0,b
 16628   012A0A  EF09  F095         	goto	u7211
 16629   012A0E  EF0B  F095         	goto	u7210
 16630   012A12                     u7211:
 16631   012A12  EF15  F095         	goto	l9213
 16632   012A16                     u7210:
 16633   012A16                     
 16634                           ; BSR set to: 5
 16635   012A16  0EDB               	movlw	219
 16636   012A18  6FA3               	movwf	?_atan2f& (0+255),b
 16637   012A1A  0E0F               	movlw	15
 16638   012A1C  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16639   012A1E  0EC9               	movlw	201
 16640   012A20  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16641   012A22  0E3F               	movlw	63
 16642   012A24  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16643   012A26  EF1E  F096         	goto	l2072
 16644   012A2A                     l9213:
 16645                           
 16646                           ; BSR set to: 5
 16647   012A2A  0EDB               	movlw	219
 16648   012A2C  6FA3               	movwf	?_atan2f& (0+255),b
 16649   012A2E  0E0F               	movlw	15
 16650   012A30  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16651   012A32  0EC9               	movlw	201
 16652   012A34  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16653   012A36  0EBF               	movlw	191
 16654   012A38  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16655   012A3A  EF1E  F096         	goto	l2072
 16656   012A3E                     l2101:
 16657                           
 16658                           ; BSR set to: 5
 16659   012A3E  A3CB               	btfss	atan2f@m& (0+255),1,b
 16660   012A40  EF24  F095         	goto	u7221
 16661   012A44  EF26  F095         	goto	u7220
 16662   012A48                     u7221:
 16663   012A48  EF4B  F095         	goto	l9221
 16664   012A4C                     u7220:
 16665   012A4C                     
 16666                           ; BSR set to: 5
 16667   012A4C  0E00               	movlw	0
 16668   012A4E  25C7               	addwf	atan2f@iy& (0+255),w,b
 16669   012A50  6FAB               	movwf	??_atan2f& (0+255),b
 16670   012A52  0E00               	movlw	0
 16671   012A54  21C8               	addwfc	(atan2f@iy+1)& (0+255),w,b
 16672   012A56  6FAC               	movwf	(??_atan2f+1)& (0+255),b
 16673   012A58  0E00               	movlw	0
 16674   012A5A  21C9               	addwfc	(atan2f@iy+2)& (0+255),w,b
 16675   012A5C  6FAD               	movwf	(??_atan2f+2)& (0+255),b
 16676   012A5E  0E0D               	movlw	13
 16677   012A60  21CA               	addwfc	(atan2f@iy+3)& (0+255),w,b
 16678   012A62  6FAE               	movwf	(??_atan2f+3)& (0+255),b
 16679   012A64  51C3               	movf	atan2f@ix& (0+255),w,b
 16680   012A66  5DAB               	subwf	??_atan2f& (0+255),w,b
 16681   012A68  51C4               	movf	(atan2f@ix+1)& (0+255),w,b
 16682   012A6A  59AC               	subwfb	(??_atan2f+1)& (0+255),w,b
 16683   012A6C  51C5               	movf	(atan2f@ix+2)& (0+255),w,b
 16684   012A6E  59AD               	subwfb	(??_atan2f+2)& (0+255),w,b
 16685   012A70  51C6               	movf	(atan2f@ix+3)& (0+255),w,b
 16686   012A72  59AE               	subwfb	(??_atan2f+3)& (0+255),w,b
 16687   012A74  B0D8               	btfsc	status,0,c
 16688   012A76  EF3F  F095         	goto	u7231
 16689   012A7A  EF41  F095         	goto	u7230
 16690   012A7E                     u7231:
 16691   012A7E  EF4B  F095         	goto	l9221
 16692   012A82                     u7230:
 16693   012A82                     
 16694                           ; BSR set to: 5
 16695   012A82  0E00               	movlw	0
 16696   012A84  6FBF               	movwf	atan2f@z& (0+255),b
 16697   012A86  0E00               	movlw	0
 16698   012A88  6FC0               	movwf	(atan2f@z+1)& (0+255),b
 16699   012A8A  0E00               	movlw	0
 16700   012A8C  6FC1               	movwf	(atan2f@z+2)& (0+255),b
 16701   012A8E  0E00               	movlw	0
 16702   012A90  6FC2               	movwf	(atan2f@z+3)& (0+255),b
 16703   012A92  EF0E  F096         	goto	l9239
 16704   012A96                     l9221:
 16705                           
 16706                           ; BSR set to: 5
 16707   012A96  C5A3  F553         	movff	atan2f@y,___fldiv@b
 16708   012A9A  C5A4  F554         	movff	atan2f@y+1,___fldiv@b+1
 16709   012A9E  C5A5  F555         	movff	atan2f@y+2,___fldiv@b+2
 16710   012AA2  C5A6  F556         	movff	atan2f@y+3,___fldiv@b+3
 16711   012AA6  C5A7  F557         	movff	atan2f@x,___fldiv@a
 16712   012AAA  C5A8  F558         	movff	atan2f@x+1,___fldiv@a+1
 16713   012AAE  C5A9  F559         	movff	atan2f@x+2,___fldiv@a+2
 16714   012AB2  C5AA  F55A         	movff	atan2f@x+3,___fldiv@a+3
 16715   012AB6  EC5D  F0A3         	call	___fldiv	;wreg free
 16716   012ABA  C553  F56D         	movff	?___fldiv,fabsf@x
 16717   012ABE  C554  F56E         	movff	?___fldiv+1,fabsf@x+1
 16718   012AC2  C555  F56F         	movff	?___fldiv+2,fabsf@x+2
 16719   012AC6  C556  F570         	movff	?___fldiv+3,fabsf@x+3
 16720   012ACA  EC73  F0B6         	call	_fabsf	;wreg free
 16721   012ACE  C56D  F5B3         	movff	?_fabsf,_atan2f$3489
 16722   012AD2  C56E  F5B4         	movff	?_fabsf+1,_atan2f$3489+1
 16723   012AD6  C56F  F5B5         	movff	?_fabsf+2,_atan2f$3489+2
 16724   012ADA  C570  F5B6         	movff	?_fabsf+3,_atan2f$3489+3
 16725   012ADE  C5B3  F575         	movff	_atan2f$3489,atanf@x
 16726   012AE2  C5B4  F576         	movff	_atan2f$3489+1,atanf@x+1
 16727   012AE6  C5B5  F577         	movff	_atan2f$3489+2,atanf@x+2
 16728   012AEA  C5B6  F578         	movff	_atan2f$3489+3,atanf@x+3
 16729   012AEE  ECDB  F08B         	call	_atanf	;wreg free
 16730   012AF2  C575  F5BF         	movff	?_atanf,atan2f@z
 16731   012AF6  C576  F5C0         	movff	?_atanf+1,atan2f@z+1
 16732   012AFA  C577  F5C1         	movff	?_atanf+2,atan2f@z+2
 16733   012AFE  C578  F5C2         	movff	?_atanf+3,atan2f@z+3
 16734   012B02  EF0E  F096         	goto	l9239
 16735   012B06                     l2111:
 16736                           
 16737                           ; BSR set to: 5
 16738   012B06  C5BF  F5A3         	movff	atan2f@z,?_atan2f
 16739   012B0A  C5C0  F5A4         	movff	atan2f@z+1,?_atan2f+1
 16740   012B0E  C5C1  F5A5         	movff	atan2f@z+2,?_atan2f+2
 16741   012B12  C5C2  F5A6         	movff	atan2f@z+3,?_atan2f+3
 16742   012B16  EF1E  F096         	goto	l2072
 16743   012B1A                     l9225:
 16744                           
 16745                           ; BSR set to: 5
 16746   012B1A  C5BF  F501         	movff	atan2f@z,___flneg@f1
 16747   012B1E  C5C0  F502         	movff	atan2f@z+1,___flneg@f1+1
 16748   012B22  C5C1  F503         	movff	atan2f@z+2,___flneg@f1+2
 16749   012B26  C5C2  F504         	movff	atan2f@z+3,___flneg@f1+3
 16750   012B2A  EC57  F0B6         	call	___flneg	;wreg free
 16751   012B2E  C501  F5A3         	movff	?___flneg,?_atan2f
 16752   012B32  C502  F5A4         	movff	?___flneg+1,?_atan2f+1
 16753   012B36  C503  F5A5         	movff	?___flneg+2,?_atan2f+2
 16754   012B3A  C504  F5A6         	movff	?___flneg+3,?_atan2f+3
 16755   012B3E  EF1E  F096         	goto	l2072
 16756   012B42                     l9229:
 16757                           
 16758                           ; BSR set to: 5
 16759   012B42  0E2E               	movlw	46
 16760   012B44  6E22               	movwf	___fladd@a^(0+1280),c
 16761   012B46  0EBD               	movlw	189
 16762   012B48  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 16763   012B4A  0EBB               	movlw	187
 16764   012B4C  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 16765   012B4E  0E33               	movlw	51
 16766   012B50  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 16767   012B52  C5BF  F51E         	movff	atan2f@z,___fladd@b
 16768   012B56  C5C0  F51F         	movff	atan2f@z+1,___fladd@b+1
 16769   012B5A  C5C1  F520         	movff	atan2f@z+2,___fladd@b+2
 16770   012B5E  C5C2  F521         	movff	atan2f@z+3,___fladd@b+3
 16771   012B62  EC1B  F09B         	call	___fladd	;wreg free
 16772   012B66  C51E  F5B7         	movff	?___fladd,_atan2f$3490
 16773   012B6A  C51F  F5B8         	movff	?___fladd+1,_atan2f$3490+1
 16774   012B6E  C520  F5B9         	movff	?___fladd+2,_atan2f$3490+2
 16775   012B72  C521  F5BA         	movff	?___fladd+3,_atan2f$3490+3
 16776   012B76  0EDB               	movlw	219
 16777   012B78  0105               	movlb	5	; () banked
 16778   012B7A  6F6D               	movwf	___flsub@b& (0+255),b
 16779   012B7C  0E0F               	movlw	15
 16780   012B7E  6F6E               	movwf	(___flsub@b+1)& (0+255),b
 16781   012B80  0E49               	movlw	73
 16782   012B82  6F6F               	movwf	(___flsub@b+2)& (0+255),b
 16783   012B84  0E40               	movlw	64
 16784   012B86  6F70               	movwf	(___flsub@b+3)& (0+255),b
 16785   012B88  C5B7  F571         	movff	_atan2f$3490,___flsub@a
 16786   012B8C  C5B8  F572         	movff	_atan2f$3490+1,___flsub@a+1
 16787   012B90  C5B9  F573         	movff	_atan2f$3490+2,___flsub@a+2
 16788   012B94  C5BA  F574         	movff	_atan2f$3490+3,___flsub@a+3
 16789   012B98  ECD5  F0B5         	call	___flsub	;wreg free
 16790   012B9C  C56D  F5A3         	movff	?___flsub,?_atan2f
 16791   012BA0  C56E  F5A4         	movff	?___flsub+1,?_atan2f+1
 16792   012BA4  C56F  F5A5         	movff	?___flsub+2,?_atan2f+2
 16793   012BA8  C570  F5A6         	movff	?___flsub+3,?_atan2f+3
 16794   012BAC  EF1E  F096         	goto	l2072
 16795   012BB0                     l9233:
 16796                           
 16797                           ; BSR set to: 5
 16798   012BB0  0E2E               	movlw	46
 16799   012BB2  6E22               	movwf	___fladd@a^(0+1280),c
 16800   012BB4  0EBD               	movlw	189
 16801   012BB6  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 16802   012BB8  0EBB               	movlw	187
 16803   012BBA  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 16804   012BBC  0E33               	movlw	51
 16805   012BBE  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 16806   012BC0  C5BF  F51E         	movff	atan2f@z,___fladd@b
 16807   012BC4  C5C0  F51F         	movff	atan2f@z+1,___fladd@b+1
 16808   012BC8  C5C1  F520         	movff	atan2f@z+2,___fladd@b+2
 16809   012BCC  C5C2  F521         	movff	atan2f@z+3,___fladd@b+3
 16810   012BD0  EC1B  F09B         	call	___fladd	;wreg free
 16811   012BD4  C51E  F5BB         	movff	?___fladd,_atan2f$3491
 16812   012BD8  C51F  F5BC         	movff	?___fladd+1,_atan2f$3491+1
 16813   012BDC  C520  F5BD         	movff	?___fladd+2,_atan2f$3491+2
 16814   012BE0  C521  F5BE         	movff	?___fladd+3,_atan2f$3491+3
 16815   012BE4  C5BB  F51E         	movff	_atan2f$3491,___fladd@b
 16816   012BE8  C5BC  F51F         	movff	_atan2f$3491+1,___fladd@b+1
 16817   012BEC  C5BD  F520         	movff	_atan2f$3491+2,___fladd@b+2
 16818   012BF0  C5BE  F521         	movff	_atan2f$3491+3,___fladd@b+3
 16819   012BF4  0EDB               	movlw	219
 16820   012BF6  6E22               	movwf	___fladd@a^(0+1280),c
 16821   012BF8  0E0F               	movlw	15
 16822   012BFA  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 16823   012BFC  0E49               	movlw	73
 16824   012BFE  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 16825   012C00  0EC0               	movlw	192
 16826   012C02  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 16827   012C04  EC1B  F09B         	call	___fladd	;wreg free
 16828   012C08  C51E  F5A3         	movff	?___fladd,?_atan2f
 16829   012C0C  C51F  F5A4         	movff	?___fladd+1,?_atan2f+1
 16830   012C10  C520  F5A5         	movff	?___fladd+2,?_atan2f+2
 16831   012C14  C521  F5A6         	movff	?___fladd+3,?_atan2f+3
 16832   012C18  EF1E  F096         	goto	l2072
 16833   012C1C                     l9239:
 16834   012C1C  0105               	movlb	5	; () banked
 16835   012C1E  51CB               	movf	atan2f@m& (0+255),w,b
 16836                           
 16837                           ; Switch size 1, requested type "simple"
 16838                           ; Number of cases is 3, Range of values is 0 to 2
 16839                           ; switch strategies available:
 16840                           ; Name         Instructions Cycles
 16841                           ; simple_byte           10     6 (average)
 16842                           ;	Chosen strategy is simple_byte
 16843   012C20  0A00               	xorlw	0	; case 0
 16844   012C22  B4D8               	btfsc	status,2,c
 16845   012C24  EF83  F095         	goto	l2111
 16846   012C28  0A01               	xorlw	1	; case 1
 16847   012C2A  B4D8               	btfsc	status,2,c
 16848   012C2C  EF8D  F095         	goto	l9225
 16849   012C30  0A03               	xorlw	3	; case 2
 16850   012C32  B4D8               	btfsc	status,2,c
 16851   012C34  EFA1  F095         	goto	l9229
 16852   012C38  EFD8  F095         	goto	l9233
 16853   012C3C                     l2072:
 16854   012C3C  0012               	return		;funcret
 16855   012C3E                     __end_of_atan2f:
 16856                           	callstack 0
 16857                           
 16858 ;; *************** function _atanf *****************
 16859 ;; Defined at:
 16860 ;;		line 40 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\atanf.c"
 16861 ;; Parameters:    Size  Location     Type
 16862 ;;  x               4   21[BANK5 ] float 
 16863 ;; Auto vars:     Size  Location     Type
 16864 ;;  ix              4   63[BANK5 ] struct .
 16865 ;;  z               4   59[BANK5 ] float 
 16866 ;;  w               4   54[BANK5 ] float 
 16867 ;;  s2              4   41[BANK5 ] float 
 16868 ;;  s1              4   37[BANK5 ] float 
 16869 ;;  id              1   58[BANK5 ] char 
 16870 ;;  sign            1   53[BANK5 ] _Bool 
 16871 ;; Return value:  Size  Location     Type
 16872 ;;                  4   21[BANK5 ] float 
 16873 ;; Registers used:
 16874 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16875 ;; Tracked objects:
 16876 ;;		On entry : 0/0
 16877 ;;		On exit  : 0/0
 16878 ;;		Unchanged: 0/0
 16879 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16880 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16881 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16883 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16884 ;;Total ram usage:       46 bytes
 16885 ;; Hardware stack levels used: 1
 16886 ;; Hardware stack levels required when called: 2
 16887 ;; This function calls:
 16888 ;;		___fladd
 16889 ;;		___fldiv
 16890 ;;		___flmul
 16891 ;;		___flneg
 16892 ;;		___flsub
 16893 ;;		___fpclassifyf
 16894 ;;		_fabsf
 16895 ;; This function is called by:
 16896 ;;		_atan2f
 16897 ;; This function uses a non-reentrant model
 16898 ;;
 16899                           
 16900                           	psect	text37
 16901   0117B6                     __ptext37:
 16902                           	callstack 0
 16903   0117B6                     _atanf:
 16904                           	callstack 122
 16905   0117B6  C575  F59F         	movff	atanf@x,atanf@ix
 16906   0117BA  C576  F5A0         	movff	atanf@x+1,atanf@ix+1
 16907   0117BE  C577  F5A1         	movff	atanf@x+2,atanf@ix+2
 16908   0117C2  C578  F5A2         	movff	atanf@x+3,atanf@ix+3
 16909   0117C6  0105               	movlb	5	; () banked
 16910   0117C8  BFA2               	btfsc	(atanf@ix+3)& (0+255),7,b
 16911   0117CA  EFE9  F08B         	goto	u6441
 16912   0117CE  EFEC  F08B         	goto	u6440
 16913   0117D2                     u6441:
 16914   0117D2  0E01               	movlw	1
 16915   0117D4  EFED  F08B         	goto	u6450
 16916   0117D8                     u6440:
 16917   0117D8  0E00               	movlw	0
 16918   0117DA                     u6450:
 16919   0117DA  6F95               	movwf	atanf@sign& (0+255),b
 16920   0117DC                     
 16921                           ; BSR set to: 5
 16922   0117DC  9FA2               	bcf	(atanf@ix+3)& (0+255),7,b
 16923   0117DE                     
 16924                           ; BSR set to: 5
 16925   0117DE  0E80               	movlw	128
 16926   0117E0  5DA1               	subwf	(atanf@ix+2)& (0+255),w,b
 16927   0117E2  0E4C               	movlw	76
 16928   0117E4  59A2               	subwfb	(atanf@ix+3)& (0+255),w,b
 16929   0117E6  A0D8               	btfss	status,0,c
 16930   0117E8  EFF8  F08B         	goto	u6461
 16931   0117EC  EFFA  F08B         	goto	u6460
 16932   0117F0                     u6461:
 16933   0117F0  EF62  F08C         	goto	l8709
 16934   0117F4                     u6460:
 16935   0117F4                     
 16936                           ; BSR set to: 5
 16937   0117F4  C575  F501         	movff	atanf@x,___fpclassifyf@x
 16938   0117F8  C576  F502         	movff	atanf@x+1,___fpclassifyf@x+1
 16939   0117FC  C577  F503         	movff	atanf@x+2,___fpclassifyf@x+2
 16940   011800  C578  F504         	movff	atanf@x+3,___fpclassifyf@x+3
 16941   011804  EC2B  F0B1         	call	___fpclassifyf	;wreg free
 16942   011808  5001               	movf	?___fpclassifyf^(0+1280),w,c
 16943   01180A  1002               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 16944   01180C  A4D8               	btfss	status,2,c
 16945   01180E  EF0B  F08C         	goto	u6471
 16946   011812  EF0D  F08C         	goto	u6470
 16947   011816                     u6471:
 16948   011816  EF17  F08C         	goto	l8699
 16949   01181A                     u6470:
 16950   01181A                     l8697:
 16951   01181A  C575  F575         	movff	atanf@x,?_atanf
 16952   01181E  C576  F576         	movff	atanf@x+1,?_atanf+1
 16953   011822  C577  F577         	movff	atanf@x+2,?_atanf+2
 16954   011826  C578  F578         	movff	atanf@x+3,?_atanf+3
 16955   01182A  EF97  F08F         	goto	l2149
 16956   01182E                     l8699:
 16957   01182E  0E9E               	movlw	low (_atanhi+12)
 16958   011830  6EF6               	movwf	tblptrl,c
 16959   011832  0EFE               	movlw	high (_atanhi+12)
 16960   011834  6EF7               	movwf	tblptrh,c
 16961   011836                     	if	0	;tblptru may be non-zero
 16962   011836                     	endif
 16963   011836                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16964   011836  0E00               	movlw	low (__mediumconst shr (0+16))
 16965   011838  6EF8               	movwf	tblptru,c
 16966   01183A                     	endif
 16967   01183A  0009               	tblrd		*+
 16968   01183C  C4F5 F51E          	movff	tablat,___fladd@b
 16969   011840  0009               	tblrd		*+
 16970   011842  C4F5 F51F          	movff	tablat,___fladd@b+1
 16971   011846  0009               	tblrd		*+
 16972   011848  C4F5 F520          	movff	tablat,___fladd@b+2
 16973   01184C  000A               	tblrd		*-
 16974   01184E  C4F5 F521          	movff	tablat,___fladd@b+3
 16975   011852  0E00               	movlw	0
 16976   011854  6E22               	movwf	___fladd@a^(0+1280),c
 16977   011856  0E00               	movlw	0
 16978   011858  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 16979   01185A  0E80               	movlw	128
 16980   01185C  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 16981   01185E  0E03               	movlw	3
 16982   011860  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 16983   011862  EC1B  F09B         	call	___fladd	;wreg free
 16984   011866  C51E  F59B         	movff	?___fladd,atanf@z
 16985   01186A  C51F  F59C         	movff	?___fladd+1,atanf@z+1
 16986   01186E  C520  F59D         	movff	?___fladd+2,atanf@z+2
 16987   011872  C521  F59E         	movff	?___fladd+3,atanf@z+3
 16988   011876  0105               	movlb	5	; () banked
 16989   011878  5195               	movf	atanf@sign& (0+255),w,b
 16990   01187A  A4D8               	btfss	status,2,c
 16991   01187C  EF42  F08C         	goto	u6481
 16992   011880  EF44  F08C         	goto	u6480
 16993   011884                     u6481:
 16994   011884  EF4E  F08C         	goto	l8705
 16995   011888                     u6480:
 16996   011888                     l8703:
 16997                           
 16998                           ; BSR set to: 5
 16999   011888  C59B  F575         	movff	atanf@z,?_atanf
 17000   01188C  C59C  F576         	movff	atanf@z+1,?_atanf+1
 17001   011890  C59D  F577         	movff	atanf@z+2,?_atanf+2
 17002   011894  C59E  F578         	movff	atanf@z+3,?_atanf+3
 17003   011898  EF97  F08F         	goto	l2149
 17004   01189C                     l8705:
 17005                           
 17006                           ; BSR set to: 5
 17007   01189C  C59B  F501         	movff	atanf@z,___flneg@f1
 17008   0118A0  C59C  F502         	movff	atanf@z+1,___flneg@f1+1
 17009   0118A4  C59D  F503         	movff	atanf@z+2,___flneg@f1+2
 17010   0118A8  C59E  F504         	movff	atanf@z+3,___flneg@f1+3
 17011   0118AC  EC57  F0B6         	call	___flneg	;wreg free
 17012   0118B0  C501  F575         	movff	?___flneg,?_atanf
 17013   0118B4  C502  F576         	movff	?___flneg+1,?_atanf+1
 17014   0118B8  C503  F577         	movff	?___flneg+2,?_atanf+2
 17015   0118BC  C504  F578         	movff	?___flneg+3,?_atanf+3
 17016   0118C0  EF97  F08F         	goto	l2149
 17017   0118C4                     l8709:
 17018                           
 17019                           ; BSR set to: 5
 17020   0118C4  0EE0               	movlw	224
 17021   0118C6  5DA1               	subwf	(atanf@ix+2)& (0+255),w,b
 17022   0118C8  0E3E               	movlw	62
 17023   0118CA  59A2               	subwfb	(atanf@ix+3)& (0+255),w,b
 17024   0118CC  B0D8               	btfsc	status,0,c
 17025   0118CE  EF6B  F08C         	goto	u6491
 17026   0118D2  EF6D  F08C         	goto	u6490
 17027   0118D6                     u6491:
 17028   0118D6  EF7D  F08C         	goto	l8715
 17029   0118DA                     u6490:
 17030   0118DA                     
 17031                           ; BSR set to: 5
 17032   0118DA  0E80               	movlw	128
 17033   0118DC  5DA1               	subwf	(atanf@ix+2)& (0+255),w,b
 17034   0118DE  0E39               	movlw	57
 17035   0118E0  59A2               	subwfb	(atanf@ix+3)& (0+255),w,b
 17036   0118E2  B0D8               	btfsc	status,0,c
 17037   0118E4  EF76  F08C         	goto	u6501
 17038   0118E8  EF78  F08C         	goto	u6500
 17039   0118EC                     u6501:
 17040   0118EC  EF7A  F08C         	goto	l2155
 17041   0118F0                     u6500:
 17042   0118F0  EF0D  F08C         	goto	l8697
 17043   0118F4                     l2155:
 17044                           
 17045                           ; BSR set to: 5
 17046   0118F4  699A               	setf	atanf@id& (0+255),b
 17047   0118F6  EFB6  F08D         	goto	l8739
 17048   0118FA                     l8715:
 17049                           
 17050                           ; BSR set to: 5
 17051   0118FA  C575  F56D         	movff	atanf@x,fabsf@x
 17052   0118FE  C576  F56E         	movff	atanf@x+1,fabsf@x+1
 17053   011902  C577  F56F         	movff	atanf@x+2,fabsf@x+2
 17054   011906  C578  F570         	movff	atanf@x+3,fabsf@x+3
 17055   01190A  EC73  F0B6         	call	_fabsf	;wreg free
 17056   01190E  C56D  F575         	movff	?_fabsf,atanf@x
 17057   011912  C56E  F576         	movff	?_fabsf+1,atanf@x+1
 17058   011916  C56F  F577         	movff	?_fabsf+2,atanf@x+2
 17059   01191A  C570  F578         	movff	?_fabsf+3,atanf@x+3
 17060   01191E  0E98               	movlw	152
 17061   011920  0105               	movlb	5	; () banked
 17062   011922  5DA1               	subwf	(atanf@ix+2)& (0+255),w,b
 17063   011924  0E3F               	movlw	63
 17064   011926  59A2               	subwfb	(atanf@ix+3)& (0+255),w,b
 17065   011928  B0D8               	btfsc	status,0,c
 17066   01192A  EF99  F08C         	goto	u6511
 17067   01192E  EF9B  F08C         	goto	u6510
 17068   011932                     u6511:
 17069   011932  EF3B  F08D         	goto	l8729
 17070   011936                     u6510:
 17071   011936                     
 17072                           ; BSR set to: 5
 17073   011936  0E30               	movlw	48
 17074   011938  5DA1               	subwf	(atanf@ix+2)& (0+255),w,b
 17075   01193A  0E3F               	movlw	63
 17076   01193C  59A2               	subwfb	(atanf@ix+3)& (0+255),w,b
 17077   01193E  B0D8               	btfsc	status,0,c
 17078   011940  EFA4  F08C         	goto	u6521
 17079   011944  EFA6  F08C         	goto	u6520
 17080   011948                     u6521:
 17081   011948  EFF9  F08C         	goto	l8725
 17082   01194C                     u6520:
 17083   01194C                     
 17084                           ; BSR set to: 5
 17085   01194C  6B9A               	clrf	atanf@id& (0+255),b
 17086   01194E                     
 17087                           ; BSR set to: 5
 17088   01194E  0E00               	movlw	0
 17089   011950  6E22               	movwf	___fladd@a^(0+1280),c
 17090   011952  0E00               	movlw	0
 17091   011954  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17092   011956  0E80               	movlw	128
 17093   011958  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17094   01195A  0EBF               	movlw	191
 17095   01195C  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17096   01195E  0E00               	movlw	0
 17097   011960  6E09               	movwf	___flmul@a^(0+1280),c
 17098   011962  0E00               	movlw	0
 17099   011964  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 17100   011966  0E00               	movlw	0
 17101   011968  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 17102   01196A  0E40               	movlw	64
 17103   01196C  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 17104   01196E  C575  F505         	movff	atanf@x,___flmul@b
 17105   011972  C576  F506         	movff	atanf@x+1,___flmul@b+1
 17106   011976  C577  F507         	movff	atanf@x+2,___flmul@b+2
 17107   01197A  C578  F508         	movff	atanf@x+3,___flmul@b+3
 17108   01197E  EC76  F09D         	call	___flmul	;wreg free
 17109   011982  C505  F51E         	movff	?___flmul,___fladd@b
 17110   011986  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 17111   01198A  C507  F520         	movff	?___flmul+2,___fladd@b+2
 17112   01198E  C508  F521         	movff	?___flmul+3,___fladd@b+3
 17113   011992  EC1B  F09B         	call	___fladd	;wreg free
 17114   011996  C51E  F553         	movff	?___fladd,___fldiv@b
 17115   01199A  C51F  F554         	movff	?___fladd+1,___fldiv@b+1
 17116   01199E  C520  F555         	movff	?___fladd+2,___fldiv@b+2
 17117   0119A2  C521  F556         	movff	?___fladd+3,___fldiv@b+3
 17118   0119A6  0E00               	movlw	0
 17119   0119A8  6E22               	movwf	___fladd@a^(0+1280),c
 17120   0119AA  0E00               	movlw	0
 17121   0119AC  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17122   0119AE  0E00               	movlw	0
 17123   0119B0  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17124   0119B2  0E40               	movlw	64
 17125   0119B4  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17126   0119B6  C575  F51E         	movff	atanf@x,___fladd@b
 17127   0119BA  C576  F51F         	movff	atanf@x+1,___fladd@b+1
 17128   0119BE  C577  F520         	movff	atanf@x+2,___fladd@b+2
 17129   0119C2  C578  F521         	movff	atanf@x+3,___fladd@b+3
 17130   0119C6  EC1B  F09B         	call	___fladd	;wreg free
 17131   0119CA  C51E  F557         	movff	?___fladd,___fldiv@a
 17132   0119CE  C51F  F558         	movff	?___fladd+1,___fldiv@a+1
 17133   0119D2  C520  F559         	movff	?___fladd+2,___fldiv@a+2
 17134   0119D6  C521  F55A         	movff	?___fladd+3,___fldiv@a+3
 17135   0119DA  EC5D  F0A3         	call	___fldiv	;wreg free
 17136   0119DE  C553  F575         	movff	?___fldiv,atanf@x
 17137   0119E2  C554  F576         	movff	?___fldiv+1,atanf@x+1
 17138   0119E6  C555  F577         	movff	?___fldiv+2,atanf@x+2
 17139   0119EA  C556  F578         	movff	?___fldiv+3,atanf@x+3
 17140   0119EE  EFB6  F08D         	goto	l8739
 17141   0119F2                     l8725:
 17142                           
 17143                           ; BSR set to: 5
 17144   0119F2  0E01               	movlw	1
 17145   0119F4  6F9A               	movwf	atanf@id& (0+255),b
 17146   0119F6                     
 17147                           ; BSR set to: 5
 17148   0119F6  0E00               	movlw	0
 17149   0119F8  6E22               	movwf	___fladd@a^(0+1280),c
 17150   0119FA  0E00               	movlw	0
 17151   0119FC  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17152   0119FE  0E80               	movlw	128
 17153   011A00  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17154   011A02  0EBF               	movlw	191
 17155   011A04  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17156   011A06  C575  F51E         	movff	atanf@x,___fladd@b
 17157   011A0A  C576  F51F         	movff	atanf@x+1,___fladd@b+1
 17158   011A0E  C577  F520         	movff	atanf@x+2,___fladd@b+2
 17159   011A12  C578  F521         	movff	atanf@x+3,___fladd@b+3
 17160   011A16  EC1B  F09B         	call	___fladd	;wreg free
 17161   011A1A  C51E  F553         	movff	?___fladd,___fldiv@b
 17162   011A1E  C51F  F554         	movff	?___fladd+1,___fldiv@b+1
 17163   011A22  C520  F555         	movff	?___fladd+2,___fldiv@b+2
 17164   011A26  C521  F556         	movff	?___fladd+3,___fldiv@b+3
 17165   011A2A  0E00               	movlw	0
 17166   011A2C  6E22               	movwf	___fladd@a^(0+1280),c
 17167   011A2E  0E00               	movlw	0
 17168   011A30  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17169   011A32  0E80               	movlw	128
 17170   011A34  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17171   011A36  0E3F               	movlw	63
 17172   011A38  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17173   011A3A  C575  F51E         	movff	atanf@x,___fladd@b
 17174   011A3E  C576  F51F         	movff	atanf@x+1,___fladd@b+1
 17175   011A42  C577  F520         	movff	atanf@x+2,___fladd@b+2
 17176   011A46  C578  F521         	movff	atanf@x+3,___fladd@b+3
 17177   011A4A  EC1B  F09B         	call	___fladd	;wreg free
 17178   011A4E  C51E  F557         	movff	?___fladd,___fldiv@a
 17179   011A52  C51F  F558         	movff	?___fladd+1,___fldiv@a+1
 17180   011A56  C520  F559         	movff	?___fladd+2,___fldiv@a+2
 17181   011A5A  C521  F55A         	movff	?___fladd+3,___fldiv@a+3
 17182   011A5E  EC5D  F0A3         	call	___fldiv	;wreg free
 17183   011A62  C553  F575         	movff	?___fldiv,atanf@x
 17184   011A66  C554  F576         	movff	?___fldiv+1,atanf@x+1
 17185   011A6A  C555  F577         	movff	?___fldiv+2,atanf@x+2
 17186   011A6E  C556  F578         	movff	?___fldiv+3,atanf@x+3
 17187   011A72  EFB6  F08D         	goto	l8739
 17188   011A76                     l8729:
 17189                           
 17190                           ; BSR set to: 5
 17191   011A76  0E1C               	movlw	28
 17192   011A78  5DA1               	subwf	(atanf@ix+2)& (0+255),w,b
 17193   011A7A  0E40               	movlw	64
 17194   011A7C  59A2               	subwfb	(atanf@ix+3)& (0+255),w,b
 17195   011A7E  B0D8               	btfsc	status,0,c
 17196   011A80  EF44  F08D         	goto	u6531
 17197   011A84  EF46  F08D         	goto	u6530
 17198   011A88                     u6531:
 17199   011A88  EF9A  F08D         	goto	l8735
 17200   011A8C                     u6530:
 17201   011A8C                     
 17202                           ; BSR set to: 5
 17203   011A8C  0E02               	movlw	2
 17204   011A8E  6F9A               	movwf	atanf@id& (0+255),b
 17205   011A90                     
 17206                           ; BSR set to: 5
 17207   011A90  0E00               	movlw	0
 17208   011A92  6E22               	movwf	___fladd@a^(0+1280),c
 17209   011A94  0E00               	movlw	0
 17210   011A96  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17211   011A98  0EC0               	movlw	192
 17212   011A9A  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17213   011A9C  0EBF               	movlw	191
 17214   011A9E  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17215   011AA0  C575  F51E         	movff	atanf@x,___fladd@b
 17216   011AA4  C576  F51F         	movff	atanf@x+1,___fladd@b+1
 17217   011AA8  C577  F520         	movff	atanf@x+2,___fladd@b+2
 17218   011AAC  C578  F521         	movff	atanf@x+3,___fladd@b+3
 17219   011AB0  EC1B  F09B         	call	___fladd	;wreg free
 17220   011AB4  C51E  F553         	movff	?___fladd,___fldiv@b
 17221   011AB8  C51F  F554         	movff	?___fladd+1,___fldiv@b+1
 17222   011ABC  C520  F555         	movff	?___fladd+2,___fldiv@b+2
 17223   011AC0  C521  F556         	movff	?___fladd+3,___fldiv@b+3
 17224   011AC4  0E00               	movlw	0
 17225   011AC6  6E22               	movwf	___fladd@a^(0+1280),c
 17226   011AC8  0E00               	movlw	0
 17227   011ACA  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17228   011ACC  0E80               	movlw	128
 17229   011ACE  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17230   011AD0  0E3F               	movlw	63
 17231   011AD2  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17232   011AD4  0E00               	movlw	0
 17233   011AD6  6E09               	movwf	___flmul@a^(0+1280),c
 17234   011AD8  0E00               	movlw	0
 17235   011ADA  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 17236   011ADC  0EC0               	movlw	192
 17237   011ADE  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 17238   011AE0  0E3F               	movlw	63
 17239   011AE2  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 17240   011AE4  C575  F505         	movff	atanf@x,___flmul@b
 17241   011AE8  C576  F506         	movff	atanf@x+1,___flmul@b+1
 17242   011AEC  C577  F507         	movff	atanf@x+2,___flmul@b+2
 17243   011AF0  C578  F508         	movff	atanf@x+3,___flmul@b+3
 17244   011AF4  EC76  F09D         	call	___flmul	;wreg free
 17245   011AF8  C505  F51E         	movff	?___flmul,___fladd@b
 17246   011AFC  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 17247   011B00  C507  F520         	movff	?___flmul+2,___fladd@b+2
 17248   011B04  C508  F521         	movff	?___flmul+3,___fladd@b+3
 17249   011B08  EC1B  F09B         	call	___fladd	;wreg free
 17250   011B0C  C51E  F557         	movff	?___fladd,___fldiv@a
 17251   011B10  C51F  F558         	movff	?___fladd+1,___fldiv@a+1
 17252   011B14  C520  F559         	movff	?___fladd+2,___fldiv@a+2
 17253   011B18  C521  F55A         	movff	?___fladd+3,___fldiv@a+3
 17254   011B1C  EC5D  F0A3         	call	___fldiv	;wreg free
 17255   011B20  C553  F575         	movff	?___fldiv,atanf@x
 17256   011B24  C554  F576         	movff	?___fldiv+1,atanf@x+1
 17257   011B28  C555  F577         	movff	?___fldiv+2,atanf@x+2
 17258   011B2C  C556  F578         	movff	?___fldiv+3,atanf@x+3
 17259   011B30  EFB6  F08D         	goto	l8739
 17260   011B34                     l8735:
 17261                           
 17262                           ; BSR set to: 5
 17263   011B34  0E03               	movlw	3
 17264   011B36  6F9A               	movwf	atanf@id& (0+255),b
 17265   011B38                     
 17266                           ; BSR set to: 5
 17267   011B38  0E00               	movlw	0
 17268   011B3A  6E53               	movwf	___fldiv@b^(0+1280),c
 17269   011B3C  0E00               	movlw	0
 17270   011B3E  6E54               	movwf	(___fldiv@b+1)^(0+1280),c
 17271   011B40  0E80               	movlw	128
 17272   011B42  6E55               	movwf	(___fldiv@b+2)^(0+1280),c
 17273   011B44  0EBF               	movlw	191
 17274   011B46  6E56               	movwf	(___fldiv@b+3)^(0+1280),c
 17275   011B48  C575  F557         	movff	atanf@x,___fldiv@a
 17276   011B4C  C576  F558         	movff	atanf@x+1,___fldiv@a+1
 17277   011B50  C577  F559         	movff	atanf@x+2,___fldiv@a+2
 17278   011B54  C578  F55A         	movff	atanf@x+3,___fldiv@a+3
 17279   011B58  EC5D  F0A3         	call	___fldiv	;wreg free
 17280   011B5C  C553  F575         	movff	?___fldiv,atanf@x
 17281   011B60  C554  F576         	movff	?___fldiv+1,atanf@x+1
 17282   011B64  C555  F577         	movff	?___fldiv+2,atanf@x+2
 17283   011B68  C556  F578         	movff	?___fldiv+3,atanf@x+3
 17284   011B6C                     l8739:
 17285   011B6C  C575  F505         	movff	atanf@x,___flmul@b
 17286   011B70  C576  F506         	movff	atanf@x+1,___flmul@b+1
 17287   011B74  C577  F507         	movff	atanf@x+2,___flmul@b+2
 17288   011B78  C578  F508         	movff	atanf@x+3,___flmul@b+3
 17289   011B7C  C575  F509         	movff	atanf@x,___flmul@a
 17290   011B80  C576  F50A         	movff	atanf@x+1,___flmul@a+1
 17291   011B84  C577  F50B         	movff	atanf@x+2,___flmul@a+2
 17292   011B88  C578  F50C         	movff	atanf@x+3,___flmul@a+3
 17293   011B8C  EC76  F09D         	call	___flmul	;wreg free
 17294   011B90  C505  F59B         	movff	?___flmul,atanf@z
 17295   011B94  C506  F59C         	movff	?___flmul+1,atanf@z+1
 17296   011B98  C507  F59D         	movff	?___flmul+2,atanf@z+2
 17297   011B9C  C508  F59E         	movff	?___flmul+3,atanf@z+3
 17298   011BA0  C59B  F505         	movff	atanf@z,___flmul@b
 17299   011BA4  C59C  F506         	movff	atanf@z+1,___flmul@b+1
 17300   011BA8  C59D  F507         	movff	atanf@z+2,___flmul@b+2
 17301   011BAC  C59E  F508         	movff	atanf@z+3,___flmul@b+3
 17302   011BB0  C59B  F509         	movff	atanf@z,___flmul@a
 17303   011BB4  C59C  F50A         	movff	atanf@z+1,___flmul@a+1
 17304   011BB8  C59D  F50B         	movff	atanf@z+2,___flmul@a+2
 17305   011BBC  C59E  F50C         	movff	atanf@z+3,___flmul@a+3
 17306   011BC0  EC76  F09D         	call	___flmul	;wreg free
 17307   011BC4  C505  F596         	movff	?___flmul,atanf@w
 17308   011BC8  C506  F597         	movff	?___flmul+1,atanf@w+1
 17309   011BCC  C507  F598         	movff	?___flmul+2,atanf@w+2
 17310   011BD0  C508  F599         	movff	?___flmul+3,atanf@w+3
 17311   011BD4  0E0D               	movlw	13
 17312   011BD6  6E22               	movwf	___fladd@a^(0+1280),c
 17313   011BD8  0EF5               	movlw	245
 17314   011BDA  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17315   011BDC  0E11               	movlw	17
 17316   011BDE  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17317   011BE0  0E3E               	movlw	62
 17318   011BE2  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17319   011BE4  0E25               	movlw	37
 17320   011BE6  6E09               	movwf	___flmul@a^(0+1280),c
 17321   011BE8  0EAC               	movlw	172
 17322   011BEA  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 17323   011BEC  0E7C               	movlw	124
 17324   011BEE  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 17325   011BF0  0E3D               	movlw	61
 17326   011BF2  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 17327   011BF4  C596  F505         	movff	atanf@w,___flmul@b
 17328   011BF8  C597  F506         	movff	atanf@w+1,___flmul@b+1
 17329   011BFC  C598  F507         	movff	atanf@w+2,___flmul@b+2
 17330   011C00  C599  F508         	movff	atanf@w+3,___flmul@b+3
 17331   011C04  EC76  F09D         	call	___flmul	;wreg free
 17332   011C08  C505  F51E         	movff	?___flmul,___fladd@b
 17333   011C0C  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 17334   011C10  C507  F520         	movff	?___flmul+2,___fladd@b+2
 17335   011C14  C508  F521         	movff	?___flmul+3,___fladd@b+3
 17336   011C18  EC1B  F09B         	call	___fladd	;wreg free
 17337   011C1C  C51E  F58D         	movff	?___fladd,_atanf$3492
 17338   011C20  C51F  F58E         	movff	?___fladd+1,_atanf$3492+1
 17339   011C24  C520  F58F         	movff	?___fladd+2,_atanf$3492+2
 17340   011C28  C521  F590         	movff	?___fladd+3,_atanf$3492+3
 17341   011C2C  0EA9               	movlw	169
 17342   011C2E  6E22               	movwf	___fladd@a^(0+1280),c
 17343   011C30  0EAA               	movlw	170
 17344   011C32  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17345   011C34  0EAA               	movlw	170
 17346   011C36  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17347   011C38  0E3E               	movlw	62
 17348   011C3A  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17349   011C3C  C596  F509         	movff	atanf@w,___flmul@a
 17350   011C40  C597  F50A         	movff	atanf@w+1,___flmul@a+1
 17351   011C44  C598  F50B         	movff	atanf@w+2,___flmul@a+2
 17352   011C48  C599  F50C         	movff	atanf@w+3,___flmul@a+3
 17353   011C4C  C58D  F505         	movff	_atanf$3492,___flmul@b
 17354   011C50  C58E  F506         	movff	_atanf$3492+1,___flmul@b+1
 17355   011C54  C58F  F507         	movff	_atanf$3492+2,___flmul@b+2
 17356   011C58  C590  F508         	movff	_atanf$3492+3,___flmul@b+3
 17357   011C5C  EC76  F09D         	call	___flmul	;wreg free
 17358   011C60  C505  F51E         	movff	?___flmul,___fladd@b
 17359   011C64  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 17360   011C68  C507  F520         	movff	?___flmul+2,___fladd@b+2
 17361   011C6C  C508  F521         	movff	?___flmul+3,___fladd@b+3
 17362   011C70  EC1B  F09B         	call	___fladd	;wreg free
 17363   011C74  C51E  F579         	movff	?___fladd,_atanf$3493
 17364   011C78  C51F  F57A         	movff	?___fladd+1,_atanf$3493+1
 17365   011C7C  C520  F57B         	movff	?___fladd+2,_atanf$3493+2
 17366   011C80  C521  F57C         	movff	?___fladd+3,_atanf$3493+3
 17367   011C84  C579  F505         	movff	_atanf$3493,___flmul@b
 17368   011C88  C57A  F506         	movff	_atanf$3493+1,___flmul@b+1
 17369   011C8C  C57B  F507         	movff	_atanf$3493+2,___flmul@b+2
 17370   011C90  C57C  F508         	movff	_atanf$3493+3,___flmul@b+3
 17371   011C94  C59B  F509         	movff	atanf@z,___flmul@a
 17372   011C98  C59C  F50A         	movff	atanf@z+1,___flmul@a+1
 17373   011C9C  C59D  F50B         	movff	atanf@z+2,___flmul@a+2
 17374   011CA0  C59E  F50C         	movff	atanf@z+3,___flmul@a+3
 17375   011CA4  EC76  F09D         	call	___flmul	;wreg free
 17376   011CA8  C505  F585         	movff	?___flmul,atanf@s1
 17377   011CAC  C506  F586         	movff	?___flmul+1,atanf@s1+1
 17378   011CB0  C507  F587         	movff	?___flmul+2,atanf@s1+2
 17379   011CB4  C508  F588         	movff	?___flmul+3,atanf@s1+3
 17380   011CB8  0E98               	movlw	152
 17381   011CBA  6E22               	movwf	___fladd@a^(0+1280),c
 17382   011CBC  0ECA               	movlw	202
 17383   011CBE  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17384   011CC0  0E4C               	movlw	76
 17385   011CC2  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17386   011CC4  0EBE               	movlw	190
 17387   011CC6  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17388   011CC8  0E47               	movlw	71
 17389   011CCA  6E09               	movwf	___flmul@a^(0+1280),c
 17390   011CCC  0E12               	movlw	18
 17391   011CCE  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 17392   011CD0  0EDA               	movlw	218
 17393   011CD2  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 17394   011CD4  0EBD               	movlw	189
 17395   011CD6  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 17396   011CD8  C596  F505         	movff	atanf@w,___flmul@b
 17397   011CDC  C597  F506         	movff	atanf@w+1,___flmul@b+1
 17398   011CE0  C598  F507         	movff	atanf@w+2,___flmul@b+2
 17399   011CE4  C599  F508         	movff	atanf@w+3,___flmul@b+3
 17400   011CE8  EC76  F09D         	call	___flmul	;wreg free
 17401   011CEC  C505  F51E         	movff	?___flmul,___fladd@b
 17402   011CF0  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 17403   011CF4  C507  F520         	movff	?___flmul+2,___fladd@b+2
 17404   011CF8  C508  F521         	movff	?___flmul+3,___fladd@b+3
 17405   011CFC  EC1B  F09B         	call	___fladd	;wreg free
 17406   011D00  C51E  F58D         	movff	?___fladd,_atanf$3492
 17407   011D04  C51F  F58E         	movff	?___fladd+1,_atanf$3492+1
 17408   011D08  C520  F58F         	movff	?___fladd+2,_atanf$3492+2
 17409   011D0C  C521  F590         	movff	?___fladd+3,_atanf$3492+3
 17410   011D10  C58D  F505         	movff	_atanf$3492,___flmul@b
 17411   011D14  C58E  F506         	movff	_atanf$3492+1,___flmul@b+1
 17412   011D18  C58F  F507         	movff	_atanf$3492+2,___flmul@b+2
 17413   011D1C  C590  F508         	movff	_atanf$3492+3,___flmul@b+3
 17414   011D20  C596  F509         	movff	atanf@w,___flmul@a
 17415   011D24  C597  F50A         	movff	atanf@w+1,___flmul@a+1
 17416   011D28  C598  F50B         	movff	atanf@w+2,___flmul@a+2
 17417   011D2C  C599  F50C         	movff	atanf@w+3,___flmul@a+3
 17418   011D30  EC76  F09D         	call	___flmul	;wreg free
 17419   011D34  C505  F589         	movff	?___flmul,atanf@s2
 17420   011D38  C506  F58A         	movff	?___flmul+1,atanf@s2+1
 17421   011D3C  C507  F58B         	movff	?___flmul+2,atanf@s2+2
 17422   011D40  C508  F58C         	movff	?___flmul+3,atanf@s2+3
 17423   011D44  0105               	movlb	5	; () banked
 17424   011D46  BF9A               	btfsc	atanf@id& (0+255),7,b
 17425   011D48  EFAA  F08E         	goto	u6540
 17426   011D4C  EFA8  F08E         	goto	u6541
 17427   011D50                     u6541:
 17428   011D50  EFF2  F08E         	goto	l8761
 17429   011D54                     u6540:
 17430   011D54                     
 17431                           ; BSR set to: 5
 17432   011D54  C575  F509         	movff	atanf@x,___flmul@a
 17433   011D58  C576  F50A         	movff	atanf@x+1,___flmul@a+1
 17434   011D5C  C577  F50B         	movff	atanf@x+2,___flmul@a+2
 17435   011D60  C578  F50C         	movff	atanf@x+3,___flmul@a+3
 17436   011D64  C589  F522         	movff	atanf@s2,___fladd@a
 17437   011D68  C58A  F523         	movff	atanf@s2+1,___fladd@a+1
 17438   011D6C  C58B  F524         	movff	atanf@s2+2,___fladd@a+2
 17439   011D70  C58C  F525         	movff	atanf@s2+3,___fladd@a+3
 17440   011D74  C585  F51E         	movff	atanf@s1,___fladd@b
 17441   011D78  C586  F51F         	movff	atanf@s1+1,___fladd@b+1
 17442   011D7C  C587  F520         	movff	atanf@s1+2,___fladd@b+2
 17443   011D80  C588  F521         	movff	atanf@s1+3,___fladd@b+3
 17444   011D84  EC1B  F09B         	call	___fladd	;wreg free
 17445   011D88  C51E  F505         	movff	?___fladd,___flmul@b
 17446   011D8C  C51F  F506         	movff	?___fladd+1,___flmul@b+1
 17447   011D90  C520  F507         	movff	?___fladd+2,___flmul@b+2
 17448   011D94  C521  F508         	movff	?___fladd+3,___flmul@b+3
 17449   011D98  EC76  F09D         	call	___flmul	;wreg free
 17450   011D9C  C505  F591         	movff	?___flmul,_atanf$3494
 17451   011DA0  C506  F592         	movff	?___flmul+1,_atanf$3494+1
 17452   011DA4  C507  F593         	movff	?___flmul+2,_atanf$3494+2
 17453   011DA8  C508  F594         	movff	?___flmul+3,_atanf$3494+3
 17454   011DAC  C575  F56D         	movff	atanf@x,___flsub@b
 17455   011DB0  C576  F56E         	movff	atanf@x+1,___flsub@b+1
 17456   011DB4  C577  F56F         	movff	atanf@x+2,___flsub@b+2
 17457   011DB8  C578  F570         	movff	atanf@x+3,___flsub@b+3
 17458   011DBC  C591  F571         	movff	_atanf$3494,___flsub@a
 17459   011DC0  C592  F572         	movff	_atanf$3494+1,___flsub@a+1
 17460   011DC4  C593  F573         	movff	_atanf$3494+2,___flsub@a+2
 17461   011DC8  C594  F574         	movff	_atanf$3494+3,___flsub@a+3
 17462   011DCC  ECD5  F0B5         	call	___flsub	;wreg free
 17463   011DD0  C56D  F575         	movff	?___flsub,?_atanf
 17464   011DD4  C56E  F576         	movff	?___flsub+1,?_atanf+1
 17465   011DD8  C56F  F577         	movff	?___flsub+2,?_atanf+2
 17466   011DDC  C570  F578         	movff	?___flsub+3,?_atanf+3
 17467   011DE0  EF97  F08F         	goto	l2149
 17468   011DE4                     l8761:
 17469                           
 17470                           ; BSR set to: 5
 17471   011DE4  C575  F509         	movff	atanf@x,___flmul@a
 17472   011DE8  C576  F50A         	movff	atanf@x+1,___flmul@a+1
 17473   011DEC  C577  F50B         	movff	atanf@x+2,___flmul@a+2
 17474   011DF0  C578  F50C         	movff	atanf@x+3,___flmul@a+3
 17475   011DF4  C589  F522         	movff	atanf@s2,___fladd@a
 17476   011DF8  C58A  F523         	movff	atanf@s2+1,___fladd@a+1
 17477   011DFC  C58B  F524         	movff	atanf@s2+2,___fladd@a+2
 17478   011E00  C58C  F525         	movff	atanf@s2+3,___fladd@a+3
 17479   011E04  C585  F51E         	movff	atanf@s1,___fladd@b
 17480   011E08  C586  F51F         	movff	atanf@s1+1,___fladd@b+1
 17481   011E0C  C587  F520         	movff	atanf@s1+2,___fladd@b+2
 17482   011E10  C588  F521         	movff	atanf@s1+3,___fladd@b+3
 17483   011E14  EC1B  F09B         	call	___fladd	;wreg free
 17484   011E18  C51E  F505         	movff	?___fladd,___flmul@b
 17485   011E1C  C51F  F506         	movff	?___fladd+1,___flmul@b+1
 17486   011E20  C520  F507         	movff	?___fladd+2,___flmul@b+2
 17487   011E24  C521  F508         	movff	?___fladd+3,___flmul@b+3
 17488   011E28  EC76  F09D         	call	___flmul	;wreg free
 17489   011E2C  C505  F591         	movff	?___flmul,_atanf$3494
 17490   011E30  C506  F592         	movff	?___flmul+1,_atanf$3494+1
 17491   011E34  C507  F593         	movff	?___flmul+2,_atanf$3494+2
 17492   011E38  C508  F594         	movff	?___flmul+3,_atanf$3494+3
 17493   011E3C  0105               	movlb	5	; () banked
 17494   011E3E  519A               	movf	atanf@id& (0+255),w,b
 17495   011E40  0D04               	mullw	4
 17496   011E42  0E82               	movlw	low _atanlo
 17497   011E44  24F3               	addwf	243,w,c
 17498   011E46  6EF6               	movwf	tblptrl,c
 17499   011E48  0EFE               	movlw	high _atanlo
 17500   011E4A  20F4               	addwfc	244,w,c
 17501   011E4C  6EF7               	movwf	tblptrh,c
 17502   011E4E                     	if	1	;There are 3 active tblptr bytes
 17503   011E4E  6AF8               	clrf	tblptru,c
 17504   011E50  0E00               	movlw	low (__mediumconst shr (0+16))
 17505   011E52  22F8               	addwfc	tblptru,f,c
 17506   011E54                     	endif
 17507   011E54  0009               	tblrd		*+
 17508   011E56  C4F5 F571          	movff	tablat,___flsub@a
 17509   011E5A  0009               	tblrd		*+
 17510   011E5C  C4F5 F572          	movff	tablat,___flsub@a+1
 17511   011E60  0009               	tblrd		*+
 17512   011E62  C4F5 F573          	movff	tablat,___flsub@a+2
 17513   011E66  000A               	tblrd		*-
 17514   011E68  C4F5 F574          	movff	tablat,___flsub@a+3
 17515   011E6C  C591  F56D         	movff	_atanf$3494,___flsub@b
 17516   011E70  C592  F56E         	movff	_atanf$3494+1,___flsub@b+1
 17517   011E74  C593  F56F         	movff	_atanf$3494+2,___flsub@b+2
 17518   011E78  C594  F570         	movff	_atanf$3494+3,___flsub@b+3
 17519   011E7C  ECD5  F0B5         	call	___flsub	;wreg free
 17520   011E80  C56D  F57D         	movff	?___flsub,_atanf$3495
 17521   011E84  C56E  F57E         	movff	?___flsub+1,_atanf$3495+1
 17522   011E88  C56F  F57F         	movff	?___flsub+2,_atanf$3495+2
 17523   011E8C  C570  F580         	movff	?___flsub+3,_atanf$3495+3
 17524   011E90  C575  F571         	movff	atanf@x,___flsub@a
 17525   011E94  C576  F572         	movff	atanf@x+1,___flsub@a+1
 17526   011E98  C577  F573         	movff	atanf@x+2,___flsub@a+2
 17527   011E9C  C578  F574         	movff	atanf@x+3,___flsub@a+3
 17528   011EA0  C57D  F56D         	movff	_atanf$3495,___flsub@b
 17529   011EA4  C57E  F56E         	movff	_atanf$3495+1,___flsub@b+1
 17530   011EA8  C57F  F56F         	movff	_atanf$3495+2,___flsub@b+2
 17531   011EAC  C580  F570         	movff	_atanf$3495+3,___flsub@b+3
 17532   011EB0  ECD5  F0B5         	call	___flsub	;wreg free
 17533   011EB4  C56D  F581         	movff	?___flsub,_atanf$3496
 17534   011EB8  C56E  F582         	movff	?___flsub+1,_atanf$3496+1
 17535   011EBC  C56F  F583         	movff	?___flsub+2,_atanf$3496+2
 17536   011EC0  C570  F584         	movff	?___flsub+3,_atanf$3496+3
 17537   011EC4  0105               	movlb	5	; () banked
 17538   011EC6  519A               	movf	atanf@id& (0+255),w,b
 17539   011EC8  0D04               	mullw	4
 17540   011ECA  0E92               	movlw	low _atanhi
 17541   011ECC  24F3               	addwf	243,w,c
 17542   011ECE  6EF6               	movwf	tblptrl,c
 17543   011ED0  0EFE               	movlw	high _atanhi
 17544   011ED2  20F4               	addwfc	244,w,c
 17545   011ED4  6EF7               	movwf	tblptrh,c
 17546   011ED6                     	if	1	;There are 3 active tblptr bytes
 17547   011ED6  6AF8               	clrf	tblptru,c
 17548   011ED8  0E00               	movlw	low (__mediumconst shr (0+16))
 17549   011EDA  22F8               	addwfc	tblptru,f,c
 17550   011EDC                     	endif
 17551   011EDC  0009               	tblrd		*+
 17552   011EDE  C4F5 F56D          	movff	tablat,___flsub@b
 17553   011EE2  0009               	tblrd		*+
 17554   011EE4  C4F5 F56E          	movff	tablat,___flsub@b+1
 17555   011EE8  0009               	tblrd		*+
 17556   011EEA  C4F5 F56F          	movff	tablat,___flsub@b+2
 17557   011EEE  000A               	tblrd		*-
 17558   011EF0  C4F5 F570          	movff	tablat,___flsub@b+3
 17559   011EF4  C581  F571         	movff	_atanf$3496,___flsub@a
 17560   011EF8  C582  F572         	movff	_atanf$3496+1,___flsub@a+1
 17561   011EFC  C583  F573         	movff	_atanf$3496+2,___flsub@a+2
 17562   011F00  C584  F574         	movff	_atanf$3496+3,___flsub@a+3
 17563   011F04  ECD5  F0B5         	call	___flsub	;wreg free
 17564   011F08  C56D  F59B         	movff	?___flsub,atanf@z
 17565   011F0C  C56E  F59C         	movff	?___flsub+1,atanf@z+1
 17566   011F10  C56F  F59D         	movff	?___flsub+2,atanf@z+2
 17567   011F14  C570  F59E         	movff	?___flsub+3,atanf@z+3
 17568   011F18  0105               	movlb	5	; () banked
 17569   011F1A  5195               	movf	atanf@sign& (0+255),w,b
 17570   011F1C  A4D8               	btfss	status,2,c
 17571   011F1E  EF93  F08F         	goto	u6551
 17572   011F22  EF95  F08F         	goto	u6550
 17573   011F26                     u6551:
 17574   011F26  EF4E  F08C         	goto	l8705
 17575   011F2A                     u6550:
 17576   011F2A  EF44  F08C         	goto	l8703
 17577   011F2E                     l2149:
 17578   011F2E  0012               	return		;funcret
 17579   011F30                     __end_of_atanf:
 17580                           	callstack 0
 17581                           
 17582 ;; *************** function _fabsf *****************
 17583 ;; Defined at:
 17584 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fabsf.c"
 17585 ;; Parameters:    Size  Location     Type
 17586 ;;  x               4   13[BANK5 ] float 
 17587 ;; Auto vars:     Size  Location     Type
 17588 ;;  u               4   17[BANK5 ] struct .
 17589 ;; Return value:  Size  Location     Type
 17590 ;;                  4   13[BANK5 ] float 
 17591 ;; Registers used:
 17592 ;;		status,2, status,0
 17593 ;; Tracked objects:
 17594 ;;		On entry : 0/0
 17595 ;;		On exit  : 0/0
 17596 ;;		Unchanged: 0/0
 17597 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17598 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17599 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17601 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17602 ;;Total ram usage:        8 bytes
 17603 ;; Hardware stack levels used: 1
 17604 ;; This function calls:
 17605 ;;		Nothing
 17606 ;; This function is called by:
 17607 ;;		_main
 17608 ;;		_atan2f
 17609 ;;		_atanf
 17610 ;;		___rem_pio2f
 17611 ;; This function uses a non-reentrant model
 17612 ;;
 17613                           
 17614                           	psect	text38
 17615   016CE6                     __ptext38:
 17616                           	callstack 0
 17617   016CE6                     _fabsf:
 17618                           	callstack 126
 17619   016CE6  C704  F571         	movff	fabsf@F465,fabsf@u
 17620   016CEA  C705  F572         	movff	fabsf@F465+1,fabsf@u+1
 17621   016CEE  C706  F573         	movff	fabsf@F465+2,fabsf@u+2
 17622   016CF2  C707  F574         	movff	fabsf@F465+3,fabsf@u+3
 17623   016CF6  C56D  F571         	movff	fabsf@x,fabsf@u
 17624   016CFA  C56E  F572         	movff	fabsf@x+1,fabsf@u+1
 17625   016CFE  C56F  F573         	movff	fabsf@x+2,fabsf@u+2
 17626   016D02  C570  F574         	movff	fabsf@x+3,fabsf@u+3
 17627   016D06  0105               	movlb	5	; () banked
 17628   016D08  9F74               	bcf	(fabsf@u+3)& (0+255),7,b
 17629   016D0A                     
 17630                           ; BSR set to: 5
 17631   016D0A  C571  F56D         	movff	fabsf@u,?_fabsf
 17632   016D0E  C572  F56E         	movff	fabsf@u+1,?_fabsf+1
 17633   016D12  C573  F56F         	movff	fabsf@u+2,?_fabsf+2
 17634   016D16  C574  F570         	movff	fabsf@u+3,?_fabsf+3
 17635   016D1A                     
 17636                           ; BSR set to: 5
 17637   016D1A  0012               	return		;funcret
 17638   016D1C                     __end_of_fabsf:
 17639                           	callstack 0
 17640                           
 17641 ;; *************** function ___fpclassifyf *****************
 17642 ;; Defined at:
 17643 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__fpclassifyf.c"
 17644 ;; Parameters:    Size  Location     Type
 17645 ;;  x               4    0[COMRAM] float 
 17646 ;; Auto vars:     Size  Location     Type
 17647 ;;  u               4   10[COMRAM] struct .
 17648 ;;  e               2    8[COMRAM] int 
 17649 ;; Return value:  Size  Location     Type
 17650 ;;                  2    0[COMRAM] int 
 17651 ;; Registers used:
 17652 ;;		wreg, status,2, status,0
 17653 ;; Tracked objects:
 17654 ;;		On entry : 0/0
 17655 ;;		On exit  : 0/0
 17656 ;;		Unchanged: 0/0
 17657 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17659 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17660 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17661 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17662 ;;Total ram usage:       14 bytes
 17663 ;; Hardware stack levels used: 1
 17664 ;; This function calls:
 17665 ;;		Nothing
 17666 ;; This function is called by:
 17667 ;;		_atan2f
 17668 ;;		_atanf
 17669 ;;		_efgtoa
 17670 ;; This function uses a non-reentrant model
 17671 ;;
 17672                           
 17673                           	psect	text39
 17674   016256                     __ptext39:
 17675                           	callstack 0
 17676   016256                     ___fpclassifyf:
 17677                           	callstack 122
 17678   016256  C70C  F50B         	movff	___fpclassifyf@F465,___fpclassifyf@u
 17679   01625A  C70D  F50C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 17680   01625E  C70E  F50D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 17681   016262  C70F  F50E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 17682   016266  C501  F50B         	movff	___fpclassifyf@x,___fpclassifyf@u
 17683   01626A  C502  F50C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 17684   01626E  C503  F50D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 17685   016272  C504  F50E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 17686   016276  C50B  F505         	movff	___fpclassifyf@u,??___fpclassifyf
 17687   01627A  C50C  F506         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 17688   01627E  C50D  F507         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 17689   016282  C50E  F508         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 17690   016286  0E18               	movlw	24
 17691   016288  EF4B  F0B1         	goto	u5890
 17692   01628C                     u5895:
 17693   01628C  90D8               	bcf	status,0,c
 17694   01628E  3208               	rrcf	(??___fpclassifyf+3)^(0+1280),f,c
 17695   016290  3207               	rrcf	(??___fpclassifyf+2)^(0+1280),f,c
 17696   016292  3206               	rrcf	(??___fpclassifyf+1)^(0+1280),f,c
 17697   016294  3205               	rrcf	??___fpclassifyf^(0+1280),f,c
 17698   016296                     u5890:
 17699   016296  2EE8               	decfsz	wreg,f,c
 17700   016298  EF46  F0B1         	goto	u5895
 17701   01629C  5005               	movf	??___fpclassifyf^(0+1280),w,c
 17702   01629E  6E09               	movwf	___fpclassifyf@e^(0+1280),c
 17703   0162A0  6A0A               	clrf	(___fpclassifyf@e+1)^(0+1280),c
 17704   0162A2  5009               	movf	___fpclassifyf@e^(0+1280),w,c
 17705   0162A4  100A               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
 17706   0162A6  A4D8               	btfss	status,2,c
 17707   0162A8  EF58  F0B1         	goto	u5901
 17708   0162AC  EF5A  F0B1         	goto	u5900
 17709   0162B0                     u5901:
 17710   0162B0  EF7A  F0B1         	goto	l8367
 17711   0162B4                     u5900:
 17712   0162B4  90D8               	bcf	status,0,c
 17713   0162B6  340B               	rlcf	___fpclassifyf@u^(0+1280),w,c
 17714   0162B8  6E05               	movwf	??___fpclassifyf^(0+1280),c
 17715   0162BA  340C               	rlcf	(___fpclassifyf@u+1)^(0+1280),w,c
 17716   0162BC  6E06               	movwf	(??___fpclassifyf+1)^(0+1280),c
 17717   0162BE  340D               	rlcf	(___fpclassifyf@u+2)^(0+1280),w,c
 17718   0162C0  6E07               	movwf	(??___fpclassifyf+2)^(0+1280),c
 17719   0162C2  340E               	rlcf	(___fpclassifyf@u+3)^(0+1280),w,c
 17720   0162C4  6E08               	movwf	(??___fpclassifyf+3)^(0+1280),c
 17721   0162C6  5005               	movf	??___fpclassifyf^(0+1280),w,c
 17722   0162C8  1006               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
 17723   0162CA  1007               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
 17724   0162CC  1008               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
 17725   0162CE  A4D8               	btfss	status,2,c
 17726   0162D0  EF6C  F0B1         	goto	u5911
 17727   0162D4  EF6E  F0B1         	goto	u5910
 17728   0162D8                     u5911:
 17729   0162D8  EF74  F0B1         	goto	l8363
 17730   0162DC                     u5910:
 17731   0162DC  0E00               	movlw	0
 17732   0162DE  6E02               	movwf	(?___fpclassifyf+1)^(0+1280),c
 17733   0162E0  0E02               	movlw	2
 17734   0162E2  6E01               	movwf	?___fpclassifyf^(0+1280),c
 17735   0162E4  EFA9  F0B1         	goto	l2125
 17736   0162E8                     l8363:
 17737   0162E8  0E00               	movlw	0
 17738   0162EA  6E02               	movwf	(?___fpclassifyf+1)^(0+1280),c
 17739   0162EC  0E03               	movlw	3
 17740   0162EE  6E01               	movwf	?___fpclassifyf^(0+1280),c
 17741   0162F0  EFA9  F0B1         	goto	l2125
 17742   0162F4                     l8367:
 17743   0162F4  2809               	incf	___fpclassifyf@e^(0+1280),w,c
 17744   0162F6  100A               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
 17745   0162F8  A4D8               	btfss	status,2,c
 17746   0162FA  EF81  F0B1         	goto	u5921
 17747   0162FE  EF83  F0B1         	goto	u5920
 17748   016302                     u5921:
 17749   016302  EFA5  F0B1         	goto	l8373
 17750   016306                     u5920:
 17751   016306  C50B  F505         	movff	___fpclassifyf@u,??___fpclassifyf
 17752   01630A  C50C  F506         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 17753   01630E  C50D  F507         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 17754   016312  C50E  F508         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 17755   016316  0E09               	movlw	9
 17756   016318                     u5935:
 17757   016318  90D8               	bcf	status,0,c
 17758   01631A  3605               	rlcf	??___fpclassifyf^(0+1280),f,c
 17759   01631C  3606               	rlcf	(??___fpclassifyf+1)^(0+1280),f,c
 17760   01631E  3607               	rlcf	(??___fpclassifyf+2)^(0+1280),f,c
 17761   016320  3608               	rlcf	(??___fpclassifyf+3)^(0+1280),f,c
 17762   016322  2EE8               	decfsz	wreg,f,c
 17763   016324  EF8C  F0B1         	goto	u5935
 17764   016328  5005               	movf	??___fpclassifyf^(0+1280),w,c
 17765   01632A  1006               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
 17766   01632C  1007               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
 17767   01632E  1008               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
 17768   016330  B4D8               	btfsc	status,2,c
 17769   016332  EF9D  F0B1         	goto	u5941
 17770   016336  EFA0  F0B1         	goto	u5940
 17771   01633A                     u5941:
 17772   01633A  0E01               	movlw	1
 17773   01633C  EFA1  F0B1         	goto	u5950
 17774   016340                     u5940:
 17775   016340  0E00               	movlw	0
 17776   016342                     u5950:
 17777   016342  6E01               	movwf	?___fpclassifyf^(0+1280),c
 17778   016344  6A02               	clrf	(?___fpclassifyf+1)^(0+1280),c
 17779   016346  EFA9  F0B1         	goto	l2125
 17780   01634A                     l8373:
 17781   01634A  0E00               	movlw	0
 17782   01634C  6E02               	movwf	(?___fpclassifyf+1)^(0+1280),c
 17783   01634E  0E04               	movlw	4
 17784   016350  6E01               	movwf	?___fpclassifyf^(0+1280),c
 17785   016352                     l2125:
 17786   016352  0012               	return		;funcret
 17787   016354                     __end_of___fpclassifyf:
 17788                           	callstack 0
 17789                           
 17790 ;; *************** function ___flsub *****************
 17791 ;; Defined at:
 17792 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
 17793 ;; Parameters:    Size  Location     Type
 17794 ;;  b               4   13[BANK5 ] int 
 17795 ;;  a               4   17[BANK5 ] int 
 17796 ;; Auto vars:     Size  Location     Type
 17797 ;;		None
 17798 ;; Return value:  Size  Location     Type
 17799 ;;                  4   13[BANK5 ] int 
 17800 ;; Registers used:
 17801 ;;		wreg, status,2, status,0, cstack
 17802 ;; Tracked objects:
 17803 ;;		On entry : 0/0
 17804 ;;		On exit  : 0/0
 17805 ;;		Unchanged: 0/0
 17806 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17807 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17810 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17811 ;;Total ram usage:        8 bytes
 17812 ;; Hardware stack levels used: 1
 17813 ;; Hardware stack levels required when called: 1
 17814 ;; This function calls:
 17815 ;;		___fladd
 17816 ;; This function is called by:
 17817 ;;		_MPU6050_DMP_GetData
 17818 ;;		_MPU6050_ReadAll
 17819 ;;		_atan2f
 17820 ;;		_atanf
 17821 ;;		_cosf
 17822 ;;		___rem_pio2f
 17823 ;;		_efgtoa
 17824 ;;		_MPU6050_ReadAccel
 17825 ;;		_MPU6050_ReadGyro
 17826 ;; This function uses a non-reentrant model
 17827 ;;
 17828                           
 17829                           	psect	text40
 17830   016BAA                     __ptext40:
 17831                           	callstack 0
 17832   016BAA                     ___flsub:
 17833                           	callstack 121
 17834   016BAA  0E00               	movlw	0
 17835   016BAC  0105               	movlb	5	; () banked
 17836   016BAE  1B71               	xorwf	___flsub@a& (0+255),f,b
 17837   016BB0  0E00               	movlw	0
 17838   016BB2  1B72               	xorwf	(___flsub@a+1)& (0+255),f,b
 17839   016BB4  0E00               	movlw	0
 17840   016BB6  1B73               	xorwf	(___flsub@a+2)& (0+255),f,b
 17841   016BB8  0E80               	movlw	128
 17842   016BBA  1B74               	xorwf	(___flsub@a+3)& (0+255),f,b
 17843   016BBC                     
 17844                           ; BSR set to: 5
 17845   016BBC  C56D  F51E         	movff	___flsub@b,___fladd@b
 17846   016BC0  C56E  F51F         	movff	___flsub@b+1,___fladd@b+1
 17847   016BC4  C56F  F520         	movff	___flsub@b+2,___fladd@b+2
 17848   016BC8  C570  F521         	movff	___flsub@b+3,___fladd@b+3
 17849   016BCC  C571  F522         	movff	___flsub@a,___fladd@a
 17850   016BD0  C572  F523         	movff	___flsub@a+1,___fladd@a+1
 17851   016BD4  C573  F524         	movff	___flsub@a+2,___fladd@a+2
 17852   016BD8  C574  F525         	movff	___flsub@a+3,___fladd@a+3
 17853   016BDC  EC1B  F09B         	call	___fladd	;wreg free
 17854   016BE0  C51E  F56D         	movff	?___fladd,?___flsub
 17855   016BE4  C51F  F56E         	movff	?___fladd+1,?___flsub+1
 17856   016BE8  C520  F56F         	movff	?___fladd+2,?___flsub+2
 17857   016BEC  C521  F570         	movff	?___fladd+3,?___flsub+3
 17858   016BF0  0012               	return		;funcret
 17859   016BF2                     __end_of___flsub:
 17860                           	callstack 0
 17861                           
 17862 ;; *************** function ___fladd *****************
 17863 ;; Defined at:
 17864 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
 17865 ;; Parameters:    Size  Location     Type
 17866 ;;  b               4   29[COMRAM] int 
 17867 ;;  a               4   33[COMRAM] int 
 17868 ;; Auto vars:     Size  Location     Type
 17869 ;;  grs             1   44[COMRAM] unsigned char 
 17870 ;;  bexp            1   43[COMRAM] unsigned char 
 17871 ;;  aexp            1   42[COMRAM] unsigned char 
 17872 ;;  signs           1   41[COMRAM] unsigned char 
 17873 ;; Return value:  Size  Location     Type
 17874 ;;                  4   29[COMRAM] unsigned char 
 17875 ;; Registers used:
 17876 ;;		wreg, status,2, status,0
 17877 ;; Tracked objects:
 17878 ;;		On entry : 0/0
 17879 ;;		On exit  : 0/0
 17880 ;;		Unchanged: 0/0
 17881 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17882 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17883 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17884 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17885 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17886 ;;Total ram usage:       16 bytes
 17887 ;; Hardware stack levels used: 1
 17888 ;; This function calls:
 17889 ;;		Nothing
 17890 ;; This function is called by:
 17891 ;;		_MPU6050_DMP_GetData
 17892 ;;		_MPU6050_ReadAll
 17893 ;;		___flsub
 17894 ;;		_atan2f
 17895 ;;		_atanf
 17896 ;;		_cosf
 17897 ;;		___cosdf
 17898 ;;		___rem_pio2f
 17899 ;;		___sindf
 17900 ;;		_efgtoa
 17901 ;;		_sinf
 17902 ;;		_MPU6050_ReadTemperature
 17903 ;;		_MPU6050_Calibrate
 17904 ;;		_MovingAverage_Update
 17905 ;;		_AnalyzeMovementPattern
 17906 ;; This function uses a non-reentrant model
 17907 ;;
 17908                           
 17909                           	psect	text41
 17910   013636                     __ptext41:
 17911                           	callstack 0
 17912   013636                     ___fladd:
 17913                           	callstack 121
 17914   013636  5021               	movf	(___fladd@b+3)^(0+1280),w,c
 17915   013638  0B80               	andlw	128
 17916   01363A  6E2A               	movwf	___fladd@signs^(0+1280),c
 17917   01363C  5021               	movf	(___fladd@b+3)^(0+1280),w,c
 17918   01363E  2421               	addwf	(___fladd@b+3)^(0+1280),w,c
 17919   013640  6E2C               	movwf	___fladd@bexp^(0+1280),c
 17920   013642  AE20               	btfss	(___fladd@b+2)^(0+1280),7,c
 17921   013644  EF26  F09B         	goto	u4721
 17922   013648  EF28  F09B         	goto	u4720
 17923   01364C                     u4721:
 17924   01364C  EF29  F09B         	goto	l7543
 17925   013650                     u4720:
 17926   013650  802C               	bsf	___fladd@bexp^(0+1280),0,c
 17927   013652                     l7543:
 17928   013652  502C               	movf	___fladd@bexp^(0+1280),w,c
 17929   013654  B4D8               	btfsc	status,2,c
 17930   013656  EF2F  F09B         	goto	u4731
 17931   01365A  EF31  F09B         	goto	u4730
 17932   01365E                     u4731:
 17933   01365E  EF45  F09B         	goto	l7553
 17934   013662                     u4730:
 17935   013662  282C               	incf	___fladd@bexp^(0+1280),w,c
 17936   013664  A4D8               	btfss	status,2,c
 17937   013666  EF37  F09B         	goto	u4741
 17938   01366A  EF39  F09B         	goto	u4740
 17939   01366E                     u4741:
 17940   01366E  EF41  F09B         	goto	l7549
 17941   013672                     u4740:
 17942   013672  0E00               	movlw	0
 17943   013674  6E1E               	movwf	___fladd@b^(0+1280),c
 17944   013676  0E00               	movlw	0
 17945   013678  6E1F               	movwf	(___fladd@b+1)^(0+1280),c
 17946   01367A  0E00               	movlw	0
 17947   01367C  6E20               	movwf	(___fladd@b+2)^(0+1280),c
 17948   01367E  0E00               	movlw	0
 17949   013680  6E21               	movwf	(___fladd@b+3)^(0+1280),c
 17950   013682                     l7549:
 17951   013682  8E20               	bsf	(___fladd@b+2)^(0+1280),7,c
 17952   013684  6A21               	clrf	(___fladd@b+3)^(0+1280),c
 17953   013686  EF4D  F09B         	goto	l7555
 17954   01368A                     l7553:
 17955   01368A  0E00               	movlw	0
 17956   01368C  6E1E               	movwf	___fladd@b^(0+1280),c
 17957   01368E  0E00               	movlw	0
 17958   013690  6E1F               	movwf	(___fladd@b+1)^(0+1280),c
 17959   013692  0E00               	movlw	0
 17960   013694  6E20               	movwf	(___fladd@b+2)^(0+1280),c
 17961   013696  0E00               	movlw	0
 17962   013698  6E21               	movwf	(___fladd@b+3)^(0+1280),c
 17963   01369A                     l7555:
 17964   01369A  5025               	movf	(___fladd@a+3)^(0+1280),w,c
 17965   01369C  0B80               	andlw	128
 17966   01369E  6E2B               	movwf	___fladd@aexp^(0+1280),c
 17967   0136A0  502A               	movf	___fladd@signs^(0+1280),w,c
 17968   0136A2  182B               	xorwf	___fladd@aexp^(0+1280),w,c
 17969   0136A4  B4D8               	btfsc	status,2,c
 17970   0136A6  EF57  F09B         	goto	u4751
 17971   0136AA  EF59  F09B         	goto	u4750
 17972   0136AE                     u4751:
 17973   0136AE  EF5A  F09B         	goto	l7561
 17974   0136B2                     u4750:
 17975   0136B2  8C2A               	bsf	___fladd@signs^(0+1280),6,c
 17976   0136B4                     l7561:
 17977   0136B4  5025               	movf	(___fladd@a+3)^(0+1280),w,c
 17978   0136B6  2425               	addwf	(___fladd@a+3)^(0+1280),w,c
 17979   0136B8  6E2B               	movwf	___fladd@aexp^(0+1280),c
 17980   0136BA  AE24               	btfss	(___fladd@a+2)^(0+1280),7,c
 17981   0136BC  EF62  F09B         	goto	u4761
 17982   0136C0  EF64  F09B         	goto	u4760
 17983   0136C4                     u4761:
 17984   0136C4  EF65  F09B         	goto	l7567
 17985   0136C8                     u4760:
 17986   0136C8  802B               	bsf	___fladd@aexp^(0+1280),0,c
 17987   0136CA                     l7567:
 17988   0136CA  502B               	movf	___fladd@aexp^(0+1280),w,c
 17989   0136CC  B4D8               	btfsc	status,2,c
 17990   0136CE  EF6B  F09B         	goto	u4771
 17991   0136D2  EF6D  F09B         	goto	u4770
 17992   0136D6                     u4771:
 17993   0136D6  EF81  F09B         	goto	l7577
 17994   0136DA                     u4770:
 17995   0136DA  282B               	incf	___fladd@aexp^(0+1280),w,c
 17996   0136DC  A4D8               	btfss	status,2,c
 17997   0136DE  EF73  F09B         	goto	u4781
 17998   0136E2  EF75  F09B         	goto	u4780
 17999   0136E6                     u4781:
 18000   0136E6  EF7D  F09B         	goto	l7573
 18001   0136EA                     u4780:
 18002   0136EA  0E00               	movlw	0
 18003   0136EC  6E22               	movwf	___fladd@a^(0+1280),c
 18004   0136EE  0E00               	movlw	0
 18005   0136F0  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 18006   0136F2  0E00               	movlw	0
 18007   0136F4  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 18008   0136F6  0E00               	movlw	0
 18009   0136F8  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 18010   0136FA                     l7573:
 18011   0136FA  8E24               	bsf	(___fladd@a+2)^(0+1280),7,c
 18012   0136FC  6A25               	clrf	(___fladd@a+3)^(0+1280),c
 18013   0136FE  EF89  F09B         	goto	l7579
 18014   013702                     l7577:
 18015   013702  0E00               	movlw	0
 18016   013704  6E22               	movwf	___fladd@a^(0+1280),c
 18017   013706  0E00               	movlw	0
 18018   013708  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 18019   01370A  0E00               	movlw	0
 18020   01370C  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 18021   01370E  0E00               	movlw	0
 18022   013710  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 18023   013712                     l7579:
 18024   013712  502C               	movf	___fladd@bexp^(0+1280),w,c
 18025   013714  5C2B               	subwf	___fladd@aexp^(0+1280),w,c
 18026   013716  B0D8               	btfsc	status,0,c
 18027   013718  EF90  F09B         	goto	u4791
 18028   01371C  EF92  F09B         	goto	u4790
 18029   013720                     u4791:
 18030   013720  EFB9  F09B         	goto	l7615
 18031   013724                     u4790:
 18032   013724  AC2A               	btfss	___fladd@signs^(0+1280),6,c
 18033   013726  EF97  F09B         	goto	u4801
 18034   01372A  EF99  F09B         	goto	u4800
 18035   01372E                     u4801:
 18036   01372E  EF9B  F09B         	goto	l7585
 18037   013732                     u4800:
 18038   013732  0E80               	movlw	128
 18039   013734  1A2A               	xorwf	___fladd@signs^(0+1280),f,c
 18040   013736                     l7585:
 18041   013736  C52C  F52D         	movff	___fladd@bexp,___fladd@grs
 18042   01373A  C52B  F52C         	movff	___fladd@aexp,___fladd@bexp
 18043   01373E  C52D  F52B         	movff	___fladd@grs,___fladd@aexp
 18044   013742  C51E  F52D         	movff	___fladd@b,___fladd@grs
 18045   013746  C522  F51E         	movff	___fladd@a,___fladd@b
 18046   01374A  C52D  F522         	movff	___fladd@grs,___fladd@a
 18047   01374E  C51F  F52D         	movff	___fladd@b+1,___fladd@grs
 18048   013752  C523  F51F         	movff	___fladd@a+1,___fladd@b+1
 18049   013756  C52D  F523         	movff	___fladd@grs,___fladd@a+1
 18050   01375A  C520  F52D         	movff	___fladd@b+2,___fladd@grs
 18051   01375E  C524  F520         	movff	___fladd@a+2,___fladd@b+2
 18052   013762  C52D  F524         	movff	___fladd@grs,___fladd@a+2
 18053   013766  C521  F52D         	movff	___fladd@b+3,___fladd@grs
 18054   01376A  C525  F521         	movff	___fladd@a+3,___fladd@b+3
 18055   01376E  C52D  F525         	movff	___fladd@grs,___fladd@a+3
 18056   013772                     l7615:
 18057   013772  6A2D               	clrf	___fladd@grs^(0+1280),c
 18058   013774  502C               	movf	___fladd@bexp^(0+1280),w,c
 18059   013776  C52B  F526         	movff	___fladd@aexp,??___fladd
 18060   01377A  6A27               	clrf	(??___fladd+1)^(0+1280),c
 18061   01377C  5E26               	subwf	??___fladd^(0+1280),f,c
 18062   01377E  0E00               	movlw	0
 18063   013780  5A27               	subwfb	(??___fladd+1)^(0+1280),f,c
 18064   013782  BE27               	btfsc	(??___fladd+1)^(0+1280),7,c
 18065   013784  EFCD  F09B         	goto	u4811
 18066   013788  5027               	movf	(??___fladd+1)^(0+1280),w,c
 18067   01378A  E109               	bnz	u4810
 18068   01378C  0E1A               	movlw	26
 18069   01378E  5C26               	subwf	??___fladd^(0+1280),w,c
 18070   013790  A0D8               	btfss	status,0,c
 18071   013792  EFCD  F09B         	goto	u4811
 18072   013796  EFCF  F09B         	goto	u4810
 18073   01379A                     u4811:
 18074   01379A  EF06  F09C         	goto	l1914
 18075   01379E                     u4810:
 18076   01379E  501E               	movf	___fladd@b^(0+1280),w,c
 18077   0137A0  101F               	iorwf	(___fladd@b+1)^(0+1280),w,c
 18078   0137A2  1020               	iorwf	(___fladd@b+2)^(0+1280),w,c
 18079   0137A4  1021               	iorwf	(___fladd@b+3)^(0+1280),w,c
 18080   0137A6  A4D8               	btfss	status,2,c
 18081   0137A8  EFD8  F09B         	goto	u4821
 18082   0137AC  EFDB  F09B         	goto	u4820
 18083   0137B0                     u4821:
 18084   0137B0  0E01               	movlw	1
 18085   0137B2  EFDC  F09B         	goto	u4830
 18086   0137B6                     u4820:
 18087   0137B6  0E00               	movlw	0
 18088   0137B8                     u4830:
 18089   0137B8  6E2D               	movwf	___fladd@grs^(0+1280),c
 18090   0137BA  0E00               	movlw	0
 18091   0137BC  6E1E               	movwf	___fladd@b^(0+1280),c
 18092   0137BE  0E00               	movlw	0
 18093   0137C0  6E1F               	movwf	(___fladd@b+1)^(0+1280),c
 18094   0137C2  0E00               	movlw	0
 18095   0137C4  6E20               	movwf	(___fladd@b+2)^(0+1280),c
 18096   0137C6  0E00               	movlw	0
 18097   0137C8  6E21               	movwf	(___fladd@b+3)^(0+1280),c
 18098   0137CA  C52B  F52C         	movff	___fladd@aexp,___fladd@bexp
 18099   0137CE  EF0F  F09C         	goto	l1913
 18100   0137D2                     l1915:
 18101   0137D2  A02D               	btfss	___fladd@grs^(0+1280),0,c
 18102   0137D4  EFEE  F09B         	goto	u4841
 18103   0137D8  EFF0  F09B         	goto	u4840
 18104   0137DC                     u4841:
 18105   0137DC  EFF6  F09B         	goto	l7625
 18106   0137E0                     u4840:
 18107   0137E0  90D8               	bcf	status,0,c
 18108   0137E2  302D               	rrcf	___fladd@grs^(0+1280),w,c
 18109   0137E4  0901               	iorlw	1
 18110   0137E6  6E2D               	movwf	___fladd@grs^(0+1280),c
 18111   0137E8  EFF8  F09B         	goto	l7627
 18112   0137EC                     l7625:
 18113   0137EC  90D8               	bcf	status,0,c
 18114   0137EE  322D               	rrcf	___fladd@grs^(0+1280),f,c
 18115   0137F0                     l7627:
 18116   0137F0  A01E               	btfss	___fladd@b^(0+1280),0,c
 18117   0137F2  EFFD  F09B         	goto	u4851
 18118   0137F6  EFFF  F09B         	goto	u4850
 18119   0137FA                     u4851:
 18120   0137FA  EF00  F09C         	goto	l7631
 18121   0137FE                     u4850:
 18122   0137FE  8E2D               	bsf	___fladd@grs^(0+1280),7,c
 18123   013800                     l7631:
 18124   013800  3421               	rlcf	(___fladd@b+3)^(0+1280),w,c
 18125   013802  3221               	rrcf	(___fladd@b+3)^(0+1280),f,c
 18126   013804  3220               	rrcf	(___fladd@b+2)^(0+1280),f,c
 18127   013806  321F               	rrcf	(___fladd@b+1)^(0+1280),f,c
 18128   013808  321E               	rrcf	___fladd@b^(0+1280),f,c
 18129   01380A  2A2C               	incf	___fladd@bexp^(0+1280),f,c
 18130   01380C                     l1914:
 18131   01380C  502B               	movf	___fladd@aexp^(0+1280),w,c
 18132   01380E  5C2C               	subwf	___fladd@bexp^(0+1280),w,c
 18133   013810  A0D8               	btfss	status,0,c
 18134   013812  EF0D  F09C         	goto	u4861
 18135   013816  EF0F  F09C         	goto	u4860
 18136   01381A                     u4861:
 18137   01381A  EFE9  F09B         	goto	l1915
 18138   01381E                     u4860:
 18139   01381E                     l1913:
 18140   01381E  BC2A               	btfsc	___fladd@signs^(0+1280),6,c
 18141   013820  EF14  F09C         	goto	u4871
 18142   013824  EF16  F09C         	goto	u4870
 18143   013828                     u4871:
 18144   013828  EF56  F09C         	goto	l7659
 18145   01382C                     u4870:
 18146   01382C  502C               	movf	___fladd@bexp^(0+1280),w,c
 18147   01382E  A4D8               	btfss	status,2,c
 18148   013830  EF1C  F09C         	goto	u4881
 18149   013834  EF1E  F09C         	goto	u4880
 18150   013838                     u4881:
 18151   013838  EF28  F09C         	goto	l7641
 18152   01383C                     u4880:
 18153   01383C  0E00               	movlw	0
 18154   01383E  6E1E               	movwf	?___fladd^(0+1280),c
 18155   013840  0E00               	movlw	0
 18156   013842  6E1F               	movwf	(?___fladd+1)^(0+1280),c
 18157   013844  0E00               	movlw	0
 18158   013846  6E20               	movwf	(?___fladd+2)^(0+1280),c
 18159   013848  0E00               	movlw	0
 18160   01384A  6E21               	movwf	(?___fladd+3)^(0+1280),c
 18161   01384C  EF75  F09D         	goto	l1922
 18162   013850                     l7641:
 18163   013850  5022               	movf	___fladd@a^(0+1280),w,c
 18164   013852  261E               	addwf	___fladd@b^(0+1280),f,c
 18165   013854  5023               	movf	(___fladd@a+1)^(0+1280),w,c
 18166   013856  221F               	addwfc	(___fladd@b+1)^(0+1280),f,c
 18167   013858  5024               	movf	(___fladd@a+2)^(0+1280),w,c
 18168   01385A  2220               	addwfc	(___fladd@b+2)^(0+1280),f,c
 18169   01385C  5025               	movf	(___fladd@a+3)^(0+1280),w,c
 18170   01385E  2221               	addwfc	(___fladd@b+3)^(0+1280),f,c
 18171   013860  A021               	btfss	(___fladd@b+3)^(0+1280),0,c
 18172   013862  EF35  F09C         	goto	u4891
 18173   013866  EF37  F09C         	goto	u4890
 18174   01386A                     u4891:
 18175   01386A  EFE3  F09C         	goto	l1927
 18176   01386E                     u4890:
 18177   01386E  A02D               	btfss	___fladd@grs^(0+1280),0,c
 18178   013870  EF3C  F09C         	goto	u4901
 18179   013874  EF3E  F09C         	goto	u4900
 18180   013878                     u4901:
 18181   013878  EF44  F09C         	goto	l7649
 18182   01387C                     u4900:
 18183   01387C  90D8               	bcf	status,0,c
 18184   01387E  302D               	rrcf	___fladd@grs^(0+1280),w,c
 18185   013880  0901               	iorlw	1
 18186   013882  6E2D               	movwf	___fladd@grs^(0+1280),c
 18187   013884  EF46  F09C         	goto	l7651
 18188   013888                     l7649:
 18189   013888  90D8               	bcf	status,0,c
 18190   01388A  322D               	rrcf	___fladd@grs^(0+1280),f,c
 18191   01388C                     l7651:
 18192   01388C  A01E               	btfss	___fladd@b^(0+1280),0,c
 18193   01388E  EF4B  F09C         	goto	u4911
 18194   013892  EF4D  F09C         	goto	u4910
 18195   013896                     u4911:
 18196   013896  EF4E  F09C         	goto	l7655
 18197   01389A                     u4910:
 18198   01389A  8E2D               	bsf	___fladd@grs^(0+1280),7,c
 18199   01389C                     l7655:
 18200   01389C  3421               	rlcf	(___fladd@b+3)^(0+1280),w,c
 18201   01389E  3221               	rrcf	(___fladd@b+3)^(0+1280),f,c
 18202   0138A0  3220               	rrcf	(___fladd@b+2)^(0+1280),f,c
 18203   0138A2  321F               	rrcf	(___fladd@b+1)^(0+1280),f,c
 18204   0138A4  321E               	rrcf	___fladd@b^(0+1280),f,c
 18205   0138A6  2A2C               	incf	___fladd@bexp^(0+1280),f,c
 18206   0138A8  EFE3  F09C         	goto	l1927
 18207   0138AC                     l7659:
 18208   0138AC  5022               	movf	___fladd@a^(0+1280),w,c
 18209   0138AE  5C1E               	subwf	___fladd@b^(0+1280),w,c
 18210   0138B0  5023               	movf	(___fladd@a+1)^(0+1280),w,c
 18211   0138B2  581F               	subwfb	(___fladd@b+1)^(0+1280),w,c
 18212   0138B4  5024               	movf	(___fladd@a+2)^(0+1280),w,c
 18213   0138B6  5820               	subwfb	(___fladd@b+2)^(0+1280),w,c
 18214   0138B8  5021               	movf	(___fladd@b+3)^(0+1280),w,c
 18215   0138BA  0A80               	xorlw	128
 18216   0138BC  6E26               	movwf	??___fladd^(0+1280),c
 18217   0138BE  5025               	movf	(___fladd@a+3)^(0+1280),w,c
 18218   0138C0  0A80               	xorlw	128
 18219   0138C2  5826               	subwfb	??___fladd^(0+1280),w,c
 18220   0138C4  B0D8               	btfsc	status,0,c
 18221   0138C6  EF67  F09C         	goto	u4921
 18222   0138CA  EF69  F09C         	goto	u4920
 18223   0138CE                     u4921:
 18224   0138CE  EF94  F09C         	goto	l7669
 18225   0138D2                     u4920:
 18226   0138D2  501E               	movf	___fladd@b^(0+1280),w,c
 18227   0138D4  5C22               	subwf	___fladd@a^(0+1280),w,c
 18228   0138D6  6E26               	movwf	??___fladd^(0+1280),c
 18229   0138D8  501F               	movf	(___fladd@b+1)^(0+1280),w,c
 18230   0138DA  5823               	subwfb	(___fladd@a+1)^(0+1280),w,c
 18231   0138DC  6E27               	movwf	(??___fladd+1)^(0+1280),c
 18232   0138DE  5020               	movf	(___fladd@b+2)^(0+1280),w,c
 18233   0138E0  5824               	subwfb	(___fladd@a+2)^(0+1280),w,c
 18234   0138E2  6E28               	movwf	(??___fladd+2)^(0+1280),c
 18235   0138E4  5021               	movf	(___fladd@b+3)^(0+1280),w,c
 18236   0138E6  5825               	subwfb	(___fladd@a+3)^(0+1280),w,c
 18237   0138E8  6E29               	movwf	(??___fladd+3)^(0+1280),c
 18238   0138EA  0EFF               	movlw	255
 18239   0138EC  2426               	addwf	??___fladd^(0+1280),w,c
 18240   0138EE  6E1E               	movwf	___fladd@b^(0+1280),c
 18241   0138F0  0EFF               	movlw	255
 18242   0138F2  2027               	addwfc	(??___fladd+1)^(0+1280),w,c
 18243   0138F4  6E1F               	movwf	(___fladd@b+1)^(0+1280),c
 18244   0138F6  0EFF               	movlw	255
 18245   0138F8  2028               	addwfc	(??___fladd+2)^(0+1280),w,c
 18246   0138FA  6E20               	movwf	(___fladd@b+2)^(0+1280),c
 18247   0138FC  0EFF               	movlw	255
 18248   0138FE  2029               	addwfc	(??___fladd+3)^(0+1280),w,c
 18249   013900  6E21               	movwf	(___fladd@b+3)^(0+1280),c
 18250   013902  0E80               	movlw	128
 18251   013904  1A2A               	xorwf	___fladd@signs^(0+1280),f,c
 18252   013906  6C2D               	negf	___fladd@grs^(0+1280),c
 18253   013908  502D               	movf	___fladd@grs^(0+1280),w,c
 18254   01390A  A4D8               	btfss	status,2,c
 18255   01390C  EF8A  F09C         	goto	u4931
 18256   013910  EF8C  F09C         	goto	u4930
 18257   013914                     u4931:
 18258   013914  EF9C  F09C         	goto	l1930
 18259   013918                     u4930:
 18260   013918  0E01               	movlw	1
 18261   01391A  261E               	addwf	___fladd@b^(0+1280),f,c
 18262   01391C  0E00               	movlw	0
 18263   01391E  221F               	addwfc	(___fladd@b+1)^(0+1280),f,c
 18264   013920  2220               	addwfc	(___fladd@b+2)^(0+1280),f,c
 18265   013922  2221               	addwfc	(___fladd@b+3)^(0+1280),f,c
 18266   013924  EF9C  F09C         	goto	l1930
 18267   013928                     l7669:
 18268   013928  5022               	movf	___fladd@a^(0+1280),w,c
 18269   01392A  5E1E               	subwf	___fladd@b^(0+1280),f,c
 18270   01392C  5023               	movf	(___fladd@a+1)^(0+1280),w,c
 18271   01392E  5A1F               	subwfb	(___fladd@b+1)^(0+1280),f,c
 18272   013930  5024               	movf	(___fladd@a+2)^(0+1280),w,c
 18273   013932  5A20               	subwfb	(___fladd@b+2)^(0+1280),f,c
 18274   013934  5025               	movf	(___fladd@a+3)^(0+1280),w,c
 18275   013936  5A21               	subwfb	(___fladd@b+3)^(0+1280),f,c
 18276   013938                     l1930:
 18277   013938  501E               	movf	___fladd@b^(0+1280),w,c
 18278   01393A  101F               	iorwf	(___fladd@b+1)^(0+1280),w,c
 18279   01393C  1020               	iorwf	(___fladd@b+2)^(0+1280),w,c
 18280   01393E  1021               	iorwf	(___fladd@b+3)^(0+1280),w,c
 18281   013940  A4D8               	btfss	status,2,c
 18282   013942  EFA5  F09C         	goto	u4941
 18283   013946  EFA7  F09C         	goto	u4940
 18284   01394A                     u4941:
 18285   01394A  EFDC  F09C         	goto	l7693
 18286   01394E                     u4940:
 18287   01394E  502D               	movf	___fladd@grs^(0+1280),w,c
 18288   013950  A4D8               	btfss	status,2,c
 18289   013952  EFAD  F09C         	goto	u4951
 18290   013956  EFAF  F09C         	goto	u4950
 18291   01395A                     u4951:
 18292   01395A  EFDC  F09C         	goto	l7693
 18293   01395E                     u4950:
 18294   01395E  0E00               	movlw	0
 18295   013960  6E1E               	movwf	?___fladd^(0+1280),c
 18296   013962  0E00               	movlw	0
 18297   013964  6E1F               	movwf	(?___fladd+1)^(0+1280),c
 18298   013966  0E00               	movlw	0
 18299   013968  6E20               	movwf	(?___fladd+2)^(0+1280),c
 18300   01396A  0E00               	movlw	0
 18301   01396C  6E21               	movwf	(?___fladd+3)^(0+1280),c
 18302   01396E  EF75  F09D         	goto	l1922
 18303   013972                     l7677:
 18304   013972  90D8               	bcf	status,0,c
 18305   013974  361E               	rlcf	___fladd@b^(0+1280),f,c
 18306   013976  361F               	rlcf	(___fladd@b+1)^(0+1280),f,c
 18307   013978  3620               	rlcf	(___fladd@b+2)^(0+1280),f,c
 18308   01397A  3621               	rlcf	(___fladd@b+3)^(0+1280),f,c
 18309   01397C  AE2D               	btfss	___fladd@grs^(0+1280),7,c
 18310   01397E  EFC3  F09C         	goto	u4961
 18311   013982  EFC5  F09C         	goto	u4960
 18312   013986                     u4961:
 18313   013986  EFC6  F09C         	goto	l7683
 18314   01398A                     u4960:
 18315   01398A  801E               	bsf	___fladd@b^(0+1280),0,c
 18316   01398C                     l7683:
 18317   01398C  A02D               	btfss	___fladd@grs^(0+1280),0,c
 18318   01398E  EFCB  F09C         	goto	u4971
 18319   013992  EFCD  F09C         	goto	u4970
 18320   013996                     u4971:
 18321   013996  EFD1  F09C         	goto	l7687
 18322   01399A                     u4970:
 18323   01399A  80D8               	bsf	status,0,c
 18324   01399C  362D               	rlcf	___fladd@grs^(0+1280),f,c
 18325   01399E  EFD3  F09C         	goto	l7689
 18326   0139A2                     l7687:
 18327   0139A2  90D8               	bcf	status,0,c
 18328   0139A4  362D               	rlcf	___fladd@grs^(0+1280),f,c
 18329   0139A6                     l7689:
 18330   0139A6  502C               	movf	___fladd@bexp^(0+1280),w,c
 18331   0139A8  B4D8               	btfsc	status,2,c
 18332   0139AA  EFD9  F09C         	goto	u4981
 18333   0139AE  EFDB  F09C         	goto	u4980
 18334   0139B2                     u4981:
 18335   0139B2  EFDC  F09C         	goto	l7693
 18336   0139B6                     u4980:
 18337   0139B6  062C               	decf	___fladd@bexp^(0+1280),f,c
 18338   0139B8                     l7693:
 18339   0139B8  AE20               	btfss	(___fladd@b+2)^(0+1280),7,c
 18340   0139BA  EFE1  F09C         	goto	u4991
 18341   0139BE  EFE3  F09C         	goto	u4990
 18342   0139C2                     u4991:
 18343   0139C2  EFB9  F09C         	goto	l7677
 18344   0139C6                     u4990:
 18345   0139C6                     l1927:
 18346   0139C6  6A2B               	clrf	___fladd@aexp^(0+1280),c
 18347   0139C8  AE2D               	btfss	___fladd@grs^(0+1280),7,c
 18348   0139CA  EFE9  F09C         	goto	u5001
 18349   0139CE  EFEB  F09C         	goto	u5000
 18350   0139D2                     u5001:
 18351   0139D2  EF03  F09D         	goto	l1939
 18352   0139D6                     u5000:
 18353   0139D6  C52D  F526         	movff	___fladd@grs,??___fladd
 18354   0139DA  0E7F               	movlw	127
 18355   0139DC  1626               	andwf	??___fladd^(0+1280),f,c
 18356   0139DE  B4D8               	btfsc	status,2,c
 18357   0139E0  EFF4  F09C         	goto	u5011
 18358   0139E4  EFF6  F09C         	goto	u5010
 18359   0139E8                     u5011:
 18360   0139E8  EFFA  F09C         	goto	l1940
 18361   0139EC                     u5010:
 18362   0139EC                     l7697:
 18363   0139EC  0E01               	movlw	1
 18364   0139EE  6E2B               	movwf	___fladd@aexp^(0+1280),c
 18365   0139F0  EF03  F09D         	goto	l1939
 18366   0139F4                     l1940:
 18367   0139F4  A01E               	btfss	___fladd@b^(0+1280),0,c
 18368   0139F6  EFFF  F09C         	goto	u5021
 18369   0139FA  EF01  F09D         	goto	u5020
 18370   0139FE                     u5021:
 18371   0139FE  EF03  F09D         	goto	l1939
 18372   013A02                     u5020:
 18373   013A02  EFF6  F09C         	goto	l7697
 18374   013A06                     l1939:
 18375   013A06  502B               	movf	___fladd@aexp^(0+1280),w,c
 18376   013A08  B4D8               	btfsc	status,2,c
 18377   013A0A  EF09  F09D         	goto	u5031
 18378   013A0E  EF0B  F09D         	goto	u5030
 18379   013A12                     u5031:
 18380   013A12  EF36  F09D         	goto	l7709
 18381   013A16                     u5030:
 18382   013A16  0E01               	movlw	1
 18383   013A18  261E               	addwf	___fladd@b^(0+1280),f,c
 18384   013A1A  0E00               	movlw	0
 18385   013A1C  221F               	addwfc	(___fladd@b+1)^(0+1280),f,c
 18386   013A1E  2220               	addwfc	(___fladd@b+2)^(0+1280),f,c
 18387   013A20  2221               	addwfc	(___fladd@b+3)^(0+1280),f,c
 18388   013A22  A021               	btfss	(___fladd@b+3)^(0+1280),0,c
 18389   013A24  EF16  F09D         	goto	u5041
 18390   013A28  EF18  F09D         	goto	u5040
 18391   013A2C                     u5041:
 18392   013A2C  EF36  F09D         	goto	l7709
 18393   013A30                     u5040:
 18394   013A30  C51E  F526         	movff	___fladd@b,??___fladd
 18395   013A34  C51F  F527         	movff	___fladd@b+1,??___fladd+1
 18396   013A38  C520  F528         	movff	___fladd@b+2,??___fladd+2
 18397   013A3C  C521  F529         	movff	___fladd@b+3,??___fladd+3
 18398   013A40  3429               	rlcf	(??___fladd+3)^(0+1280),w,c
 18399   013A42  3229               	rrcf	(??___fladd+3)^(0+1280),f,c
 18400   013A44  3228               	rrcf	(??___fladd+2)^(0+1280),f,c
 18401   013A46  3227               	rrcf	(??___fladd+1)^(0+1280),f,c
 18402   013A48  3226               	rrcf	??___fladd^(0+1280),f,c
 18403   013A4A  C526  F51E         	movff	??___fladd,___fladd@b
 18404   013A4E  C527  F51F         	movff	??___fladd+1,___fladd@b+1
 18405   013A52  C528  F520         	movff	??___fladd+2,___fladd@b+2
 18406   013A56  C529  F521         	movff	??___fladd+3,___fladd@b+3
 18407   013A5A  282C               	incf	___fladd@bexp^(0+1280),w,c
 18408   013A5C  B4D8               	btfsc	status,2,c
 18409   013A5E  EF33  F09D         	goto	u5051
 18410   013A62  EF35  F09D         	goto	u5050
 18411   013A66                     u5051:
 18412   013A66  EF36  F09D         	goto	l7709
 18413   013A6A                     u5050:
 18414   013A6A  2A2C               	incf	___fladd@bexp^(0+1280),f,c
 18415   013A6C                     l7709:
 18416   013A6C  282C               	incf	___fladd@bexp^(0+1280),w,c
 18417   013A6E  B4D8               	btfsc	status,2,c
 18418   013A70  EF3C  F09D         	goto	u5061
 18419   013A74  EF3E  F09D         	goto	u5060
 18420   013A78                     u5061:
 18421   013A78  EF46  F09D         	goto	l7713
 18422   013A7C                     u5060:
 18423   013A7C  502C               	movf	___fladd@bexp^(0+1280),w,c
 18424   013A7E  A4D8               	btfss	status,2,c
 18425   013A80  EF44  F09D         	goto	u5071
 18426   013A84  EF46  F09D         	goto	u5070
 18427   013A88                     u5071:
 18428   013A88  EF57  F09D         	goto	l1946
 18429   013A8C                     u5070:
 18430   013A8C                     l7713:
 18431   013A8C  0E00               	movlw	0
 18432   013A8E  6E1E               	movwf	___fladd@b^(0+1280),c
 18433   013A90  0E00               	movlw	0
 18434   013A92  6E1F               	movwf	(___fladd@b+1)^(0+1280),c
 18435   013A94  0E00               	movlw	0
 18436   013A96  6E20               	movwf	(___fladd@b+2)^(0+1280),c
 18437   013A98  0E00               	movlw	0
 18438   013A9A  6E21               	movwf	(___fladd@b+3)^(0+1280),c
 18439   013A9C  502C               	movf	___fladd@bexp^(0+1280),w,c
 18440   013A9E  A4D8               	btfss	status,2,c
 18441   013AA0  EF54  F09D         	goto	u5081
 18442   013AA4  EF56  F09D         	goto	u5080
 18443   013AA8                     u5081:
 18444   013AA8  EF57  F09D         	goto	l1946
 18445   013AAC                     u5080:
 18446   013AAC  6A2A               	clrf	___fladd@signs^(0+1280),c
 18447   013AAE                     l1946:
 18448   013AAE  A02C               	btfss	___fladd@bexp^(0+1280),0,c
 18449   013AB0  EF5C  F09D         	goto	u5091
 18450   013AB4  EF5E  F09D         	goto	u5090
 18451   013AB8                     u5091:
 18452   013AB8  EF61  F09D         	goto	l7719
 18453   013ABC                     u5090:
 18454   013ABC  8E20               	bsf	(___fladd@b+2)^(0+1280),7,c
 18455   013ABE  EF62  F09D         	goto	l7721
 18456   013AC2                     l7719:
 18457   013AC2  9E20               	bcf	(___fladd@b+2)^(0+1280),7,c
 18458   013AC4                     l7721:
 18459   013AC4  90D8               	bcf	status,0,c
 18460   013AC6  302C               	rrcf	___fladd@bexp^(0+1280),w,c
 18461   013AC8  6E21               	movwf	(___fladd@b+3)^(0+1280),c
 18462   013ACA  AE2A               	btfss	___fladd@signs^(0+1280),7,c
 18463   013ACC  EF6A  F09D         	goto	u5101
 18464   013AD0  EF6C  F09D         	goto	u5100
 18465   013AD4                     u5101:
 18466   013AD4  EF6D  F09D         	goto	l7727
 18467   013AD8                     u5100:
 18468   013AD8  8E21               	bsf	(___fladd@b+3)^(0+1280),7,c
 18469   013ADA                     l7727:
 18470   013ADA  C51E  F51E         	movff	___fladd@b,?___fladd
 18471   013ADE  C51F  F51F         	movff	___fladd@b+1,?___fladd+1
 18472   013AE2  C520  F520         	movff	___fladd@b+2,?___fladd+2
 18473   013AE6  C521  F521         	movff	___fladd@b+3,?___fladd+3
 18474   013AEA                     l1922:
 18475   013AEA  0012               	return		;funcret
 18476   013AEC                     __end_of___fladd:
 18477                           	callstack 0
 18478                           
 18479 ;; *************** function ___flneg *****************
 18480 ;; Defined at:
 18481 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flneg.c"
 18482 ;; Parameters:    Size  Location     Type
 18483 ;;  f1              4    0[COMRAM] unsigned char 
 18484 ;; Auto vars:     Size  Location     Type
 18485 ;;		None
 18486 ;; Return value:  Size  Location     Type
 18487 ;;                  4    0[COMRAM] unsigned char 
 18488 ;; Registers used:
 18489 ;;		wreg, status,2, status,0
 18490 ;; Tracked objects:
 18491 ;;		On entry : 0/0
 18492 ;;		On exit  : 0/0
 18493 ;;		Unchanged: 0/0
 18494 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18498 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18499 ;;Total ram usage:        4 bytes
 18500 ;; Hardware stack levels used: 1
 18501 ;; This function calls:
 18502 ;;		Nothing
 18503 ;; This function is called by:
 18504 ;;		_MPU6050_DMP_GetData
 18505 ;;		_MPU6050_ReadAll
 18506 ;;		_main
 18507 ;;		_atan2f
 18508 ;;		_atanf
 18509 ;;		_cosf
 18510 ;;		___rem_pio2f
 18511 ;;		_efgtoa
 18512 ;;		_sinf
 18513 ;;		_AnalyzeMovementPattern
 18514 ;;		_CalculateConfidence
 18515 ;; This function uses a non-reentrant model
 18516 ;;
 18517                           
 18518                           	psect	text42
 18519   016CAE                     __ptext42:
 18520                           	callstack 0
 18521   016CAE                     ___flneg:
 18522                           	callstack 122
 18523   016CAE  5001               	movf	___flneg@f1^(0+1280),w,c
 18524   016CB0  1002               	iorwf	(___flneg@f1+1)^(0+1280),w,c
 18525   016CB2  1003               	iorwf	(___flneg@f1+2)^(0+1280),w,c
 18526   016CB4  1004               	iorwf	(___flneg@f1+3)^(0+1280),w,c
 18527   016CB6  B4D8               	btfsc	status,2,c
 18528   016CB8  EF60  F0B6         	goto	u5811
 18529   016CBC  EF62  F0B6         	goto	u5810
 18530   016CC0                     u5811:
 18531   016CC0  EF6A  F0B6         	goto	l8307
 18532   016CC4                     u5810:
 18533   016CC4  0E00               	movlw	0
 18534   016CC6  1A01               	xorwf	___flneg@f1^(0+1280),f,c
 18535   016CC8  0E00               	movlw	0
 18536   016CCA  1A02               	xorwf	(___flneg@f1+1)^(0+1280),f,c
 18537   016CCC  0E00               	movlw	0
 18538   016CCE  1A03               	xorwf	(___flneg@f1+2)^(0+1280),f,c
 18539   016CD0  0E80               	movlw	128
 18540   016CD2  1A04               	xorwf	(___flneg@f1+3)^(0+1280),f,c
 18541   016CD4                     l8307:
 18542   016CD4  C501  F501         	movff	___flneg@f1,?___flneg
 18543   016CD8  C502  F502         	movff	___flneg@f1+1,?___flneg+1
 18544   016CDC  C503  F503         	movff	___flneg@f1+2,?___flneg+2
 18545   016CE0  C504  F504         	movff	___flneg@f1+3,?___flneg+3
 18546   016CE4  0012               	return		;funcret
 18547   016CE6                     __end_of___flneg:
 18548                           	callstack 0
 18549                           
 18550 ;; *************** function ___flmul *****************
 18551 ;; Defined at:
 18552 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
 18553 ;; Parameters:    Size  Location     Type
 18554 ;;  b               4    4[COMRAM] unsigned char 
 18555 ;;  a               4    8[COMRAM] unsigned char 
 18556 ;; Auto vars:     Size  Location     Type
 18557 ;;  prod            4   23[COMRAM] struct .
 18558 ;;  grs             4   17[COMRAM] unsigned long 
 18559 ;;  temp            2   27[COMRAM] struct .
 18560 ;;  bexp            1   22[COMRAM] unsigned char 
 18561 ;;  aexp            1   21[COMRAM] unsigned char 
 18562 ;;  sign            1   16[COMRAM] unsigned char 
 18563 ;; Return value:  Size  Location     Type
 18564 ;;                  4    4[COMRAM] unsigned char 
 18565 ;; Registers used:
 18566 ;;		wreg, status,2, status,0, prodl, prodh
 18567 ;; Tracked objects:
 18568 ;;		On entry : 0/0
 18569 ;;		On exit  : 0/0
 18570 ;;		Unchanged: 0/0
 18571 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18572 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18573 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18574 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18575 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18576 ;;Total ram usage:       25 bytes
 18577 ;; Hardware stack levels used: 1
 18578 ;; This function calls:
 18579 ;;		Nothing
 18580 ;; This function is called by:
 18581 ;;		_MPU6050_DMP_GetData
 18582 ;;		_MPU6050_ReadAll
 18583 ;;		_atanf
 18584 ;;		___cosdf
 18585 ;;		___rem_pio2f
 18586 ;;		___sindf
 18587 ;;		_efgtoa
 18588 ;; This function uses a non-reentrant model
 18589 ;;
 18590                           
 18591                           	psect	text43
 18592   013AEC                     __ptext43:
 18593                           	callstack 0
 18594   013AEC                     ___flmul:
 18595                           	callstack 122
 18596   013AEC  5008               	movf	(___flmul@b+3)^(0+1280),w,c
 18597   013AEE  0B80               	andlw	128
 18598   013AF0  6E11               	movwf	___flmul@sign^(0+1280),c
 18599   013AF2  5008               	movf	(___flmul@b+3)^(0+1280),w,c
 18600   013AF4  2408               	addwf	(___flmul@b+3)^(0+1280),w,c
 18601   013AF6  6E17               	movwf	___flmul@bexp^(0+1280),c
 18602   013AF8  AE07               	btfss	(___flmul@b+2)^(0+1280),7,c
 18603   013AFA  EF81  F09D         	goto	u5541
 18604   013AFE  EF83  F09D         	goto	u5540
 18605   013B02                     u5541:
 18606   013B02  EF84  F09D         	goto	l8137
 18607   013B06                     u5540:
 18608   013B06  8017               	bsf	___flmul@bexp^(0+1280),0,c
 18609   013B08                     l8137:
 18610   013B08  5017               	movf	___flmul@bexp^(0+1280),w,c
 18611   013B0A  B4D8               	btfsc	status,2,c
 18612   013B0C  EF8A  F09D         	goto	u5551
 18613   013B10  EF8C  F09D         	goto	u5550
 18614   013B14                     u5551:
 18615   013B14  EF9F  F09D         	goto	l8145
 18616   013B18                     u5550:
 18617   013B18  2817               	incf	___flmul@bexp^(0+1280),w,c
 18618   013B1A  A4D8               	btfss	status,2,c
 18619   013B1C  EF92  F09D         	goto	u5561
 18620   013B20  EF94  F09D         	goto	u5560
 18621   013B24                     u5561:
 18622   013B24  EF9C  F09D         	goto	l8143
 18623   013B28                     u5560:
 18624   013B28  0E00               	movlw	0
 18625   013B2A  6E05               	movwf	___flmul@b^(0+1280),c
 18626   013B2C  0E00               	movlw	0
 18627   013B2E  6E06               	movwf	(___flmul@b+1)^(0+1280),c
 18628   013B30  0E00               	movlw	0
 18629   013B32  6E07               	movwf	(___flmul@b+2)^(0+1280),c
 18630   013B34  0E00               	movlw	0
 18631   013B36  6E08               	movwf	(___flmul@b+3)^(0+1280),c
 18632   013B38                     l8143:
 18633   013B38  8E07               	bsf	(___flmul@b+2)^(0+1280),7,c
 18634   013B3A  EFA7  F09D         	goto	l8147
 18635   013B3E                     l8145:
 18636   013B3E  0E00               	movlw	0
 18637   013B40  6E05               	movwf	___flmul@b^(0+1280),c
 18638   013B42  0E00               	movlw	0
 18639   013B44  6E06               	movwf	(___flmul@b+1)^(0+1280),c
 18640   013B46  0E00               	movlw	0
 18641   013B48  6E07               	movwf	(___flmul@b+2)^(0+1280),c
 18642   013B4A  0E00               	movlw	0
 18643   013B4C  6E08               	movwf	(___flmul@b+3)^(0+1280),c
 18644   013B4E                     l8147:
 18645   013B4E  500C               	movf	(___flmul@a+3)^(0+1280),w,c
 18646   013B50  0B80               	andlw	128
 18647   013B52  1A11               	xorwf	___flmul@sign^(0+1280),f,c
 18648   013B54  500C               	movf	(___flmul@a+3)^(0+1280),w,c
 18649   013B56  240C               	addwf	(___flmul@a+3)^(0+1280),w,c
 18650   013B58  6E16               	movwf	___flmul@aexp^(0+1280),c
 18651   013B5A  AE0B               	btfss	(___flmul@a+2)^(0+1280),7,c
 18652   013B5C  EFB2  F09D         	goto	u5571
 18653   013B60  EFB4  F09D         	goto	u5570
 18654   013B64                     u5571:
 18655   013B64  EFB5  F09D         	goto	l8155
 18656   013B68                     u5570:
 18657   013B68  8016               	bsf	___flmul@aexp^(0+1280),0,c
 18658   013B6A                     l8155:
 18659   013B6A  5016               	movf	___flmul@aexp^(0+1280),w,c
 18660   013B6C  B4D8               	btfsc	status,2,c
 18661   013B6E  EFBB  F09D         	goto	u5581
 18662   013B72  EFBD  F09D         	goto	u5580
 18663   013B76                     u5581:
 18664   013B76  EFD0  F09D         	goto	l8163
 18665   013B7A                     u5580:
 18666   013B7A  2816               	incf	___flmul@aexp^(0+1280),w,c
 18667   013B7C  A4D8               	btfss	status,2,c
 18668   013B7E  EFC3  F09D         	goto	u5591
 18669   013B82  EFC5  F09D         	goto	u5590
 18670   013B86                     u5591:
 18671   013B86  EFCD  F09D         	goto	l8161
 18672   013B8A                     u5590:
 18673   013B8A  0E00               	movlw	0
 18674   013B8C  6E09               	movwf	___flmul@a^(0+1280),c
 18675   013B8E  0E00               	movlw	0
 18676   013B90  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 18677   013B92  0E00               	movlw	0
 18678   013B94  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 18679   013B96  0E00               	movlw	0
 18680   013B98  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 18681   013B9A                     l8161:
 18682   013B9A  8E0B               	bsf	(___flmul@a+2)^(0+1280),7,c
 18683   013B9C  EFD8  F09D         	goto	l1999
 18684   013BA0                     l8163:
 18685   013BA0  0E00               	movlw	0
 18686   013BA2  6E09               	movwf	___flmul@a^(0+1280),c
 18687   013BA4  0E00               	movlw	0
 18688   013BA6  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 18689   013BA8  0E00               	movlw	0
 18690   013BAA  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 18691   013BAC  0E00               	movlw	0
 18692   013BAE  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 18693   013BB0                     l1999:
 18694   013BB0  5016               	movf	___flmul@aexp^(0+1280),w,c
 18695   013BB2  B4D8               	btfsc	status,2,c
 18696   013BB4  EFDE  F09D         	goto	u5601
 18697   013BB8  EFE0  F09D         	goto	u5600
 18698   013BBC                     u5601:
 18699   013BBC  EFE8  F09D         	goto	l8167
 18700   013BC0                     u5600:
 18701   013BC0  5017               	movf	___flmul@bexp^(0+1280),w,c
 18702   013BC2  A4D8               	btfss	status,2,c
 18703   013BC4  EFE6  F09D         	goto	u5611
 18704   013BC8  EFE8  F09D         	goto	u5610
 18705   013BCC                     u5611:
 18706   013BCC  EFF2  F09D         	goto	l8171
 18707   013BD0                     u5610:
 18708   013BD0                     l8167:
 18709   013BD0  0E00               	movlw	0
 18710   013BD2  6E05               	movwf	?___flmul^(0+1280),c
 18711   013BD4  0E00               	movlw	0
 18712   013BD6  6E06               	movwf	(?___flmul+1)^(0+1280),c
 18713   013BD8  0E00               	movlw	0
 18714   013BDA  6E07               	movwf	(?___flmul+2)^(0+1280),c
 18715   013BDC  0E00               	movlw	0
 18716   013BDE  6E08               	movwf	(?___flmul+3)^(0+1280),c
 18717   013BE0  EF88  F09F         	goto	l2003
 18718   013BE4                     l8171:
 18719   013BE4  500B               	movf	(___flmul@a+2)^(0+1280),w,c
 18720   013BE6  0205               	mulwf	___flmul@b^(0+1280),c
 18721   013BE8  C4F3 F51C          	movff	prodl,___flmul@temp
 18722   013BEC  C4F4 F51D          	movff	prodh,___flmul@temp+1
 18723   013BF0  501C               	movf	___flmul@temp^(0+1280),w,c
 18724   013BF2  6E12               	movwf	___flmul@grs^(0+1280),c
 18725   013BF4  6A13               	clrf	(___flmul@grs+1)^(0+1280),c
 18726   013BF6  6A14               	clrf	(___flmul@grs+2)^(0+1280),c
 18727   013BF8  6A15               	clrf	(___flmul@grs+3)^(0+1280),c
 18728   013BFA  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 18729   013BFC  6E18               	movwf	___flmul@prod^(0+1280),c
 18730   013BFE  6A19               	clrf	(___flmul@prod+1)^(0+1280),c
 18731   013C00  6A1A               	clrf	(___flmul@prod+2)^(0+1280),c
 18732   013C02  6A1B               	clrf	(___flmul@prod+3)^(0+1280),c
 18733   013C04  500A               	movf	(___flmul@a+1)^(0+1280),w,c
 18734   013C06  0206               	mulwf	(___flmul@b+1)^(0+1280),c
 18735   013C08  C4F3 F51C          	movff	prodl,___flmul@temp
 18736   013C0C  C4F4 F51D          	movff	prodh,___flmul@temp+1
 18737   013C10  501C               	movf	___flmul@temp^(0+1280),w,c
 18738   013C12  2612               	addwf	___flmul@grs^(0+1280),f,c
 18739   013C14  0E00               	movlw	0
 18740   013C16  2213               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 18741   013C18  2214               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 18742   013C1A  2215               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 18743   013C1C  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 18744   013C1E  2618               	addwf	___flmul@prod^(0+1280),f,c
 18745   013C20  0E00               	movlw	0
 18746   013C22  2219               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 18747   013C24  221A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 18748   013C26  221B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 18749   013C28  5009               	movf	___flmul@a^(0+1280),w,c
 18750   013C2A  0207               	mulwf	(___flmul@b+2)^(0+1280),c
 18751   013C2C  C4F3 F51C          	movff	prodl,___flmul@temp
 18752   013C30  C4F4 F51D          	movff	prodh,___flmul@temp+1
 18753   013C34  501C               	movf	___flmul@temp^(0+1280),w,c
 18754   013C36  2612               	addwf	___flmul@grs^(0+1280),f,c
 18755   013C38  0E00               	movlw	0
 18756   013C3A  2213               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 18757   013C3C  2214               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 18758   013C3E  2215               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 18759   013C40  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 18760   013C42  2618               	addwf	___flmul@prod^(0+1280),f,c
 18761   013C44  0E00               	movlw	0
 18762   013C46  2219               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 18763   013C48  221A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 18764   013C4A  221B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 18765   013C4C  C514  F515         	movff	___flmul@grs+2,___flmul@grs+3
 18766   013C50  C513  F514         	movff	___flmul@grs+1,___flmul@grs+2
 18767   013C54  C512  F513         	movff	___flmul@grs,___flmul@grs+1
 18768   013C58  6A12               	clrf	___flmul@grs^(0+1280),c
 18769   013C5A  5009               	movf	___flmul@a^(0+1280),w,c
 18770   013C5C  0206               	mulwf	(___flmul@b+1)^(0+1280),c
 18771   013C5E  C4F3 F51C          	movff	prodl,___flmul@temp
 18772   013C62  C4F4 F51D          	movff	prodh,___flmul@temp+1
 18773   013C66  501C               	movf	___flmul@temp^(0+1280),w,c
 18774   013C68  2612               	addwf	___flmul@grs^(0+1280),f,c
 18775   013C6A  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 18776   013C6C  2213               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 18777   013C6E  0E00               	movlw	0
 18778   013C70  2214               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 18779   013C72  0E00               	movlw	0
 18780   013C74  2215               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 18781   013C76  500A               	movf	(___flmul@a+1)^(0+1280),w,c
 18782   013C78  0205               	mulwf	___flmul@b^(0+1280),c
 18783   013C7A  C4F3 F51C          	movff	prodl,___flmul@temp
 18784   013C7E  C4F4 F51D          	movff	prodh,___flmul@temp+1
 18785   013C82  501C               	movf	___flmul@temp^(0+1280),w,c
 18786   013C84  2612               	addwf	___flmul@grs^(0+1280),f,c
 18787   013C86  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 18788   013C88  2213               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 18789   013C8A  0E00               	movlw	0
 18790   013C8C  2214               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 18791   013C8E  0E00               	movlw	0
 18792   013C90  2215               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 18793   013C92  C514  F515         	movff	___flmul@grs+2,___flmul@grs+3
 18794   013C96  C513  F514         	movff	___flmul@grs+1,___flmul@grs+2
 18795   013C9A  C512  F513         	movff	___flmul@grs,___flmul@grs+1
 18796   013C9E  6A12               	clrf	___flmul@grs^(0+1280),c
 18797   013CA0  5009               	movf	___flmul@a^(0+1280),w,c
 18798   013CA2  0205               	mulwf	___flmul@b^(0+1280),c
 18799   013CA4  C4F3 F51C          	movff	prodl,___flmul@temp
 18800   013CA8  C4F4 F51D          	movff	prodh,___flmul@temp+1
 18801   013CAC  501C               	movf	___flmul@temp^(0+1280),w,c
 18802   013CAE  2612               	addwf	___flmul@grs^(0+1280),f,c
 18803   013CB0  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 18804   013CB2  2213               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 18805   013CB4  0E00               	movlw	0
 18806   013CB6  2214               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 18807   013CB8  0E00               	movlw	0
 18808   013CBA  2215               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 18809   013CBC  500B               	movf	(___flmul@a+2)^(0+1280),w,c
 18810   013CBE  0206               	mulwf	(___flmul@b+1)^(0+1280),c
 18811   013CC0  C4F3 F51C          	movff	prodl,___flmul@temp
 18812   013CC4  C4F4 F51D          	movff	prodh,___flmul@temp+1
 18813   013CC8  501C               	movf	___flmul@temp^(0+1280),w,c
 18814   013CCA  2618               	addwf	___flmul@prod^(0+1280),f,c
 18815   013CCC  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 18816   013CCE  2219               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 18817   013CD0  0E00               	movlw	0
 18818   013CD2  221A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 18819   013CD4  0E00               	movlw	0
 18820   013CD6  221B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 18821   013CD8  500A               	movf	(___flmul@a+1)^(0+1280),w,c
 18822   013CDA  0207               	mulwf	(___flmul@b+2)^(0+1280),c
 18823   013CDC  C4F3 F51C          	movff	prodl,___flmul@temp
 18824   013CE0  C4F4 F51D          	movff	prodh,___flmul@temp+1
 18825   013CE4  501C               	movf	___flmul@temp^(0+1280),w,c
 18826   013CE6  2618               	addwf	___flmul@prod^(0+1280),f,c
 18827   013CE8  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 18828   013CEA  2219               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 18829   013CEC  0E00               	movlw	0
 18830   013CEE  221A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 18831   013CF0  0E00               	movlw	0
 18832   013CF2  221B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 18833   013CF4  500B               	movf	(___flmul@a+2)^(0+1280),w,c
 18834   013CF6  0207               	mulwf	(___flmul@b+2)^(0+1280),c
 18835   013CF8  C4F3 F51C          	movff	prodl,___flmul@temp
 18836   013CFC  C4F4 F51D          	movff	prodh,___flmul@temp+1
 18837   013D00  501C               	movf	___flmul@temp^(0+1280),w,c
 18838   013D02  6E0D               	movwf	??___flmul^(0+1280),c
 18839   013D04  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 18840   013D06  6E0E               	movwf	(??___flmul+1)^(0+1280),c
 18841   013D08  6A0F               	clrf	(??___flmul+2)^(0+1280),c
 18842   013D0A  6A10               	clrf	(??___flmul+3)^(0+1280),c
 18843   013D0C  C50F  F510         	movff	??___flmul+2,??___flmul+3
 18844   013D10  C50E  F50F         	movff	??___flmul+1,??___flmul+2
 18845   013D14  C50D  F50E         	movff	??___flmul,??___flmul+1
 18846   013D18  6A0D               	clrf	??___flmul^(0+1280),c
 18847   013D1A  500D               	movf	??___flmul^(0+1280),w,c
 18848   013D1C  2618               	addwf	___flmul@prod^(0+1280),f,c
 18849   013D1E  500E               	movf	(??___flmul+1)^(0+1280),w,c
 18850   013D20  2219               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 18851   013D22  500F               	movf	(??___flmul+2)^(0+1280),w,c
 18852   013D24  221A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 18853   013D26  5010               	movf	(??___flmul+3)^(0+1280),w,c
 18854   013D28  221B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 18855   013D2A  C512  F50D         	movff	___flmul@grs,??___flmul
 18856   013D2E  C513  F50E         	movff	___flmul@grs+1,??___flmul+1
 18857   013D32  C514  F50F         	movff	___flmul@grs+2,??___flmul+2
 18858   013D36  C515  F510         	movff	___flmul@grs+3,??___flmul+3
 18859   013D3A  0E19               	movlw	25
 18860   013D3C  EFA5  F09E         	goto	u5620
 18861   013D40                     u5625:
 18862   013D40  90D8               	bcf	status,0,c
 18863   013D42  3210               	rrcf	(??___flmul+3)^(0+1280),f,c
 18864   013D44  320F               	rrcf	(??___flmul+2)^(0+1280),f,c
 18865   013D46  320E               	rrcf	(??___flmul+1)^(0+1280),f,c
 18866   013D48  320D               	rrcf	??___flmul^(0+1280),f,c
 18867   013D4A                     u5620:
 18868   013D4A  2EE8               	decfsz	wreg,f,c
 18869   013D4C  EFA0  F09E         	goto	u5625
 18870   013D50  500D               	movf	??___flmul^(0+1280),w,c
 18871   013D52  2618               	addwf	___flmul@prod^(0+1280),f,c
 18872   013D54  500E               	movf	(??___flmul+1)^(0+1280),w,c
 18873   013D56  2219               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 18874   013D58  500F               	movf	(??___flmul+2)^(0+1280),w,c
 18875   013D5A  221A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 18876   013D5C  5010               	movf	(??___flmul+3)^(0+1280),w,c
 18877   013D5E  221B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 18878   013D60  C514  F515         	movff	___flmul@grs+2,___flmul@grs+3
 18879   013D64  C513  F514         	movff	___flmul@grs+1,___flmul@grs+2
 18880   013D68  C512  F513         	movff	___flmul@grs,___flmul@grs+1
 18881   013D6C  6A12               	clrf	___flmul@grs^(0+1280),c
 18882   013D6E  5016               	movf	___flmul@aexp^(0+1280),w,c
 18883   013D70  C517  F50D         	movff	___flmul@bexp,??___flmul
 18884   013D74  6A0E               	clrf	(??___flmul+1)^(0+1280),c
 18885   013D76  260D               	addwf	??___flmul^(0+1280),f,c
 18886   013D78  0E00               	movlw	0
 18887   013D7A  220E               	addwfc	(??___flmul+1)^(0+1280),f,c
 18888   013D7C  0E82               	movlw	130
 18889   013D7E  240D               	addwf	??___flmul^(0+1280),w,c
 18890   013D80  6E1C               	movwf	___flmul@temp^(0+1280),c
 18891   013D82  0EFF               	movlw	255
 18892   013D84  200E               	addwfc	(??___flmul+1)^(0+1280),w,c
 18893   013D86  6E1D               	movwf	(___flmul@temp+1)^(0+1280),c
 18894   013D88  EFDB  F09E         	goto	l8219
 18895   013D8C                     l8213:
 18896   013D8C  90D8               	bcf	status,0,c
 18897   013D8E  3618               	rlcf	___flmul@prod^(0+1280),f,c
 18898   013D90  3619               	rlcf	(___flmul@prod+1)^(0+1280),f,c
 18899   013D92  361A               	rlcf	(___flmul@prod+2)^(0+1280),f,c
 18900   013D94  361B               	rlcf	(___flmul@prod+3)^(0+1280),f,c
 18901   013D96  AE15               	btfss	(___flmul@grs+3)^(0+1280),7,c
 18902   013D98  EFD0  F09E         	goto	u5631
 18903   013D9C  EFD2  F09E         	goto	u5630
 18904   013DA0                     u5631:
 18905   013DA0  EFD3  F09E         	goto	l2006
 18906   013DA4                     u5630:
 18907   013DA4  8018               	bsf	___flmul@prod^(0+1280),0,c
 18908   013DA6                     l2006:
 18909   013DA6  90D8               	bcf	status,0,c
 18910   013DA8  3612               	rlcf	___flmul@grs^(0+1280),f,c
 18911   013DAA  3613               	rlcf	(___flmul@grs+1)^(0+1280),f,c
 18912   013DAC  3614               	rlcf	(___flmul@grs+2)^(0+1280),f,c
 18913   013DAE  3615               	rlcf	(___flmul@grs+3)^(0+1280),f,c
 18914   013DB0  061C               	decf	___flmul@temp^(0+1280),f,c
 18915   013DB2  A0D8               	btfss	status,0,c
 18916   013DB4  061D               	decf	(___flmul@temp+1)^(0+1280),f,c
 18917   013DB6                     l8219:
 18918   013DB6  AE1A               	btfss	(___flmul@prod+2)^(0+1280),7,c
 18919   013DB8  EFE0  F09E         	goto	u5641
 18920   013DBC  EFE2  F09E         	goto	u5640
 18921   013DC0                     u5641:
 18922   013DC0  EFC6  F09E         	goto	l8213
 18923   013DC4                     u5640:
 18924   013DC4  6A16               	clrf	___flmul@aexp^(0+1280),c
 18925   013DC6  AE15               	btfss	(___flmul@grs+3)^(0+1280),7,c
 18926   013DC8  EFE8  F09E         	goto	u5651
 18927   013DCC  EFEA  F09E         	goto	u5650
 18928   013DD0                     u5651:
 18929   013DD0  EF0E  F09F         	goto	l2008
 18930   013DD4                     u5650:
 18931   013DD4  0EFF               	movlw	255
 18932   013DD6  1412               	andwf	___flmul@grs^(0+1280),w,c
 18933   013DD8  6E0D               	movwf	??___flmul^(0+1280),c
 18934   013DDA  0EFF               	movlw	255
 18935   013DDC  1413               	andwf	(___flmul@grs+1)^(0+1280),w,c
 18936   013DDE  6E0E               	movwf	(??___flmul+1)^(0+1280),c
 18937   013DE0  0EFF               	movlw	255
 18938   013DE2  1414               	andwf	(___flmul@grs+2)^(0+1280),w,c
 18939   013DE4  6E0F               	movwf	(??___flmul+2)^(0+1280),c
 18940   013DE6  0E7F               	movlw	127
 18941   013DE8  1415               	andwf	(___flmul@grs+3)^(0+1280),w,c
 18942   013DEA  6E10               	movwf	(??___flmul+3)^(0+1280),c
 18943   013DEC  500D               	movf	??___flmul^(0+1280),w,c
 18944   013DEE  100E               	iorwf	(??___flmul+1)^(0+1280),w,c
 18945   013DF0  100F               	iorwf	(??___flmul+2)^(0+1280),w,c
 18946   013DF2  1010               	iorwf	(??___flmul+3)^(0+1280),w,c
 18947   013DF4  B4D8               	btfsc	status,2,c
 18948   013DF6  EFFF  F09E         	goto	u5661
 18949   013DFA  EF01  F09F         	goto	u5660
 18950   013DFE                     u5661:
 18951   013DFE  EF05  F09F         	goto	l2009
 18952   013E02                     u5660:
 18953   013E02                     l8223:
 18954   013E02  0E01               	movlw	1
 18955   013E04  6E16               	movwf	___flmul@aexp^(0+1280),c
 18956   013E06  EF0E  F09F         	goto	l2008
 18957   013E0A                     l2009:
 18958   013E0A  A018               	btfss	___flmul@prod^(0+1280),0,c
 18959   013E0C  EF0A  F09F         	goto	u5671
 18960   013E10  EF0C  F09F         	goto	u5670
 18961   013E14                     u5671:
 18962   013E14  EF0E  F09F         	goto	l2008
 18963   013E18                     u5670:
 18964   013E18  EF01  F09F         	goto	l8223
 18965   013E1C                     l2008:
 18966   013E1C  5016               	movf	___flmul@aexp^(0+1280),w,c
 18967   013E1E  B4D8               	btfsc	status,2,c
 18968   013E20  EF14  F09F         	goto	u5681
 18969   013E24  EF16  F09F         	goto	u5680
 18970   013E28                     u5681:
 18971   013E28  EF3A  F09F         	goto	l8235
 18972   013E2C                     u5680:
 18973   013E2C  0E01               	movlw	1
 18974   013E2E  2618               	addwf	___flmul@prod^(0+1280),f,c
 18975   013E30  0E00               	movlw	0
 18976   013E32  2219               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 18977   013E34  221A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 18978   013E36  221B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 18979   013E38  A01B               	btfss	(___flmul@prod+3)^(0+1280),0,c
 18980   013E3A  EF21  F09F         	goto	u5691
 18981   013E3E  EF23  F09F         	goto	u5690
 18982   013E42                     u5691:
 18983   013E42  EF3A  F09F         	goto	l8235
 18984   013E46                     u5690:
 18985   013E46  C518  F50D         	movff	___flmul@prod,??___flmul
 18986   013E4A  C519  F50E         	movff	___flmul@prod+1,??___flmul+1
 18987   013E4E  C51A  F50F         	movff	___flmul@prod+2,??___flmul+2
 18988   013E52  C51B  F510         	movff	___flmul@prod+3,??___flmul+3
 18989   013E56  3410               	rlcf	(??___flmul+3)^(0+1280),w,c
 18990   013E58  3210               	rrcf	(??___flmul+3)^(0+1280),f,c
 18991   013E5A  320F               	rrcf	(??___flmul+2)^(0+1280),f,c
 18992   013E5C  320E               	rrcf	(??___flmul+1)^(0+1280),f,c
 18993   013E5E  320D               	rrcf	??___flmul^(0+1280),f,c
 18994   013E60  C50D  F518         	movff	??___flmul,___flmul@prod
 18995   013E64  C50E  F519         	movff	??___flmul+1,___flmul@prod+1
 18996   013E68  C50F  F51A         	movff	??___flmul+2,___flmul@prod+2
 18997   013E6C  C510  F51B         	movff	??___flmul+3,___flmul@prod+3
 18998   013E70  4A1C               	infsnz	___flmul@temp^(0+1280),f,c
 18999   013E72  2A1D               	incf	(___flmul@temp+1)^(0+1280),f,c
 19000   013E74                     l8235:
 19001   013E74  BE1D               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 19002   013E76  EF45  F09F         	goto	u5701
 19003   013E7A  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 19004   013E7C  E108               	bnz	u5700
 19005   013E7E  281C               	incf	___flmul@temp^(0+1280),w,c
 19006   013E80  A0D8               	btfss	status,0,c
 19007   013E82  EF45  F09F         	goto	u5701
 19008   013E86  EF47  F09F         	goto	u5700
 19009   013E8A                     u5701:
 19010   013E8A  EF51  F09F         	goto	l8239
 19011   013E8E                     u5700:
 19012   013E8E  0E00               	movlw	0
 19013   013E90  6E18               	movwf	___flmul@prod^(0+1280),c
 19014   013E92  0E00               	movlw	0
 19015   013E94  6E19               	movwf	(___flmul@prod+1)^(0+1280),c
 19016   013E96  0E80               	movlw	128
 19017   013E98  6E1A               	movwf	(___flmul@prod+2)^(0+1280),c
 19018   013E9A  0E7F               	movlw	127
 19019   013E9C  6E1B               	movwf	(___flmul@prod+3)^(0+1280),c
 19020   013E9E  EF7E  F09F         	goto	l8253
 19021   013EA2                     l8239:
 19022   013EA2  BE1D               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 19023   013EA4  EF5E  F09F         	goto	u5710
 19024   013EA8  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 19025   013EAA  E106               	bnz	u5711
 19026   013EAC  041C               	decf	___flmul@temp^(0+1280),w,c
 19027   013EAE  B0D8               	btfsc	status,0,c
 19028   013EB0  EF5C  F09F         	goto	u5711
 19029   013EB4  EF5E  F09F         	goto	u5710
 19030   013EB8                     u5711:
 19031   013EB8  EF69  F09F         	goto	l2016
 19032   013EBC                     u5710:
 19033   013EBC  0E00               	movlw	0
 19034   013EBE  6E18               	movwf	___flmul@prod^(0+1280),c
 19035   013EC0  0E00               	movlw	0
 19036   013EC2  6E19               	movwf	(___flmul@prod+1)^(0+1280),c
 19037   013EC4  0E00               	movlw	0
 19038   013EC6  6E1A               	movwf	(___flmul@prod+2)^(0+1280),c
 19039   013EC8  0E00               	movlw	0
 19040   013ECA  6E1B               	movwf	(___flmul@prod+3)^(0+1280),c
 19041   013ECC  6A11               	clrf	___flmul@sign^(0+1280),c
 19042   013ECE  EF7E  F09F         	goto	l8253
 19043   013ED2                     l2016:
 19044   013ED2  C51C  F517         	movff	___flmul@temp,___flmul@bexp
 19045   013ED6  0EFF               	movlw	255
 19046   013ED8  1618               	andwf	___flmul@prod^(0+1280),f,c
 19047   013EDA  0EFF               	movlw	255
 19048   013EDC  1619               	andwf	(___flmul@prod+1)^(0+1280),f,c
 19049   013EDE  0E7F               	movlw	127
 19050   013EE0  161A               	andwf	(___flmul@prod+2)^(0+1280),f,c
 19051   013EE2  0E00               	movlw	0
 19052   013EE4  161B               	andwf	(___flmul@prod+3)^(0+1280),f,c
 19053   013EE6  A017               	btfss	___flmul@bexp^(0+1280),0,c
 19054   013EE8  EF78  F09F         	goto	u5721
 19055   013EEC  EF7A  F09F         	goto	u5720
 19056   013EF0                     u5721:
 19057   013EF0  EF7B  F09F         	goto	l8251
 19058   013EF4                     u5720:
 19059   013EF4  8E1A               	bsf	(___flmul@prod+2)^(0+1280),7,c
 19060   013EF6                     l8251:
 19061   013EF6  90D8               	bcf	status,0,c
 19062   013EF8  3017               	rrcf	___flmul@bexp^(0+1280),w,c
 19063   013EFA  6E1B               	movwf	(___flmul@prod+3)^(0+1280),c
 19064   013EFC                     l8253:
 19065   013EFC  5011               	movf	___flmul@sign^(0+1280),w,c
 19066   013EFE  121B               	iorwf	(___flmul@prod+3)^(0+1280),f,c
 19067   013F00  C518  F505         	movff	___flmul@prod,?___flmul
 19068   013F04  C519  F506         	movff	___flmul@prod+1,?___flmul+1
 19069   013F08  C51A  F507         	movff	___flmul@prod+2,?___flmul+2
 19070   013F0C  C51B  F508         	movff	___flmul@prod+3,?___flmul+3
 19071   013F10                     l2003:
 19072   013F10  0012               	return		;funcret
 19073   013F12                     __end_of___flmul:
 19074                           	callstack 0
 19075                           
 19076 ;; *************** function ___fldiv *****************
 19077 ;; Defined at:
 19078 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
 19079 ;; Parameters:    Size  Location     Type
 19080 ;;  b               4   82[COMRAM] unsigned char 
 19081 ;;  a               4   86[COMRAM] unsigned char 
 19082 ;; Auto vars:     Size  Location     Type
 19083 ;;  grs             4    7[BANK5 ] unsigned long 
 19084 ;;  rem             4    0[BANK5 ] unsigned long 
 19085 ;;  new_exp         2    5[BANK5 ] short 
 19086 ;;  aexp            1   12[BANK5 ] unsigned char 
 19087 ;;  bexp            1   11[BANK5 ] unsigned char 
 19088 ;;  sign            1    4[BANK5 ] unsigned char 
 19089 ;; Return value:  Size  Location     Type
 19090 ;;                  4   82[COMRAM] unsigned char 
 19091 ;; Registers used:
 19092 ;;		wreg, status,2, status,0
 19093 ;; Tracked objects:
 19094 ;;		On entry : 0/0
 19095 ;;		On exit  : 0/0
 19096 ;;		Unchanged: 0/0
 19097 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19098 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19099 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19100 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19101 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19102 ;;Total ram usage:       25 bytes
 19103 ;; Hardware stack levels used: 1
 19104 ;; This function calls:
 19105 ;;		Nothing
 19106 ;; This function is called by:
 19107 ;;		_MPU6050_DMP_GetData
 19108 ;;		_MPU6050_ReadAll
 19109 ;;		_atan2f
 19110 ;;		_atanf
 19111 ;;		_efgtoa
 19112 ;;		_MPU6050_ReadAccel
 19113 ;;		_MPU6050_ReadGyro
 19114 ;;		_MPU6050_ReadTemperature
 19115 ;;		_MPU6050_Calibrate
 19116 ;;		_MovingAverage_Update
 19117 ;; This function uses a non-reentrant model
 19118 ;;
 19119                           
 19120                           	psect	text44
 19121   0146BA                     __ptext44:
 19122                           	callstack 0
 19123   0146BA                     ___fldiv:
 19124                           	callstack 122
 19125   0146BA  5056               	movf	(___fldiv@b+3)^(0+1280),w,c
 19126   0146BC  0B80               	andlw	128
 19127   0146BE  0105               	movlb	5	; () banked
 19128   0146C0  6F64               	movwf	___fldiv@sign& (0+255),b
 19129   0146C2  5056               	movf	(___fldiv@b+3)^(0+1280),w,c
 19130   0146C4  2456               	addwf	(___fldiv@b+3)^(0+1280),w,c
 19131   0146C6  6F6B               	movwf	___fldiv@bexp& (0+255),b
 19132   0146C8                     
 19133                           ; BSR set to: 5
 19134   0146C8  AE55               	btfss	(___fldiv@b+2)^(0+1280),7,c
 19135   0146CA  EF69  F0A3         	goto	u5311
 19136   0146CE  EF6B  F0A3         	goto	u5310
 19137   0146D2                     u5311:
 19138   0146D2  EF6C  F0A3         	goto	l8001
 19139   0146D6                     u5310:
 19140   0146D6                     
 19141                           ; BSR set to: 5
 19142   0146D6  816B               	bsf	___fldiv@bexp& (0+255),0,b
 19143   0146D8                     l8001:
 19144                           
 19145                           ; BSR set to: 5
 19146   0146D8  516B               	movf	___fldiv@bexp& (0+255),w,b
 19147   0146DA  B4D8               	btfsc	status,2,c
 19148   0146DC  EF72  F0A3         	goto	u5321
 19149   0146E0  EF74  F0A3         	goto	u5320
 19150   0146E4                     u5321:
 19151   0146E4  EF88  F0A3         	goto	l8011
 19152   0146E8                     u5320:
 19153   0146E8                     
 19154                           ; BSR set to: 5
 19155   0146E8  296B               	incf	___fldiv@bexp& (0+255),w,b
 19156   0146EA  A4D8               	btfss	status,2,c
 19157   0146EC  EF7A  F0A3         	goto	u5331
 19158   0146F0  EF7C  F0A3         	goto	u5330
 19159   0146F4                     u5331:
 19160   0146F4  EF84  F0A3         	goto	l8007
 19161   0146F8                     u5330:
 19162   0146F8                     
 19163                           ; BSR set to: 5
 19164   0146F8  0E00               	movlw	0
 19165   0146FA  6E53               	movwf	___fldiv@b^(0+1280),c
 19166   0146FC  0E00               	movlw	0
 19167   0146FE  6E54               	movwf	(___fldiv@b+1)^(0+1280),c
 19168   014700  0E00               	movlw	0
 19169   014702  6E55               	movwf	(___fldiv@b+2)^(0+1280),c
 19170   014704  0E00               	movlw	0
 19171   014706  6E56               	movwf	(___fldiv@b+3)^(0+1280),c
 19172   014708                     l8007:
 19173                           
 19174                           ; BSR set to: 5
 19175   014708  8E55               	bsf	(___fldiv@b+2)^(0+1280),7,c
 19176   01470A                     
 19177                           ; BSR set to: 5
 19178   01470A  6A56               	clrf	(___fldiv@b+3)^(0+1280),c
 19179   01470C  EF90  F0A3         	goto	l8013
 19180   014710                     l8011:
 19181                           
 19182                           ; BSR set to: 5
 19183   014710  0E00               	movlw	0
 19184   014712  6E53               	movwf	___fldiv@b^(0+1280),c
 19185   014714  0E00               	movlw	0
 19186   014716  6E54               	movwf	(___fldiv@b+1)^(0+1280),c
 19187   014718  0E00               	movlw	0
 19188   01471A  6E55               	movwf	(___fldiv@b+2)^(0+1280),c
 19189   01471C  0E00               	movlw	0
 19190   01471E  6E56               	movwf	(___fldiv@b+3)^(0+1280),c
 19191   014720                     l8013:
 19192                           
 19193                           ; BSR set to: 5
 19194   014720  505A               	movf	(___fldiv@a+3)^(0+1280),w,c
 19195   014722  0B80               	andlw	128
 19196   014724  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 19197   014726                     
 19198                           ; BSR set to: 5
 19199   014726  505A               	movf	(___fldiv@a+3)^(0+1280),w,c
 19200   014728  245A               	addwf	(___fldiv@a+3)^(0+1280),w,c
 19201   01472A  6F6C               	movwf	___fldiv@aexp& (0+255),b
 19202   01472C                     
 19203                           ; BSR set to: 5
 19204   01472C  AE59               	btfss	(___fldiv@a+2)^(0+1280),7,c
 19205   01472E  EF9B  F0A3         	goto	u5341
 19206   014732  EF9D  F0A3         	goto	u5340
 19207   014736                     u5341:
 19208   014736  EF9E  F0A3         	goto	l8021
 19209   01473A                     u5340:
 19210   01473A                     
 19211                           ; BSR set to: 5
 19212   01473A  816C               	bsf	___fldiv@aexp& (0+255),0,b
 19213   01473C                     l8021:
 19214                           
 19215                           ; BSR set to: 5
 19216   01473C  516C               	movf	___fldiv@aexp& (0+255),w,b
 19217   01473E  B4D8               	btfsc	status,2,c
 19218   014740  EFA4  F0A3         	goto	u5351
 19219   014744  EFA6  F0A3         	goto	u5350
 19220   014748                     u5351:
 19221   014748  EFBA  F0A3         	goto	l8031
 19222   01474C                     u5350:
 19223   01474C                     
 19224                           ; BSR set to: 5
 19225   01474C  296C               	incf	___fldiv@aexp& (0+255),w,b
 19226   01474E  A4D8               	btfss	status,2,c
 19227   014750  EFAC  F0A3         	goto	u5361
 19228   014754  EFAE  F0A3         	goto	u5360
 19229   014758                     u5361:
 19230   014758  EFB6  F0A3         	goto	l8027
 19231   01475C                     u5360:
 19232   01475C                     
 19233                           ; BSR set to: 5
 19234   01475C  0E00               	movlw	0
 19235   01475E  6E57               	movwf	___fldiv@a^(0+1280),c
 19236   014760  0E00               	movlw	0
 19237   014762  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 19238   014764  0E00               	movlw	0
 19239   014766  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 19240   014768  0E00               	movlw	0
 19241   01476A  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 19242   01476C                     l8027:
 19243                           
 19244                           ; BSR set to: 5
 19245   01476C  8E59               	bsf	(___fldiv@a+2)^(0+1280),7,c
 19246   01476E                     
 19247                           ; BSR set to: 5
 19248   01476E  6A5A               	clrf	(___fldiv@a+3)^(0+1280),c
 19249   014770  EFC2  F0A3         	goto	l8033
 19250   014774                     l8031:
 19251                           
 19252                           ; BSR set to: 5
 19253   014774  0E00               	movlw	0
 19254   014776  6E57               	movwf	___fldiv@a^(0+1280),c
 19255   014778  0E00               	movlw	0
 19256   01477A  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 19257   01477C  0E00               	movlw	0
 19258   01477E  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 19259   014780  0E00               	movlw	0
 19260   014782  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 19261   014784                     l8033:
 19262                           
 19263                           ; BSR set to: 5
 19264   014784  5057               	movf	___fldiv@a^(0+1280),w,c
 19265   014786  1058               	iorwf	(___fldiv@a+1)^(0+1280),w,c
 19266   014788  1059               	iorwf	(___fldiv@a+2)^(0+1280),w,c
 19267   01478A  105A               	iorwf	(___fldiv@a+3)^(0+1280),w,c
 19268   01478C  A4D8               	btfss	status,2,c
 19269   01478E  EFCB  F0A3         	goto	u5371
 19270   014792  EFCD  F0A3         	goto	u5370
 19271   014796                     u5371:
 19272   014796  EFE5  F0A3         	goto	l8045
 19273   01479A                     u5370:
 19274   01479A                     
 19275                           ; BSR set to: 5
 19276   01479A  0E00               	movlw	0
 19277   01479C  6E53               	movwf	___fldiv@b^(0+1280),c
 19278   01479E  0E00               	movlw	0
 19279   0147A0  6E54               	movwf	(___fldiv@b+1)^(0+1280),c
 19280   0147A2  0E00               	movlw	0
 19281   0147A4  6E55               	movwf	(___fldiv@b+2)^(0+1280),c
 19282   0147A6  0E00               	movlw	0
 19283   0147A8  6E56               	movwf	(___fldiv@b+3)^(0+1280),c
 19284   0147AA                     
 19285                           ; BSR set to: 5
 19286   0147AA  0E80               	movlw	128
 19287   0147AC  1255               	iorwf	(___fldiv@b+2)^(0+1280),f,c
 19288   0147AE  0E7F               	movlw	127
 19289   0147B0  1256               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 19290   0147B2                     l8039:
 19291                           
 19292                           ; BSR set to: 5
 19293   0147B2  5164               	movf	___fldiv@sign& (0+255),w,b
 19294   0147B4  1256               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 19295   0147B6                     
 19296                           ; BSR set to: 5
 19297   0147B6  C553  F553         	movff	___fldiv@b,?___fldiv
 19298   0147BA  C554  F554         	movff	___fldiv@b+1,?___fldiv+1
 19299   0147BE  C555  F555         	movff	___fldiv@b+2,?___fldiv+2
 19300   0147C2  C556  F556         	movff	___fldiv@b+3,?___fldiv+3
 19301   0147C6  EF25  F0A5         	goto	l1967
 19302   0147CA                     l8045:
 19303                           
 19304                           ; BSR set to: 5
 19305   0147CA  516B               	movf	___fldiv@bexp& (0+255),w,b
 19306   0147CC  A4D8               	btfss	status,2,c
 19307   0147CE  EFEB  F0A3         	goto	u5381
 19308   0147D2  EFED  F0A3         	goto	u5380
 19309   0147D6                     u5381:
 19310   0147D6  EFF7  F0A3         	goto	l8053
 19311   0147DA                     u5380:
 19312   0147DA                     
 19313                           ; BSR set to: 5
 19314   0147DA  0E00               	movlw	0
 19315   0147DC  6E53               	movwf	?___fldiv^(0+1280),c
 19316   0147DE  0E00               	movlw	0
 19317   0147E0  6E54               	movwf	(?___fldiv+1)^(0+1280),c
 19318   0147E2  0E00               	movlw	0
 19319   0147E4  6E55               	movwf	(?___fldiv+2)^(0+1280),c
 19320   0147E6  0E00               	movlw	0
 19321   0147E8  6E56               	movwf	(?___fldiv+3)^(0+1280),c
 19322   0147EA  EF25  F0A5         	goto	l1967
 19323   0147EE                     l8053:
 19324                           
 19325                           ; BSR set to: 5
 19326   0147EE  516C               	movf	___fldiv@aexp& (0+255),w,b
 19327   0147F0  C56B  F55B         	movff	___fldiv@bexp,??___fldiv
 19328   0147F4  6A5C               	clrf	(??___fldiv+1)^(0+1280),c
 19329   0147F6  5E5B               	subwf	??___fldiv^(0+1280),f,c
 19330   0147F8  0E00               	movlw	0
 19331   0147FA  5A5C               	subwfb	(??___fldiv+1)^(0+1280),f,c
 19332   0147FC  0E7F               	movlw	127
 19333   0147FE  245B               	addwf	??___fldiv^(0+1280),w,c
 19334   014800  6F65               	movwf	___fldiv@new_exp& (0+255),b
 19335   014802  0E00               	movlw	0
 19336   014804  205C               	addwfc	(??___fldiv+1)^(0+1280),w,c
 19337   014806  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19338   014808                     
 19339                           ; BSR set to: 5
 19340   014808  C553  F560         	movff	___fldiv@b,___fldiv@rem
 19341   01480C  C554  F561         	movff	___fldiv@b+1,___fldiv@rem+1
 19342   014810  C555  F562         	movff	___fldiv@b+2,___fldiv@rem+2
 19343   014814  C556  F563         	movff	___fldiv@b+3,___fldiv@rem+3
 19344   014818                     
 19345                           ; BSR set to: 5
 19346   014818  0E00               	movlw	0
 19347   01481A  6E53               	movwf	___fldiv@b^(0+1280),c
 19348   01481C  0E00               	movlw	0
 19349   01481E  6E54               	movwf	(___fldiv@b+1)^(0+1280),c
 19350   014820  0E00               	movlw	0
 19351   014822  6E55               	movwf	(___fldiv@b+2)^(0+1280),c
 19352   014824  0E00               	movlw	0
 19353   014826  6E56               	movwf	(___fldiv@b+3)^(0+1280),c
 19354   014828                     
 19355                           ; BSR set to: 5
 19356   014828  0E00               	movlw	0
 19357   01482A  6F67               	movwf	___fldiv@grs& (0+255),b
 19358   01482C  0E00               	movlw	0
 19359   01482E  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 19360   014830  0E00               	movlw	0
 19361   014832  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 19362   014834  0E00               	movlw	0
 19363   014836  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 19364   014838                     
 19365                           ; BSR set to: 5
 19366   014838  6B6C               	clrf	___fldiv@aexp& (0+255),b
 19367   01483A  EF57  F0A4         	goto	l1969
 19368   01483E                     l8063:
 19369                           
 19370                           ; BSR set to: 5
 19371   01483E  516C               	movf	___fldiv@aexp& (0+255),w,b
 19372   014840  B4D8               	btfsc	status,2,c
 19373   014842  EF25  F0A4         	goto	u5391
 19374   014846  EF27  F0A4         	goto	u5390
 19375   01484A                     u5391:
 19376   01484A  EF3E  F0A4         	goto	l8071
 19377   01484E                     u5390:
 19378   01484E                     
 19379                           ; BSR set to: 5
 19380   01484E  90D8               	bcf	status,0,c
 19381   014850  3760               	rlcf	___fldiv@rem& (0+255),f,b
 19382   014852  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 19383   014854  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 19384   014856  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 19385   014858  90D8               	bcf	status,0,c
 19386   01485A  3653               	rlcf	___fldiv@b^(0+1280),f,c
 19387   01485C  3654               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 19388   01485E  3655               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 19389   014860  3656               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 19390   014862                     
 19391                           ; BSR set to: 5
 19392   014862  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 19393   014864  EF36  F0A4         	goto	u5401
 19394   014868  EF38  F0A4         	goto	u5400
 19395   01486C                     u5401:
 19396   01486C  EF39  F0A4         	goto	l1972
 19397   014870                     u5400:
 19398   014870                     
 19399                           ; BSR set to: 5
 19400   014870  8053               	bsf	___fldiv@b^(0+1280),0,c
 19401   014872                     l1972:
 19402                           
 19403                           ; BSR set to: 5
 19404   014872  90D8               	bcf	status,0,c
 19405   014874  3767               	rlcf	___fldiv@grs& (0+255),f,b
 19406   014876  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 19407   014878  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 19408   01487A  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 19409   01487C                     l8071:
 19410                           
 19411                           ; BSR set to: 5
 19412   01487C  5057               	movf	___fldiv@a^(0+1280),w,c
 19413   01487E  5D60               	subwf	___fldiv@rem& (0+255),w,b
 19414   014880  5058               	movf	(___fldiv@a+1)^(0+1280),w,c
 19415   014882  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 19416   014884  5059               	movf	(___fldiv@a+2)^(0+1280),w,c
 19417   014886  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 19418   014888  505A               	movf	(___fldiv@a+3)^(0+1280),w,c
 19419   01488A  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 19420   01488C  A0D8               	btfss	status,0,c
 19421   01488E  EF4B  F0A4         	goto	u5411
 19422   014892  EF4D  F0A4         	goto	u5410
 19423   014896                     u5411:
 19424   014896  EF56  F0A4         	goto	l8077
 19425   01489A                     u5410:
 19426   01489A                     
 19427                           ; BSR set to: 5
 19428   01489A  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 19429   01489C                     
 19430                           ; BSR set to: 5
 19431   01489C  5057               	movf	___fldiv@a^(0+1280),w,c
 19432   01489E  5F60               	subwf	___fldiv@rem& (0+255),f,b
 19433   0148A0  5058               	movf	(___fldiv@a+1)^(0+1280),w,c
 19434   0148A2  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 19435   0148A4  5059               	movf	(___fldiv@a+2)^(0+1280),w,c
 19436   0148A6  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 19437   0148A8  505A               	movf	(___fldiv@a+3)^(0+1280),w,c
 19438   0148AA  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 19439   0148AC                     l8077:
 19440                           
 19441                           ; BSR set to: 5
 19442   0148AC  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 19443   0148AE                     l1969:
 19444                           
 19445                           ; BSR set to: 5
 19446   0148AE  0E19               	movlw	25
 19447   0148B0  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 19448   0148B2  EF5D  F0A4         	goto	u5421
 19449   0148B6  EF5F  F0A4         	goto	u5420
 19450   0148BA                     u5421:
 19451   0148BA  EF1F  F0A4         	goto	l8063
 19452   0148BE                     u5420:
 19453   0148BE                     
 19454                           ; BSR set to: 5
 19455   0148BE  5160               	movf	___fldiv@rem& (0+255),w,b
 19456   0148C0  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 19457   0148C2  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 19458   0148C4  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 19459   0148C6  B4D8               	btfsc	status,2,c
 19460   0148C8  EF68  F0A4         	goto	u5431
 19461   0148CC  EF6A  F0A4         	goto	u5430
 19462   0148D0                     u5431:
 19463   0148D0  EF82  F0A4         	goto	l8089
 19464   0148D4                     u5430:
 19465   0148D4                     
 19466                           ; BSR set to: 5
 19467   0148D4  8167               	bsf	___fldiv@grs& (0+255),0,b
 19468   0148D6  EF82  F0A4         	goto	l8089
 19469   0148DA                     l8083:
 19470                           
 19471                           ; BSR set to: 5
 19472   0148DA  90D8               	bcf	status,0,c
 19473   0148DC  3653               	rlcf	___fldiv@b^(0+1280),f,c
 19474   0148DE  3654               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 19475   0148E0  3655               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 19476   0148E2  3656               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 19477   0148E4                     
 19478                           ; BSR set to: 5
 19479   0148E4  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 19480   0148E6  EF77  F0A4         	goto	u5441
 19481   0148EA  EF79  F0A4         	goto	u5440
 19482   0148EE                     u5441:
 19483   0148EE  EF7A  F0A4         	goto	l1978
 19484   0148F2                     u5440:
 19485   0148F2                     
 19486                           ; BSR set to: 5
 19487   0148F2  8053               	bsf	___fldiv@b^(0+1280),0,c
 19488   0148F4                     l1978:
 19489                           
 19490                           ; BSR set to: 5
 19491   0148F4  90D8               	bcf	status,0,c
 19492   0148F6  3767               	rlcf	___fldiv@grs& (0+255),f,b
 19493   0148F8  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 19494   0148FA  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 19495   0148FC  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 19496   0148FE  0765               	decf	___fldiv@new_exp& (0+255),f,b
 19497   014900  A0D8               	btfss	status,0,c
 19498   014902  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 19499   014904                     l8089:
 19500                           
 19501                           ; BSR set to: 5
 19502   014904  AE55               	btfss	(___fldiv@b+2)^(0+1280),7,c
 19503   014906  EF87  F0A4         	goto	u5451
 19504   01490A  EF89  F0A4         	goto	u5450
 19505   01490E                     u5451:
 19506   01490E  EF6D  F0A4         	goto	l8083
 19507   014912                     u5450:
 19508   014912                     
 19509                           ; BSR set to: 5
 19510   014912  6B6C               	clrf	___fldiv@aexp& (0+255),b
 19511   014914  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 19512   014916  EF8F  F0A4         	goto	u5461
 19513   01491A  EF91  F0A4         	goto	u5460
 19514   01491E                     u5461:
 19515   01491E  EFB5  F0A4         	goto	l1980
 19516   014922                     u5460:
 19517   014922                     
 19518                           ; BSR set to: 5
 19519   014922  0EFF               	movlw	255
 19520   014924  1567               	andwf	___fldiv@grs& (0+255),w,b
 19521   014926  6E5B               	movwf	??___fldiv^(0+1280),c
 19522   014928  0EFF               	movlw	255
 19523   01492A  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 19524   01492C  6E5C               	movwf	(??___fldiv+1)^(0+1280),c
 19525   01492E  0EFF               	movlw	255
 19526   014930  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 19527   014932  6E5D               	movwf	(??___fldiv+2)^(0+1280),c
 19528   014934  0E7F               	movlw	127
 19529   014936  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 19530   014938  6E5E               	movwf	(??___fldiv+3)^(0+1280),c
 19531   01493A  505B               	movf	??___fldiv^(0+1280),w,c
 19532   01493C  105C               	iorwf	(??___fldiv+1)^(0+1280),w,c
 19533   01493E  105D               	iorwf	(??___fldiv+2)^(0+1280),w,c
 19534   014940  105E               	iorwf	(??___fldiv+3)^(0+1280),w,c
 19535   014942  B4D8               	btfsc	status,2,c
 19536   014944  EFA6  F0A4         	goto	u5471
 19537   014948  EFA8  F0A4         	goto	u5470
 19538   01494C                     u5471:
 19539   01494C  EFAC  F0A4         	goto	l1981
 19540   014950                     u5470:
 19541   014950                     l8093:
 19542                           
 19543                           ; BSR set to: 5
 19544   014950  0E01               	movlw	1
 19545   014952  6F6C               	movwf	___fldiv@aexp& (0+255),b
 19546   014954  EFB5  F0A4         	goto	l1980
 19547   014958                     l1981:
 19548                           
 19549                           ; BSR set to: 5
 19550   014958  A053               	btfss	___fldiv@b^(0+1280),0,c
 19551   01495A  EFB1  F0A4         	goto	u5481
 19552   01495E  EFB3  F0A4         	goto	u5480
 19553   014962                     u5481:
 19554   014962  EFB5  F0A4         	goto	l1980
 19555   014966                     u5480:
 19556   014966  EFA8  F0A4         	goto	l8093
 19557   01496A                     l1980:
 19558                           
 19559                           ; BSR set to: 5
 19560   01496A  516C               	movf	___fldiv@aexp& (0+255),w,b
 19561   01496C  B4D8               	btfsc	status,2,c
 19562   01496E  EFBB  F0A4         	goto	u5491
 19563   014972  EFBD  F0A4         	goto	u5490
 19564   014976                     u5491:
 19565   014976  EFE1  F0A4         	goto	l8105
 19566   01497A                     u5490:
 19567   01497A                     
 19568                           ; BSR set to: 5
 19569   01497A  0E01               	movlw	1
 19570   01497C  2653               	addwf	___fldiv@b^(0+1280),f,c
 19571   01497E  0E00               	movlw	0
 19572   014980  2254               	addwfc	(___fldiv@b+1)^(0+1280),f,c
 19573   014982  2255               	addwfc	(___fldiv@b+2)^(0+1280),f,c
 19574   014984  2256               	addwfc	(___fldiv@b+3)^(0+1280),f,c
 19575   014986                     
 19576                           ; BSR set to: 5
 19577   014986  A056               	btfss	(___fldiv@b+3)^(0+1280),0,c
 19578   014988  EFC8  F0A4         	goto	u5501
 19579   01498C  EFCA  F0A4         	goto	u5500
 19580   014990                     u5501:
 19581   014990  EFE1  F0A4         	goto	l8105
 19582   014994                     u5500:
 19583   014994                     
 19584                           ; BSR set to: 5
 19585   014994  C553  F55B         	movff	___fldiv@b,??___fldiv
 19586   014998  C554  F55C         	movff	___fldiv@b+1,??___fldiv+1
 19587   01499C  C555  F55D         	movff	___fldiv@b+2,??___fldiv+2
 19588   0149A0  C556  F55E         	movff	___fldiv@b+3,??___fldiv+3
 19589   0149A4  345E               	rlcf	(??___fldiv+3)^(0+1280),w,c
 19590   0149A6  325E               	rrcf	(??___fldiv+3)^(0+1280),f,c
 19591   0149A8  325D               	rrcf	(??___fldiv+2)^(0+1280),f,c
 19592   0149AA  325C               	rrcf	(??___fldiv+1)^(0+1280),f,c
 19593   0149AC  325B               	rrcf	??___fldiv^(0+1280),f,c
 19594   0149AE  C55B  F553         	movff	??___fldiv,___fldiv@b
 19595   0149B2  C55C  F554         	movff	??___fldiv+1,___fldiv@b+1
 19596   0149B6  C55D  F555         	movff	??___fldiv+2,___fldiv@b+2
 19597   0149BA  C55E  F556         	movff	??___fldiv+3,___fldiv@b+3
 19598   0149BE                     
 19599                           ; BSR set to: 5
 19600   0149BE  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 19601   0149C0  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 19602   0149C2                     l8105:
 19603                           
 19604                           ; BSR set to: 5
 19605   0149C2  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 19606   0149C4  EFEC  F0A4         	goto	u5511
 19607   0149C8  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 19608   0149CA  E108               	bnz	u5510
 19609   0149CC  2965               	incf	___fldiv@new_exp& (0+255),w,b
 19610   0149CE  A0D8               	btfss	status,0,c
 19611   0149D0  EFEC  F0A4         	goto	u5511
 19612   0149D4  EFEE  F0A4         	goto	u5510
 19613   0149D8                     u5511:
 19614   0149D8  EFF9  F0A4         	goto	l8109
 19615   0149DC                     u5510:
 19616   0149DC                     
 19617                           ; BSR set to: 5
 19618   0149DC  0E00               	movlw	0
 19619   0149DE  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19620   0149E0  6965               	setf	___fldiv@new_exp& (0+255),b
 19621   0149E2  0E00               	movlw	0
 19622   0149E4  6E53               	movwf	___fldiv@b^(0+1280),c
 19623   0149E6  0E00               	movlw	0
 19624   0149E8  6E54               	movwf	(___fldiv@b+1)^(0+1280),c
 19625   0149EA  0E00               	movlw	0
 19626   0149EC  6E55               	movwf	(___fldiv@b+2)^(0+1280),c
 19627   0149EE  0E00               	movlw	0
 19628   0149F0  6E56               	movwf	(___fldiv@b+3)^(0+1280),c
 19629   0149F2                     l8109:
 19630                           
 19631                           ; BSR set to: 5
 19632   0149F2  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 19633   0149F4  EF06  F0A5         	goto	u5520
 19634   0149F8  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 19635   0149FA  E106               	bnz	u5521
 19636   0149FC  0565               	decf	___fldiv@new_exp& (0+255),w,b
 19637   0149FE  B0D8               	btfsc	status,0,c
 19638   014A00  EF04  F0A5         	goto	u5521
 19639   014A04  EF06  F0A5         	goto	u5520
 19640   014A08                     u5521:
 19641   014A08  EF13  F0A5         	goto	l8115
 19642   014A0C                     u5520:
 19643   014A0C                     
 19644                           ; BSR set to: 5
 19645   014A0C  0E00               	movlw	0
 19646   014A0E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19647   014A10  0E00               	movlw	0
 19648   014A12  6F65               	movwf	___fldiv@new_exp& (0+255),b
 19649   014A14  0E00               	movlw	0
 19650   014A16  6E53               	movwf	___fldiv@b^(0+1280),c
 19651   014A18  0E00               	movlw	0
 19652   014A1A  6E54               	movwf	(___fldiv@b+1)^(0+1280),c
 19653   014A1C  0E00               	movlw	0
 19654   014A1E  6E55               	movwf	(___fldiv@b+2)^(0+1280),c
 19655   014A20  0E00               	movlw	0
 19656   014A22  6E56               	movwf	(___fldiv@b+3)^(0+1280),c
 19657   014A24                     
 19658                           ; BSR set to: 5
 19659   014A24  6B64               	clrf	___fldiv@sign& (0+255),b
 19660   014A26                     l8115:
 19661                           
 19662                           ; BSR set to: 5
 19663   014A26  C565  F56B         	movff	___fldiv@new_exp,___fldiv@bexp
 19664   014A2A                     
 19665                           ; BSR set to: 5
 19666   014A2A  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 19667   014A2C  EF1A  F0A5         	goto	u5531
 19668   014A30  EF1C  F0A5         	goto	u5530
 19669   014A34                     u5531:
 19670   014A34  EF1F  F0A5         	goto	l8121
 19671   014A38                     u5530:
 19672   014A38                     
 19673                           ; BSR set to: 5
 19674   014A38  8E55               	bsf	(___fldiv@b+2)^(0+1280),7,c
 19675   014A3A  EF20  F0A5         	goto	l8123
 19676   014A3E                     l8121:
 19677                           
 19678                           ; BSR set to: 5
 19679   014A3E  9E55               	bcf	(___fldiv@b+2)^(0+1280),7,c
 19680   014A40                     l8123:
 19681                           
 19682                           ; BSR set to: 5
 19683   014A40  90D8               	bcf	status,0,c
 19684   014A42  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 19685   014A44  6E56               	movwf	(___fldiv@b+3)^(0+1280),c
 19686   014A46  EFD9  F0A3         	goto	l8039
 19687   014A4A                     l1967:
 19688                           
 19689                           ; BSR set to: 5
 19690   014A4A  0012               	return		;funcret
 19691   014A4C                     __end_of___fldiv:
 19692                           	callstack 0
 19693                           
 19694 ;; *************** function ___xxtofl *****************
 19695 ;; Defined at:
 19696 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
 19697 ;; Parameters:    Size  Location     Type
 19698 ;;  sign            1    wreg     unsigned char 
 19699 ;;  val             4    0[COMRAM] long 
 19700 ;; Auto vars:     Size  Location     Type
 19701 ;;  sign            1    8[COMRAM] unsigned char 
 19702 ;;  arg             4   10[COMRAM] unsigned long 
 19703 ;;  exp             1    9[COMRAM] unsigned char 
 19704 ;; Return value:  Size  Location     Type
 19705 ;;                  4    0[COMRAM] unsigned char 
 19706 ;; Registers used:
 19707 ;;		wreg, status,2, status,0
 19708 ;; Tracked objects:
 19709 ;;		On entry : 0/0
 19710 ;;		On exit  : 0/0
 19711 ;;		Unchanged: 0/0
 19712 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19714 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19715 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19716 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19717 ;;Total ram usage:       14 bytes
 19718 ;; Hardware stack levels used: 1
 19719 ;; This function calls:
 19720 ;;		Nothing
 19721 ;; This function is called by:
 19722 ;;		_MPU6050_DMP_GetData
 19723 ;;		_MPU6050_ReadAll
 19724 ;;		___rem_pio2f
 19725 ;;		_MPU6050_ReadAccel
 19726 ;;		_MPU6050_ReadGyro
 19727 ;;		_MPU6050_ReadTemperature
 19728 ;;		_MPU6050_Calibrate
 19729 ;;		_MovingAverage_Update
 19730 ;; This function uses a non-reentrant model
 19731 ;;
 19732                           
 19733                           	psect	text45
 19734   015798                     __ptext45:
 19735                           	callstack 0
 19736   015798                     ___xxtofl:
 19737                           	callstack 123
 19738                           
 19739                           ; BSR set to: 5
 19740                           ;incstack = 0
 19741                           ;___xxtofl@sign stored from wreg
 19742   015798  6E09               	movwf	___xxtofl@sign^(0+1280),c
 19743   01579A  5009               	movf	___xxtofl@sign^(0+1280),w,c
 19744   01579C  B4D8               	btfsc	status,2,c
 19745   01579E  EFD3  F0AB         	goto	u6341
 19746   0157A2  EFD5  F0AB         	goto	u6340
 19747   0157A6                     u6341:
 19748   0157A6  EFF7  F0AB         	goto	l2040
 19749   0157AA                     u6340:
 19750   0157AA  BE04               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
 19751   0157AC  EFDC  F0AB         	goto	u6350
 19752   0157B0  EFDA  F0AB         	goto	u6351
 19753   0157B4                     u6351:
 19754   0157B4  EFF7  F0AB         	goto	l2040
 19755   0157B8                     u6350:
 19756   0157B8  C501  F505         	movff	___xxtofl@val,??___xxtofl
 19757   0157BC  C502  F506         	movff	___xxtofl@val+1,??___xxtofl+1
 19758   0157C0  C503  F507         	movff	___xxtofl@val+2,??___xxtofl+2
 19759   0157C4  C504  F508         	movff	___xxtofl@val+3,??___xxtofl+3
 19760   0157C8  1E05               	comf	??___xxtofl^(0+1280),f,c
 19761   0157CA  1E06               	comf	(??___xxtofl+1)^(0+1280),f,c
 19762   0157CC  1E07               	comf	(??___xxtofl+2)^(0+1280),f,c
 19763   0157CE  1E08               	comf	(??___xxtofl+3)^(0+1280),f,c
 19764   0157D0  2A05               	incf	??___xxtofl^(0+1280),f,c
 19765   0157D2  0E00               	movlw	0
 19766   0157D4  2206               	addwfc	(??___xxtofl+1)^(0+1280),f,c
 19767   0157D6  2207               	addwfc	(??___xxtofl+2)^(0+1280),f,c
 19768   0157D8  2208               	addwfc	(??___xxtofl+3)^(0+1280),f,c
 19769   0157DA  C505  F50B         	movff	??___xxtofl,___xxtofl@arg
 19770   0157DE  C506  F50C         	movff	??___xxtofl+1,___xxtofl@arg+1
 19771   0157E2  C507  F50D         	movff	??___xxtofl+2,___xxtofl@arg+2
 19772   0157E6  C508  F50E         	movff	??___xxtofl+3,___xxtofl@arg+3
 19773   0157EA  EFFF  F0AB         	goto	l8647
 19774   0157EE                     l2040:
 19775   0157EE  C501  F50B         	movff	___xxtofl@val,___xxtofl@arg
 19776   0157F2  C502  F50C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 19777   0157F6  C503  F50D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 19778   0157FA  C504  F50E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 19779   0157FE                     l8647:
 19780   0157FE  5001               	movf	___xxtofl@val^(0+1280),w,c
 19781   015800  1002               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
 19782   015802  1003               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
 19783   015804  1004               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
 19784   015806  A4D8               	btfss	status,2,c
 19785   015808  EF08  F0AC         	goto	u6361
 19786   01580C  EF0A  F0AC         	goto	u6360
 19787   015810                     u6361:
 19788   015810  EF14  F0AC         	goto	l8653
 19789   015814                     u6360:
 19790   015814  0E00               	movlw	0
 19791   015816  6E01               	movwf	?___xxtofl^(0+1280),c
 19792   015818  0E00               	movlw	0
 19793   01581A  6E02               	movwf	(?___xxtofl+1)^(0+1280),c
 19794   01581C  0E00               	movlw	0
 19795   01581E  6E03               	movwf	(?___xxtofl+2)^(0+1280),c
 19796   015820  0E00               	movlw	0
 19797   015822  6E04               	movwf	(?___xxtofl+3)^(0+1280),c
 19798   015824  EFA5  F0AC         	goto	l2043
 19799   015828                     l8653:
 19800   015828  0E96               	movlw	150
 19801   01582A  6E0A               	movwf	___xxtofl@exp^(0+1280),c
 19802   01582C  EF1E  F0AC         	goto	l8657
 19803   015830                     l8655:
 19804   015830  2A0A               	incf	___xxtofl@exp^(0+1280),f,c
 19805   015832  90D8               	bcf	status,0,c
 19806   015834  320E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 19807   015836  320D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 19808   015838  320C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 19809   01583A  320B               	rrcf	___xxtofl@arg^(0+1280),f,c
 19810   01583C                     l8657:
 19811   01583C  0E00               	movlw	0
 19812   01583E  140B               	andwf	___xxtofl@arg^(0+1280),w,c
 19813   015840  6E05               	movwf	??___xxtofl^(0+1280),c
 19814   015842  0E00               	movlw	0
 19815   015844  140C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 19816   015846  6E06               	movwf	(??___xxtofl+1)^(0+1280),c
 19817   015848  0E00               	movlw	0
 19818   01584A  140D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 19819   01584C  6E07               	movwf	(??___xxtofl+2)^(0+1280),c
 19820   01584E  0EFE               	movlw	254
 19821   015850  140E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 19822   015852  6E08               	movwf	(??___xxtofl+3)^(0+1280),c
 19823   015854  5005               	movf	??___xxtofl^(0+1280),w,c
 19824   015856  1006               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 19825   015858  1007               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 19826   01585A  1008               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 19827   01585C  A4D8               	btfss	status,2,c
 19828   01585E  EF33  F0AC         	goto	u6371
 19829   015862  EF35  F0AC         	goto	u6370
 19830   015866                     u6371:
 19831   015866  EF18  F0AC         	goto	l8655
 19832   01586A                     u6370:
 19833   01586A  EF43  F0AC         	goto	l2047
 19834   01586E                     l8659:
 19835   01586E  2A0A               	incf	___xxtofl@exp^(0+1280),f,c
 19836   015870  0E01               	movlw	1
 19837   015872  260B               	addwf	___xxtofl@arg^(0+1280),f,c
 19838   015874  0E00               	movlw	0
 19839   015876  220C               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
 19840   015878  220D               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
 19841   01587A  220E               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
 19842   01587C  90D8               	bcf	status,0,c
 19843   01587E  320E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 19844   015880  320D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 19845   015882  320C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 19846   015884  320B               	rrcf	___xxtofl@arg^(0+1280),f,c
 19847   015886                     l2047:
 19848   015886  0E00               	movlw	0
 19849   015888  140B               	andwf	___xxtofl@arg^(0+1280),w,c
 19850   01588A  6E05               	movwf	??___xxtofl^(0+1280),c
 19851   01588C  0E00               	movlw	0
 19852   01588E  140C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 19853   015890  6E06               	movwf	(??___xxtofl+1)^(0+1280),c
 19854   015892  0E00               	movlw	0
 19855   015894  140D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 19856   015896  6E07               	movwf	(??___xxtofl+2)^(0+1280),c
 19857   015898  0EFF               	movlw	255
 19858   01589A  140E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 19859   01589C  6E08               	movwf	(??___xxtofl+3)^(0+1280),c
 19860   01589E  5005               	movf	??___xxtofl^(0+1280),w,c
 19861   0158A0  1006               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 19862   0158A2  1007               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 19863   0158A4  1008               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 19864   0158A6  A4D8               	btfss	status,2,c
 19865   0158A8  EF58  F0AC         	goto	u6381
 19866   0158AC  EF5A  F0AC         	goto	u6380
 19867   0158B0                     u6381:
 19868   0158B0  EF37  F0AC         	goto	l8659
 19869   0158B4                     u6380:
 19870   0158B4  EF62  F0AC         	goto	l8667
 19871   0158B8                     l8665:
 19872   0158B8  060A               	decf	___xxtofl@exp^(0+1280),f,c
 19873   0158BA  90D8               	bcf	status,0,c
 19874   0158BC  360B               	rlcf	___xxtofl@arg^(0+1280),f,c
 19875   0158BE  360C               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
 19876   0158C0  360D               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
 19877   0158C2  360E               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
 19878   0158C4                     l8667:
 19879   0158C4  BE0D               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
 19880   0158C6  EF67  F0AC         	goto	u6391
 19881   0158CA  EF69  F0AC         	goto	u6390
 19882   0158CE                     u6391:
 19883   0158CE  EF71  F0AC         	goto	l2054
 19884   0158D2                     u6390:
 19885   0158D2  0E02               	movlw	2
 19886   0158D4  600A               	cpfslt	___xxtofl@exp^(0+1280),c
 19887   0158D6  EF6F  F0AC         	goto	u6401
 19888   0158DA  EF71  F0AC         	goto	u6400
 19889   0158DE                     u6401:
 19890   0158DE  EF5C  F0AC         	goto	l8665
 19891   0158E2                     u6400:
 19892   0158E2                     l2054:
 19893   0158E2  B00A               	btfsc	___xxtofl@exp^(0+1280),0,c
 19894   0158E4  EF76  F0AC         	goto	u6411
 19895   0158E8  EF78  F0AC         	goto	u6410
 19896   0158EC                     u6411:
 19897   0158EC  EF79  F0AC         	goto	l8673
 19898   0158F0                     u6410:
 19899   0158F0  9E0D               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
 19900   0158F2                     l8673:
 19901   0158F2  90D8               	bcf	status,0,c
 19902   0158F4  320A               	rrcf	___xxtofl@exp^(0+1280),f,c
 19903   0158F6  C50A  F505         	movff	___xxtofl@exp,??___xxtofl
 19904   0158FA  6A06               	clrf	(??___xxtofl+1)^(0+1280),c
 19905   0158FC  6A07               	clrf	(??___xxtofl+2)^(0+1280),c
 19906   0158FE  6A08               	clrf	(??___xxtofl+3)^(0+1280),c
 19907   015900  C505  F508         	movff	??___xxtofl,??___xxtofl+3
 19908   015904  6A07               	clrf	(??___xxtofl+2)^(0+1280),c
 19909   015906  6A06               	clrf	(??___xxtofl+1)^(0+1280),c
 19910   015908  6A05               	clrf	??___xxtofl^(0+1280),c
 19911   01590A  5005               	movf	??___xxtofl^(0+1280),w,c
 19912   01590C  120B               	iorwf	___xxtofl@arg^(0+1280),f,c
 19913   01590E  5006               	movf	(??___xxtofl+1)^(0+1280),w,c
 19914   015910  120C               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
 19915   015912  5007               	movf	(??___xxtofl+2)^(0+1280),w,c
 19916   015914  120D               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
 19917   015916  5008               	movf	(??___xxtofl+3)^(0+1280),w,c
 19918   015918  120E               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
 19919   01591A  5009               	movf	___xxtofl@sign^(0+1280),w,c
 19920   01591C  B4D8               	btfsc	status,2,c
 19921   01591E  EF93  F0AC         	goto	u6421
 19922   015922  EF95  F0AC         	goto	u6420
 19923   015926                     u6421:
 19924   015926  EF9D  F0AC         	goto	l8683
 19925   01592A                     u6420:
 19926   01592A  BE04               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
 19927   01592C  EF9C  F0AC         	goto	u6430
 19928   015930  EF9A  F0AC         	goto	u6431
 19929   015934                     u6431:
 19930   015934  EF9D  F0AC         	goto	l8683
 19931   015938                     u6430:
 19932   015938  8E0E               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
 19933   01593A                     l8683:
 19934   01593A  C50B  F501         	movff	___xxtofl@arg,?___xxtofl
 19935   01593E  C50C  F502         	movff	___xxtofl@arg+1,?___xxtofl+1
 19936   015942  C50D  F503         	movff	___xxtofl@arg+2,?___xxtofl+2
 19937   015946  C50E  F504         	movff	___xxtofl@arg+3,?___xxtofl+3
 19938   01594A                     l2043:
 19939   01594A  0012               	return		;funcret
 19940   01594C                     __end_of___xxtofl:
 19941                           	callstack 0
 19942                           
 19943 ;; *************** function _MPU6050_ReadRegisters *****************
 19944 ;; Defined at:
 19945 ;;		line 578 in file "MPU6050_DMP.c"
 19946 ;; Parameters:    Size  Location     Type
 19947 ;;  reg             1    wreg     unsigned char 
 19948 ;;  data            2   18[COMRAM] PTR unsigned char 
 19949 ;;		 -> MPU6050_ReadAll@raw_data(14), MPU6050_ReadTemperature@data(2), MPU6050_ReadGyro@data(6), MPU6050_ReadAccel@data(
      +6), 
 19950 ;;  length          1   20[COMRAM] unsigned char 
 19951 ;; Auto vars:     Size  Location     Type
 19952 ;;  reg             1   21[COMRAM] unsigned char 
 19953 ;; Return value:  Size  Location     Type
 19954 ;;                  1    wreg      _Bool 
 19955 ;; Registers used:
 19956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19957 ;; Tracked objects:
 19958 ;;		On entry : 0/0
 19959 ;;		On exit  : 0/0
 19960 ;;		Unchanged: 0/0
 19961 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19962 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19965 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19966 ;;Total ram usage:        4 bytes
 19967 ;; Hardware stack levels used: 1
 19968 ;; Hardware stack levels required when called: 4
 19969 ;; This function calls:
 19970 ;;		_SW_I2C_ReadBlock
 19971 ;; This function is called by:
 19972 ;;		_MPU6050_ReadAll
 19973 ;;		_MPU6050_ReadAccel
 19974 ;;		_MPU6050_ReadGyro
 19975 ;;		_MPU6050_ReadTemperature
 19976 ;; This function uses a non-reentrant model
 19977 ;;
 19978                           
 19979                           	psect	text46
 19980   016DE2                     __ptext46:
 19981                           	callstack 0
 19982   016DE2                     _MPU6050_ReadRegisters:
 19983                           	callstack 120
 19984                           
 19985                           ;incstack = 0
 19986                           ;MPU6050_ReadRegisters@reg stored from wreg
 19987   016DE2  6E16               	movwf	MPU6050_ReadRegisters@reg^(0+1280),c
 19988   016DE4                     
 19989                           ;MPU6050_DMP.c: 579:     return (SW_I2C_ReadBlock(0x68, reg, data, length) == SW_I2C_SUC
      +                          CESS);
 19990   016DE4  C516  F508         	movff	MPU6050_ReadRegisters@reg,SW_I2C_ReadBlock@reg_addr
 19991   016DE8  C513  F509         	movff	MPU6050_ReadRegisters@data,SW_I2C_ReadBlock@data
 19992   016DEC  C514  F50A         	movff	MPU6050_ReadRegisters@data+1,SW_I2C_ReadBlock@data+1
 19993   016DF0  C515  F50B         	movff	MPU6050_ReadRegisters@length,SW_I2C_ReadBlock@length
 19994   016DF4  0E68               	movlw	104
 19995   016DF6  EC5D  F0AD         	call	_SW_I2C_ReadBlock
 19996   016DFA  0900               	iorlw	0
 19997   016DFC  B4D8               	btfsc	status,2,c
 19998   016DFE  EF03  F0B7         	goto	u7241
 19999   016E02  EF06  F0B7         	goto	u7240
 20000   016E06                     u7241:
 20001   016E06  0E01               	movlw	1
 20002   016E08  EF07  F0B7         	goto	u7250
 20003   016E0C                     u7240:
 20004   016E0C  0E00               	movlw	0
 20005   016E0E                     u7250:
 20006   016E0E  0012               	return		;funcret
 20007   016E10                     __end_of_MPU6050_ReadRegisters:
 20008                           	callstack 0
 20009                           
 20010 ;; *************** function _SW_I2C_ReadBlock *****************
 20011 ;; Defined at:
 20012 ;;		line 332 in file "Software_I2C.c"
 20013 ;; Parameters:    Size  Location     Type
 20014 ;;  device_addr     1    wreg     unsigned char 
 20015 ;;  reg_addr        1    7[COMRAM] unsigned char 
 20016 ;;  data            2    8[COMRAM] PTR unsigned char 
 20017 ;;		 -> MPU6050_ReadAll@raw_data(14), MPU6050_ReadTemperature@data(2), MPU6050_ReadGyro@data(6), MPU6050_ReadAccel@data(
      +6), 
 20018 ;;  length          1   10[COMRAM] unsigned char 
 20019 ;; Auto vars:     Size  Location     Type
 20020 ;;  device_addr     1   15[COMRAM] unsigned char 
 20021 ;;  result          1   17[COMRAM] enum E17123
 20022 ;;  i               1   16[COMRAM] unsigned char 
 20023 ;; Return value:  Size  Location     Type
 20024 ;;                  1    wreg      enum E17547
 20025 ;; Registers used:
 20026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20027 ;; Tracked objects:
 20028 ;;		On entry : 0/0
 20029 ;;		On exit  : 0/0
 20030 ;;		Unchanged: 0/0
 20031 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20032 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20033 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20034 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20035 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20036 ;;Total ram usage:       11 bytes
 20037 ;; Hardware stack levels used: 1
 20038 ;; Hardware stack levels required when called: 3
 20039 ;; This function calls:
 20040 ;;		_SW_I2C_ReadByte
 20041 ;;		_SW_I2C_Restart
 20042 ;;		_SW_I2C_Start
 20043 ;;		_SW_I2C_Stop
 20044 ;;		_SW_I2C_WriteByte
 20045 ;; This function is called by:
 20046 ;;		_MPU6050_ReadRegisters
 20047 ;; This function uses a non-reentrant model
 20048 ;;
 20049                           
 20050                           	psect	text47
 20051   015ABA                     __ptext47:
 20052                           	callstack 0
 20053   015ABA                     _SW_I2C_ReadBlock:
 20054                           	callstack 120
 20055                           
 20056                           ;incstack = 0
 20057                           ;SW_I2C_ReadBlock@device_addr stored from wreg
 20058   015ABA  6E10               	movwf	SW_I2C_ReadBlock@device_addr^(0+1280),c
 20059   015ABC                     
 20060                           ;Software_I2C.c: 333:     sw_i2c_error_t result;;Software_I2C.c: 334:     uint8_t i;;Sof
      +                          tware_I2C.c: 336:     if (data == ((void*)0) || length == 0) {
 20061   015ABC  5009               	movf	SW_I2C_ReadBlock@data^(0+1280),w,c
 20062   015ABE  100A               	iorwf	(SW_I2C_ReadBlock@data+1)^(0+1280),w,c
 20063   015AC0  B4D8               	btfsc	status,2,c
 20064   015AC2  EF65  F0AD         	goto	u6241
 20065   015AC6  EF67  F0AD         	goto	u6240
 20066   015ACA                     u6241:
 20067   015ACA  EF6F  F0AD         	goto	l8527
 20068   015ACE                     u6240:
 20069   015ACE  500B               	movf	SW_I2C_ReadBlock@length^(0+1280),w,c
 20070   015AD0  A4D8               	btfss	status,2,c
 20071   015AD2  EF6D  F0AD         	goto	u6251
 20072   015AD6  EF6F  F0AD         	goto	u6250
 20073   015ADA                     u6251:
 20074   015ADA  EF72  F0AD         	goto	l8531
 20075   015ADE                     u6250:
 20076   015ADE                     l8527:
 20077                           
 20078                           ;Software_I2C.c: 337:         return SW_I2C_ERROR_TIMEOUT;
 20079   015ADE  0E02               	movlw	2
 20080   015AE0  EFF6  F0AD         	goto	l1082
 20081   015AE4                     l8531:
 20082                           
 20083                           ;Software_I2C.c: 341:     result = SW_I2C_Start();
 20084   015AE4  ECF7  F0AD         	call	_SW_I2C_Start	;wreg free
 20085   015AE8  6E12               	movwf	SW_I2C_ReadBlock@result^(0+1280),c
 20086   015AEA                     
 20087                           ;Software_I2C.c: 342:     if (result != SW_I2C_SUCCESS) {
 20088   015AEA  5012               	movf	SW_I2C_ReadBlock@result^(0+1280),w,c
 20089   015AEC  B4D8               	btfsc	status,2,c
 20090   015AEE  EF7B  F0AD         	goto	u6261
 20091   015AF2  EF7D  F0AD         	goto	u6260
 20092   015AF6                     u6261:
 20093   015AF6  EF80  F0AD         	goto	l8539
 20094   015AFA                     u6260:
 20095   015AFA                     l8535:
 20096                           
 20097                           ;Software_I2C.c: 343:         return result;
 20098   015AFA  5012               	movf	SW_I2C_ReadBlock@result^(0+1280),w,c
 20099   015AFC  EFF6  F0AD         	goto	l1082
 20100   015B00                     l8539:
 20101                           
 20102                           ;Software_I2C.c: 348:     result = SW_I2C_WriteByte((uint8_t)((device_addr << 1) | 0));
 20103   015B00  5010               	movf	SW_I2C_ReadBlock@device_addr^(0+1280),w,c
 20104   015B02  2410               	addwf	SW_I2C_ReadBlock@device_addr^(0+1280),w,c
 20105   015B04  EC26  F0A5         	call	_SW_I2C_WriteByte
 20106   015B08  6E12               	movwf	SW_I2C_ReadBlock@result^(0+1280),c
 20107   015B0A                     
 20108                           ;Software_I2C.c: 349:     if (result != SW_I2C_SUCCESS) {
 20109   015B0A  5012               	movf	SW_I2C_ReadBlock@result^(0+1280),w,c
 20110   015B0C  B4D8               	btfsc	status,2,c
 20111   015B0E  EF8B  F0AD         	goto	u6271
 20112   015B12  EF8D  F0AD         	goto	u6270
 20113   015B16                     u6271:
 20114   015B16  EF91  F0AD         	goto	l8549
 20115   015B1A                     u6270:
 20116   015B1A                     l8543:
 20117                           
 20118                           ;Software_I2C.c: 350:         SW_I2C_Stop();
 20119   015B1A  ECA6  F0AC         	call	_SW_I2C_Stop	;wreg free
 20120   015B1E  EF7D  F0AD         	goto	l8535
 20121   015B22                     l8549:
 20122                           
 20123                           ;Software_I2C.c: 355:     result = SW_I2C_WriteByte(reg_addr);
 20124   015B22  5008               	movf	SW_I2C_ReadBlock@reg_addr^(0+1280),w,c
 20125   015B24  EC26  F0A5         	call	_SW_I2C_WriteByte
 20126   015B28  6E12               	movwf	SW_I2C_ReadBlock@result^(0+1280),c
 20127   015B2A                     
 20128                           ;Software_I2C.c: 356:     if (result != SW_I2C_SUCCESS) {
 20129   015B2A  5012               	movf	SW_I2C_ReadBlock@result^(0+1280),w,c
 20130   015B2C  B4D8               	btfsc	status,2,c
 20131   015B2E  EF9B  F0AD         	goto	u6281
 20132   015B32  EF9D  F0AD         	goto	u6280
 20133   015B36                     u6281:
 20134   015B36  EF9F  F0AD         	goto	l8559
 20135   015B3A                     u6280:
 20136   015B3A  EF8D  F0AD         	goto	l8543
 20137   015B3E                     l8559:
 20138                           
 20139                           ;Software_I2C.c: 362:     result = SW_I2C_Restart();
 20140   015B3E  EC84  F0B7         	call	_SW_I2C_Restart	;wreg free
 20141   015B42  6E12               	movwf	SW_I2C_ReadBlock@result^(0+1280),c
 20142   015B44                     
 20143                           ;Software_I2C.c: 363:     if (result != SW_I2C_SUCCESS) {
 20144   015B44  5012               	movf	SW_I2C_ReadBlock@result^(0+1280),w,c
 20145   015B46  B4D8               	btfsc	status,2,c
 20146   015B48  EFA8  F0AD         	goto	u6291
 20147   015B4C  EFAA  F0AD         	goto	u6290
 20148   015B50                     u6291:
 20149   015B50  EFAC  F0AD         	goto	l8569
 20150   015B54                     u6290:
 20151   015B54  EF8D  F0AD         	goto	l8543
 20152   015B58                     l8569:
 20153                           
 20154                           ;Software_I2C.c: 370:     result = SW_I2C_WriteByte((uint8_t)((device_addr << 1) | 1));
 20155   015B58  80D8               	bsf	status,0,c
 20156   015B5A  3410               	rlcf	SW_I2C_ReadBlock@device_addr^(0+1280),w,c
 20157   015B5C  EC26  F0A5         	call	_SW_I2C_WriteByte
 20158   015B60  6E12               	movwf	SW_I2C_ReadBlock@result^(0+1280),c
 20159   015B62                     
 20160                           ;Software_I2C.c: 371:     if (result != SW_I2C_SUCCESS) {
 20161   015B62  5012               	movf	SW_I2C_ReadBlock@result^(0+1280),w,c
 20162   015B64  B4D8               	btfsc	status,2,c
 20163   015B66  EFB7  F0AD         	goto	u6301
 20164   015B6A  EFB9  F0AD         	goto	u6300
 20165   015B6E                     u6301:
 20166   015B6E  EFBB  F0AD         	goto	l1087
 20167   015B72                     u6300:
 20168   015B72  EF8D  F0AD         	goto	l8543
 20169   015B76                     l1087:
 20170                           
 20171                           ;Software_I2C.c: 377:     for (i = 0; i < length; i++) {
 20172   015B76  6A11               	clrf	SW_I2C_ReadBlock@i^(0+1280),c
 20173   015B78  EFEA  F0AD         	goto	l8587
 20174   015B7C                     l8579:
 20175                           
 20176                           ;Software_I2C.c: 378:         if (i == (length - 1)) {
 20177   015B7C  5011               	movf	SW_I2C_ReadBlock@i^(0+1280),w,c
 20178   015B7E  6E0C               	movwf	??_SW_I2C_ReadBlock^(0+1280),c
 20179   015B80  6A0D               	clrf	(??_SW_I2C_ReadBlock+1)^(0+1280),c
 20180   015B82  0EFF               	movlw	255
 20181   015B84  240B               	addwf	SW_I2C_ReadBlock@length^(0+1280),w,c
 20182   015B86  6E0E               	movwf	(??_SW_I2C_ReadBlock+2)^(0+1280),c
 20183   015B88  6A0F               	clrf	(??_SW_I2C_ReadBlock+3)^(0+1280),c
 20184   015B8A  0EFF               	movlw	255
 20185   015B8C  220F               	addwfc	(??_SW_I2C_ReadBlock+3)^(0+1280),f,c
 20186   015B8E  500C               	movf	??_SW_I2C_ReadBlock^(0+1280),w,c
 20187   015B90  180E               	xorwf	(??_SW_I2C_ReadBlock+2)^(0+1280),w,c
 20188   015B92  E107               	bnz	u6311
 20189   015B94  500D               	movf	(??_SW_I2C_ReadBlock+1)^(0+1280),w,c
 20190   015B96  180F               	xorwf	(??_SW_I2C_ReadBlock+3)^(0+1280),w,c
 20191   015B98  A4D8               	btfss	status,2,c
 20192   015B9A  EFD1  F0AD         	goto	u6311
 20193   015B9E  EFD3  F0AD         	goto	u6310
 20194   015BA2                     u6311:
 20195   015BA2  EFDF  F0AD         	goto	l8583
 20196   015BA6                     u6310:
 20197   015BA6                     
 20198                           ;Software_I2C.c: 379:             data[i] = SW_I2C_ReadByte(0);
 20199   015BA6  5011               	movf	SW_I2C_ReadBlock@i^(0+1280),w,c
 20200   015BA8  2409               	addwf	SW_I2C_ReadBlock@data^(0+1280),w,c
 20201   015BAA  6ED9               	movwf	fsr2l,c
 20202   015BAC  0E00               	movlw	0
 20203   015BAE  200A               	addwfc	(SW_I2C_ReadBlock@data+1)^(0+1280),w,c
 20204   015BB0  6EDA               	movwf	fsr2h,c
 20205   015BB2  0E00               	movlw	0
 20206   015BB4  ECA9  F0B0         	call	_SW_I2C_ReadByte
 20207   015BB8  6EDF               	movwf	indf2,c
 20208                           
 20209                           ;Software_I2C.c: 380:         } else {
 20210   015BBA  EFE9  F0AD         	goto	l8585
 20211   015BBE                     l8583:
 20212                           
 20213                           ;Software_I2C.c: 381:             data[i] = SW_I2C_ReadByte(1);
 20214   015BBE  5011               	movf	SW_I2C_ReadBlock@i^(0+1280),w,c
 20215   015BC0  2409               	addwf	SW_I2C_ReadBlock@data^(0+1280),w,c
 20216   015BC2  6ED9               	movwf	fsr2l,c
 20217   015BC4  0E00               	movlw	0
 20218   015BC6  200A               	addwfc	(SW_I2C_ReadBlock@data+1)^(0+1280),w,c
 20219   015BC8  6EDA               	movwf	fsr2h,c
 20220   015BCA  0E01               	movlw	1
 20221   015BCC  ECA9  F0B0         	call	_SW_I2C_ReadByte
 20222   015BD0  6EDF               	movwf	indf2,c
 20223   015BD2                     l8585:
 20224                           
 20225                           ;Software_I2C.c: 383:     }
 20226   015BD2  2A11               	incf	SW_I2C_ReadBlock@i^(0+1280),f,c
 20227   015BD4                     l8587:
 20228   015BD4  500B               	movf	SW_I2C_ReadBlock@length^(0+1280),w,c
 20229   015BD6  5C11               	subwf	SW_I2C_ReadBlock@i^(0+1280),w,c
 20230   015BD8  A0D8               	btfss	status,0,c
 20231   015BDA  EFF1  F0AD         	goto	u6321
 20232   015BDE  EFF3  F0AD         	goto	u6320
 20233   015BE2                     u6321:
 20234   015BE2  EFBE  F0AD         	goto	l8579
 20235   015BE6                     u6320:
 20236   015BE6                     
 20237                           ;Software_I2C.c: 386:     SW_I2C_Stop();
 20238   015BE6  ECA6  F0AC         	call	_SW_I2C_Stop	;wreg free
 20239   015BEA                     
 20240                           ;Software_I2C.c: 388:     return SW_I2C_SUCCESS;
 20241   015BEA  0E00               	movlw	0
 20242   015BEC                     l1082:
 20243   015BEC  0012               	return		;funcret
 20244   015BEE                     __end_of_SW_I2C_ReadBlock:
 20245                           	callstack 0
 20246                           
 20247 ;; *************** function _SW_I2C_WriteByte *****************
 20248 ;; Defined at:
 20249 ;;		line 118 in file "Software_I2C.c"
 20250 ;; Parameters:    Size  Location     Type
 20251 ;;  data            1    wreg     unsigned char 
 20252 ;; Auto vars:     Size  Location     Type
 20253 ;;  data            1    2[COMRAM] unsigned char 
 20254 ;;  i               1    4[COMRAM] unsigned char 
 20255 ;;  ack             1    3[COMRAM] unsigned char 
 20256 ;; Return value:  Size  Location     Type
 20257 ;;                  1    wreg      enum E17123
 20258 ;; Registers used:
 20259 ;;		wreg, status,2, status,0
 20260 ;; Tracked objects:
 20261 ;;		On entry : 0/0
 20262 ;;		On exit  : 0/0
 20263 ;;		Unchanged: 0/0
 20264 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20266 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20267 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20268 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20269 ;;Total ram usage:        5 bytes
 20270 ;; Hardware stack levels used: 1
 20271 ;; This function calls:
 20272 ;;		Nothing
 20273 ;; This function is called by:
 20274 ;;		_SW_I2C_WriteRegister
 20275 ;;		_SW_I2C_ReadRegister
 20276 ;;		_SW_I2C_ReadBlock
 20277 ;;		_SW_I2C_ScanBus
 20278 ;; This function uses a non-reentrant model
 20279 ;;
 20280                           
 20281                           	psect	text48
 20282   014A4C                     __ptext48:
 20283                           	callstack 0
 20284   014A4C                     _SW_I2C_WriteByte:
 20285                           	callstack 122
 20286                           
 20287                           ;incstack = 0
 20288                           ;SW_I2C_WriteByte@data stored from wreg
 20289   014A4C  6E03               	movwf	SW_I2C_WriteByte@data^(0+1280),c
 20290   014A4E                     
 20291                           ;Software_I2C.c: 119:     uint8_t i;;Software_I2C.c: 122:     for (i = 0; i < 8; i++) {
 20292   014A4E  6A05               	clrf	SW_I2C_WriteByte@i^(0+1280),c
 20293   014A50                     l926:
 20294                           
 20295                           ;Software_I2C.c: 124:         if (data & 0x80) {
 20296   014A50  AE03               	btfss	SW_I2C_WriteByte@data^(0+1280),7,c
 20297   014A52  EF2D  F0A5         	goto	u4651
 20298   014A56  EF2F  F0A5         	goto	u4650
 20299   014A5A                     u4651:
 20300   014A5A  EF32  F0A5         	goto	l928
 20301   014A5E                     u4650:
 20302   014A5E                     
 20303                           ;Software_I2C.c: 125:             (TRISBbits.TRISB2 = 1);
 20304   014A5E  84C7               	bsf	199,2,c	;volatile
 20305                           
 20306                           ;Software_I2C.c: 126:         } else {
 20307   014A60  EF47  F0A5         	goto	l7373
 20308   014A64                     l928:
 20309                           
 20310                           ;Software_I2C.c: 127:             (TRISBbits.TRISB2 = 0);
 20311   014A64  94C7               	bcf	199,2,c	;volatile
 20312                           
 20313                           ;Software_I2C.c: 128:             (LATBbits.LATB2 = 0);
 20314   014A66  94BF               	bcf	191,2,c	;volatile
 20315   014A68  EF47  F0A5         	goto	l7373
 20316   014A6C                     l7363:
 20317   014A6C  0E1A               	movlw	26
 20318   014A6E                     u8927:
 20319   014A6E  2EE8               	decfsz	wreg,f,c
 20320   014A70  D7FE               	bra	u8927
 20321   014A72  D000               	nop2	
 20322   014A74  EF60  F0A5         	goto	l937
 20323   014A78                     l7365:
 20324   014A78  0E2A               	movlw	42
 20325   014A7A                     u8937:
 20326   014A7A  2EE8               	decfsz	wreg,f,c
 20327   014A7C  D7FE               	bra	u8937
 20328   014A7E  D000               	nop2	
 20329   014A80  EF60  F0A5         	goto	l937
 20330   014A84                     l7367:
 20331   014A84  0E40               	movlw	64
 20332   014A86                     u8947:
 20333   014A86  2EE8               	decfsz	wreg,f,c
 20334   014A88  D7FE               	bra	u8947
 20335   014A8A  EF60  F0A5         	goto	l937
 20336   014A8E                     l7373:
 20337   014A8E  505F               	movf	_current_i2c_speed^(0+1280),w,c
 20338   014A90  6E01               	movwf	??_SW_I2C_WriteByte^(0+1280),c
 20339   014A92  6A02               	clrf	(??_SW_I2C_WriteByte+1)^(0+1280),c
 20340                           
 20341                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20342                           ; Switch size 1, requested type "simple"
 20343                           ; Number of cases is 1, Range of values is 0 to 0
 20344                           ; switch strategies available:
 20345                           ; Name         Instructions Cycles
 20346                           ; simple_byte            4     3 (average)
 20347                           ;	Chosen strategy is simple_byte
 20348   014A94  5002               	movf	(??_SW_I2C_WriteByte+1)^(0+1280),w,c
 20349   014A96  0A00               	xorlw	0	; case 0
 20350   014A98  B4D8               	btfsc	status,2,c
 20351   014A9A  EF51  F0A5         	goto	l11203
 20352   014A9E  EF3C  F0A5         	goto	l7365
 20353   014AA2                     l11203:
 20354                           
 20355                           ; Switch size 1, requested type "simple"
 20356                           ; Number of cases is 3, Range of values is 0 to 2
 20357                           ; switch strategies available:
 20358                           ; Name         Instructions Cycles
 20359                           ; simple_byte           10     6 (average)
 20360                           ;	Chosen strategy is simple_byte
 20361   014AA2  5001               	movf	??_SW_I2C_WriteByte^(0+1280),w,c
 20362   014AA4  0A00               	xorlw	0	; case 0
 20363   014AA6  B4D8               	btfsc	status,2,c
 20364   014AA8  EF36  F0A5         	goto	l7363
 20365   014AAC  0A01               	xorlw	1	; case 1
 20366   014AAE  B4D8               	btfsc	status,2,c
 20367   014AB0  EF3C  F0A5         	goto	l7365
 20368   014AB4  0A03               	xorlw	3	; case 2
 20369   014AB6  B4D8               	btfsc	status,2,c
 20370   014AB8  EF42  F0A5         	goto	l7367
 20371   014ABC  EF3C  F0A5         	goto	l7365
 20372   014AC0                     l937:
 20373                           
 20374                           ;Software_I2C.c: 134:         (TRISBbits.TRISB1 = 1);
 20375   014AC0  82C7               	bsf	199,1,c	;volatile
 20376   014AC2  EF74  F0A5         	goto	l7385
 20377   014AC6                     l7375:
 20378   014AC6  0E1A               	movlw	26
 20379   014AC8                     u8957:
 20380   014AC8  2EE8               	decfsz	wreg,f,c
 20381   014ACA  D7FE               	bra	u8957
 20382   014ACC  D000               	nop2	
 20383   014ACE  EF8D  F0A5         	goto	l945
 20384   014AD2                     l7377:
 20385   014AD2  0E2A               	movlw	42
 20386   014AD4                     u8967:
 20387   014AD4  2EE8               	decfsz	wreg,f,c
 20388   014AD6  D7FE               	bra	u8967
 20389   014AD8  D000               	nop2	
 20390   014ADA  EF8D  F0A5         	goto	l945
 20391   014ADE                     l7379:
 20392   014ADE  0E40               	movlw	64
 20393   014AE0                     u8977:
 20394   014AE0  2EE8               	decfsz	wreg,f,c
 20395   014AE2  D7FE               	bra	u8977
 20396   014AE4  EF8D  F0A5         	goto	l945
 20397   014AE8                     l7385:
 20398   014AE8  505F               	movf	_current_i2c_speed^(0+1280),w,c
 20399   014AEA  6E01               	movwf	??_SW_I2C_WriteByte^(0+1280),c
 20400   014AEC  6A02               	clrf	(??_SW_I2C_WriteByte+1)^(0+1280),c
 20401                           
 20402                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20403                           ; Switch size 1, requested type "simple"
 20404                           ; Number of cases is 1, Range of values is 0 to 0
 20405                           ; switch strategies available:
 20406                           ; Name         Instructions Cycles
 20407                           ; simple_byte            4     3 (average)
 20408                           ;	Chosen strategy is simple_byte
 20409   014AEE  5002               	movf	(??_SW_I2C_WriteByte+1)^(0+1280),w,c
 20410   014AF0  0A00               	xorlw	0	; case 0
 20411   014AF2  B4D8               	btfsc	status,2,c
 20412   014AF4  EF7E  F0A5         	goto	l11205
 20413   014AF8  EF69  F0A5         	goto	l7377
 20414   014AFC                     l11205:
 20415                           
 20416                           ; Switch size 1, requested type "simple"
 20417                           ; Number of cases is 3, Range of values is 0 to 2
 20418                           ; switch strategies available:
 20419                           ; Name         Instructions Cycles
 20420                           ; simple_byte           10     6 (average)
 20421                           ;	Chosen strategy is simple_byte
 20422   014AFC  5001               	movf	??_SW_I2C_WriteByte^(0+1280),w,c
 20423   014AFE  0A00               	xorlw	0	; case 0
 20424   014B00  B4D8               	btfsc	status,2,c
 20425   014B02  EF63  F0A5         	goto	l7375
 20426   014B06  0A01               	xorlw	1	; case 1
 20427   014B08  B4D8               	btfsc	status,2,c
 20428   014B0A  EF69  F0A5         	goto	l7377
 20429   014B0E  0A03               	xorlw	3	; case 2
 20430   014B10  B4D8               	btfsc	status,2,c
 20431   014B12  EF6F  F0A5         	goto	l7379
 20432   014B16  EF69  F0A5         	goto	l7377
 20433   014B1A                     l945:
 20434                           
 20435                           ;Software_I2C.c: 136:         (TRISBbits.TRISB1 = 0);
 20436   014B1A  92C7               	bcf	199,1,c	;volatile
 20437                           
 20438                           ;Software_I2C.c: 137:         (LATBbits.LATB1 = 0);
 20439   014B1C  92BF               	bcf	191,1,c	;volatile
 20440   014B1E  EFA2  F0A5         	goto	l7397
 20441   014B22                     l7387:
 20442   014B22  0E1A               	movlw	26
 20443   014B24                     u8987:
 20444   014B24  2EE8               	decfsz	wreg,f,c
 20445   014B26  D7FE               	bra	u8987
 20446   014B28  D000               	nop2	
 20447   014B2A  EFBB  F0A5         	goto	l7399
 20448   014B2E                     l7389:
 20449   014B2E  0E2A               	movlw	42
 20450   014B30                     u8997:
 20451   014B30  2EE8               	decfsz	wreg,f,c
 20452   014B32  D7FE               	bra	u8997
 20453   014B34  D000               	nop2	
 20454   014B36  EFBB  F0A5         	goto	l7399
 20455   014B3A                     l7391:
 20456   014B3A  0E40               	movlw	64
 20457   014B3C                     u9007:
 20458   014B3C  2EE8               	decfsz	wreg,f,c
 20459   014B3E  D7FE               	bra	u9007
 20460   014B40  EFBB  F0A5         	goto	l7399
 20461   014B44                     l7397:
 20462   014B44  505F               	movf	_current_i2c_speed^(0+1280),w,c
 20463   014B46  6E01               	movwf	??_SW_I2C_WriteByte^(0+1280),c
 20464   014B48  6A02               	clrf	(??_SW_I2C_WriteByte+1)^(0+1280),c
 20465                           
 20466                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20467                           ; Switch size 1, requested type "simple"
 20468                           ; Number of cases is 1, Range of values is 0 to 0
 20469                           ; switch strategies available:
 20470                           ; Name         Instructions Cycles
 20471                           ; simple_byte            4     3 (average)
 20472                           ;	Chosen strategy is simple_byte
 20473   014B4A  5002               	movf	(??_SW_I2C_WriteByte+1)^(0+1280),w,c
 20474   014B4C  0A00               	xorlw	0	; case 0
 20475   014B4E  B4D8               	btfsc	status,2,c
 20476   014B50  EFAC  F0A5         	goto	l11207
 20477   014B54  EF97  F0A5         	goto	l7389
 20478   014B58                     l11207:
 20479                           
 20480                           ; Switch size 1, requested type "simple"
 20481                           ; Number of cases is 3, Range of values is 0 to 2
 20482                           ; switch strategies available:
 20483                           ; Name         Instructions Cycles
 20484                           ; simple_byte           10     6 (average)
 20485                           ;	Chosen strategy is simple_byte
 20486   014B58  5001               	movf	??_SW_I2C_WriteByte^(0+1280),w,c
 20487   014B5A  0A00               	xorlw	0	; case 0
 20488   014B5C  B4D8               	btfsc	status,2,c
 20489   014B5E  EF91  F0A5         	goto	l7387
 20490   014B62  0A01               	xorlw	1	; case 1
 20491   014B64  B4D8               	btfsc	status,2,c
 20492   014B66  EF97  F0A5         	goto	l7389
 20493   014B6A  0A03               	xorlw	3	; case 2
 20494   014B6C  B4D8               	btfsc	status,2,c
 20495   014B6E  EF9D  F0A5         	goto	l7391
 20496   014B72  EF97  F0A5         	goto	l7389
 20497   014B76                     l7399:
 20498                           
 20499                           ;Software_I2C.c: 140:         data <<= 1;
 20500   014B76  90D8               	bcf	status,0,c
 20501   014B78  3603               	rlcf	SW_I2C_WriteByte@data^(0+1280),f,c
 20502   014B7A                     
 20503                           ;Software_I2C.c: 141:     }
 20504   014B7A  2A05               	incf	SW_I2C_WriteByte@i^(0+1280),f,c
 20505   014B7C  0E07               	movlw	7
 20506   014B7E  6405               	cpfsgt	SW_I2C_WriteByte@i^(0+1280),c
 20507   014B80  EFC4  F0A5         	goto	u4661
 20508   014B84  EFC6  F0A5         	goto	u4660
 20509   014B88                     u4661:
 20510   014B88  EF28  F0A5         	goto	l926
 20511   014B8C                     u4660:
 20512   014B8C                     
 20513                           ;Software_I2C.c: 144:     (TRISBbits.TRISB2 = 1);
 20514   014B8C  84C7               	bsf	199,2,c	;volatile
 20515   014B8E  EFDA  F0A5         	goto	l7415
 20516   014B92                     l7405:
 20517   014B92  0E1A               	movlw	26
 20518   014B94                     u9017:
 20519   014B94  2EE8               	decfsz	wreg,f,c
 20520   014B96  D7FE               	bra	u9017
 20521   014B98  D000               	nop2	
 20522   014B9A  EFF3  F0A5         	goto	l961
 20523   014B9E                     l7407:
 20524   014B9E  0E2A               	movlw	42
 20525   014BA0                     u9027:
 20526   014BA0  2EE8               	decfsz	wreg,f,c
 20527   014BA2  D7FE               	bra	u9027
 20528   014BA4  D000               	nop2	
 20529   014BA6  EFF3  F0A5         	goto	l961
 20530   014BAA                     l7409:
 20531   014BAA  0E40               	movlw	64
 20532   014BAC                     u9037:
 20533   014BAC  2EE8               	decfsz	wreg,f,c
 20534   014BAE  D7FE               	bra	u9037
 20535   014BB0  EFF3  F0A5         	goto	l961
 20536   014BB4                     l7415:
 20537   014BB4  505F               	movf	_current_i2c_speed^(0+1280),w,c
 20538   014BB6  6E01               	movwf	??_SW_I2C_WriteByte^(0+1280),c
 20539   014BB8  6A02               	clrf	(??_SW_I2C_WriteByte+1)^(0+1280),c
 20540                           
 20541                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20542                           ; Switch size 1, requested type "simple"
 20543                           ; Number of cases is 1, Range of values is 0 to 0
 20544                           ; switch strategies available:
 20545                           ; Name         Instructions Cycles
 20546                           ; simple_byte            4     3 (average)
 20547                           ;	Chosen strategy is simple_byte
 20548   014BBA  5002               	movf	(??_SW_I2C_WriteByte+1)^(0+1280),w,c
 20549   014BBC  0A00               	xorlw	0	; case 0
 20550   014BBE  B4D8               	btfsc	status,2,c
 20551   014BC0  EFE4  F0A5         	goto	l11209
 20552   014BC4  EFCF  F0A5         	goto	l7407
 20553   014BC8                     l11209:
 20554                           
 20555                           ; Switch size 1, requested type "simple"
 20556                           ; Number of cases is 3, Range of values is 0 to 2
 20557                           ; switch strategies available:
 20558                           ; Name         Instructions Cycles
 20559                           ; simple_byte           10     6 (average)
 20560                           ;	Chosen strategy is simple_byte
 20561   014BC8  5001               	movf	??_SW_I2C_WriteByte^(0+1280),w,c
 20562   014BCA  0A00               	xorlw	0	; case 0
 20563   014BCC  B4D8               	btfsc	status,2,c
 20564   014BCE  EFC9  F0A5         	goto	l7405
 20565   014BD2  0A01               	xorlw	1	; case 1
 20566   014BD4  B4D8               	btfsc	status,2,c
 20567   014BD6  EFCF  F0A5         	goto	l7407
 20568   014BDA  0A03               	xorlw	3	; case 2
 20569   014BDC  B4D8               	btfsc	status,2,c
 20570   014BDE  EFD5  F0A5         	goto	l7409
 20571   014BE2  EFCF  F0A5         	goto	l7407
 20572   014BE6                     l961:
 20573                           
 20574                           ;Software_I2C.c: 147:     (TRISBbits.TRISB1 = 1);
 20575   014BE6  82C7               	bsf	199,1,c	;volatile
 20576   014BE8  EF07  F0A6         	goto	l7427
 20577   014BEC                     l7417:
 20578   014BEC  0E1A               	movlw	26
 20579   014BEE                     u9047:
 20580   014BEE  2EE8               	decfsz	wreg,f,c
 20581   014BF0  D7FE               	bra	u9047
 20582   014BF2  D000               	nop2	
 20583   014BF4  EF20  F0A6         	goto	l7429
 20584   014BF8                     l7419:
 20585   014BF8  0E2A               	movlw	42
 20586   014BFA                     u9057:
 20587   014BFA  2EE8               	decfsz	wreg,f,c
 20588   014BFC  D7FE               	bra	u9057
 20589   014BFE  D000               	nop2	
 20590   014C00  EF20  F0A6         	goto	l7429
 20591   014C04                     l7421:
 20592   014C04  0E40               	movlw	64
 20593   014C06                     u9067:
 20594   014C06  2EE8               	decfsz	wreg,f,c
 20595   014C08  D7FE               	bra	u9067
 20596   014C0A  EF20  F0A6         	goto	l7429
 20597   014C0E                     l7427:
 20598   014C0E  505F               	movf	_current_i2c_speed^(0+1280),w,c
 20599   014C10  6E01               	movwf	??_SW_I2C_WriteByte^(0+1280),c
 20600   014C12  6A02               	clrf	(??_SW_I2C_WriteByte+1)^(0+1280),c
 20601                           
 20602                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20603                           ; Switch size 1, requested type "simple"
 20604                           ; Number of cases is 1, Range of values is 0 to 0
 20605                           ; switch strategies available:
 20606                           ; Name         Instructions Cycles
 20607                           ; simple_byte            4     3 (average)
 20608                           ;	Chosen strategy is simple_byte
 20609   014C14  5002               	movf	(??_SW_I2C_WriteByte+1)^(0+1280),w,c
 20610   014C16  0A00               	xorlw	0	; case 0
 20611   014C18  B4D8               	btfsc	status,2,c
 20612   014C1A  EF11  F0A6         	goto	l11211
 20613   014C1E  EFFC  F0A5         	goto	l7419
 20614   014C22                     l11211:
 20615                           
 20616                           ; Switch size 1, requested type "simple"
 20617                           ; Number of cases is 3, Range of values is 0 to 2
 20618                           ; switch strategies available:
 20619                           ; Name         Instructions Cycles
 20620                           ; simple_byte           10     6 (average)
 20621                           ;	Chosen strategy is simple_byte
 20622   014C22  5001               	movf	??_SW_I2C_WriteByte^(0+1280),w,c
 20623   014C24  0A00               	xorlw	0	; case 0
 20624   014C26  B4D8               	btfsc	status,2,c
 20625   014C28  EFF6  F0A5         	goto	l7417
 20626   014C2C  0A01               	xorlw	1	; case 1
 20627   014C2E  B4D8               	btfsc	status,2,c
 20628   014C30  EFFC  F0A5         	goto	l7419
 20629   014C34  0A03               	xorlw	3	; case 2
 20630   014C36  B4D8               	btfsc	status,2,c
 20631   014C38  EF02  F0A6         	goto	l7421
 20632   014C3C  EFFC  F0A5         	goto	l7419
 20633   014C40                     l7429:
 20634                           
 20635                           ;Software_I2C.c: 150:     uint8_t ack = (PORTBbits.RB2);
 20636   014C40  0E00               	movlw	0
 20637   014C42  B4CF               	btfsc	207,2,c	;volatile
 20638   014C44  0E01               	movlw	1
 20639   014C46  6E04               	movwf	SW_I2C_WriteByte@ack^(0+1280),c
 20640   014C48                     
 20641                           ;Software_I2C.c: 152:     (TRISBbits.TRISB1 = 0);
 20642   014C48  92C7               	bcf	199,1,c	;volatile
 20643   014C4A                     
 20644                           ;Software_I2C.c: 153:     (LATBbits.LATB1 = 0);
 20645   014C4A  92BF               	bcf	191,1,c	;volatile
 20646   014C4C  EF39  F0A6         	goto	l7445
 20647   014C50                     l7435:
 20648   014C50  0E1A               	movlw	26
 20649   014C52                     u9077:
 20650   014C52  2EE8               	decfsz	wreg,f,c
 20651   014C54  D7FE               	bra	u9077
 20652   014C56  D000               	nop2	
 20653   014C58  EF52  F0A6         	goto	l7447
 20654   014C5C                     l7437:
 20655   014C5C  0E2A               	movlw	42
 20656   014C5E                     u9087:
 20657   014C5E  2EE8               	decfsz	wreg,f,c
 20658   014C60  D7FE               	bra	u9087
 20659   014C62  D000               	nop2	
 20660   014C64  EF52  F0A6         	goto	l7447
 20661   014C68                     l7439:
 20662   014C68  0E40               	movlw	64
 20663   014C6A                     u9097:
 20664   014C6A  2EE8               	decfsz	wreg,f,c
 20665   014C6C  D7FE               	bra	u9097
 20666   014C6E  EF52  F0A6         	goto	l7447
 20667   014C72                     l7445:
 20668   014C72  505F               	movf	_current_i2c_speed^(0+1280),w,c
 20669   014C74  6E01               	movwf	??_SW_I2C_WriteByte^(0+1280),c
 20670   014C76  6A02               	clrf	(??_SW_I2C_WriteByte+1)^(0+1280),c
 20671                           
 20672                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20673                           ; Switch size 1, requested type "simple"
 20674                           ; Number of cases is 1, Range of values is 0 to 0
 20675                           ; switch strategies available:
 20676                           ; Name         Instructions Cycles
 20677                           ; simple_byte            4     3 (average)
 20678                           ;	Chosen strategy is simple_byte
 20679   014C78  5002               	movf	(??_SW_I2C_WriteByte+1)^(0+1280),w,c
 20680   014C7A  0A00               	xorlw	0	; case 0
 20681   014C7C  B4D8               	btfsc	status,2,c
 20682   014C7E  EF43  F0A6         	goto	l11213
 20683   014C82  EF2E  F0A6         	goto	l7437
 20684   014C86                     l11213:
 20685                           
 20686                           ; Switch size 1, requested type "simple"
 20687                           ; Number of cases is 3, Range of values is 0 to 2
 20688                           ; switch strategies available:
 20689                           ; Name         Instructions Cycles
 20690                           ; simple_byte           10     6 (average)
 20691                           ;	Chosen strategy is simple_byte
 20692   014C86  5001               	movf	??_SW_I2C_WriteByte^(0+1280),w,c
 20693   014C88  0A00               	xorlw	0	; case 0
 20694   014C8A  B4D8               	btfsc	status,2,c
 20695   014C8C  EF28  F0A6         	goto	l7435
 20696   014C90  0A01               	xorlw	1	; case 1
 20697   014C92  B4D8               	btfsc	status,2,c
 20698   014C94  EF2E  F0A6         	goto	l7437
 20699   014C98  0A03               	xorlw	3	; case 2
 20700   014C9A  B4D8               	btfsc	status,2,c
 20701   014C9C  EF34  F0A6         	goto	l7439
 20702   014CA0  EF2E  F0A6         	goto	l7437
 20703   014CA4                     l7447:
 20704                           
 20705                           ;Software_I2C.c: 156:     return (ack == 0) ? SW_I2C_SUCCESS : SW_I2C_ERROR_NACK;
 20706   014CA4  5004               	movf	SW_I2C_WriteByte@ack^(0+1280),w,c
 20707   014CA6  A4D8               	btfss	status,2,c
 20708   014CA8  EF58  F0A6         	goto	u4671
 20709   014CAC  EF5B  F0A6         	goto	u4670
 20710   014CB0                     u4671:
 20711   014CB0  0E01               	movlw	1
 20712   014CB2  EF5C  F0A6         	goto	u4680
 20713   014CB6                     u4670:
 20714   014CB6  0E00               	movlw	0
 20715   014CB8                     u4680:
 20716   014CB8  0012               	return		;funcret
 20717   014CBA                     __end_of_SW_I2C_WriteByte:
 20718                           	callstack 0
 20719                           
 20720 ;; *************** function _SW_I2C_Restart *****************
 20721 ;; Defined at:
 20722 ;;		line 108 in file "Software_I2C.c"
 20723 ;; Parameters:    Size  Location     Type
 20724 ;;		None
 20725 ;; Auto vars:     Size  Location     Type
 20726 ;;		None
 20727 ;; Return value:  Size  Location     Type
 20728 ;;                  1    wreg      enum E17123
 20729 ;; Registers used:
 20730 ;;		wreg, status,2, status,0, cstack
 20731 ;; Tracked objects:
 20732 ;;		On entry : 0/0
 20733 ;;		On exit  : 0/0
 20734 ;;		Unchanged: 0/0
 20735 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20740 ;;Total ram usage:        0 bytes
 20741 ;; Hardware stack levels used: 1
 20742 ;; Hardware stack levels required when called: 2
 20743 ;; This function calls:
 20744 ;;		_SW_I2C_Start
 20745 ;;		_SW_I2C_Stop
 20746 ;; This function is called by:
 20747 ;;		_SW_I2C_ReadRegister
 20748 ;;		_SW_I2C_ReadBlock
 20749 ;; This function uses a non-reentrant model
 20750 ;;
 20751                           
 20752                           	psect	text49
 20753   016F08                     __ptext49:
 20754                           	callstack 0
 20755   016F08                     _SW_I2C_Restart:
 20756                           	callstack 119
 20757   016F08                     
 20758                           ;Software_I2C.c: 110:     SW_I2C_Stop();
 20759   016F08  ECA6  F0AC         	call	_SW_I2C_Stop	;wreg free
 20760   016F0C                     
 20761                           ;Software_I2C.c: 111:     _delay((unsigned long)((8)*(64000000UL/4000000.0)));
 20762   016F0C  0E2A               	movlw	42
 20763   016F0E                     u9107:
 20764   016F0E  2EE8               	decfsz	wreg,f,c
 20765   016F10  D7FE               	bra	u9107
 20766   016F12  D000               	nop2	
 20767   016F14                     
 20768                           ;Software_I2C.c: 112:     return SW_I2C_Start();
 20769   016F14  ECF7  F0AD         	call	_SW_I2C_Start	;wreg free
 20770   016F18  0012               	return		;funcret
 20771   016F1A                     __end_of_SW_I2C_Restart:
 20772                           	callstack 0
 20773                           
 20774 ;; *************** function _SW_I2C_Stop *****************
 20775 ;; Defined at:
 20776 ;;		line 86 in file "Software_I2C.c"
 20777 ;; Parameters:    Size  Location     Type
 20778 ;;		None
 20779 ;; Auto vars:     Size  Location     Type
 20780 ;;		None
 20781 ;; Return value:  Size  Location     Type
 20782 ;;                  1    wreg      void 
 20783 ;; Registers used:
 20784 ;;		wreg, status,2, status,0
 20785 ;; Tracked objects:
 20786 ;;		On entry : 0/0
 20787 ;;		On exit  : 0/0
 20788 ;;		Unchanged: 0/0
 20789 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20792 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20793 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20794 ;;Total ram usage:        2 bytes
 20795 ;; Hardware stack levels used: 1
 20796 ;; This function calls:
 20797 ;;		Nothing
 20798 ;; This function is called by:
 20799 ;;		_SW_I2C_Restart
 20800 ;;		_SW_I2C_WriteRegister
 20801 ;;		_SW_I2C_ReadRegister
 20802 ;;		_SW_I2C_ReadBlock
 20803 ;;		_SW_I2C_ScanBus
 20804 ;; This function uses a non-reentrant model
 20805 ;;
 20806                           
 20807                           	psect	text50
 20808   01594C                     __ptext50:
 20809                           	callstack 0
 20810   01594C                     _SW_I2C_Stop:
 20811                           	callstack 122
 20812   01594C                     
 20813                           ;Software_I2C.c: 88:     (TRISBbits.TRISB1 = 0);
 20814   01594C  92C7               	bcf	199,1,c	;volatile
 20815                           
 20816                           ;Software_I2C.c: 89:     (LATBbits.LATB1 = 0);
 20817   01594E  92BF               	bcf	191,1,c	;volatile
 20818   015950  EFBB  F0AC         	goto	l7073
 20819   015954                     l7063:
 20820   015954  0E1A               	movlw	26
 20821   015956                     u9117:
 20822   015956  2EE8               	decfsz	wreg,f,c
 20823   015958  D7FE               	bra	u9117
 20824   01595A  D000               	nop2	
 20825   01595C  EFD4  F0AC         	goto	l895
 20826   015960                     l7065:
 20827   015960  0E2A               	movlw	42
 20828   015962                     u9127:
 20829   015962  2EE8               	decfsz	wreg,f,c
 20830   015964  D7FE               	bra	u9127
 20831   015966  D000               	nop2	
 20832   015968  EFD4  F0AC         	goto	l895
 20833   01596C                     l7067:
 20834   01596C  0E40               	movlw	64
 20835   01596E                     u9137:
 20836   01596E  2EE8               	decfsz	wreg,f,c
 20837   015970  D7FE               	bra	u9137
 20838   015972  EFD4  F0AC         	goto	l895
 20839   015976                     l7073:
 20840   015976  505F               	movf	_current_i2c_speed^(0+1280),w,c
 20841   015978  6E01               	movwf	??_SW_I2C_Stop^(0+1280),c
 20842   01597A  6A02               	clrf	(??_SW_I2C_Stop+1)^(0+1280),c
 20843                           
 20844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20845                           ; Switch size 1, requested type "simple"
 20846                           ; Number of cases is 1, Range of values is 0 to 0
 20847                           ; switch strategies available:
 20848                           ; Name         Instructions Cycles
 20849                           ; simple_byte            4     3 (average)
 20850                           ;	Chosen strategy is simple_byte
 20851   01597C  5002               	movf	(??_SW_I2C_Stop+1)^(0+1280),w,c
 20852   01597E  0A00               	xorlw	0	; case 0
 20853   015980  B4D8               	btfsc	status,2,c
 20854   015982  EFC5  F0AC         	goto	l11215
 20855   015986  EFB0  F0AC         	goto	l7065
 20856   01598A                     l11215:
 20857                           
 20858                           ; Switch size 1, requested type "simple"
 20859                           ; Number of cases is 3, Range of values is 0 to 2
 20860                           ; switch strategies available:
 20861                           ; Name         Instructions Cycles
 20862                           ; simple_byte           10     6 (average)
 20863                           ;	Chosen strategy is simple_byte
 20864   01598A  5001               	movf	??_SW_I2C_Stop^(0+1280),w,c
 20865   01598C  0A00               	xorlw	0	; case 0
 20866   01598E  B4D8               	btfsc	status,2,c
 20867   015990  EFAA  F0AC         	goto	l7063
 20868   015994  0A01               	xorlw	1	; case 1
 20869   015996  B4D8               	btfsc	status,2,c
 20870   015998  EFB0  F0AC         	goto	l7065
 20871   01599C  0A03               	xorlw	3	; case 2
 20872   01599E  B4D8               	btfsc	status,2,c
 20873   0159A0  EFB6  F0AC         	goto	l7067
 20874   0159A4  EFB0  F0AC         	goto	l7065
 20875   0159A8                     l895:
 20876                           
 20877                           ;Software_I2C.c: 93:     (TRISBbits.TRISB2 = 0);
 20878   0159A8  94C7               	bcf	199,2,c	;volatile
 20879                           
 20880                           ;Software_I2C.c: 94:     (LATBbits.LATB2 = 0);
 20881   0159AA  94BF               	bcf	191,2,c	;volatile
 20882   0159AC  EFE9  F0AC         	goto	l7085
 20883   0159B0                     l7075:
 20884   0159B0  0E1A               	movlw	26
 20885   0159B2                     u9147:
 20886   0159B2  2EE8               	decfsz	wreg,f,c
 20887   0159B4  D7FE               	bra	u9147
 20888   0159B6  D000               	nop2	
 20889   0159B8  EF02  F0AD         	goto	l903
 20890   0159BC                     l7077:
 20891   0159BC  0E2A               	movlw	42
 20892   0159BE                     u9157:
 20893   0159BE  2EE8               	decfsz	wreg,f,c
 20894   0159C0  D7FE               	bra	u9157
 20895   0159C2  D000               	nop2	
 20896   0159C4  EF02  F0AD         	goto	l903
 20897   0159C8                     l7079:
 20898   0159C8  0E40               	movlw	64
 20899   0159CA                     u9167:
 20900   0159CA  2EE8               	decfsz	wreg,f,c
 20901   0159CC  D7FE               	bra	u9167
 20902   0159CE  EF02  F0AD         	goto	l903
 20903   0159D2                     l7085:
 20904   0159D2  505F               	movf	_current_i2c_speed^(0+1280),w,c
 20905   0159D4  6E01               	movwf	??_SW_I2C_Stop^(0+1280),c
 20906   0159D6  6A02               	clrf	(??_SW_I2C_Stop+1)^(0+1280),c
 20907                           
 20908                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20909                           ; Switch size 1, requested type "simple"
 20910                           ; Number of cases is 1, Range of values is 0 to 0
 20911                           ; switch strategies available:
 20912                           ; Name         Instructions Cycles
 20913                           ; simple_byte            4     3 (average)
 20914                           ;	Chosen strategy is simple_byte
 20915   0159D8  5002               	movf	(??_SW_I2C_Stop+1)^(0+1280),w,c
 20916   0159DA  0A00               	xorlw	0	; case 0
 20917   0159DC  B4D8               	btfsc	status,2,c
 20918   0159DE  EFF3  F0AC         	goto	l11217
 20919   0159E2  EFDE  F0AC         	goto	l7077
 20920   0159E6                     l11217:
 20921                           
 20922                           ; Switch size 1, requested type "simple"
 20923                           ; Number of cases is 3, Range of values is 0 to 2
 20924                           ; switch strategies available:
 20925                           ; Name         Instructions Cycles
 20926                           ; simple_byte           10     6 (average)
 20927                           ;	Chosen strategy is simple_byte
 20928   0159E6  5001               	movf	??_SW_I2C_Stop^(0+1280),w,c
 20929   0159E8  0A00               	xorlw	0	; case 0
 20930   0159EA  B4D8               	btfsc	status,2,c
 20931   0159EC  EFD8  F0AC         	goto	l7075
 20932   0159F0  0A01               	xorlw	1	; case 1
 20933   0159F2  B4D8               	btfsc	status,2,c
 20934   0159F4  EFDE  F0AC         	goto	l7077
 20935   0159F8  0A03               	xorlw	3	; case 2
 20936   0159FA  B4D8               	btfsc	status,2,c
 20937   0159FC  EFE4  F0AC         	goto	l7079
 20938   015A00  EFDE  F0AC         	goto	l7077
 20939   015A04                     l903:
 20940                           
 20941                           ;Software_I2C.c: 98:     (TRISBbits.TRISB1 = 1);
 20942   015A04  82C7               	bsf	199,1,c	;volatile
 20943   015A06  EF16  F0AD         	goto	l7097
 20944   015A0A                     l7087:
 20945   015A0A  0E1A               	movlw	26
 20946   015A0C                     u9177:
 20947   015A0C  2EE8               	decfsz	wreg,f,c
 20948   015A0E  D7FE               	bra	u9177
 20949   015A10  D000               	nop2	
 20950   015A12  EF2F  F0AD         	goto	l911
 20951   015A16                     l7089:
 20952   015A16  0E2A               	movlw	42
 20953   015A18                     u9187:
 20954   015A18  2EE8               	decfsz	wreg,f,c
 20955   015A1A  D7FE               	bra	u9187
 20956   015A1C  D000               	nop2	
 20957   015A1E  EF2F  F0AD         	goto	l911
 20958   015A22                     l7091:
 20959   015A22  0E40               	movlw	64
 20960   015A24                     u9197:
 20961   015A24  2EE8               	decfsz	wreg,f,c
 20962   015A26  D7FE               	bra	u9197
 20963   015A28  EF2F  F0AD         	goto	l911
 20964   015A2C                     l7097:
 20965   015A2C  505F               	movf	_current_i2c_speed^(0+1280),w,c
 20966   015A2E  6E01               	movwf	??_SW_I2C_Stop^(0+1280),c
 20967   015A30  6A02               	clrf	(??_SW_I2C_Stop+1)^(0+1280),c
 20968                           
 20969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20970                           ; Switch size 1, requested type "simple"
 20971                           ; Number of cases is 1, Range of values is 0 to 0
 20972                           ; switch strategies available:
 20973                           ; Name         Instructions Cycles
 20974                           ; simple_byte            4     3 (average)
 20975                           ;	Chosen strategy is simple_byte
 20976   015A32  5002               	movf	(??_SW_I2C_Stop+1)^(0+1280),w,c
 20977   015A34  0A00               	xorlw	0	; case 0
 20978   015A36  B4D8               	btfsc	status,2,c
 20979   015A38  EF20  F0AD         	goto	l11219
 20980   015A3C  EF0B  F0AD         	goto	l7089
 20981   015A40                     l11219:
 20982                           
 20983                           ; Switch size 1, requested type "simple"
 20984                           ; Number of cases is 3, Range of values is 0 to 2
 20985                           ; switch strategies available:
 20986                           ; Name         Instructions Cycles
 20987                           ; simple_byte           10     6 (average)
 20988                           ;	Chosen strategy is simple_byte
 20989   015A40  5001               	movf	??_SW_I2C_Stop^(0+1280),w,c
 20990   015A42  0A00               	xorlw	0	; case 0
 20991   015A44  B4D8               	btfsc	status,2,c
 20992   015A46  EF05  F0AD         	goto	l7087
 20993   015A4A  0A01               	xorlw	1	; case 1
 20994   015A4C  B4D8               	btfsc	status,2,c
 20995   015A4E  EF0B  F0AD         	goto	l7089
 20996   015A52  0A03               	xorlw	3	; case 2
 20997   015A54  B4D8               	btfsc	status,2,c
 20998   015A56  EF11  F0AD         	goto	l7091
 20999   015A5A  EF0B  F0AD         	goto	l7089
 21000   015A5E                     l911:
 21001                           
 21002                           ;Software_I2C.c: 101:     (TRISBbits.TRISB2 = 1);
 21003   015A5E  84C7               	bsf	199,2,c	;volatile
 21004   015A60  EF43  F0AD         	goto	l7109
 21005   015A64                     l7099:
 21006   015A64  0E1A               	movlw	26
 21007   015A66                     u9207:
 21008   015A66  2EE8               	decfsz	wreg,f,c
 21009   015A68  D7FE               	bra	u9207
 21010   015A6A  D000               	nop2	
 21011   015A6C  EF5C  F0AD         	goto	l920
 21012   015A70                     l7101:
 21013   015A70  0E2A               	movlw	42
 21014   015A72                     u9217:
 21015   015A72  2EE8               	decfsz	wreg,f,c
 21016   015A74  D7FE               	bra	u9217
 21017   015A76  D000               	nop2	
 21018   015A78  EF5C  F0AD         	goto	l920
 21019   015A7C                     l7103:
 21020   015A7C  0E40               	movlw	64
 21021   015A7E                     u9227:
 21022   015A7E  2EE8               	decfsz	wreg,f,c
 21023   015A80  D7FE               	bra	u9227
 21024   015A82  EF5C  F0AD         	goto	l920
 21025   015A86                     l7109:
 21026   015A86  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21027   015A88  6E01               	movwf	??_SW_I2C_Stop^(0+1280),c
 21028   015A8A  6A02               	clrf	(??_SW_I2C_Stop+1)^(0+1280),c
 21029                           
 21030                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21031                           ; Switch size 1, requested type "simple"
 21032                           ; Number of cases is 1, Range of values is 0 to 0
 21033                           ; switch strategies available:
 21034                           ; Name         Instructions Cycles
 21035                           ; simple_byte            4     3 (average)
 21036                           ;	Chosen strategy is simple_byte
 21037   015A8C  5002               	movf	(??_SW_I2C_Stop+1)^(0+1280),w,c
 21038   015A8E  0A00               	xorlw	0	; case 0
 21039   015A90  B4D8               	btfsc	status,2,c
 21040   015A92  EF4D  F0AD         	goto	l11221
 21041   015A96  EF38  F0AD         	goto	l7101
 21042   015A9A                     l11221:
 21043                           
 21044                           ; Switch size 1, requested type "simple"
 21045                           ; Number of cases is 3, Range of values is 0 to 2
 21046                           ; switch strategies available:
 21047                           ; Name         Instructions Cycles
 21048                           ; simple_byte           10     6 (average)
 21049                           ;	Chosen strategy is simple_byte
 21050   015A9A  5001               	movf	??_SW_I2C_Stop^(0+1280),w,c
 21051   015A9C  0A00               	xorlw	0	; case 0
 21052   015A9E  B4D8               	btfsc	status,2,c
 21053   015AA0  EF32  F0AD         	goto	l7099
 21054   015AA4  0A01               	xorlw	1	; case 1
 21055   015AA6  B4D8               	btfsc	status,2,c
 21056   015AA8  EF38  F0AD         	goto	l7101
 21057   015AAC  0A03               	xorlw	3	; case 2
 21058   015AAE  B4D8               	btfsc	status,2,c
 21059   015AB0  EF3E  F0AD         	goto	l7103
 21060   015AB4  EF38  F0AD         	goto	l7101
 21061   015AB8                     l920:
 21062   015AB8  0012               	return		;funcret
 21063   015ABA                     __end_of_SW_I2C_Stop:
 21064                           	callstack 0
 21065                           
 21066 ;; *************** function _SW_I2C_Start *****************
 21067 ;; Defined at:
 21068 ;;		line 61 in file "Software_I2C.c"
 21069 ;; Parameters:    Size  Location     Type
 21070 ;;		None
 21071 ;; Auto vars:     Size  Location     Type
 21072 ;;		None
 21073 ;; Return value:  Size  Location     Type
 21074 ;;                  1    wreg      enum E17123
 21075 ;; Registers used:
 21076 ;;		wreg, status,2, status,0, cstack
 21077 ;; Tracked objects:
 21078 ;;		On entry : 0/0
 21079 ;;		On exit  : 0/0
 21080 ;;		Unchanged: 0/0
 21081 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21084 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21085 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21086 ;;Total ram usage:        2 bytes
 21087 ;; Hardware stack levels used: 1
 21088 ;; Hardware stack levels required when called: 1
 21089 ;; This function calls:
 21090 ;;		_SW_I2C_IsBusFree
 21091 ;; This function is called by:
 21092 ;;		_SW_I2C_Restart
 21093 ;;		_SW_I2C_WriteRegister
 21094 ;;		_SW_I2C_ReadRegister
 21095 ;;		_SW_I2C_ReadBlock
 21096 ;;		_SW_I2C_ScanBus
 21097 ;; This function uses a non-reentrant model
 21098 ;;
 21099                           
 21100                           	psect	text51
 21101   015BEE                     __ptext51:
 21102                           	callstack 0
 21103   015BEE                     _SW_I2C_Start:
 21104                           	callstack 121
 21105   015BEE                     
 21106                           ;Software_I2C.c: 63:     if (!SW_I2C_IsBusFree()) {
 21107   015BEE  EC8E  F0B6         	call	_SW_I2C_IsBusFree	;wreg free
 21108   015BF2  0900               	iorlw	0
 21109   015BF4  A4D8               	btfss	status,2,c
 21110   015BF6  EFFF  F0AD         	goto	u4531
 21111   015BFA  EF01  F0AE         	goto	u4530
 21112   015BFE                     u4531:
 21113   015BFE  EF04  F0AE         	goto	l860
 21114   015C02                     u4530:
 21115   015C02                     
 21116                           ;Software_I2C.c: 64:         return SW_I2C_ERROR_BUS_BUSY;
 21117   015C02  0E03               	movlw	3
 21118   015C04  EF8F  F0AE         	goto	l861
 21119   015C08                     l860:
 21120                           
 21121                           ;Software_I2C.c: 68:     (TRISBbits.TRISB2 = 1);
 21122   015C08  84C7               	bsf	199,2,c	;volatile
 21123                           
 21124                           ;Software_I2C.c: 69:     (TRISBbits.TRISB1 = 1);
 21125   015C0A  82C7               	bsf	199,1,c	;volatile
 21126   015C0C  EF19  F0AE         	goto	l7019
 21127   015C10                     l7009:
 21128   015C10  0E1A               	movlw	26
 21129   015C12                     u9237:
 21130   015C12  2EE8               	decfsz	wreg,f,c
 21131   015C14  D7FE               	bra	u9237
 21132   015C16  D000               	nop2	
 21133   015C18  EF32  F0AE         	goto	l869
 21134   015C1C                     l7011:
 21135   015C1C  0E2A               	movlw	42
 21136   015C1E                     u9247:
 21137   015C1E  2EE8               	decfsz	wreg,f,c
 21138   015C20  D7FE               	bra	u9247
 21139   015C22  D000               	nop2	
 21140   015C24  EF32  F0AE         	goto	l869
 21141   015C28                     l7013:
 21142   015C28  0E40               	movlw	64
 21143   015C2A                     u9257:
 21144   015C2A  2EE8               	decfsz	wreg,f,c
 21145   015C2C  D7FE               	bra	u9257
 21146   015C2E  EF32  F0AE         	goto	l869
 21147   015C32                     l7019:
 21148   015C32  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21149   015C34  6E02               	movwf	??_SW_I2C_Start^(0+1280),c
 21150   015C36  6A03               	clrf	(??_SW_I2C_Start+1)^(0+1280),c
 21151                           
 21152                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21153                           ; Switch size 1, requested type "simple"
 21154                           ; Number of cases is 1, Range of values is 0 to 0
 21155                           ; switch strategies available:
 21156                           ; Name         Instructions Cycles
 21157                           ; simple_byte            4     3 (average)
 21158                           ;	Chosen strategy is simple_byte
 21159   015C38  5003               	movf	(??_SW_I2C_Start+1)^(0+1280),w,c
 21160   015C3A  0A00               	xorlw	0	; case 0
 21161   015C3C  B4D8               	btfsc	status,2,c
 21162   015C3E  EF23  F0AE         	goto	l11223
 21163   015C42  EF0E  F0AE         	goto	l7011
 21164   015C46                     l11223:
 21165                           
 21166                           ; Switch size 1, requested type "simple"
 21167                           ; Number of cases is 3, Range of values is 0 to 2
 21168                           ; switch strategies available:
 21169                           ; Name         Instructions Cycles
 21170                           ; simple_byte           10     6 (average)
 21171                           ;	Chosen strategy is simple_byte
 21172   015C46  5002               	movf	??_SW_I2C_Start^(0+1280),w,c
 21173   015C48  0A00               	xorlw	0	; case 0
 21174   015C4A  B4D8               	btfsc	status,2,c
 21175   015C4C  EF08  F0AE         	goto	l7009
 21176   015C50  0A01               	xorlw	1	; case 1
 21177   015C52  B4D8               	btfsc	status,2,c
 21178   015C54  EF0E  F0AE         	goto	l7011
 21179   015C58  0A03               	xorlw	3	; case 2
 21180   015C5A  B4D8               	btfsc	status,2,c
 21181   015C5C  EF14  F0AE         	goto	l7013
 21182   015C60  EF0E  F0AE         	goto	l7011
 21183   015C64                     l869:
 21184                           
 21185                           ;Software_I2C.c: 72:     (TRISBbits.TRISB2 = 0);
 21186   015C64  94C7               	bcf	199,2,c	;volatile
 21187                           
 21188                           ;Software_I2C.c: 73:     (LATBbits.LATB2 = 0);
 21189   015C66  94BF               	bcf	191,2,c	;volatile
 21190   015C68  EF47  F0AE         	goto	l7031
 21191   015C6C                     l7021:
 21192   015C6C  0E1A               	movlw	26
 21193   015C6E                     u9267:
 21194   015C6E  2EE8               	decfsz	wreg,f,c
 21195   015C70  D7FE               	bra	u9267
 21196   015C72  D000               	nop2	
 21197   015C74  EF60  F0AE         	goto	l877
 21198   015C78                     l7023:
 21199   015C78  0E2A               	movlw	42
 21200   015C7A                     u9277:
 21201   015C7A  2EE8               	decfsz	wreg,f,c
 21202   015C7C  D7FE               	bra	u9277
 21203   015C7E  D000               	nop2	
 21204   015C80  EF60  F0AE         	goto	l877
 21205   015C84                     l7025:
 21206   015C84  0E40               	movlw	64
 21207   015C86                     u9287:
 21208   015C86  2EE8               	decfsz	wreg,f,c
 21209   015C88  D7FE               	bra	u9287
 21210   015C8A  EF60  F0AE         	goto	l877
 21211   015C8E                     l7031:
 21212   015C8E  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21213   015C90  6E02               	movwf	??_SW_I2C_Start^(0+1280),c
 21214   015C92  6A03               	clrf	(??_SW_I2C_Start+1)^(0+1280),c
 21215                           
 21216                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21217                           ; Switch size 1, requested type "simple"
 21218                           ; Number of cases is 1, Range of values is 0 to 0
 21219                           ; switch strategies available:
 21220                           ; Name         Instructions Cycles
 21221                           ; simple_byte            4     3 (average)
 21222                           ;	Chosen strategy is simple_byte
 21223   015C94  5003               	movf	(??_SW_I2C_Start+1)^(0+1280),w,c
 21224   015C96  0A00               	xorlw	0	; case 0
 21225   015C98  B4D8               	btfsc	status,2,c
 21226   015C9A  EF51  F0AE         	goto	l11225
 21227   015C9E  EF3C  F0AE         	goto	l7023
 21228   015CA2                     l11225:
 21229                           
 21230                           ; Switch size 1, requested type "simple"
 21231                           ; Number of cases is 3, Range of values is 0 to 2
 21232                           ; switch strategies available:
 21233                           ; Name         Instructions Cycles
 21234                           ; simple_byte           10     6 (average)
 21235                           ;	Chosen strategy is simple_byte
 21236   015CA2  5002               	movf	??_SW_I2C_Start^(0+1280),w,c
 21237   015CA4  0A00               	xorlw	0	; case 0
 21238   015CA6  B4D8               	btfsc	status,2,c
 21239   015CA8  EF36  F0AE         	goto	l7021
 21240   015CAC  0A01               	xorlw	1	; case 1
 21241   015CAE  B4D8               	btfsc	status,2,c
 21242   015CB0  EF3C  F0AE         	goto	l7023
 21243   015CB4  0A03               	xorlw	3	; case 2
 21244   015CB6  B4D8               	btfsc	status,2,c
 21245   015CB8  EF42  F0AE         	goto	l7025
 21246   015CBC  EF3C  F0AE         	goto	l7023
 21247   015CC0                     l877:
 21248                           
 21249                           ;Software_I2C.c: 76:     (TRISBbits.TRISB1 = 0);
 21250   015CC0  92C7               	bcf	199,1,c	;volatile
 21251                           
 21252                           ;Software_I2C.c: 77:     (LATBbits.LATB1 = 0);
 21253   015CC2  92BF               	bcf	191,1,c	;volatile
 21254   015CC4  EF75  F0AE         	goto	l7043
 21255   015CC8                     l7033:
 21256   015CC8  0E1A               	movlw	26
 21257   015CCA                     u9297:
 21258   015CCA  2EE8               	decfsz	wreg,f,c
 21259   015CCC  D7FE               	bra	u9297
 21260   015CCE  D000               	nop2	
 21261   015CD0  EF8E  F0AE         	goto	l7045
 21262   015CD4                     l7035:
 21263   015CD4  0E2A               	movlw	42
 21264   015CD6                     u9307:
 21265   015CD6  2EE8               	decfsz	wreg,f,c
 21266   015CD8  D7FE               	bra	u9307
 21267   015CDA  D000               	nop2	
 21268   015CDC  EF8E  F0AE         	goto	l7045
 21269   015CE0                     l7037:
 21270   015CE0  0E40               	movlw	64
 21271   015CE2                     u9317:
 21272   015CE2  2EE8               	decfsz	wreg,f,c
 21273   015CE4  D7FE               	bra	u9317
 21274   015CE6  EF8E  F0AE         	goto	l7045
 21275   015CEA                     l7043:
 21276   015CEA  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21277   015CEC  6E02               	movwf	??_SW_I2C_Start^(0+1280),c
 21278   015CEE  6A03               	clrf	(??_SW_I2C_Start+1)^(0+1280),c
 21279                           
 21280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21281                           ; Switch size 1, requested type "simple"
 21282                           ; Number of cases is 1, Range of values is 0 to 0
 21283                           ; switch strategies available:
 21284                           ; Name         Instructions Cycles
 21285                           ; simple_byte            4     3 (average)
 21286                           ;	Chosen strategy is simple_byte
 21287   015CF0  5003               	movf	(??_SW_I2C_Start+1)^(0+1280),w,c
 21288   015CF2  0A00               	xorlw	0	; case 0
 21289   015CF4  B4D8               	btfsc	status,2,c
 21290   015CF6  EF7F  F0AE         	goto	l11227
 21291   015CFA  EF6A  F0AE         	goto	l7035
 21292   015CFE                     l11227:
 21293                           
 21294                           ; Switch size 1, requested type "simple"
 21295                           ; Number of cases is 3, Range of values is 0 to 2
 21296                           ; switch strategies available:
 21297                           ; Name         Instructions Cycles
 21298                           ; simple_byte           10     6 (average)
 21299                           ;	Chosen strategy is simple_byte
 21300   015CFE  5002               	movf	??_SW_I2C_Start^(0+1280),w,c
 21301   015D00  0A00               	xorlw	0	; case 0
 21302   015D02  B4D8               	btfsc	status,2,c
 21303   015D04  EF64  F0AE         	goto	l7033
 21304   015D08  0A01               	xorlw	1	; case 1
 21305   015D0A  B4D8               	btfsc	status,2,c
 21306   015D0C  EF6A  F0AE         	goto	l7035
 21307   015D10  0A03               	xorlw	3	; case 2
 21308   015D12  B4D8               	btfsc	status,2,c
 21309   015D14  EF70  F0AE         	goto	l7037
 21310   015D18  EF6A  F0AE         	goto	l7035
 21311   015D1C                     l7045:
 21312                           
 21313                           ;Software_I2C.c: 80:     return SW_I2C_SUCCESS;
 21314   015D1C  0E00               	movlw	0
 21315   015D1E                     l861:
 21316   015D1E  0012               	return		;funcret
 21317   015D20                     __end_of_SW_I2C_Start:
 21318                           	callstack 0
 21319                           
 21320 ;; *************** function _SW_I2C_IsBusFree *****************
 21321 ;; Defined at:
 21322 ;;		line 228 in file "Software_I2C.c"
 21323 ;; Parameters:    Size  Location     Type
 21324 ;;		None
 21325 ;; Auto vars:     Size  Location     Type
 21326 ;;		None
 21327 ;; Return value:  Size  Location     Type
 21328 ;;                  1    wreg      unsigned char 
 21329 ;; Registers used:
 21330 ;;		wreg, status,2
 21331 ;; Tracked objects:
 21332 ;;		On entry : 0/0
 21333 ;;		On exit  : 0/0
 21334 ;;		Unchanged: 0/0
 21335 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21339 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21340 ;;Total ram usage:        1 bytes
 21341 ;; Hardware stack levels used: 1
 21342 ;; This function calls:
 21343 ;;		Nothing
 21344 ;; This function is called by:
 21345 ;;		_SW_I2C_Start
 21346 ;; This function uses a non-reentrant model
 21347 ;;
 21348                           
 21349                           	psect	text52
 21350   016D1C                     __ptext52:
 21351                           	callstack 0
 21352   016D1C                     _SW_I2C_IsBusFree:
 21353                           	callstack 121
 21354   016D1C                     
 21355                           ;Software_I2C.c: 229:     (TRISBbits.TRISB1 = 1);
 21356   016D1C  82C7               	bsf	199,1,c	;volatile
 21357                           
 21358                           ;Software_I2C.c: 230:     (TRISBbits.TRISB2 = 1);
 21359   016D1E  84C7               	bsf	199,2,c	;volatile
 21360   016D20                     
 21361                           ;Software_I2C.c: 231:     _delay((unsigned long)((8)*(64000000UL/4000000.0)));
 21362   016D20  0E2A               	movlw	42
 21363   016D22                     u9327:
 21364   016D22  2EE8               	decfsz	wreg,f,c
 21365   016D24  D7FE               	bra	u9327
 21366   016D26  D000               	nop2	
 21367   016D28                     
 21368                           ;Software_I2C.c: 234:     return (PORTBbits.RB1 && PORTBbits.RB2);
 21369   016D28  6A01               	clrf	_SW_I2C_IsBusFree$1645^(0+1280),c
 21370   016D2A  A2CF               	btfss	207,1,c	;volatile
 21371   016D2C  EF9A  F0B6         	goto	u4501
 21372   016D30  EF9C  F0B6         	goto	u4500
 21373   016D34                     u4501:
 21374   016D34  EFA5  F0B6         	goto	l1060
 21375   016D38                     u4500:
 21376   016D38  A4CF               	btfss	207,2,c	;volatile
 21377   016D3A  EFA1  F0B6         	goto	u4511
 21378   016D3E  EFA3  F0B6         	goto	u4510
 21379   016D42                     u4511:
 21380   016D42  EFA5  F0B6         	goto	l1060
 21381   016D46                     u4510:
 21382   016D46  0E01               	movlw	1
 21383   016D48  6E01               	movwf	_SW_I2C_IsBusFree$1645^(0+1280),c
 21384   016D4A                     l1060:
 21385   016D4A  5001               	movf	_SW_I2C_IsBusFree$1645^(0+1280),w,c
 21386   016D4C  0012               	return		;funcret
 21387   016D4E                     __end_of_SW_I2C_IsBusFree:
 21388                           	callstack 0
 21389                           
 21390 ;; *************** function _SW_I2C_ReadByte *****************
 21391 ;; Defined at:
 21392 ;;		line 162 in file "Software_I2C.c"
 21393 ;; Parameters:    Size  Location     Type
 21394 ;;  ack             1    wreg     unsigned char 
 21395 ;; Auto vars:     Size  Location     Type
 21396 ;;  ack             1    4[COMRAM] unsigned char 
 21397 ;;  i               1    6[COMRAM] unsigned char 
 21398 ;;  data            1    5[COMRAM] unsigned char 
 21399 ;; Return value:  Size  Location     Type
 21400 ;;                  1    wreg      unsigned char 
 21401 ;; Registers used:
 21402 ;;		wreg, status,2, status,0, cstack
 21403 ;; Tracked objects:
 21404 ;;		On entry : 0/0
 21405 ;;		On exit  : 0/0
 21406 ;;		Unchanged: 0/0
 21407 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21409 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21411 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21412 ;;Total ram usage:        5 bytes
 21413 ;; Hardware stack levels used: 1
 21414 ;; Hardware stack levels required when called: 1
 21415 ;; This function calls:
 21416 ;;		_SW_I2C_SendAck
 21417 ;;		_SW_I2C_SendNack
 21418 ;; This function is called by:
 21419 ;;		_SW_I2C_ReadRegister
 21420 ;;		_SW_I2C_ReadBlock
 21421 ;; This function uses a non-reentrant model
 21422 ;;
 21423                           
 21424                           	psect	text53
 21425   016152                     __ptext53:
 21426                           	callstack 0
 21427   016152                     _SW_I2C_ReadByte:
 21428                           	callstack 120
 21429                           
 21430                           ;incstack = 0
 21431                           ;SW_I2C_ReadByte@ack stored from wreg
 21432   016152  6E05               	movwf	SW_I2C_ReadByte@ack^(0+1280),c
 21433   016154                     
 21434                           ;Software_I2C.c: 163:     uint8_t i;;Software_I2C.c: 164:     uint8_t data = 0;
 21435   016154  6A06               	clrf	SW_I2C_ReadByte@data^(0+1280),c
 21436                           
 21437                           ;Software_I2C.c: 166:     (TRISBbits.TRISB2 = 1);
 21438   016156  84C7               	bsf	199,2,c	;volatile
 21439                           
 21440                           ;Software_I2C.c: 169:     for (i = 0; i < 8; i++) {
 21441   016158  6A07               	clrf	SW_I2C_ReadByte@i^(0+1280),c
 21442   01615A                     l7481:
 21443                           
 21444                           ;Software_I2C.c: 170:         data <<= 1;
 21445   01615A  90D8               	bcf	status,0,c
 21446   01615C  3606               	rlcf	SW_I2C_ReadByte@data^(0+1280),f,c
 21447   01615E                     
 21448                           ;Software_I2C.c: 172:         (TRISBbits.TRISB1 = 1);
 21449   01615E  82C7               	bsf	199,1,c	;volatile
 21450   016160  EFC3  F0B0         	goto	l7495
 21451   016164                     l7485:
 21452   016164  0E1A               	movlw	26
 21453   016166                     u9337:
 21454   016166  2EE8               	decfsz	wreg,f,c
 21455   016168  D7FE               	bra	u9337
 21456   01616A  D000               	nop2	
 21457   01616C  EFDC  F0B0         	goto	l990
 21458   016170                     l7487:
 21459   016170  0E2A               	movlw	42
 21460   016172                     u9347:
 21461   016172  2EE8               	decfsz	wreg,f,c
 21462   016174  D7FE               	bra	u9347
 21463   016176  D000               	nop2	
 21464   016178  EFDC  F0B0         	goto	l990
 21465   01617C                     l7489:
 21466   01617C  0E40               	movlw	64
 21467   01617E                     u9357:
 21468   01617E  2EE8               	decfsz	wreg,f,c
 21469   016180  D7FE               	bra	u9357
 21470   016182  EFDC  F0B0         	goto	l990
 21471   016186                     l7495:
 21472   016186  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21473   016188  6E03               	movwf	??_SW_I2C_ReadByte^(0+1280),c
 21474   01618A  6A04               	clrf	(??_SW_I2C_ReadByte+1)^(0+1280),c
 21475                           
 21476                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21477                           ; Switch size 1, requested type "simple"
 21478                           ; Number of cases is 1, Range of values is 0 to 0
 21479                           ; switch strategies available:
 21480                           ; Name         Instructions Cycles
 21481                           ; simple_byte            4     3 (average)
 21482                           ;	Chosen strategy is simple_byte
 21483   01618C  5004               	movf	(??_SW_I2C_ReadByte+1)^(0+1280),w,c
 21484   01618E  0A00               	xorlw	0	; case 0
 21485   016190  B4D8               	btfsc	status,2,c
 21486   016192  EFCD  F0B0         	goto	l11229
 21487   016196  EFB8  F0B0         	goto	l7487
 21488   01619A                     l11229:
 21489                           
 21490                           ; Switch size 1, requested type "simple"
 21491                           ; Number of cases is 3, Range of values is 0 to 2
 21492                           ; switch strategies available:
 21493                           ; Name         Instructions Cycles
 21494                           ; simple_byte           10     6 (average)
 21495                           ;	Chosen strategy is simple_byte
 21496   01619A  5003               	movf	??_SW_I2C_ReadByte^(0+1280),w,c
 21497   01619C  0A00               	xorlw	0	; case 0
 21498   01619E  B4D8               	btfsc	status,2,c
 21499   0161A0  EFB2  F0B0         	goto	l7485
 21500   0161A4  0A01               	xorlw	1	; case 1
 21501   0161A6  B4D8               	btfsc	status,2,c
 21502   0161A8  EFB8  F0B0         	goto	l7487
 21503   0161AC  0A03               	xorlw	3	; case 2
 21504   0161AE  B4D8               	btfsc	status,2,c
 21505   0161B0  EFBE  F0B0         	goto	l7489
 21506   0161B4  EFB8  F0B0         	goto	l7487
 21507   0161B8                     l990:
 21508                           
 21509                           ;Software_I2C.c: 175:         if ((PORTBbits.RB2)) {
 21510   0161B8  A4CF               	btfss	207,2,c	;volatile
 21511   0161BA  EFE1  F0B0         	goto	u4691
 21512   0161BE  EFE3  F0B0         	goto	u4690
 21513   0161C2                     u4691:
 21514   0161C2  EFE4  F0B0         	goto	l7499
 21515   0161C6                     u4690:
 21516   0161C6                     
 21517                           ;Software_I2C.c: 176:             data |= 1;
 21518   0161C6  8006               	bsf	SW_I2C_ReadByte@data^(0+1280),0,c
 21519   0161C8                     l7499:
 21520                           
 21521                           ;Software_I2C.c: 179:         (TRISBbits.TRISB1 = 0);
 21522   0161C8  92C7               	bcf	199,1,c	;volatile
 21523   0161CA                     
 21524                           ;Software_I2C.c: 180:         (LATBbits.LATB1 = 0);
 21525   0161CA  92BF               	bcf	191,1,c	;volatile
 21526   0161CC  EFF9  F0B0         	goto	l7513
 21527   0161D0                     l7503:
 21528   0161D0  0E1A               	movlw	26
 21529   0161D2                     u9367:
 21530   0161D2  2EE8               	decfsz	wreg,f,c
 21531   0161D4  D7FE               	bra	u9367
 21532   0161D6  D000               	nop2	
 21533   0161D8  EF12  F0B1         	goto	l7515
 21534   0161DC                     l7505:
 21535   0161DC  0E2A               	movlw	42
 21536   0161DE                     u9377:
 21537   0161DE  2EE8               	decfsz	wreg,f,c
 21538   0161E0  D7FE               	bra	u9377
 21539   0161E2  D000               	nop2	
 21540   0161E4  EF12  F0B1         	goto	l7515
 21541   0161E8                     l7507:
 21542   0161E8  0E40               	movlw	64
 21543   0161EA                     u9387:
 21544   0161EA  2EE8               	decfsz	wreg,f,c
 21545   0161EC  D7FE               	bra	u9387
 21546   0161EE  EF12  F0B1         	goto	l7515
 21547   0161F2                     l7513:
 21548   0161F2  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21549   0161F4  6E03               	movwf	??_SW_I2C_ReadByte^(0+1280),c
 21550   0161F6  6A04               	clrf	(??_SW_I2C_ReadByte+1)^(0+1280),c
 21551                           
 21552                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21553                           ; Switch size 1, requested type "simple"
 21554                           ; Number of cases is 1, Range of values is 0 to 0
 21555                           ; switch strategies available:
 21556                           ; Name         Instructions Cycles
 21557                           ; simple_byte            4     3 (average)
 21558                           ;	Chosen strategy is simple_byte
 21559   0161F8  5004               	movf	(??_SW_I2C_ReadByte+1)^(0+1280),w,c
 21560   0161FA  0A00               	xorlw	0	; case 0
 21561   0161FC  B4D8               	btfsc	status,2,c
 21562   0161FE  EF03  F0B1         	goto	l11231
 21563   016202  EFEE  F0B0         	goto	l7505
 21564   016206                     l11231:
 21565                           
 21566                           ; Switch size 1, requested type "simple"
 21567                           ; Number of cases is 3, Range of values is 0 to 2
 21568                           ; switch strategies available:
 21569                           ; Name         Instructions Cycles
 21570                           ; simple_byte           10     6 (average)
 21571                           ;	Chosen strategy is simple_byte
 21572   016206  5003               	movf	??_SW_I2C_ReadByte^(0+1280),w,c
 21573   016208  0A00               	xorlw	0	; case 0
 21574   01620A  B4D8               	btfsc	status,2,c
 21575   01620C  EFE8  F0B0         	goto	l7503
 21576   016210  0A01               	xorlw	1	; case 1
 21577   016212  B4D8               	btfsc	status,2,c
 21578   016214  EFEE  F0B0         	goto	l7505
 21579   016218  0A03               	xorlw	3	; case 2
 21580   01621A  B4D8               	btfsc	status,2,c
 21581   01621C  EFF4  F0B0         	goto	l7507
 21582   016220  EFEE  F0B0         	goto	l7505
 21583   016224                     l7515:
 21584                           
 21585                           ;Software_I2C.c: 182:     }
 21586   016224  2A07               	incf	SW_I2C_ReadByte@i^(0+1280),f,c
 21587   016226  0E07               	movlw	7
 21588   016228  6407               	cpfsgt	SW_I2C_ReadByte@i^(0+1280),c
 21589   01622A  EF19  F0B1         	goto	u4701
 21590   01622E  EF1B  F0B1         	goto	u4700
 21591   016232                     u4701:
 21592   016232  EFAD  F0B0         	goto	l7481
 21593   016236                     u4700:
 21594   016236                     
 21595                           ;Software_I2C.c: 185:     if (ack) {
 21596   016236  5005               	movf	SW_I2C_ReadByte@ack^(0+1280),w,c
 21597   016238  B4D8               	btfsc	status,2,c
 21598   01623A  EF21  F0B1         	goto	u4711
 21599   01623E  EF23  F0B1         	goto	u4710
 21600   016242                     u4711:
 21601   016242  EF27  F0B1         	goto	l7523
 21602   016246                     u4710:
 21603   016246                     
 21604                           ;Software_I2C.c: 186:         SW_I2C_SendAck();
 21605   016246  EC90  F0AE         	call	_SW_I2C_SendAck	;wreg free
 21606                           
 21607                           ;Software_I2C.c: 187:     } else {
 21608   01624A  EF29  F0B1         	goto	l7525
 21609   01624E                     l7523:
 21610                           
 21611                           ;Software_I2C.c: 188:         SW_I2C_SendNack();
 21612   01624E  EC1B  F0AF         	call	_SW_I2C_SendNack	;wreg free
 21613   016252                     l7525:
 21614                           
 21615                           ;Software_I2C.c: 191:     return data;
 21616   016252  5006               	movf	SW_I2C_ReadByte@data^(0+1280),w,c
 21617   016254  0012               	return		;funcret
 21618   016256                     __end_of_SW_I2C_ReadByte:
 21619                           	callstack 0
 21620                           
 21621 ;; *************** function _SW_I2C_SendNack *****************
 21622 ;; Defined at:
 21623 ;;		line 214 in file "Software_I2C.c"
 21624 ;; Parameters:    Size  Location     Type
 21625 ;;		None
 21626 ;; Auto vars:     Size  Location     Type
 21627 ;;		None
 21628 ;; Return value:  Size  Location     Type
 21629 ;;                  1    wreg      void 
 21630 ;; Registers used:
 21631 ;;		wreg, status,2, status,0
 21632 ;; Tracked objects:
 21633 ;;		On entry : 0/0
 21634 ;;		On exit  : 0/0
 21635 ;;		Unchanged: 0/0
 21636 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21639 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21641 ;;Total ram usage:        2 bytes
 21642 ;; Hardware stack levels used: 1
 21643 ;; This function calls:
 21644 ;;		Nothing
 21645 ;; This function is called by:
 21646 ;;		_SW_I2C_ReadByte
 21647 ;; This function uses a non-reentrant model
 21648 ;;
 21649                           
 21650                           	psect	text54
 21651   015E36                     __ptext54:
 21652                           	callstack 0
 21653   015E36                     _SW_I2C_SendNack:
 21654                           	callstack 120
 21655   015E36                     
 21656                           ;Software_I2C.c: 215:     (TRISBbits.TRISB2 = 1);
 21657   015E36  84C7               	bsf	199,2,c	;volatile
 21658   015E38  EF2F  F0AF         	goto	l7189
 21659   015E3C                     l7179:
 21660   015E3C  0E1A               	movlw	26
 21661   015E3E                     u9397:
 21662   015E3E  2EE8               	decfsz	wreg,f,c
 21663   015E40  D7FE               	bra	u9397
 21664   015E42  D000               	nop2	
 21665   015E44  EF48  F0AF         	goto	l1039
 21666   015E48                     l7181:
 21667   015E48  0E2A               	movlw	42
 21668   015E4A                     u9407:
 21669   015E4A  2EE8               	decfsz	wreg,f,c
 21670   015E4C  D7FE               	bra	u9407
 21671   015E4E  D000               	nop2	
 21672   015E50  EF48  F0AF         	goto	l1039
 21673   015E54                     l7183:
 21674   015E54  0E40               	movlw	64
 21675   015E56                     u9417:
 21676   015E56  2EE8               	decfsz	wreg,f,c
 21677   015E58  D7FE               	bra	u9417
 21678   015E5A  EF48  F0AF         	goto	l1039
 21679   015E5E                     l7189:
 21680   015E5E  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21681   015E60  6E01               	movwf	??_SW_I2C_SendNack^(0+1280),c
 21682   015E62  6A02               	clrf	(??_SW_I2C_SendNack+1)^(0+1280),c
 21683                           
 21684                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21685                           ; Switch size 1, requested type "simple"
 21686                           ; Number of cases is 1, Range of values is 0 to 0
 21687                           ; switch strategies available:
 21688                           ; Name         Instructions Cycles
 21689                           ; simple_byte            4     3 (average)
 21690                           ;	Chosen strategy is simple_byte
 21691   015E64  5002               	movf	(??_SW_I2C_SendNack+1)^(0+1280),w,c
 21692   015E66  0A00               	xorlw	0	; case 0
 21693   015E68  B4D8               	btfsc	status,2,c
 21694   015E6A  EF39  F0AF         	goto	l11233
 21695   015E6E  EF24  F0AF         	goto	l7181
 21696   015E72                     l11233:
 21697                           
 21698                           ; Switch size 1, requested type "simple"
 21699                           ; Number of cases is 3, Range of values is 0 to 2
 21700                           ; switch strategies available:
 21701                           ; Name         Instructions Cycles
 21702                           ; simple_byte           10     6 (average)
 21703                           ;	Chosen strategy is simple_byte
 21704   015E72  5001               	movf	??_SW_I2C_SendNack^(0+1280),w,c
 21705   015E74  0A00               	xorlw	0	; case 0
 21706   015E76  B4D8               	btfsc	status,2,c
 21707   015E78  EF1E  F0AF         	goto	l7179
 21708   015E7C  0A01               	xorlw	1	; case 1
 21709   015E7E  B4D8               	btfsc	status,2,c
 21710   015E80  EF24  F0AF         	goto	l7181
 21711   015E84  0A03               	xorlw	3	; case 2
 21712   015E86  B4D8               	btfsc	status,2,c
 21713   015E88  EF2A  F0AF         	goto	l7183
 21714   015E8C  EF24  F0AF         	goto	l7181
 21715   015E90                     l1039:
 21716                           
 21717                           ;Software_I2C.c: 218:     (TRISBbits.TRISB1 = 1);
 21718   015E90  82C7               	bsf	199,1,c	;volatile
 21719   015E92  EF5C  F0AF         	goto	l7201
 21720   015E96                     l7191:
 21721   015E96  0E1A               	movlw	26
 21722   015E98                     u9427:
 21723   015E98  2EE8               	decfsz	wreg,f,c
 21724   015E9A  D7FE               	bra	u9427
 21725   015E9C  D000               	nop2	
 21726   015E9E  EF75  F0AF         	goto	l1047
 21727   015EA2                     l7193:
 21728   015EA2  0E2A               	movlw	42
 21729   015EA4                     u9437:
 21730   015EA4  2EE8               	decfsz	wreg,f,c
 21731   015EA6  D7FE               	bra	u9437
 21732   015EA8  D000               	nop2	
 21733   015EAA  EF75  F0AF         	goto	l1047
 21734   015EAE                     l7195:
 21735   015EAE  0E40               	movlw	64
 21736   015EB0                     u9447:
 21737   015EB0  2EE8               	decfsz	wreg,f,c
 21738   015EB2  D7FE               	bra	u9447
 21739   015EB4  EF75  F0AF         	goto	l1047
 21740   015EB8                     l7201:
 21741   015EB8  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21742   015EBA  6E01               	movwf	??_SW_I2C_SendNack^(0+1280),c
 21743   015EBC  6A02               	clrf	(??_SW_I2C_SendNack+1)^(0+1280),c
 21744                           
 21745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21746                           ; Switch size 1, requested type "simple"
 21747                           ; Number of cases is 1, Range of values is 0 to 0
 21748                           ; switch strategies available:
 21749                           ; Name         Instructions Cycles
 21750                           ; simple_byte            4     3 (average)
 21751                           ;	Chosen strategy is simple_byte
 21752   015EBE  5002               	movf	(??_SW_I2C_SendNack+1)^(0+1280),w,c
 21753   015EC0  0A00               	xorlw	0	; case 0
 21754   015EC2  B4D8               	btfsc	status,2,c
 21755   015EC4  EF66  F0AF         	goto	l11235
 21756   015EC8  EF51  F0AF         	goto	l7193
 21757   015ECC                     l11235:
 21758                           
 21759                           ; Switch size 1, requested type "simple"
 21760                           ; Number of cases is 3, Range of values is 0 to 2
 21761                           ; switch strategies available:
 21762                           ; Name         Instructions Cycles
 21763                           ; simple_byte           10     6 (average)
 21764                           ;	Chosen strategy is simple_byte
 21765   015ECC  5001               	movf	??_SW_I2C_SendNack^(0+1280),w,c
 21766   015ECE  0A00               	xorlw	0	; case 0
 21767   015ED0  B4D8               	btfsc	status,2,c
 21768   015ED2  EF4B  F0AF         	goto	l7191
 21769   015ED6  0A01               	xorlw	1	; case 1
 21770   015ED8  B4D8               	btfsc	status,2,c
 21771   015EDA  EF51  F0AF         	goto	l7193
 21772   015EDE  0A03               	xorlw	3	; case 2
 21773   015EE0  B4D8               	btfsc	status,2,c
 21774   015EE2  EF57  F0AF         	goto	l7195
 21775   015EE6  EF51  F0AF         	goto	l7193
 21776   015EEA                     l1047:
 21777                           
 21778                           ;Software_I2C.c: 220:     (TRISBbits.TRISB1 = 0);
 21779   015EEA  92C7               	bcf	199,1,c	;volatile
 21780                           
 21781                           ;Software_I2C.c: 221:     (LATBbits.LATB1 = 0);
 21782   015EEC  92BF               	bcf	191,1,c	;volatile
 21783   015EEE  EF8A  F0AF         	goto	l7213
 21784   015EF2                     l7203:
 21785   015EF2  0E1A               	movlw	26
 21786   015EF4                     u9457:
 21787   015EF4  2EE8               	decfsz	wreg,f,c
 21788   015EF6  D7FE               	bra	u9457
 21789   015EF8  D000               	nop2	
 21790   015EFA  EFA3  F0AF         	goto	l1056
 21791   015EFE                     l7205:
 21792   015EFE  0E2A               	movlw	42
 21793   015F00                     u9467:
 21794   015F00  2EE8               	decfsz	wreg,f,c
 21795   015F02  D7FE               	bra	u9467
 21796   015F04  D000               	nop2	
 21797   015F06  EFA3  F0AF         	goto	l1056
 21798   015F0A                     l7207:
 21799   015F0A  0E40               	movlw	64
 21800   015F0C                     u9477:
 21801   015F0C  2EE8               	decfsz	wreg,f,c
 21802   015F0E  D7FE               	bra	u9477
 21803   015F10  EFA3  F0AF         	goto	l1056
 21804   015F14                     l7213:
 21805   015F14  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21806   015F16  6E01               	movwf	??_SW_I2C_SendNack^(0+1280),c
 21807   015F18  6A02               	clrf	(??_SW_I2C_SendNack+1)^(0+1280),c
 21808                           
 21809                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21810                           ; Switch size 1, requested type "simple"
 21811                           ; Number of cases is 1, Range of values is 0 to 0
 21812                           ; switch strategies available:
 21813                           ; Name         Instructions Cycles
 21814                           ; simple_byte            4     3 (average)
 21815                           ;	Chosen strategy is simple_byte
 21816   015F1A  5002               	movf	(??_SW_I2C_SendNack+1)^(0+1280),w,c
 21817   015F1C  0A00               	xorlw	0	; case 0
 21818   015F1E  B4D8               	btfsc	status,2,c
 21819   015F20  EF94  F0AF         	goto	l11237
 21820   015F24  EF7F  F0AF         	goto	l7205
 21821   015F28                     l11237:
 21822                           
 21823                           ; Switch size 1, requested type "simple"
 21824                           ; Number of cases is 3, Range of values is 0 to 2
 21825                           ; switch strategies available:
 21826                           ; Name         Instructions Cycles
 21827                           ; simple_byte           10     6 (average)
 21828                           ;	Chosen strategy is simple_byte
 21829   015F28  5001               	movf	??_SW_I2C_SendNack^(0+1280),w,c
 21830   015F2A  0A00               	xorlw	0	; case 0
 21831   015F2C  B4D8               	btfsc	status,2,c
 21832   015F2E  EF79  F0AF         	goto	l7203
 21833   015F32  0A01               	xorlw	1	; case 1
 21834   015F34  B4D8               	btfsc	status,2,c
 21835   015F36  EF7F  F0AF         	goto	l7205
 21836   015F3A  0A03               	xorlw	3	; case 2
 21837   015F3C  B4D8               	btfsc	status,2,c
 21838   015F3E  EF85  F0AF         	goto	l7207
 21839   015F42  EF7F  F0AF         	goto	l7205
 21840   015F46                     l1056:
 21841   015F46  0012               	return		;funcret
 21842   015F48                     __end_of_SW_I2C_SendNack:
 21843                           	callstack 0
 21844                           
 21845 ;; *************** function _SW_I2C_SendAck *****************
 21846 ;; Defined at:
 21847 ;;		line 197 in file "Software_I2C.c"
 21848 ;; Parameters:    Size  Location     Type
 21849 ;;		None
 21850 ;; Auto vars:     Size  Location     Type
 21851 ;;		None
 21852 ;; Return value:  Size  Location     Type
 21853 ;;                  1    wreg      void 
 21854 ;; Registers used:
 21855 ;;		wreg, status,2, status,0
 21856 ;; Tracked objects:
 21857 ;;		On entry : 0/0
 21858 ;;		On exit  : 0/0
 21859 ;;		Unchanged: 0/0
 21860 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21863 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21864 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21865 ;;Total ram usage:        2 bytes
 21866 ;; Hardware stack levels used: 1
 21867 ;; This function calls:
 21868 ;;		Nothing
 21869 ;; This function is called by:
 21870 ;;		_SW_I2C_ReadByte
 21871 ;; This function uses a non-reentrant model
 21872 ;;
 21873                           
 21874                           	psect	text55
 21875   015D20                     __ptext55:
 21876                           	callstack 0
 21877   015D20                     _SW_I2C_SendAck:
 21878                           	callstack 120
 21879   015D20                     
 21880                           ;Software_I2C.c: 198:     (TRISBbits.TRISB2 = 0);
 21881   015D20  94C7               	bcf	199,2,c	;volatile
 21882                           
 21883                           ;Software_I2C.c: 199:     (LATBbits.LATB2 = 0);
 21884   015D22  94BF               	bcf	191,2,c	;volatile
 21885   015D24  EFA5  F0AE         	goto	l7139
 21886   015D28                     l7129:
 21887   015D28  0E1A               	movlw	26
 21888   015D2A                     u9487:
 21889   015D2A  2EE8               	decfsz	wreg,f,c
 21890   015D2C  D7FE               	bra	u9487
 21891   015D2E  D000               	nop2	
 21892   015D30  EFBE  F0AE         	goto	l1012
 21893   015D34                     l7131:
 21894   015D34  0E2A               	movlw	42
 21895   015D36                     u9497:
 21896   015D36  2EE8               	decfsz	wreg,f,c
 21897   015D38  D7FE               	bra	u9497
 21898   015D3A  D000               	nop2	
 21899   015D3C  EFBE  F0AE         	goto	l1012
 21900   015D40                     l7133:
 21901   015D40  0E40               	movlw	64
 21902   015D42                     u9507:
 21903   015D42  2EE8               	decfsz	wreg,f,c
 21904   015D44  D7FE               	bra	u9507
 21905   015D46  EFBE  F0AE         	goto	l1012
 21906   015D4A                     l7139:
 21907   015D4A  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21908   015D4C  6E01               	movwf	??_SW_I2C_SendAck^(0+1280),c
 21909   015D4E  6A02               	clrf	(??_SW_I2C_SendAck+1)^(0+1280),c
 21910                           
 21911                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21912                           ; Switch size 1, requested type "simple"
 21913                           ; Number of cases is 1, Range of values is 0 to 0
 21914                           ; switch strategies available:
 21915                           ; Name         Instructions Cycles
 21916                           ; simple_byte            4     3 (average)
 21917                           ;	Chosen strategy is simple_byte
 21918   015D50  5002               	movf	(??_SW_I2C_SendAck+1)^(0+1280),w,c
 21919   015D52  0A00               	xorlw	0	; case 0
 21920   015D54  B4D8               	btfsc	status,2,c
 21921   015D56  EFAF  F0AE         	goto	l11239
 21922   015D5A  EF9A  F0AE         	goto	l7131
 21923   015D5E                     l11239:
 21924                           
 21925                           ; Switch size 1, requested type "simple"
 21926                           ; Number of cases is 3, Range of values is 0 to 2
 21927                           ; switch strategies available:
 21928                           ; Name         Instructions Cycles
 21929                           ; simple_byte           10     6 (average)
 21930                           ;	Chosen strategy is simple_byte
 21931   015D5E  5001               	movf	??_SW_I2C_SendAck^(0+1280),w,c
 21932   015D60  0A00               	xorlw	0	; case 0
 21933   015D62  B4D8               	btfsc	status,2,c
 21934   015D64  EF94  F0AE         	goto	l7129
 21935   015D68  0A01               	xorlw	1	; case 1
 21936   015D6A  B4D8               	btfsc	status,2,c
 21937   015D6C  EF9A  F0AE         	goto	l7131
 21938   015D70  0A03               	xorlw	3	; case 2
 21939   015D72  B4D8               	btfsc	status,2,c
 21940   015D74  EFA0  F0AE         	goto	l7133
 21941   015D78  EF9A  F0AE         	goto	l7131
 21942   015D7C                     l1012:
 21943                           
 21944                           ;Software_I2C.c: 202:     (TRISBbits.TRISB1 = 1);
 21945   015D7C  82C7               	bsf	199,1,c	;volatile
 21946   015D7E  EFD2  F0AE         	goto	l7151
 21947   015D82                     l7141:
 21948   015D82  0E1A               	movlw	26
 21949   015D84                     u9517:
 21950   015D84  2EE8               	decfsz	wreg,f,c
 21951   015D86  D7FE               	bra	u9517
 21952   015D88  D000               	nop2	
 21953   015D8A  EFEB  F0AE         	goto	l1020
 21954   015D8E                     l7143:
 21955   015D8E  0E2A               	movlw	42
 21956   015D90                     u9527:
 21957   015D90  2EE8               	decfsz	wreg,f,c
 21958   015D92  D7FE               	bra	u9527
 21959   015D94  D000               	nop2	
 21960   015D96  EFEB  F0AE         	goto	l1020
 21961   015D9A                     l7145:
 21962   015D9A  0E40               	movlw	64
 21963   015D9C                     u9537:
 21964   015D9C  2EE8               	decfsz	wreg,f,c
 21965   015D9E  D7FE               	bra	u9537
 21966   015DA0  EFEB  F0AE         	goto	l1020
 21967   015DA4                     l7151:
 21968   015DA4  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21969   015DA6  6E01               	movwf	??_SW_I2C_SendAck^(0+1280),c
 21970   015DA8  6A02               	clrf	(??_SW_I2C_SendAck+1)^(0+1280),c
 21971                           
 21972                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21973                           ; Switch size 1, requested type "simple"
 21974                           ; Number of cases is 1, Range of values is 0 to 0
 21975                           ; switch strategies available:
 21976                           ; Name         Instructions Cycles
 21977                           ; simple_byte            4     3 (average)
 21978                           ;	Chosen strategy is simple_byte
 21979   015DAA  5002               	movf	(??_SW_I2C_SendAck+1)^(0+1280),w,c
 21980   015DAC  0A00               	xorlw	0	; case 0
 21981   015DAE  B4D8               	btfsc	status,2,c
 21982   015DB0  EFDC  F0AE         	goto	l11241
 21983   015DB4  EFC7  F0AE         	goto	l7143
 21984   015DB8                     l11241:
 21985                           
 21986                           ; Switch size 1, requested type "simple"
 21987                           ; Number of cases is 3, Range of values is 0 to 2
 21988                           ; switch strategies available:
 21989                           ; Name         Instructions Cycles
 21990                           ; simple_byte           10     6 (average)
 21991                           ;	Chosen strategy is simple_byte
 21992   015DB8  5001               	movf	??_SW_I2C_SendAck^(0+1280),w,c
 21993   015DBA  0A00               	xorlw	0	; case 0
 21994   015DBC  B4D8               	btfsc	status,2,c
 21995   015DBE  EFC1  F0AE         	goto	l7141
 21996   015DC2  0A01               	xorlw	1	; case 1
 21997   015DC4  B4D8               	btfsc	status,2,c
 21998   015DC6  EFC7  F0AE         	goto	l7143
 21999   015DCA  0A03               	xorlw	3	; case 2
 22000   015DCC  B4D8               	btfsc	status,2,c
 22001   015DCE  EFCD  F0AE         	goto	l7145
 22002   015DD2  EFC7  F0AE         	goto	l7143
 22003   015DD6                     l1020:
 22004                           
 22005                           ;Software_I2C.c: 204:     (TRISBbits.TRISB1 = 0);
 22006   015DD6  92C7               	bcf	199,1,c	;volatile
 22007                           
 22008                           ;Software_I2C.c: 205:     (LATBbits.LATB1 = 0);
 22009   015DD8  92BF               	bcf	191,1,c	;volatile
 22010   015DDA  EF00  F0AF         	goto	l7163
 22011   015DDE                     l7153:
 22012   015DDE  0E1A               	movlw	26
 22013   015DE0                     u9547:
 22014   015DE0  2EE8               	decfsz	wreg,f,c
 22015   015DE2  D7FE               	bra	u9547
 22016   015DE4  D000               	nop2	
 22017   015DE6  EF19  F0AF         	goto	l1028
 22018   015DEA                     l7155:
 22019   015DEA  0E2A               	movlw	42
 22020   015DEC                     u9557:
 22021   015DEC  2EE8               	decfsz	wreg,f,c
 22022   015DEE  D7FE               	bra	u9557
 22023   015DF0  D000               	nop2	
 22024   015DF2  EF19  F0AF         	goto	l1028
 22025   015DF6                     l7157:
 22026   015DF6  0E40               	movlw	64
 22027   015DF8                     u9567:
 22028   015DF8  2EE8               	decfsz	wreg,f,c
 22029   015DFA  D7FE               	bra	u9567
 22030   015DFC  EF19  F0AF         	goto	l1028
 22031   015E00                     l7163:
 22032   015E00  505F               	movf	_current_i2c_speed^(0+1280),w,c
 22033   015E02  6E01               	movwf	??_SW_I2C_SendAck^(0+1280),c
 22034   015E04  6A02               	clrf	(??_SW_I2C_SendAck+1)^(0+1280),c
 22035                           
 22036                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22037                           ; Switch size 1, requested type "simple"
 22038                           ; Number of cases is 1, Range of values is 0 to 0
 22039                           ; switch strategies available:
 22040                           ; Name         Instructions Cycles
 22041                           ; simple_byte            4     3 (average)
 22042                           ;	Chosen strategy is simple_byte
 22043   015E06  5002               	movf	(??_SW_I2C_SendAck+1)^(0+1280),w,c
 22044   015E08  0A00               	xorlw	0	; case 0
 22045   015E0A  B4D8               	btfsc	status,2,c
 22046   015E0C  EF0A  F0AF         	goto	l11243
 22047   015E10  EFF5  F0AE         	goto	l7155
 22048   015E14                     l11243:
 22049                           
 22050                           ; Switch size 1, requested type "simple"
 22051                           ; Number of cases is 3, Range of values is 0 to 2
 22052                           ; switch strategies available:
 22053                           ; Name         Instructions Cycles
 22054                           ; simple_byte           10     6 (average)
 22055                           ;	Chosen strategy is simple_byte
 22056   015E14  5001               	movf	??_SW_I2C_SendAck^(0+1280),w,c
 22057   015E16  0A00               	xorlw	0	; case 0
 22058   015E18  B4D8               	btfsc	status,2,c
 22059   015E1A  EFEF  F0AE         	goto	l7153
 22060   015E1E  0A01               	xorlw	1	; case 1
 22061   015E20  B4D8               	btfsc	status,2,c
 22062   015E22  EFF5  F0AE         	goto	l7155
 22063   015E26  0A03               	xorlw	3	; case 2
 22064   015E28  B4D8               	btfsc	status,2,c
 22065   015E2A  EFFB  F0AE         	goto	l7157
 22066   015E2E  EFF5  F0AE         	goto	l7155
 22067   015E32                     l1028:
 22068                           
 22069                           ;Software_I2C.c: 208:     (TRISBbits.TRISB2 = 1);
 22070   015E32  84C7               	bsf	199,2,c	;volatile
 22071   015E34  0012               	return		;funcret
 22072   015E36                     __end_of_SW_I2C_SendAck:
 22073                           	callstack 0
 22074                           
 22075 ;; *************** function _MPU6050_CombineBytes *****************
 22076 ;; Defined at:
 22077 ;;		line 585 in file "MPU6050_DMP.c"
 22078 ;; Parameters:    Size  Location     Type
 22079 ;;  high            1    wreg     unsigned char 
 22080 ;;  low             1    0[COMRAM] unsigned char 
 22081 ;; Auto vars:     Size  Location     Type
 22082 ;;  high            1    4[COMRAM] unsigned char 
 22083 ;; Return value:  Size  Location     Type
 22084 ;;                  2    0[COMRAM] short 
 22085 ;; Registers used:
 22086 ;;		wreg, status,2, status,0
 22087 ;; Tracked objects:
 22088 ;;		On entry : 0/0
 22089 ;;		On exit  : 0/0
 22090 ;;		Unchanged: 0/0
 22091 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22094 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22095 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22096 ;;Total ram usage:        5 bytes
 22097 ;; Hardware stack levels used: 1
 22098 ;; This function calls:
 22099 ;;		Nothing
 22100 ;; This function is called by:
 22101 ;;		_MPU6050_ReadAll
 22102 ;;		_MPU6050_ReadAccel
 22103 ;;		_MPU6050_ReadGyro
 22104 ;;		_MPU6050_ReadTemperature
 22105 ;; This function uses a non-reentrant model
 22106 ;;
 22107                           
 22108                           	psect	text56
 22109   016ED6                     __ptext56:
 22110                           	callstack 0
 22111   016ED6                     _MPU6050_CombineBytes:
 22112                           	callstack 124
 22113                           
 22114                           ;incstack = 0
 22115                           ;MPU6050_CombineBytes@high stored from wreg
 22116   016ED6  6E05               	movwf	MPU6050_CombineBytes@high^(0+1280),c
 22117   016ED8                     
 22118                           ;MPU6050_DMP.c: 586:     return (int16_t)((high << 8) | low);
 22119   016ED8  5001               	movf	MPU6050_CombineBytes@low^(0+1280),w,c
 22120   016EDA  C505  F503         	movff	MPU6050_CombineBytes@high,??_MPU6050_CombineBytes
 22121   016EDE  6A04               	clrf	(??_MPU6050_CombineBytes+1)^(0+1280),c
 22122   016EE0  C503  F504         	movff	??_MPU6050_CombineBytes,??_MPU6050_CombineBytes+1
 22123   016EE4  6A03               	clrf	??_MPU6050_CombineBytes^(0+1280),c
 22124   016EE6  1003               	iorwf	??_MPU6050_CombineBytes^(0+1280),w,c
 22125   016EE8  6E01               	movwf	?_MPU6050_CombineBytes^(0+1280),c
 22126   016EEA  5004               	movf	(??_MPU6050_CombineBytes+1)^(0+1280),w,c
 22127   016EEC  6E02               	movwf	(?_MPU6050_CombineBytes+1)^(0+1280),c
 22128   016EEE  0012               	return		;funcret
 22129   016EF0                     __end_of_MPU6050_CombineBytes:
 22130                           	callstack 0
 22131                           
 22132 ;; *************** function _GetTimestamp_ms *****************
 22133 ;; Defined at:
 22134 ;;		line 626 in file "MPU6050_DMP.c"
 22135 ;; Parameters:    Size  Location     Type
 22136 ;;		None
 22137 ;; Auto vars:     Size  Location     Type
 22138 ;;		None
 22139 ;; Return value:  Size  Location     Type
 22140 ;;                  2    0[COMRAM] unsigned short 
 22141 ;; Registers used:
 22142 ;;		status,2, status,0
 22143 ;; Tracked objects:
 22144 ;;		On entry : 0/0
 22145 ;;		On exit  : 0/0
 22146 ;;		Unchanged: 0/0
 22147 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22151 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22152 ;;Total ram usage:        2 bytes
 22153 ;; Hardware stack levels used: 1
 22154 ;; This function calls:
 22155 ;;		Nothing
 22156 ;; This function is called by:
 22157 ;;		_MPU6050_DMP_GetData
 22158 ;;		_MPU6050_ReadAll
 22159 ;;		_MPU6050_DetectMovement
 22160 ;; This function uses a non-reentrant model
 22161 ;;
 22162                           
 22163                           	psect	text57
 22164   016F1A                     __ptext57:
 22165                           	callstack 0
 22166   016F1A                     _GetTimestamp_ms:
 22167                           	callstack 124
 22168   016F1A                     
 22169                           ;MPU6050_DMP.c: 627:     static uint16_t timestamp = 0;;MPU6050_DMP.c: 628:     timestam
      +                          p++;
 22170   016F1A  0106               	movlb	6	; () banked
 22171   016F1C  4BF9               	infsnz	GetTimestamp_ms@timestamp& (0+255),f,b
 22172   016F1E  2BFA               	incf	(GetTimestamp_ms@timestamp+1)& (0+255),f,b
 22173   016F20                     
 22174                           ; BSR set to: 6
 22175                           ;MPU6050_DMP.c: 629:     return timestamp;
 22176   016F20  C6F9  F501         	movff	GetTimestamp_ms@timestamp,?_GetTimestamp_ms
 22177   016F24  C6FA  F502         	movff	GetTimestamp_ms@timestamp+1,?_GetTimestamp_ms+1
 22178   016F28                     
 22179                           ; BSR set to: 6
 22180   016F28  0012               	return		;funcret
 22181   016F2A                     __end_of_GetTimestamp_ms:
 22182                           	callstack 0
 22183                           
 22184 ;; *************** function _LCD_init *****************
 22185 ;; Defined at:
 22186 ;;		line 76 in file "p_final.c"
 22187 ;; Parameters:    Size  Location     Type
 22188 ;;		None
 22189 ;; Auto vars:     Size  Location     Type
 22190 ;;		None
 22191 ;; Return value:  Size  Location     Type
 22192 ;;                  1    wreg      void 
 22193 ;; Registers used:
 22194 ;;		wreg, status,2, status,0, cstack
 22195 ;; Tracked objects:
 22196 ;;		On entry : 0/0
 22197 ;;		On exit  : 0/0
 22198 ;;		Unchanged: 0/0
 22199 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22202 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22203 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22204 ;;Total ram usage:        2 bytes
 22205 ;; Hardware stack levels used: 1
 22206 ;; Hardware stack levels required when called: 3
 22207 ;; This function calls:
 22208 ;;		_BORRAR_LCD
 22209 ;;		_CURSOR_HOME
 22210 ;;		_CURSOR_ONOFF
 22211 ;;		_LCD_CONFIG
 22212 ;; This function is called by:
 22213 ;;		_main
 22214 ;; This function uses a non-reentrant model
 22215 ;;
 22216                           
 22217                           	psect	text58
 22218   016E10                     __ptext58:
 22219                           	callstack 0
 22220   016E10                     _LCD_init:
 22221                           	callstack 123
 22222   016E10                     
 22223                           ;p_final.c: 77:     _delay((unsigned long)((20)*(64000000UL/4000.0)));
 22224   016E10  0E02               	movlw	2
 22225   016E12  6E06               	movwf	(??_LCD_init+1)^(0+1280),c
 22226   016E14  0EA0               	movlw	160
 22227   016E16  6E05               	movwf	??_LCD_init^(0+1280),c
 22228   016E18  0E92               	movlw	146
 22229   016E1A                     u9577:
 22230   016E1A  2EE8               	decfsz	wreg,f,c
 22231   016E1C  D7FE               	bra	u9577
 22232   016E1E  2E05               	decfsz	??_LCD_init^(0+1280),f,c
 22233   016E20  D7FC               	bra	u9577
 22234   016E22  2E06               	decfsz	(??_LCD_init+1)^(0+1280),f,c
 22235   016E24  D7FA               	bra	u9577
 22236   016E26  D000               	nop2	
 22237   016E28                     
 22238                           ;p_final.c: 78:     LCD_CONFIG();
 22239   016E28  EC34  F0B5         	call	_LCD_CONFIG	;wreg free
 22240   016E2C                     
 22241                           ;p_final.c: 79:     BORRAR_LCD();
 22242   016E2C  ECA0  F0B7         	call	_BORRAR_LCD	;wreg free
 22243   016E30                     
 22244                           ;p_final.c: 80:     CURSOR_HOME();
 22245   016E30  EC9C  F0B7         	call	_CURSOR_HOME	;wreg free
 22246   016E34                     
 22247                           ;p_final.c: 81:     CURSOR_ONOFF(1);
 22248   016E34  0E01               	movlw	1
 22249   016E36  ECD9  F0B6         	call	_CURSOR_ONOFF
 22250   016E3A  0012               	return		;funcret
 22251   016E3C                     __end_of_LCD_init:
 22252                           	callstack 0
 22253                           
 22254 ;; *************** function _LCD_CONFIG *****************
 22255 ;; Defined at:
 22256 ;;		line 109 in file "LCD.c"
 22257 ;; Parameters:    Size  Location     Type
 22258 ;;		None
 22259 ;; Auto vars:     Size  Location     Type
 22260 ;;		None
 22261 ;; Return value:  Size  Location     Type
 22262 ;;                  1    wreg      void 
 22263 ;; Registers used:
 22264 ;;		wreg, status,2, status,0, cstack
 22265 ;; Tracked objects:
 22266 ;;		On entry : 0/0
 22267 ;;		On exit  : 0/0
 22268 ;;		Unchanged: 0/0
 22269 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22272 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22273 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22274 ;;Total ram usage:        1 bytes
 22275 ;; Hardware stack levels used: 1
 22276 ;; Hardware stack levels required when called: 2
 22277 ;; This function calls:
 22278 ;;		_ENVIA_LCD_CMD
 22279 ;;		_ENVIA_NIBBLE
 22280 ;; This function is called by:
 22281 ;;		_LCD_init
 22282 ;;		_LCD_INIT
 22283 ;; This function uses a non-reentrant model
 22284 ;;
 22285                           
 22286                           	psect	text59
 22287   016A68                     __ptext59:
 22288                           	callstack 0
 22289   016A68                     _LCD_CONFIG:
 22290                           	callstack 123
 22291   016A68                     
 22292                           ;LCD.c: 111:  LATDbits.LATD0 = 0;
 22293   016A68  90C1               	bcf	193,0,c	;volatile
 22294                           
 22295                           ;LCD.c: 112:  LATDbits.LATD1 = 0;
 22296   016A6A  92C1               	bcf	193,1,c	;volatile
 22297   016A6C                     
 22298                           ;LCD.c: 113:  ENVIA_NIBBLE(0x30);
 22299   016A6C  0E30               	movlw	48
 22300   016A6E  EC5D  F0B7         	call	_ENVIA_NIBBLE
 22301   016A72                     
 22302                           ;LCD.c: 114:     _delay((unsigned long)((2)*(4000000UL/4000.0)));
 22303   016A72  0E03               	movlw	3
 22304   016A74  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
 22305   016A76  0E98               	movlw	152
 22306   016A78                     u9587:
 22307   016A78  2EE8               	decfsz	wreg,f,c
 22308   016A7A  D7FE               	bra	u9587
 22309   016A7C  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
 22310   016A7E  D7FC               	bra	u9587
 22311   016A80                     
 22312                           ;LCD.c: 115:  ENVIA_NIBBLE(0x30);
 22313   016A80  0E30               	movlw	48
 22314   016A82  EC5D  F0B7         	call	_ENVIA_NIBBLE
 22315                           
 22316                           ;LCD.c: 116:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 22317   016A86  0E21               	movlw	33
 22318   016A88                     u9597:
 22319   016A88  2EE8               	decfsz	wreg,f,c
 22320   016A8A  D7FE               	bra	u9597
 22321   016A8C  0000               	nop	
 22322   016A8E                     
 22323                           ;LCD.c: 117:     ENVIA_NIBBLE(0x30);
 22324   016A8E  0E30               	movlw	48
 22325   016A90  EC5D  F0B7         	call	_ENVIA_NIBBLE
 22326   016A94                     
 22327                           ;LCD.c: 118:  ENVIA_NIBBLE(0x20);
 22328   016A94  0E20               	movlw	32
 22329   016A96  EC5D  F0B7         	call	_ENVIA_NIBBLE
 22330   016A9A                     
 22331                           ;LCD.c: 119:  ENVIA_LCD_CMD(0x01);
 22332   016A9A  0E01               	movlw	1
 22333   016A9C  ECA7  F0B6         	call	_ENVIA_LCD_CMD
 22334   016AA0                     
 22335                           ;LCD.c: 120:  ENVIA_LCD_CMD(0x28);
 22336   016AA0  0E28               	movlw	40
 22337   016AA2  ECA7  F0B6         	call	_ENVIA_LCD_CMD
 22338   016AA6                     
 22339                           ;LCD.c: 121:  ENVIA_LCD_CMD(0x0F);
 22340   016AA6  0E0F               	movlw	15
 22341   016AA8  ECA7  F0B6         	call	_ENVIA_LCD_CMD
 22342   016AAC                     
 22343                           ;LCD.c: 122:  ENVIA_LCD_CMD(0x06);
 22344   016AAC  0E06               	movlw	6
 22345   016AAE  ECA7  F0B6         	call	_ENVIA_LCD_CMD
 22346   016AB2                     
 22347                           ;LCD.c: 123:  ENVIA_LCD_CMD(0x01);
 22348   016AB2  0E01               	movlw	1
 22349   016AB4  ECA7  F0B6         	call	_ENVIA_LCD_CMD
 22350   016AB8  0012               	return		;funcret
 22351   016ABA                     __end_of_LCD_CONFIG:
 22352                           	callstack 0
 22353                           
 22354 ;; *************** function _CURSOR_ONOFF *****************
 22355 ;; Defined at:
 22356 ;;		line 62 in file "LCD.c"
 22357 ;; Parameters:    Size  Location     Type
 22358 ;;  estado          1    wreg     unsigned char 
 22359 ;; Auto vars:     Size  Location     Type
 22360 ;;  estado          1    3[COMRAM] unsigned char 
 22361 ;; Return value:  Size  Location     Type
 22362 ;;                  1    wreg      void 
 22363 ;; Registers used:
 22364 ;;		wreg, status,2, status,0, cstack
 22365 ;; Tracked objects:
 22366 ;;		On entry : 0/0
 22367 ;;		On exit  : 0/0
 22368 ;;		Unchanged: 0/0
 22369 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22374 ;;Total ram usage:        1 bytes
 22375 ;; Hardware stack levels used: 1
 22376 ;; Hardware stack levels required when called: 2
 22377 ;; This function calls:
 22378 ;;		_ENVIA_LCD_CMD
 22379 ;; This function is called by:
 22380 ;;		_LCD_init
 22381 ;;		_LCD_INIT
 22382 ;; This function uses a non-reentrant model
 22383 ;;
 22384                           
 22385                           	psect	text60
 22386   016DB2                     __ptext60:
 22387                           	callstack 0
 22388   016DB2                     _CURSOR_ONOFF:
 22389                           	callstack 123
 22390                           
 22391                           ;incstack = 0
 22392                           ;CURSOR_ONOFF@estado stored from wreg
 22393   016DB2  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
 22394   016DB4                     
 22395                           ;LCD.c: 62: void CURSOR_ONOFF(unsigned char estado);LCD.c: 63: {;LCD.c: 64:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
 22396   016DB4  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
 22397   016DB6  A4D8               	btfss	status,2,c
 22398   016DB8  EFE0  F0B6         	goto	u7711
 22399   016DBC  EFE2  F0B6         	goto	u7710
 22400   016DC0                     u7711:
 22401   016DC0  EFE5  F0B6         	goto	l9733
 22402   016DC4                     u7710:
 22403   016DC4  0E0E               	movlw	14
 22404   016DC6  ECA7  F0B6         	call	_ENVIA_LCD_CMD
 22405   016DCA                     l9733:
 22406                           
 22407                           ;LCD.c: 65:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
 22408   016DCA  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
 22409   016DCC  A4D8               	btfss	status,2,c
 22410   016DCE  EFEB  F0B6         	goto	u7721
 22411   016DD2  EFED  F0B6         	goto	u7720
 22412   016DD6                     u7721:
 22413   016DD6  EFF0  F0B6         	goto	l1249
 22414   016DDA                     u7720:
 22415   016DDA  0E0C               	movlw	12
 22416   016DDC  ECA7  F0B6         	call	_ENVIA_LCD_CMD
 22417   016DE0                     l1249:
 22418   016DE0  0012               	return		;funcret
 22419   016DE2                     __end_of_CURSOR_ONOFF:
 22420                           	callstack 0
 22421                           
 22422 ;; *************** function _CURSOR_HOME *****************
 22423 ;; Defined at:
 22424 ;;		line 37 in file "LCD.c"
 22425 ;; Parameters:    Size  Location     Type
 22426 ;;		None
 22427 ;; Auto vars:     Size  Location     Type
 22428 ;;		None
 22429 ;; Return value:  Size  Location     Type
 22430 ;;                  1    wreg      void 
 22431 ;; Registers used:
 22432 ;;		wreg, status,2, status,0, cstack
 22433 ;; Tracked objects:
 22434 ;;		On entry : 0/0
 22435 ;;		On exit  : 0/0
 22436 ;;		Unchanged: 0/0
 22437 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22442 ;;Total ram usage:        0 bytes
 22443 ;; Hardware stack levels used: 1
 22444 ;; Hardware stack levels required when called: 2
 22445 ;; This function calls:
 22446 ;;		_ENVIA_LCD_CMD
 22447 ;; This function is called by:
 22448 ;;		_LCD_init
 22449 ;;		_LCD_INIT
 22450 ;; This function uses a non-reentrant model
 22451 ;;
 22452                           
 22453                           	psect	text61
 22454   016F38                     __ptext61:
 22455                           	callstack 0
 22456   016F38                     _CURSOR_HOME:
 22457                           	callstack 123
 22458   016F38                     
 22459                           ;LCD.c: 39:  ENVIA_LCD_CMD(0x02);
 22460   016F38  0E02               	movlw	2
 22461   016F3A  ECA7  F0B6         	call	_ENVIA_LCD_CMD
 22462   016F3E  0012               	return		;funcret
 22463   016F40                     __end_of_CURSOR_HOME:
 22464                           	callstack 0
 22465                           
 22466 ;; *************** function _BORRAR_LCD *****************
 22467 ;; Defined at:
 22468 ;;		line 104 in file "LCD.c"
 22469 ;; Parameters:    Size  Location     Type
 22470 ;;		None
 22471 ;; Auto vars:     Size  Location     Type
 22472 ;;		None
 22473 ;; Return value:  Size  Location     Type
 22474 ;;                  1    wreg      void 
 22475 ;; Registers used:
 22476 ;;		wreg, status,2, status,0, cstack
 22477 ;; Tracked objects:
 22478 ;;		On entry : 0/0
 22479 ;;		On exit  : 0/0
 22480 ;;		Unchanged: 0/0
 22481 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22486 ;;Total ram usage:        0 bytes
 22487 ;; Hardware stack levels used: 1
 22488 ;; Hardware stack levels required when called: 2
 22489 ;; This function calls:
 22490 ;;		_ENVIA_LCD_CMD
 22491 ;; This function is called by:
 22492 ;;		_main
 22493 ;;		_LCD_init
 22494 ;;		_LCD_INIT
 22495 ;; This function uses a non-reentrant model
 22496 ;;
 22497                           
 22498                           	psect	text62
 22499   016F40                     __ptext62:
 22500                           	callstack 0
 22501   016F40                     _BORRAR_LCD:
 22502                           	callstack 123
 22503   016F40                     
 22504                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x01);
 22505   016F40  0E01               	movlw	1
 22506   016F42  ECA7  F0B6         	call	_ENVIA_LCD_CMD
 22507   016F46  0012               	return		;funcret
 22508   016F48                     __end_of_BORRAR_LCD:
 22509                           	callstack 0
 22510                           
 22511 ;; *************** function _ENVIA_LCD_CMD *****************
 22512 ;; Defined at:
 22513 ;;		line 136 in file "LCD.c"
 22514 ;; Parameters:    Size  Location     Type
 22515 ;;  dato            1    wreg     unsigned char 
 22516 ;; Auto vars:     Size  Location     Type
 22517 ;;  dato            1    1[COMRAM] unsigned char 
 22518 ;;  aux             1    2[COMRAM] unsigned char 
 22519 ;; Return value:  Size  Location     Type
 22520 ;;                  1    wreg      void 
 22521 ;; Registers used:
 22522 ;;		wreg, status,2, status,0, cstack
 22523 ;; Tracked objects:
 22524 ;;		On entry : 0/0
 22525 ;;		On exit  : 0/0
 22526 ;;		Unchanged: 0/0
 22527 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22532 ;;Total ram usage:        2 bytes
 22533 ;; Hardware stack levels used: 1
 22534 ;; Hardware stack levels required when called: 1
 22535 ;; This function calls:
 22536 ;;		_ENVIA_NIBBLE
 22537 ;;		_LEER_LCD
 22538 ;; This function is called by:
 22539 ;;		_POS_CURSOR
 22540 ;;		_CURSOR_HOME
 22541 ;;		_CURSOR_ONOFF
 22542 ;;		_BORRAR_LCD
 22543 ;;		_LCD_CONFIG
 22544 ;;		_BLINK_CURSOR
 22545 ;;		_DISPLAY_ONOFF
 22546 ;;		_CURSOR_SHIFTLEFT
 22547 ;;		_CURSOR_SHIFTRIGHT
 22548 ;;		_DISPLAY_SHIFTLEFT
 22549 ;;		_DISPLAY_SHIFTRIGHT
 22550 ;;		_GENERACARACTER
 22551 ;; This function uses a non-reentrant model
 22552 ;;
 22553                           
 22554                           	psect	text63
 22555   016D4E                     __ptext63:
 22556                           	callstack 0
 22557   016D4E                     _ENVIA_LCD_CMD:
 22558                           	callstack 124
 22559                           
 22560                           ;incstack = 0
 22561                           ;ENVIA_LCD_CMD@dato stored from wreg
 22562   016D4E  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
 22563   016D50                     
 22564                           ;LCD.c: 136: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 137: {;LCD.c: 138:  unsigned 
      +                          char aux;;LCD.c: 139:  LATDbits.LATD0 = 0;
 22565   016D50  90C1               	bcf	193,0,c	;volatile
 22566   016D52                     
 22567                           ;LCD.c: 140:  LEER_LCD();
 22568   016D52  EC10  F0B4         	call	_LEER_LCD	;wreg free
 22569   016D56                     
 22570                           ;LCD.c: 141:  TRISD = 0b00000000;
 22571   016D56  6AC9               	clrf	201,c	;volatile
 22572   016D58                     
 22573                           ;LCD.c: 142:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 22574   016D58  0E21               	movlw	33
 22575   016D5A                     u9607:
 22576   016D5A  2EE8               	decfsz	wreg,f,c
 22577   016D5C  D7FE               	bra	u9607
 22578   016D5E  0000               	nop	
 22579   016D60                     
 22580                           ;LCD.c: 143:     LATDbits.LATD1 = 0;
 22581   016D60  92C1               	bcf	193,1,c	;volatile
 22582   016D62                     
 22583                           ;LCD.c: 144:  LATDbits.LATD2 = 0;
 22584   016D62  94C1               	bcf	193,2,c	;volatile
 22585   016D64                     
 22586                           ;LCD.c: 145:  LATDbits.LATD0 = 0;
 22587   016D64  90C1               	bcf	193,0,c	;volatile
 22588   016D66                     
 22589                           ;LCD.c: 146:  aux = dato & 0xF0;
 22590   016D66  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
 22591   016D68  0BF0               	andlw	240
 22592   016D6A  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
 22593   016D6C                     
 22594                           ;LCD.c: 147:  ENVIA_NIBBLE(aux);
 22595   016D6C  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
 22596   016D6E  EC5D  F0B7         	call	_ENVIA_NIBBLE
 22597   016D72                     
 22598                           ;LCD.c: 148:  aux = dato<<4;
 22599   016D72  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
 22600   016D74  0BF0               	andlw	240
 22601   016D76  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
 22602   016D78                     
 22603                           ;LCD.c: 149:  ENVIA_NIBBLE(aux);
 22604   016D78  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
 22605   016D7A  EC5D  F0B7         	call	_ENVIA_NIBBLE
 22606   016D7E  0012               	return		;funcret
 22607   016D80                     __end_of_ENVIA_LCD_CMD:
 22608                           	callstack 0
 22609                           
 22610 ;; *************** function _I2C1_Initialize *****************
 22611 ;; Defined at:
 22612 ;;		line 141 in file "I2C_LIB.c"
 22613 ;; Parameters:    Size  Location     Type
 22614 ;;		None
 22615 ;; Auto vars:     Size  Location     Type
 22616 ;;		None
 22617 ;; Return value:  Size  Location     Type
 22618 ;;                  1    wreg      void 
 22619 ;; Registers used:
 22620 ;;		wreg, status,2
 22621 ;; Tracked objects:
 22622 ;;		On entry : 0/0
 22623 ;;		On exit  : 0/0
 22624 ;;		Unchanged: 0/0
 22625 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22630 ;;Total ram usage:        0 bytes
 22631 ;; Hardware stack levels used: 1
 22632 ;; This function calls:
 22633 ;;		Nothing
 22634 ;; This function is called by:
 22635 ;;		_main
 22636 ;; This function uses a non-reentrant model
 22637 ;;
 22638                           
 22639                           	psect	text64
 22640   016E9E                     __ptext64:
 22641                           	callstack 0
 22642   016E9E                     _I2C1_Initialize:
 22643                           	callstack 126
 22644   016E9E                     
 22645                           ;I2C_LIB.c: 144:     I2C1CON0 = 0x04;
 22646   016E9E  0E04               	movlw	4
 22647   016EA0  0102               	movlb	2	; () banked
 22648   016EA2  6F94               	movwf	148,b	;volatile
 22649                           
 22650                           ;I2C_LIB.c: 146:     I2C1CON1 = 0x80;
 22651   016EA4  0E80               	movlw	128
 22652   016EA6  6F95               	movwf	149,b	;volatile
 22653                           
 22654                           ;I2C_LIB.c: 148:     I2C1CON2 = 0x18;
 22655   016EA8  0E18               	movlw	24
 22656   016EAA  6F96               	movwf	150,b	;volatile
 22657                           
 22658                           ;I2C_LIB.c: 150:     I2C1CLK = 0x03;
 22659   016EAC  0E03               	movlw	3
 22660   016EAE  6F9C               	movwf	156,b	;volatile
 22661   016EB0                     
 22662                           ; BSR set to: 2
 22663                           ;I2C_LIB.c: 152:     I2C1PIR = 0x00;
 22664   016EB0  6B9A               	clrf	154,b	;volatile
 22665   016EB2                     
 22666                           ; BSR set to: 2
 22667                           ;I2C_LIB.c: 154:     I2C1PIE = 0x00;
 22668   016EB2  6B9B               	clrf	155,b	;volatile
 22669   016EB4                     
 22670                           ; BSR set to: 2
 22671                           ;I2C_LIB.c: 156:     I2C1ERR = 0x00;
 22672   016EB4  6B97               	clrf	151,b	;volatile
 22673   016EB6                     
 22674                           ; BSR set to: 2
 22675                           ;I2C_LIB.c: 158:     I2C1CNT = 0xFF;
 22676   016EB6  698D               	setf	141,b	;volatile
 22677   016EB8                     
 22678                           ; BSR set to: 2
 22679   016EB8  0012               	return		;funcret
 22680   016EBA                     __end_of_I2C1_Initialize:
 22681                           	callstack 0
 22682                           
 22683 ;; *************** function _ESCRIBE_MENSAJE *****************
 22684 ;; Defined at:
 22685 ;;		line 68 in file "LCD.c"
 22686 ;; Parameters:    Size  Location     Type
 22687 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
 22688 ;;		 -> STR_19(21), STR_18(13), STR_17(9), STR_16(4), 
 22689 ;;		 -> STR_15(6), main@buffer1(16), STR_13(7), 
 22690 ;;  tam             1    5[COMRAM] unsigned char 
 22691 ;; Auto vars:     Size  Location     Type
 22692 ;;  i               1    8[COMRAM] unsigned char 
 22693 ;; Return value:  Size  Location     Type
 22694 ;;                  1    wreg      void 
 22695 ;; Registers used:
 22696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22697 ;; Tracked objects:
 22698 ;;		On entry : 0/0
 22699 ;;		On exit  : 0/0
 22700 ;;		Unchanged: 0/0
 22701 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22702 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22704 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22705 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22706 ;;Total ram usage:        6 bytes
 22707 ;; Hardware stack levels used: 1
 22708 ;; Hardware stack levels required when called: 2
 22709 ;; This function calls:
 22710 ;;		_ENVIA_CHAR
 22711 ;; This function is called by:
 22712 ;;		_main
 22713 ;; This function uses a non-reentrant model
 22714 ;;
 22715                           
 22716                           	psect	text65
 22717   016B5A                     __ptext65:
 22718                           	callstack 0
 22719   016B5A                     _ESCRIBE_MENSAJE:
 22720                           	callstack 124
 22721   016B5A                     
 22722                           ;LCD.c: 68: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 69: {;LCD.
      +                          c: 70:  unsigned char i = 0;
 22723   016B5A  6A09               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
 22724                           
 22725                           ;LCD.c: 71:  for(i = 0; i<tam; i++)
 22726   016B5C  6A09               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
 22727   016B5E  EFCB  F0B5         	goto	l10013
 22728   016B62                     l10009:
 22729                           
 22730                           ;LCD.c: 72:  {;LCD.c: 73:   ENVIA_CHAR(cadena[i]);
 22731   016B62  5009               	movf	ESCRIBE_MENSAJE@i^(0+1280),w,c
 22732   016B64  2404               	addwf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
 22733   016B66  6E07               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
 22734   016B68  0E00               	movlw	0
 22735   016B6A  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),w,c
 22736   016B6C  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^(0+1280),c
 22737   016B6E  C507  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
 22738   016B72  C508  F4F7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
 22739   016B76  0E00               	movlw	low (__mediumconst shr (0+16))
 22740   016B78  6EF8               	movwf	tblptru,c
 22741   016B7A  0E25               	movlw	(high __ramtop+-1)
 22742   016B7C  64F7               	cpfsgt	tblptrh,c
 22743   016B7E  D003               	bra	u7887
 22744   016B80  0008               	tblrd		*
 22745   016B82  50F5               	movf	tablat,w,c
 22746   016B84  D005               	bra	u7880
 22747   016B86                     u7887:
 22748   016B86  C4F6 F4E9          	movff	tblptrl,fsr0l
 22749   016B8A  C4F7 F4EA          	movff	tblptrh,fsr0h
 22750   016B8E  50EF               	movf	indf0,w,c
 22751   016B90                     u7880:
 22752   016B90  ECC0  F0B6         	call	_ENVIA_CHAR
 22753   016B94                     
 22754                           ;LCD.c: 74:  }
 22755   016B94  2A09               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
 22756   016B96                     l10013:
 22757   016B96  5006               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
 22758   016B98  5C09               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
 22759   016B9A  A0D8               	btfss	status,0,c
 22760   016B9C  EFD2  F0B5         	goto	u7891
 22761   016BA0  EFD4  F0B5         	goto	u7890
 22762   016BA4                     u7891:
 22763   016BA4  EFB1  F0B5         	goto	l10009
 22764   016BA8                     u7890:
 22765   016BA8  0012               	return		;funcret
 22766   016BAA                     __end_of_ESCRIBE_MENSAJE:
 22767                           	callstack 0
 22768                           
 22769 ;; *************** function _ENVIA_CHAR *****************
 22770 ;; Defined at:
 22771 ;;		line 88 in file "LCD.c"
 22772 ;; Parameters:    Size  Location     Type
 22773 ;;  dato            1    wreg     unsigned char 
 22774 ;; Auto vars:     Size  Location     Type
 22775 ;;  dato            1    1[COMRAM] unsigned char 
 22776 ;;  aux             1    2[COMRAM] unsigned char 
 22777 ;; Return value:  Size  Location     Type
 22778 ;;                  1    wreg      void 
 22779 ;; Registers used:
 22780 ;;		wreg, status,2, status,0, cstack
 22781 ;; Tracked objects:
 22782 ;;		On entry : 0/0
 22783 ;;		On exit  : 0/0
 22784 ;;		Unchanged: 0/0
 22785 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22789 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22790 ;;Total ram usage:        2 bytes
 22791 ;; Hardware stack levels used: 1
 22792 ;; Hardware stack levels required when called: 1
 22793 ;; This function calls:
 22794 ;;		_ENVIA_NIBBLE
 22795 ;;		_LEER_LCD
 22796 ;; This function is called by:
 22797 ;;		_ESCRIBE_MENSAJE
 22798 ;;		_ESCRIBE_MENSAJE2
 22799 ;;		_GENERACARACTER
 22800 ;;		_LCD_ESCRIBE_VAR_CHAR
 22801 ;;		_LCD_ESCRIBE_VAR_INT
 22802 ;;		_LCD_CHAR_GRADO
 22803 ;;		_LCD_VARCHAR_BITS
 22804 ;; This function uses a non-reentrant model
 22805 ;;
 22806                           
 22807                           	psect	text66
 22808   016D80                     __ptext66:
 22809                           	callstack 0
 22810   016D80                     _ENVIA_CHAR:
 22811                           	callstack 124
 22812                           
 22813                           ;incstack = 0
 22814                           ;ENVIA_CHAR@dato stored from wreg
 22815   016D80  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
 22816   016D82                     
 22817                           ;LCD.c: 88: void ENVIA_CHAR(unsigned char dato);LCD.c: 89: {;LCD.c: 90:  unsigned char a
      +                          ux;;LCD.c: 91:  LATDbits.LATD0 = 1;
 22818   016D82  80C1               	bsf	193,0,c	;volatile
 22819   016D84                     
 22820                           ;LCD.c: 92:  LEER_LCD();
 22821   016D84  EC10  F0B4         	call	_LEER_LCD	;wreg free
 22822   016D88                     
 22823                           ;LCD.c: 93:  TRISD = 0x00;
 22824   016D88  6AC9               	clrf	201,c	;volatile
 22825   016D8A                     
 22826                           ;LCD.c: 94:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 22827   016D8A  0E21               	movlw	33
 22828   016D8C                     u9617:
 22829   016D8C  2EE8               	decfsz	wreg,f,c
 22830   016D8E  D7FE               	bra	u9617
 22831   016D90  0000               	nop	
 22832   016D92                     
 22833                           ;LCD.c: 95:  LATDbits.LATD1 = 0;
 22834   016D92  92C1               	bcf	193,1,c	;volatile
 22835   016D94                     
 22836                           ;LCD.c: 96:  LATDbits.LATD2 = 0;
 22837   016D94  94C1               	bcf	193,2,c	;volatile
 22838   016D96                     
 22839                           ;LCD.c: 97:  LATDbits.LATD0 = 1;
 22840   016D96  80C1               	bsf	193,0,c	;volatile
 22841   016D98                     
 22842                           ;LCD.c: 98:  aux = dato & 0xF0;
 22843   016D98  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
 22844   016D9A  0BF0               	andlw	240
 22845   016D9C  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
 22846   016D9E                     
 22847                           ;LCD.c: 99:  ENVIA_NIBBLE(aux);
 22848   016D9E  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
 22849   016DA0  EC5D  F0B7         	call	_ENVIA_NIBBLE
 22850   016DA4                     
 22851                           ;LCD.c: 100:  aux = dato << 4;
 22852   016DA4  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
 22853   016DA6  0BF0               	andlw	240
 22854   016DA8  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
 22855   016DAA                     
 22856                           ;LCD.c: 101:  ENVIA_NIBBLE(aux);
 22857   016DAA  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
 22858   016DAC  EC5D  F0B7         	call	_ENVIA_NIBBLE
 22859   016DB0  0012               	return		;funcret
 22860   016DB2                     __end_of_ENVIA_CHAR:
 22861                           	callstack 0
 22862                           
 22863 ;; *************** function _LEER_LCD *****************
 22864 ;; Defined at:
 22865 ;;		line 152 in file "LCD.c"
 22866 ;; Parameters:    Size  Location     Type
 22867 ;;		None
 22868 ;; Auto vars:     Size  Location     Type
 22869 ;;  aux             1    0[COMRAM] unsigned char 
 22870 ;; Return value:  Size  Location     Type
 22871 ;;                  1    wreg      void 
 22872 ;; Registers used:
 22873 ;;		wreg, status,2, status,0
 22874 ;; Tracked objects:
 22875 ;;		On entry : 0/0
 22876 ;;		On exit  : 0/0
 22877 ;;		Unchanged: 0/0
 22878 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22882 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22883 ;;Total ram usage:        1 bytes
 22884 ;; Hardware stack levels used: 1
 22885 ;; This function calls:
 22886 ;;		Nothing
 22887 ;; This function is called by:
 22888 ;;		_ENVIA_CHAR
 22889 ;;		_ENVIA_LCD_CMD
 22890 ;; This function uses a non-reentrant model
 22891 ;;
 22892                           
 22893                           	psect	text67
 22894   016820                     __ptext67:
 22895                           	callstack 0
 22896   016820                     _LEER_LCD:
 22897                           	callstack 124
 22898   016820                     
 22899                           ;LCD.c: 154:  unsigned char aux;;LCD.c: 155:  TRISD = 0xF8;
 22900   016820  0EF8               	movlw	248
 22901   016822  6EC9               	movwf	201,c	;volatile
 22902   016824                     
 22903                           ;LCD.c: 156:  LATDbits.LATD0 = 0;
 22904   016824  90C1               	bcf	193,0,c	;volatile
 22905   016826                     
 22906                           ;LCD.c: 157:  LATDbits.LATD1 = 1;
 22907   016826  82C1               	bsf	193,1,c	;volatile
 22908   016828                     
 22909                           ;LCD.c: 158:  LATDbits.LATD2 = 1;
 22910   016828  84C1               	bsf	193,2,c	;volatile
 22911   01682A                     
 22912                           ;LCD.c: 159:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 22913   01682A  0E21               	movlw	33
 22914   01682C                     u9627:
 22915   01682C  2EE8               	decfsz	wreg,f,c
 22916   01682E  D7FE               	bra	u9627
 22917   016830  0000               	nop	
 22918   016832                     
 22919                           ;LCD.c: 160:  aux = PORTD;
 22920   016832  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
 22921   016836                     
 22922                           ;LCD.c: 161:  LATDbits.LATD2 = 0;
 22923   016836  94C1               	bcf	193,2,c	;volatile
 22924   016838                     
 22925                           ;LCD.c: 162:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 22926   016838  0E21               	movlw	33
 22927   01683A                     u9637:
 22928   01683A  2EE8               	decfsz	wreg,f,c
 22929   01683C  D7FE               	bra	u9637
 22930   01683E  0000               	nop	
 22931   016840                     
 22932                           ;LCD.c: 163:  LATDbits.LATD2 = 1;
 22933   016840  84C1               	bsf	193,2,c	;volatile
 22934   016842                     
 22935                           ;LCD.c: 164:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 22936   016842  0E21               	movlw	33
 22937   016844                     u9647:
 22938   016844  2EE8               	decfsz	wreg,f,c
 22939   016846  D7FE               	bra	u9647
 22940   016848  0000               	nop	
 22941   01684A                     
 22942                           ;LCD.c: 165:  LATDbits.LATD2 = 0;
 22943   01684A  94C1               	bcf	193,2,c	;volatile
 22944   01684C                     l8617:
 22945                           
 22946                           ;LCD.c: 166:  aux = aux & 0x80;
 22947   01684C  5001               	movf	LEER_LCD@aux^(0+1280),w,c
 22948   01684E  0B80               	andlw	128
 22949   016850  6E01               	movwf	LEER_LCD@aux^(0+1280),c
 22950                           
 22951                           ;LCD.c: 167:  while(aux == 0x80)
 22952   016852  EF3F  F0B4         	goto	l8631
 22953   016856                     l1280:
 22954                           
 22955                           ;LCD.c: 168:         {;LCD.c: 169:             LATDbits.LATD2 = 1;
 22956   016856  84C1               	bsf	193,2,c	;volatile
 22957   016858                     
 22958                           ;LCD.c: 170:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 22959   016858  0E21               	movlw	33
 22960   01685A                     u9657:
 22961   01685A  2EE8               	decfsz	wreg,f,c
 22962   01685C  D7FE               	bra	u9657
 22963   01685E  0000               	nop	
 22964   016860                     
 22965                           ;LCD.c: 171:             aux = PORTD;
 22966   016860  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
 22967   016864                     
 22968                           ;LCD.c: 172:             LATDbits.LATD2 = 0;
 22969   016864  94C1               	bcf	193,2,c	;volatile
 22970                           
 22971                           ;LCD.c: 173:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 22972   016866  0E21               	movlw	33
 22973   016868                     u9667:
 22974   016868  2EE8               	decfsz	wreg,f,c
 22975   01686A  D7FE               	bra	u9667
 22976   01686C  0000               	nop	
 22977   01686E                     
 22978                           ;LCD.c: 174:             LATDbits.LATD2 = 1;
 22979   01686E  84C1               	bsf	193,2,c	;volatile
 22980                           
 22981                           ;LCD.c: 175:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 22982   016870  0E21               	movlw	33
 22983   016872                     u9677:
 22984   016872  2EE8               	decfsz	wreg,f,c
 22985   016874  D7FE               	bra	u9677
 22986   016876  0000               	nop	
 22987   016878                     
 22988                           ;LCD.c: 176:             LATDbits.LATD2 = 0;
 22989   016878  94C1               	bcf	193,2,c	;volatile
 22990   01687A  EF26  F0B4         	goto	l8617
 22991   01687E                     l8631:
 22992                           
 22993                           ;LCD.c: 167:  while(aux == 0x80)
 22994   01687E  0E80               	movlw	128
 22995   016880  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
 22996   016882  B4D8               	btfsc	status,2,c
 22997   016884  EF46  F0B4         	goto	u6331
 22998   016888  EF48  F0B4         	goto	u6330
 22999   01688C                     u6331:
 23000   01688C  EF2B  F0B4         	goto	l1280
 23001   016890                     u6330:
 23002   016890  0012               	return		;funcret
 23003   016892                     __end_of_LEER_LCD:
 23004                           	callstack 0
 23005                           
 23006 ;; *************** function _ENVIA_NIBBLE *****************
 23007 ;; Defined at:
 23008 ;;		line 126 in file "LCD.c"
 23009 ;; Parameters:    Size  Location     Type
 23010 ;;  dato            1    wreg     unsigned char 
 23011 ;; Auto vars:     Size  Location     Type
 23012 ;;  dato            1    0[COMRAM] unsigned char 
 23013 ;; Return value:  Size  Location     Type
 23014 ;;                  1    wreg      void 
 23015 ;; Registers used:
 23016 ;;		wreg, status,2, status,0
 23017 ;; Tracked objects:
 23018 ;;		On entry : 0/0
 23019 ;;		On exit  : 0/0
 23020 ;;		Unchanged: 0/0
 23021 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23025 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23026 ;;Total ram usage:        1 bytes
 23027 ;; Hardware stack levels used: 1
 23028 ;; This function calls:
 23029 ;;		Nothing
 23030 ;; This function is called by:
 23031 ;;		_ENVIA_CHAR
 23032 ;;		_LCD_CONFIG
 23033 ;;		_ENVIA_LCD_CMD
 23034 ;; This function uses a non-reentrant model
 23035 ;;
 23036                           
 23037                           	psect	text68
 23038   016EBA                     __ptext68:
 23039                           	callstack 0
 23040   016EBA                     _ENVIA_NIBBLE:
 23041                           	callstack 124
 23042                           
 23043                           ;incstack = 0
 23044                           ;ENVIA_NIBBLE@dato stored from wreg
 23045   016EBA  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
 23046   016EBC                     
 23047                           ;LCD.c: 126: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 127: {;LCD.c: 128:  LATD &= 0x
      +                          0F;
 23048   016EBC  0E0F               	movlw	15
 23049   016EBE  16C1               	andwf	193,f,c	;volatile
 23050                           
 23051                           ;LCD.c: 129:  dato &= 0xF0;
 23052   016EC0  0EF0               	movlw	240
 23053   016EC2  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
 23054                           
 23055                           ;LCD.c: 130:  LATD|= dato;
 23056   016EC4  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
 23057   016EC6  12C1               	iorwf	193,f,c	;volatile
 23058   016EC8                     
 23059                           ;LCD.c: 131:  LATDbits.LATD2 = 1;
 23060   016EC8  84C1               	bsf	193,2,c	;volatile
 23061   016ECA                     
 23062                           ;LCD.c: 132:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 23063   016ECA  0E21               	movlw	33
 23064   016ECC                     u9687:
 23065   016ECC  2EE8               	decfsz	wreg,f,c
 23066   016ECE  D7FE               	bra	u9687
 23067   016ED0  0000               	nop	
 23068   016ED2                     
 23069                           ;LCD.c: 133:  LATDbits.LATD2 = 0;
 23070   016ED2  94C1               	bcf	193,2,c	;volatile
 23071   016ED4  0012               	return		;funcret
 23072   016ED6                     __end_of_ENVIA_NIBBLE:
 23073                           	callstack 0
 23074                           
 23075                           	psect	rparam
 23076   000001                     ___rparam_used  equ	1
 23077   000000                     ___param_bank   equ	0
 23078   000000                     __Lparam        equ	__Lrparam
 23079   000000                     __Hparam        equ	__Hrparam
 23080                           
 23081                           	psect	config
 23082                           
 23083                           ;Config register CONFIG1 @ 0x300000
 23084                           ;	External Oscillator Selection
 23085                           ;	FEXTOSC = OFF, Oscillator not enabled
 23086                           ;	Reset Oscillator Selection
 23087                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 23088   300000                     	org	3145728
 23089   300000  8C                 	db	140
 23090                           
 23091                           ;Config register CONFIG2 @ 0x300001
 23092                           ;	Clock out Enable bit
 23093                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 23094                           ;	PRLOCKED One-Way Set Enable bit
 23095                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 23096                           ;	Clock Switch Enable bit
 23097                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 23098                           ;	Fail-Safe Clock Monitor Enable bit
 23099                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 23100   300001                     	org	3145729
 23101   300001  FF                 	db	255
 23102                           
 23103                           ;Config register CONFIG3 @ 0x300002
 23104                           ;	MCLR Enable bit
 23105                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 23106                           ;	Power-up timer selection bits
 23107                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 23108                           ;	Multi-vector enable bit
 23109                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 23110                           ;	IVTLOCK bit One-way set enable bit
 23111                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 23112                           ;	Low Power BOR Enable bit
 23113                           ;	LPBOREN = OFF, Low-Power BOR disabled
 23114                           ;	Brown-out Reset Enable bits
 23115                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 23116   300002                     	org	3145730
 23117   300002  FF                 	db	255
 23118                           
 23119                           ;Config register CONFIG4 @ 0x300003
 23120                           ;	Brown-out Reset Voltage Selection bits
 23121                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 23122                           ;	ZCD Disable bit
 23123                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 23124                           ;	PPSLOCK bit One-Way Set Enable bit
 23125                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 23126                           ;	Stack Full/Underflow Reset Enable bit
 23127                           ;	STVREN = ON, Stack full/underflow will cause Reset
 23128                           ;	Low Voltage Programming Enable bit
 23129                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 23130                           ;	Extended Instruction Set Enable bit
 23131                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 23132   300003                     	org	3145731
 23133   300003  FF                 	db	255
 23134                           
 23135                           ;Config register CONFIG5 @ 0x300004
 23136                           ;	WDT Period selection bits
 23137                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 23138                           ;	WDT operating mode
 23139                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 23140   300004                     	org	3145732
 23141   300004  9F                 	db	159
 23142                           
 23143                           ;Config register CONFIG6 @ 0x300005
 23144                           ;	WDT Window Select bits
 23145                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 23146                           ;	WDT input clock selector
 23147                           ;	WDTCCS = SC, Software Control
 23148   300005                     	org	3145733
 23149   300005  FF                 	db	255
 23150                           
 23151                           ;Config register CONFIG7 @ 0x300006
 23152                           ;	Boot Block Size selection bits
 23153                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 23154                           ;	Boot Block enable bit
 23155                           ;	BBEN = OFF, Boot block disabled
 23156                           ;	Storage Area Flash enable bit
 23157                           ;	SAFEN = OFF, SAF disabled
 23158                           ;	Background Debugger
 23159                           ;	DEBUG = ON, Background Debugger enabled
 23160   300006                     	org	3145734
 23161   300006  DF                 	db	223
 23162                           
 23163                           ;Config register CONFIG8 @ 0x300007
 23164                           ;	Boot Block Write Protection bit
 23165                           ;	WRTB = OFF, Boot Block not Write protected
 23166                           ;	Configuration Register Write Protection bit
 23167                           ;	WRTC = OFF, Configuration registers not Write protected
 23168                           ;	Data EEPROM Write Protection bit
 23169                           ;	WRTD = OFF, Data EEPROM not Write protected
 23170                           ;	SAF Write protection bit
 23171                           ;	WRTSAF = OFF, SAF not Write Protected
 23172                           ;	Application Block write protection bit
 23173                           ;	WRTAPP = OFF, Application Block not write protected
 23174   300007                     	org	3145735
 23175   300007  FF                 	db	255
 23176                           
 23177                           ;Config register CONFIG10 @ 0x300009
 23178                           ;	PFM and Data EEPROM Code Protection bit
 23179                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 23180   300009                     	org	3145737
 23181   300009  FF                 	db	255
 23182                           tosu	equ	0x4FF
 23183                           tosh	equ	0x4FE
 23184                           tosl	equ	0x4FD
 23185                           stkptr	equ	0x4FC
 23186                           pclatu	equ	0x4FB
 23187                           pclath	equ	0x4FA
 23188                           pcl	equ	0x4F9
 23189                           tblptru	equ	0x4F8
 23190                           tblptrh	equ	0x4F7
 23191                           tblptrl	equ	0x4F6
 23192                           tablat	equ	0x4F5
 23193                           prodh	equ	0x4F4
 23194                           prodl	equ	0x4F3
 23195                           indf0	equ	0x4EF
 23196                           postinc0	equ	0x4EE
 23197                           postdec0	equ	0x4ED
 23198                           preinc0	equ	0x4EC
 23199                           plusw0	equ	0x4EB
 23200                           fsr0h	equ	0x4EA
 23201                           fsr0l	equ	0x4E9
 23202                           wreg	equ	0x4E8
 23203                           indf1	equ	0x4E7
 23204                           postinc1	equ	0x4E6
 23205                           postdec1	equ	0x4E5
 23206                           preinc1	equ	0x4E4
 23207                           plusw1	equ	0x4E3
 23208                           fsr1h	equ	0x4E2
 23209                           fsr1l	equ	0x4E1
 23210                           bsr	equ	0x4E0
 23211                           indf2	equ	0x4DF
 23212                           postinc2	equ	0x4DE
 23213                           postdec2	equ	0x4DD
 23214                           preinc2	equ	0x4DC
 23215                           plusw2	equ	0x4DB
 23216                           fsr2h	equ	0x4DA
 23217                           fsr2l	equ	0x4D9
 23218                           status	equ	0x4D8

Data Sizes:
    Strings     240
    Constant    197
    Data        1
    BSS         391
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK5           160    160     160
    BANK6           256    175     255
    BANK7           256      0     231
    BANK8           256      0      80
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write@data(COMRAM[1]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 21
		 -> main@buffer1(BANK6[16]), STR_13(CODE[7]), STR_15(CODE[6]), STR_16(CODE[4]), 
		 -> STR_17(CODE[9]), STR_18(CODE[13]), STR_19(CODE[21]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer1(BANK6[16]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer1(BANK6[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    i2c1_fsmStateTable	const PTR FTN()enum E17538[19] size(3) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_BUS_COLLISION(), I2C1_DO_BUS_ERROR(), I2C1_DO_IDLE(), 
		 -> I2C1_DO_RESET(), I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_EMPTY(), 
		 -> I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), 
		 -> I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), 
		 -> I2C1_DO_TX(), I2C1_DO_TX_ACK(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Status$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(3) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> bufferBlock$data(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read1ByteRegister@returnValue$data(COMRAM[2]), 
		 -> I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read2ByteRegister@returnValue$data(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Write1ByteRegister@data$data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write2ByteRegister@data$data(COMRAM[2]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write@data(COMRAM[1]), 
		 -> I2C1_Write@data$data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write@data$data	PTR unsigned char  size(2) Largest target is 0

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    MovingAverage_Reset@filter	PTR struct . size(2) Largest target is 211
		 -> movement_detector(BANK7[211]), 

    MPU6050_DMP_GetData@quat	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    MPU6050_DMP_GetData@ypr	PTR struct . size(2) Largest target is 12
		 -> main@ypr(BANK6[12]), 

    MPU6050_ReadAll@data	PTR struct . size(2) Largest target is 43
		 -> MPU6050_Calibrate@data(COMRAM[43]), MPU6050_DMP_GetData@sensor_data(BANK6[43]), 

    MPU6050_ReadRegisters@data	PTR unsigned char  size(2) Largest target is 14
		 -> MPU6050_ReadAccel@data(COMRAM[6]), MPU6050_ReadAll@raw_data(BANK5[14]), MPU6050_ReadGyro@data(COMRAM[6]), MPU6050_ReadTemperature@data(COMRAM[2]), 

    NULL$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write@data(COMRAM[1]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK5[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK5[2]), 

    __rem_pio2f@y	PTR  size(2) Largest target is 4
		 -> cosf@y(BANK5[4]), sinf@y(BANK5[4]), 

    S132$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write@data(COMRAM[1]), NULL(NULL[0]), 

    S132$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write@data(COMRAM[1]), NULL(NULL[0]), 

    S132$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(3) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S132$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write@data(COMRAM[1]), NULL(NULL[0]), 

    S2834$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer1(BANK6[16]), 

    S2834$source	PTR const unsigned char  size(2) Largest target is 0

    S604$data	PTR unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    sp__MPU6050_MovementToString	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[15]), STR_10(CODE[9]), STR_11(CODE[6]), STR_12(CODE[12]), 
		 -> STR_2(CODE[9]), STR_3(CODE[6]), STR_4(CODE[10]), STR_5(CODE[8]), 
		 -> STR_6(CODE[21]), STR_7(CODE[18]), STR_8(CODE[22]), STR_9(CODE[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK5[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer1(BANK6[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_20(CODE[4]), STR_23(CODE[4]), 

    SW_I2C_ReadBlock@data	PTR unsigned char  size(2) Largest target is 14
		 -> MPU6050_ReadAccel@data(COMRAM[6]), MPU6050_ReadAll@raw_data(BANK5[14]), MPU6050_ReadGyro@data(COMRAM[6]), MPU6050_ReadTemperature@data(COMRAM[2]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK5[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[16]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK5[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK5[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[16]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[16]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), 


Critical Paths under _main in COMRAM

    _efgtoa->___fldiv
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    _POS_CURSOR->_ENVIA_LCD_CMD
    _MPU6050_DMP_Init->_MPU6050_Init
    _MPU6050_Init->_MPU6050_TestConnection
    _MPU6050_WriteRegister->_SW_I2C_WriteRegister
    _SW_I2C_WriteRegister->_SW_I2C_WriteByte
    _MPU6050_TestConnection->_MPU6050_ReadRegister
    _MPU6050_ReadRegister->_SW_I2C_ReadRegister
    _SW_I2C_ReadRegister->_SW_I2C_ReadByte
    _MPU6050_Movement_Init->_MovingAverage_Reset
    _MPU6050_DMP_GetData->___fldiv
    ___fltol->___fladd
    ___cosdf->___fladd
    ___flge->___flmul
    _MPU6050_ReadAll->___fldiv
    _sqrtf->___fladd
    _atan2f->___fldiv
    _atanf->___fldiv
    _fabsf->___fldiv
    ___flsub->___fldiv
    ___fladd->___flmul
    ___flmul->___flneg
    ___fldiv->_sqrtf
    _MPU6050_ReadRegisters->_SW_I2C_ReadBlock
    _SW_I2C_ReadBlock->_SW_I2C_ReadByte
    _SW_I2C_Restart->_SW_I2C_Start
    _SW_I2C_Start->_SW_I2C_IsBusFree
    _SW_I2C_ReadByte->_SW_I2C_SendAck
    _SW_I2C_ReadByte->_SW_I2C_SendNack
    _LCD_init->_CURSOR_ONOFF
    _LCD_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    _main->_MPU6050_DMP_GetData
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    _MPU6050_DMP_GetData->_MPU6050_ReadAll
    _sinf->___rem_pio2f
    _cosf->___rem_pio2f
    ___sindf->___flsub
    ___rem_pio2f->___flsub
    ___rem_pio2f->_fabsf
    _MPU6050_ReadAll->_atan2f
    _atan2f->_atanf
    _atanf->___flsub
    _atanf->_fabsf
    _fabsf->___fldiv
    ___flsub->___fldiv

Critical Paths under _main in BANK6

    _main->_MPU6050_DMP_GetData

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0  107164
                                            137 BANK6     38    38      0
                         _BORRAR_LCD
                    _ESCRIBE_MENSAJE
                    _I2C1_Initialize
                           _LCD_init
                _MPU6050_DMP_GetData
                   _MPU6050_DMP_Init
                         _POS_CURSOR
                             ___flge
                            ___flneg
                          _configuro
                              _fabsf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12   12766
                                            109 BANK5     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   12561
                                            101 BANK5      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    10      6   12427
                                             86 BANK5     15     9      6
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     182
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   11497
                                             33 BANK5     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4      77
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     3      6     707
                                             16 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     331
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     232
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     146
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4      69
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             13 BANK5     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     411
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _MPU6050_DMP_Init                                     0     0      0    1098
                       _MPU6050_Init
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Init                                         2     2      0    1098
                                             13 COMRAM     2     2      0
              _MPU6050_Movement_Init
             _MPU6050_TestConnection
              _MPU6050_WriteRegister
 ---------------------------------------------------------------------------------
 (3) _MPU6050_WriteRegister                                2     1      1     438
                                              9 COMRAM     2     1      1
               _SW_I2C_WriteRegister
 ---------------------------------------------------------------------------------
 (4) _SW_I2C_WriteRegister                                 4     2      2     379
                                              5 COMRAM     4     2      2
                       _SW_I2C_Start
                        _SW_I2C_Stop
                   _SW_I2C_WriteByte
 ---------------------------------------------------------------------------------
 (3) _MPU6050_TestConnection                               1     1      0     520
                                             12 COMRAM     1     1      0
               _MPU6050_ReadRegister
 ---------------------------------------------------------------------------------
 (4) _MPU6050_ReadRegister                                 1     1      0     497
                                             11 COMRAM     1     1      0
                _SW_I2C_ReadRegister
 ---------------------------------------------------------------------------------
 (5) _SW_I2C_ReadRegister                                  4     3      1     468
                                              7 COMRAM     4     3      1
                    _SW_I2C_ReadByte
                     _SW_I2C_Restart
                       _SW_I2C_Start
                        _SW_I2C_Stop
                   _SW_I2C_WriteByte
 ---------------------------------------------------------------------------------
 (3) _MPU6050_Movement_Init                                0     0      0     140
                _MovingAverage_Reset
 ---------------------------------------------------------------------------------
 (4) _MovingAverage_Reset                                  5     3      2     140
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _MPU6050_DMP_GetData                                143   139      4   90783
                                            154 BANK5      6     2      4
                                              0 BANK6    137   137      0
                    _GetTimestamp_ms
                    _MPU6050_ReadAll
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                             _atan2f
                               _cosf
                               _sinf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   18520
                                             54 BANK5     26    22      4
                            ___cosdf
                            ___fladd
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (2) _cosf                                                26    22      4   20669
                                             54 BANK5     26    22      4
                            ___cosdf
                            ___fladd
                            ___flneg
                            ___flsub
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4    4096
                                             21 BANK5     32    28      4
                            ___fladd
                            ___flmul
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         33    27      6    7348
                                             21 BANK5     33    27      6
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     234
                                             45 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4    4031
                                             45 COMRAM    28    24      4
                            ___fladd
                            ___flmul
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     236
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _MPU6050_ReadAll                                     46    44      2   25573
                                            108 BANK5     46    44      2
                    _GetTimestamp_ms
               _MPU6050_CombineBytes
              _MPU6050_ReadRegisters
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                             _atan2f
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sqrtf                                               41    37      4     733
                                             45 COMRAM    37    33      4
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _atan2f                                              41    33      8   15224
                                             67 BANK5     41    33      8
                            ___fladd
                            ___fldiv
                            ___flneg
                            ___flsub
                      ___fpclassifyf
                              _atanf
                              _fabsf
                              _sqrtf (ARG)
 ---------------------------------------------------------------------------------
 (3) _atanf                                               46    42      4    8610
                                             21 BANK5     46    42      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___flsub
                      ___fpclassifyf
                              _fabsf
 ---------------------------------------------------------------------------------
 (1) _fabsf                                                8     4      4      53
                                             13 BANK5      8     4      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     140
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2217
                                             13 BANK5      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2116
                                             29 COMRAM    16     8      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      79
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    1612
                                              4 COMRAM    25    17      8
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1199
                                             82 COMRAM    12     4      8
                                              0 BANK5     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _sqrtf (ARG)
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     360
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) _MPU6050_ReadRegisters                                4     1      3     859
                                             18 COMRAM     4     1      3
                   _SW_I2C_ReadBlock
 ---------------------------------------------------------------------------------
 (4) _SW_I2C_ReadBlock                                    11     7      4     778
                                              7 COMRAM    11     7      4
                    _SW_I2C_ReadByte
                     _SW_I2C_Restart
                       _SW_I2C_Start
                        _SW_I2C_Stop
                   _SW_I2C_WriteByte
 ---------------------------------------------------------------------------------
 (5) _SW_I2C_WriteByte                                     5     5      0     100
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (6) _SW_I2C_Restart                                       0     0      0      24
                       _SW_I2C_Start
                        _SW_I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _SW_I2C_Stop                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _SW_I2C_Start                                         2     2      0      24
                                              1 COMRAM     2     2      0
                   _SW_I2C_IsBusFree
 ---------------------------------------------------------------------------------
 (6) _SW_I2C_IsBusFree                                     1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _SW_I2C_ReadByte                                      5     5      0     100
                                              2 COMRAM     5     5      0
                     _SW_I2C_SendAck
                    _SW_I2C_SendNack
 ---------------------------------------------------------------------------------
 (7) _SW_I2C_SendNack                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _SW_I2C_SendAck                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _MPU6050_CombineBytes                                 5     3      2      65
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _GetTimestamp_ms                                      2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     909
                                              4 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     236
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     263
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     205
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     205
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     205
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     310
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     205
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _I2C1_Initialize
   _LCD_init
     _BORRAR_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _MPU6050_DMP_GetData
     _GetTimestamp_ms
     _MPU6050_ReadAll
       _GetTimestamp_ms
       _MPU6050_CombineBytes
       _MPU6050_ReadRegisters
         _SW_I2C_ReadBlock
           _SW_I2C_ReadByte
             _SW_I2C_SendAck
             _SW_I2C_SendNack
           _SW_I2C_Restart
             _SW_I2C_Start
               _SW_I2C_IsBusFree
             _SW_I2C_Stop
           _SW_I2C_Start
           _SW_I2C_Stop
           _SW_I2C_WriteByte
       ___fladd
         ___flmul (ARG)
           ___flneg (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
         _sqrtf (ARG)
           ___fladd (ARG)
           ___flmul (ARG)
       ___flmul
       ___flneg
       ___flsub
         ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _atan2f
         ___fladd
         ___fldiv
         ___flneg
         ___flsub
         ___fpclassifyf
         _atanf
           ___fladd
           ___fldiv
           ___flmul
           ___flneg
           ___flsub
           ___fpclassifyf
           _fabsf
             ___fldiv (ARG)
         _fabsf
         _sqrtf (ARG)
       _sqrtf
     ___fladd
     ___fldiv
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flneg
     ___flsub
     ___xxtofl
     _atan2f
     _cosf
       ___cosdf
         ___fladd
         ___flmul
         ___flneg (ARG)
       ___fladd
       ___flneg
       ___flsub
       ___rem_pio2f
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
           ___fladd (ARG)
           ___flmul (ARG)
         ___xxtofl
         _fabsf
       ___sindf
         ___fladd
         ___flmul
         ___flsub (ARG)
     _sinf
       ___cosdf
       ___fladd
       ___flneg
       ___rem_pio2f
       ___sindf
     _sqrtf
   _MPU6050_DMP_Init
     _MPU6050_Init
       _MPU6050_Movement_Init
         _MovingAverage_Reset
       _MPU6050_TestConnection
         _MPU6050_ReadRegister
           _SW_I2C_ReadRegister
             _SW_I2C_ReadByte
             _SW_I2C_Restart
             _SW_I2C_Start
             _SW_I2C_Stop
             _SW_I2C_WriteByte
       _MPU6050_WriteRegister
         _SW_I2C_WriteRegister
           _SW_I2C_Start
           _SW_I2C_Stop
           _SW_I2C_WriteByte
   _POS_CURSOR
     _ENVIA_LCD_CMD
   ___flge
   ___flneg
   _configuro
   _fabsf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRh         611      0       0      0.0%
BITBIGSFRlllh      471      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0      80     31.2%
BITBANK7           256      0       0      0.0%
BANK7              256      0     231     90.2%
BITBANK6           256      0       0      0.0%
BANK6              256    175     255     99.6%
BITBIGSFRlllll     173      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160    160     160    100.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     94      95    100.0%
BITBIGSFRlh         12      0       0      0.0%
BITBIGSFRllllh       5      0       0      0.0%
BITBIGSFRllh         1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     821      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Jul 11 21:20:59 2025

                     ___fldiv@aexp 056C                       ___fldiv@bexp 056B  
                     ___fldiv@sign 0564    SW_I2C_WriteRegister@device_addr 0508  
                               _C0 FEDE                                 _C1 FEDA  
                               _C2 FED6                                 _C3 FED2  
                               _S1 FEBE                                 _S2 FEBA  
                               _S3 FEB6                                 _S4 FEB2  
                               _pi FF0A             ??_MPU6050_ReadRegister 050C  
                    ENVIA_CHAR@aux 0503                                l155 6EB8  
                              l700 6EEE                                l614 267E  
                              l720 69BA                                l617 6960  
                              l571 6440                                l725 6F28  
                              l581 6F06                                l911 5A5E  
                              l903 5A04                                l920 5AB8  
                              l592 03FC                                l923 6F18  
                              l595 047E                                l587 0DBC  
                              l691 6E60                                l860 5C08  
                              l861 5D1E                                l926 4A50  
                              l694 6F36                                l678 6E80  
                              l927 4B8C                                l928 4A64  
                              l961 4BE6                                l945 4B1A  
                              l937 4AC0                                l697 6E0E  
                              l877 5CC0                                l869 5C64  
                              l990 61B8                                l895 59A8  
                              l978 4CB8                                _aT0 FF02  
                              _aT1 FEFE                                _aT2 FEFA  
                              _aT3 FEF6                                _aT4 FEF2  
                              _pad 6892           GetTimestamp_ms@timestamp 06F9  
                      LEER_LCD@aux 0501                                wreg 04E8  
                     ?_CURSOR_HOME 0501               _I2C1_DO_RX_NACK_STOP 0000  
                     ___flmul@aexp 0516                       ___flmul@bexp 0517  
                     ___flmul@sign 0511                       ___flmul@temp 051C  
                     ___flmul@prod 0518                     ??_ENVIA_NIBBLE 0501  
          ??_MPU6050_ReadRegisters 0516                        main@buffer1 068B  
                     ___fltol@exp1 0537                     ENVIA_CHAR@dato 0502  
         _MPU6050_DMP_GetData$3470 0632           _MPU6050_DMP_GetData$3471 0636  
         _MPU6050_DMP_GetData$3472 063A           _MPU6050_DMP_GetData$3480 0618  
         _MPU6050_DMP_GetData$3473 064A           _MPU6050_DMP_GetData$3465 0628  
         _MPU6050_DMP_GetData$3481 061C           _MPU6050_DMP_GetData$3474 063E  
         _MPU6050_DMP_GetData$3482 0620           _MPU6050_DMP_GetData$3466 0604  
         _MPU6050_DMP_GetData$3475 0642           _MPU6050_DMP_GetData$3483 0624  
         _MPU6050_DMP_GetData$3467 0608           _MPU6050_DMP_GetData$3476 0646  
         _MPU6050_DMP_GetData$3468 060C           _MPU6050_DMP_GetData$3477 064E  
         _MPU6050_DMP_GetData$3469 062E           _MPU6050_DMP_GetData$3478 0610  
         _MPU6050_DMP_GetData$3479 0614                               l1002 6254  
                             l1020 5DD6                               l1012 5D7C  
                             l2003 3F10                               l1028 5E32  
                             l1060 6D4A                               l1029 5E34  
                             l1061 6D4C                               l2101 2A3E  
                             l2006 3DA6                               l1047 5EEA  
                             l1039 5E90                               l2007 3DC4  
                             l2111 2B06                               l2103 2A08  
                             l1215 681E                               l1232 6F3E  
                             l1056 5F46                               l2040 57EE  
                             l2016 3ED2                               l2008 3E1C  
                             l1072 6724                               l2009 3E0A  
                             l1065 67A4                               l1082 5BEC  
                             l2043 594A                               l1219 681E  
                             l2125 6352                               l1270 6AB8  
                             l2054 58E2                               l1255 6BA8  
                             l1087 5B76                               l2047 5886  
                             l2223 5796                               l2311 0F94  
                             l1280 6856                               l1264 6DB0  
                             l2072 2C3C                               l2240 46B8  
                             l1273 6ED4                               l1249 6DE0  
                             l1282 6890                               l2402 6A66  
                             l2306 17B4                               l1267 6F46  
                             l2155 18F4                               l1276 6D7E  
                             l2252 5382                               l2420 65D6  
                             l2149 1F2E                               l2077 27E0  
                             l2069 2704                               l2309 114E  
                             l1382 6E3A                               l2239 4518  
                             l2431 6F48                               l2503 6CAC  
                             l2351 6504                               l2408 6B58  
                             l2264 6B08                               l2257 6D1A  
                             l1650 610A                               l2450 314A  
                             l2187 3634                               l1379 6E9C  
                             l2291 68A8                               l2339 1598  
                             l2355 650C                               l1644 6680  
                             l2428 6C34                               l2365 4FDC  
                             l2382 6A10                               l1655 6150  
                             l2391 54DC                               l2295 68FE  
                             l2375 5150                               l1913 381E  
                             l1930 3938                               l1922 3AEA  
                             l1914 380C                               l2490 4154  
                             l2482 42EE                               l1682 604C  
                             l1659 6CE4                               l1915 37D2  
                             l1940 39F4                               l2388 5598  
                             l2493 4218                               l2486 40F6  
                             l1927 39C6                               l2495 4286  
                             l1946 3AAE                               l7011 5C1C  
                             l7003 5BEE                               l1939 3A06  
                             l1955 6BF0                               l1980 496A  
                             l1972 4872                               l7021 5C6C  
                             l7013 5C28                               l7005 5C02  
                             l7101 5A70                               l1981 4958  
                             ?_pad 0511                               l7023 5C78  
                             l7031 5C8E                               l7103 5A7C  
                             l1967 4A4A                               l7201 5EB8  
                             l7033 5CC8                               l7025 5C84  
                             l7009 5C10                               l1969 48AE  
                             l8001 46D8                               l1978 48F4  
                             l7131 5D34                               l7203 5EF2  
                             l7035 5CD4                               l7043 5CEA  
                             l7019 5C32                               l1979 4912  
                             l8003 46E8                               l8011 4710  
                             l7141 5D82                               l7133 5D40  
                             l7205 5EFE                               l7213 5F14  
                             l7037 5CE0                               l7045 5D1C  
                             l7109 5A86                               l7061 594C  
                             l8101 4994                               l8021 473C  
                             l8013 4720                               l8005 46F8  
                             l7143 5D8E                               l7151 5DA4  
                             l7127 5D20                               l7207 5F0A  
                             l7063 5954                               l8111 4A0C  
                             l8103 49BE                               l8023 474C  
                             l8031 4774                               l8015 4726  
                             l8007 4708                               l1999 3BB0  
                             l7231 6532                               l7153 5DDE  
                             l7145 5D9A                               l7129 5D28  
                             l7065 5960                               l7073 5976  
                             l7401 4B7A                               l8121 4A3E  
                             l8113 4A24                               l8105 49C2  
                             l8041 47B6                               l8033 4784  
                             l8025 475C                               l8017 472C  
                             l8009 470A                               l8201 3CD8  
                             l7233 653C                               l9001 6472  
                             l7155 5DEA                               l7163 5E00  
                             l7139 5D4A                               l7091 5A22  
                             l7075 59B0                               l7067 596C  
                             l7403 4B7C                               l8123 4A40  
                             l8115 4A26                               l8107 49DC  
                             l8035 479A                               l8027 476C  
                             l8019 473A                               l8211 3D6E  
                             l8203 3CE4                               l8131 3AEC  
                             l7235 655A                               l7227 650E  
                             l9003 64AC                               l7157 5DF6  
                             l7181 5E48                               l7501 61CA  
                             l7077 59BC                               l7085 59D2  
                             l7421 4C04                               l7405 4B92  
                             l8117 4A2A                               l8109 49F2  
                             l8061 4838                               l8053 47EE  
                             l8037 47AA                               l8045 47CA  
                             l8029 476E                               l8221 3DD4  
                             l8213 3D8C                               l8205 3D00  
                             l8141 3B28                               l8133 3AF8  
                             l9101 41A2                               l7237 6590  
                             l7229 6520                               l9005 64CA  
                             l7191 5E96                               l7183 5E54  
                             l7503 61D0                               l7087 5A0A  
                             l7079 59C8                               l7351 6F14  
                             l7431 4C48                               l7407 4B9E  
                             l7415 4BB4                               l8119 4A38  
                             l8071 487C                               l8063 483E  
                             l8055 4808                               l8047 47DA  
                             l8039 47B2                               l8231 3E46  
                             l8223 3E02                               l8215 3D96  
                             l8207 3D2A                               l8151 3B5A  
                             l8143 3B38                               l8135 3B06  
                             l8303 6CAE                               l9111 425E  
                             l9103 41E0                               l8311 5F48  
                             l9031 6916                               l9023 6E3E  
                             l9007 64D8                               l7193 5EA2  
                             l7177 5E36                               l7521 6246  
                             l7505 61DC                               l7513 61F2  
                             l7089 5A16                               l7097 5A2C  
                             l7433 4C4A                               l7417 4BEC  
                             l7409 4BAA                               l7361 4A5E  
                             l8081 48D4                               l8073 489A  
                             l8065 484E                               l8057 4818  
                             l8049 47DA                               l8241 3EBC  
                             l8233 3E70                               l8217 3DA4  
                             l8209 3D60                               l8161 3B9A  
                             l8153 3B68                               l8145 3B3E  
                             l8137 3B08                               l8305 6CC4  
                             l7601 3756                               l9121 26CC  
                             l9105 4228                               l8321 5F9E  
                             l8313 5F5E                               l9041 6948  
                             l9033 6918                               l9017 6E62  
                             l8401 5384                               l7195 5EAE  
                             l7179 5E3C                               l7523 624E  
                             l7507 61E8                               l7515 6224  
                             l7099 5A64                               l7347 6F08  
                             l7435 4C50                               l7419 4BF8  
                             l7427 4C0E                               l7363 4A6C  
                             l7355 4A4E                               l8091 4922  
                             l8083 48DA                               l8075 489C  
                             l8067 4862                               l8059 4828  
                             l8251 3EF6                               l8243 3ECC  
                             l8227 3E2C                               l8235 3E74  
                             l8219 3DB6                               l8171 3BE4  
                             l8163 3BA0                               l8155 3B6A  
                             l8147 3B4E                               l8139 3B18  
                             l8307 6CD4                               l7611 376A  
                             l7603 375A                               l9211 2A16  
                             l9131 276A                               l9107 4232  
                             l9051 3F12                               l8323 5FAE  
                             l9043 6954                               l9035 6924  
                             l9027 6900                               l9019 6E6A  
                             l8403 53A4                               l9045 6F1A  
                             l7189 5E5E                               l7525 6252  
                             l7517 6226                               l7349 6F0C  
                             l7437 4C5C                               l7445 4C72  
                             l7429 4C40                               l7365 4A78  
                             l7373 4A8E                               l8093 4950  
                             l8085 48E4                               l8077 48AC  
                             l8069 4870                               l8245 3ED6  
                             l8253 3EFC                               l8237 3E8E  
                             l8229 3E38                               l8181 3C34  
                             l8173 3BF0                               l8165 3BC0  
                             l8157 3B7A                               l8149 3B54  
                             l7701 3A16                               l7621 37CA  
                             l7613 376E                               l7605 375E  
                             l7541 3650                               l8261 6BBC  
                             l9221 2A96                               l9213 2A2A  
                             l9205 2990                               l9133 27C2  
                             l9125 2724                               l9117 2680  
                             l9109 4248                               l9061 3FA2  
                             l9053 3F22                               l8333 5FD8  
                             l8325 5FB2                               l8317 5F72  
                             l9301 44FA                               l9037 6930  
                             l9029 6906                               l8421 5550  
                             l8413 5490                               l8405 53FC  
                             l9047 6F20                               l7519 6236  
                             l7439 4C68                               l7447 4CA4  
                             l7391 4B3A                               l7375 4AC6  
                             l7367 4A84                               l8087 48F2  
                             l8079 48BE                               l8255 3F00  
                             l8247 3EE6                               l8239 3EA2  
                             l8191 3C76                               l8183 3C40  
                             l8175 3BFA                               l8167 3BD0  
                             l8159 3B8A                               l7711 3A7C  
                             l7703 3A22                               l7631 3800  
                             l7623 37E0                               l7607 3762  
                             l7615 3772                               l7551 3684  
                             l7543 3652                               l9223 2ADE  
                             l9207 29B6                               l9143 2808  
                             l9151 2842                               l9135 27C4  
                             l9127 2742                               l9119 26A6  
                             l9055 3F56                               l8351 603C  
                             l8343 6000                               l8335 5FE2  
                             l8327 5FC0                               l8319 5F9C  
                             l9311 45DA                               l9039 693C  
                             l8271 6644                               l8423 5578  
                             l8415 54CC                               l8407 5410  
                             l8431 6B1E                               l8601 6828  
                             l7481 615A                               l7377 4AD2  
                             l7385 4AE8                               l9241 6DE4  
                             l8097 497A                               l8089 4904  
                             l8249 3EF4                               l8193 3C82  
                             l8185 3C4C                               l8177 3C10  
                             l7721 3AC4                               l7713 3A8C  
                             l7705 3A30                               l7641 3850  
                             l7633 380A                               l7625 37EC  
                             l7617 379E                               l7609 3766  
                             l7561 36B4                               l7545 3662  
                             l7553 368A                               l7537 3636  
                             l8361 62DC                               l9233 2BB0  
                             l9225 2B1A                               l9217 2A4C  
                             l9209 29EC                               l9153 2858  
                             l9161 288E                               l9073 4016  
                             l9081 4042                               l9057 3F84  
                             l9065 3FB6                               l8281 604E  
                             l8345 600C                               l8337 5FEC  
                             l9313 4632                               l9305 4524  
                             l8273 6654                               l8265 65D8  
                             l8425 5588                               l8409 541E  
                             l8417 5500                               l8433 6B2A  
                             l8611 6840                               l8603 682A  
                             l9251 6D52                               l7483 615E  
                             l7475 6154                               l7387 4B22  
                             l7379 4ADE                               l8531 5AE4  
                             l8523 5ABC                               l8099 4986  
                             l8195 3C92                               l8187 3C5A  
                             l8179 3C1C                               l7723 3ACA  
                             l7715 3AAC                               l7707 3A6A  
                             l7651 388C                               l7643 3860  
                             l7635 382C                               l7627 37F0  
                             l7619 37BA                               l7571 36EA  
                             l7563 36BA                               l7555 369A  
                             l7547 3672                               l7539 3642  
                             l8259 6BAA                               l8363 62E8  
                             l8355 6256                               l9219 2A82  
                             l9171 28DE                               l9163 28AA  
                             l9155 2866                               l9139 27F4  
                             l9091 40CE                               l9083 4096  
                             l9075 4024                               l9067 3FD4  
                             l9059 3F92                               l8291 60D8  
                             l8283 607C                               l8347 601C  
                             l9315 468A                               l9307 4548  
                             l8507 6782                               l8275 6678  
                             l8267 6606                               l8419 553C  
                             l8435 6B2E                               l7731 6BF2  
                             l9331 4F50                               l8621 6860  
                             l8613 6842                               l8605 6832  
                             l9261 6D64                               l9253 6D56  
                             l9245 6ED8                               l7485 6164  
                             l7389 4B2E                               l7397 4B44  
                             l8541 5B0A                               l8533 5AEA  
                             l8525 5ACE                               l8197 3CAC  
                             l8189 3C66                               l7725 3AD8  
                             l7717 3ABC                               l7709 3A6C  
                             l7661 38D2                               l7653 389A  
                             l7645 386E                               l7637 383C  
                             l7629 37FE                               l7581 3724  
                             l7573 36FA                               l7565 36C8  
                             l7557 36A0                               l7549 3682  
                             l8373 634A                               l8357 6276  
                             l8701 1876                               l9229 2B42  
                             l9157 287A                               l9149 281C  
                             l9093 4136                               l9085 40AA  
                             l9069 4002                               l9501 24AE  
                             l8293 60EA                               l8285 608C  
                             l8349 602C                               l9317 46A2  
                             l9309 45B4                               l8461 6962  
                             l8517 679E                               l8509 678A  
                             l9421 6368                               l8277 667E  
                             l8269 6616                               l8437 6B3A  
                             l8429 6B0A                               l7733 6BFE  
                             l8381 68B4                               l9341 4FB6  
                             l9333 4F54                               l9325 4F0C  
                             l8623 6864                               l8631 687E  
                             l8615 684A                               l8607 6836  
                             l9263 6D66                               l9255 6D58  
                             l7487 6170                               l7495 6186  
                             l7399 4B76                               l8551 5B2A  
                             l8543 5B1A                               l8535 5AFA  
                             l8527 5ADE                               l8199 3CBC  
                             l7727 3ADA                               l7719 3AC2  
                             l7671 394E                               l7663 3906  
                             l7655 389C                               l7647 387C  
                             l7591 3742                               l7583 3732  
                             l7575 36FC                               l7567 36CA  
                             l7559 36B2                               l8359 62B4  
                             l8367 62F4                               l8711 18DA  
                             l8703 1888                               l9239 2C1C  
                             l9191 2954                               l9175 28F2  
                             l9167 28CA                               l9095 4144  
                             l9087 40B4                               l9511 266C  
                             l9503 2570                               l8295 60F8  
                             l8287 60BA                               l9271 559A  
                             l8471 69A8                               l8463 697E  
                             l8519 67A2                               l9431 638C  
                             l8439 6B3E                               l7735 6C10  
                             l8383 68C8                               l8391 6C7A  
                             l9351 5002                               l9343 4FCC  
                             l9335 4F7C                               l9327 4F34  
                             l8633 6EBC                               l8625 686E  
                             l8617 684C                               l8609 6838  
                             l9265 6D6C                               l9257 6D60  
                             l9249 6D50                               l7497 61C6  
                             l7489 617C                               l8561 5B44  
                             l8641 579A                               l7681 398A  
                             l7673 395E                               l7665 3908  
                             l7657 38A6                               l7649 3888  
                             l7593 3746                               l7585 3736  
                             l7569 36DA                               l7577 3702  
                             l8369 6306                               l8721 194C  
                             l8705 189C                               l9185 291A  
                             l9097 416E                               l9089 40C0  
                             l9513 267C                               l9505 259C  
                             l8297 6148                               l8289 60CA  
                             l9281 4310                               l9521 3172  
                             l8473 69AA                               l8481 672E  
                             l9433 63A4                               l9425 636E  
                             l8393 6A12                               l7737 6C14  
                             l8385 68CC                               l8377 6892  
                             l8801 0E78                               l9361 50A4  
                             l9353 5026                               l9345 4FD4  
                             l9337 4F8A                               l9329 4F42  
                             l8635 6EC8                               l8627 6878  
                             l8619 6858                               l9267 6D72  
                             l9259 6D62                               l7499 61C8  
                             l8571 5B62                               l8539 5B00  
                             l8643 57AA                               l7691 39B6  
                             l7683 398C                               l7667 3918  
                             l7659 38AC                               l7595 374A  
                             l7587 373A                               l7579 3712  
                             l8731 1A8C                               l8723 194E  
                             l8715 18FA                               l9195 2968  
                             l9187 2940                               l9179 2906  
                             l9099 418E                               l9507 2636  
                             l8299 614E                               l9291 43D6  
                             l9283 4326                               l9275 5152  
                             l9603 353E                               l9531 31BC  
                             l9523 3174                               l7931 6684  
                             l8475 6F2C                               l8491 675E  
                             l8483 673E                               l9451 63FE  
                             l9419 6354                               l8395 6A20  
                             l8387 68EA                               l8379 68A0  
                             l8811 0EB4                               l8803 0E8A  
                             l9363 50C4                               l9355 505A  
                             l9371 5112                               l9339 4FA6  
                             l8637 6ECA                               l9269 6D78  
                             l6981 6D2A                               l8581 5BA6  
                             l8549 5B22                               l8661 5870  
                             l8653 5828                               l8645 57B8  
                             l7685 399A                               l7677 3972  
                             l7693 39B8                               l7669 3928  
                             l7597 374E                               l7589 373E  
                             l8741 1BA0                               l8733 1A90  
                             l8725 19F2                               l8717 191E  
                             l8709 18C4                               l9509 2652  
                             l9293 43FC                               l9285 4328  
                             l9613 35CA                               l9605 3566  
                             l9621 3616                               l9541 3230  
                             l9525 3192                               l9517 314C  
                             l9701 3030                               l8469 6980  
                             l7941 66A0                               l7933 6684  
                             l9461 6438                               l9445 63E0  
                             l8397 6A34                               l8389 6C72  
                             l8901 1350                               l8821 0F16  
                             l8813 0EBE                               l8805 0E8E  
                             l9349 4FE2                               l8639 6ED2  
                             l6983 6D38                               l6975 6D1C  
                             l8591 5BEA                               l8583 5BBE  
                             l8559 5B3E                               l8671 58F0  
                             l8663 587C                               l8655 5830  
                             l8647 57FE                               l7695 39D6  
                             l7687 39A2                               l7679 397C  
                             l7599 3752                               l8751 1D10  
                             l8743 1BD4                               l8735 1B34  
                             l8727 19F6                               l8719 1936  
                             l9199 297C                               l9295 4454  
                             l9287 4346                               l9279 42F0  
                             l9615 35EE                               l9543 3268  
                             l9551 32D8                               l9527 31A8  
                             l9535 31E4                               l9519 315C  
                             l9711 30A0                               l9703 3040  
                             l9631 2C84                               l9623 2C3E  
                             l7951 66C2                               l7943 66AA  
                             l7935 668A                               l8487 6744  
                             l8479 6728                               l9463 643E  
                             l9439 63C2                               l8911 13EA  
                             l8903 1382                               l8823 0F1A  
                             l8807 0E94                               l9359 508E  
                             l9375 5124                               l9801 6EB6  
                             l6985 6D46                               l6977 6D20  
                             l8585 5BD2                               l8569 5B58  
                             l8681 5938                               l8673 58F2  
                             l8665 58B8                               l8657 583C  
                             l8649 5814                               l7697 39EC  
                             l7689 39A6                               l8761 1DE4  
                             l8753 1D44                               l8745 1C2C  
                             l8737 1B38                               l8729 1A76  
                             l9481 210A                               l9473 1F58  
                             l9297 44B6                               l9289 436A  
                             l9609 358E                               l9553 32E8  
                             l9561 3344                               l9545 329C  
                             l9537 3202                               l9641 2CF4  
                             l9633 2C9A                               l9625 2C4E  
                             l7961 66DE                               l7953 66CA  
                             l7945 66BA                               l7937 669A  
                             l8497 6766                               l8489 674E  
                             l9457 641C                               l8921 14C2  
                             l8913 141E                               l8905 1398  
                             l8841 0FA4                               l8825 0F20  
                             l8809 0E9C                               l8817 0EDE  
                             l9369 50F6                               l8595 6820  
                             l9731 6DC4                               l6979 6D28  
                             l8579 5B7C                               l8587 5BD4  
                             l8683 593A                               l8675 58F6  
                             l8667 58C4                               l8659 586E  
                             l8763 1E3C                               l8755 1D54  
                             l8747 1C84                               l8739 1B6C  
                             l8691 17DC                               l9491 2252  
                             l9483 219A                               l9475 1F94  
                             l9467 1F30                               l9299 44C6  
                             l9571 33DC                               l9555 331C  
                             l9539 3220                               l9715 30C8  
                             l9707 3054                               l9643 2D12  
                             l9635 2CAE                               l9627 2C64  
                             l7971 66F8                               l7963 66E4  
                             l8499 676E                               l9459 6420  
                             l8931 14EA                               l8915 1474  
                             l8923 14C6                               l8907 13CA  
                             l8851 108C                               l8843 0FAA  
                             l8827 0F28                               l8819 0F04  
                             l8835 0F44                               l8597 6824  
                             l9741 6D88                               l9733 6DCA  
                             l8589 5BE6                               l8677 591A  
                             l8669 58D2                               l8765 1E90  
                             l8757 1DAC                               l8749 1CB8  
                             l8693 17DE                               l9493 22D0  
                             l9485 21AC                               l9477 200E  
                             l9469 1F52                               l9573 3414  
                             l9581 3470                               l9565 3390  
                             l9709 307C                               l9725 312C  
                             l9661 2DFE                               l9645 2D22  
                             l9653 2D92                               l9629 2C66  
                             l7981 6716                               l7973 6702  
                             l8941 15B8                               l8933 14F6  
                             l8925 14D6                               l8917 147A  
                             l8909 13DA                               l8853 10A0  
                             l8861 111C                               l8845 0FDE  
                             l8837 0F5E                               l8781 0DE0  
                             l8599 6826                               l9751 6D98  
                             l9743 6D8A                               l9727 6F38  
                             l9735 6DDA                               l8679 592A  
                             l7991 6D0A                               l8767 1EC4  
                             l8695 17F4                               l8687 17B6  
                             l9495 234E                               l9487 21C0  
                             l9479 208C                               l9583 3480  
                             l9575 3448                               l9567 33AE  
                             l9719 30F0                               l9671 2ED8  
                             l9663 2E4A                               l9655 2DC6  
                             l9647 2D56                               l9639 2CD6  
                             l9911 0198                               l9903 005A  
                             l7983 6722                               l8951 15EA  
                             l8943 15C8                               l8935 156E  
                             l8927 14DE                               l8919 14AE  
                             l8871 1184                               l8863 1156  
                             l8855 10D4                               l8847 101C  
                             l8791 0E2A                               l8783 0DE4  
                             l9753 6D9E                               l9745 6D92  
                             l9737 6D82                               l9729 6DB4  
                             l9761 6A68                               l8769 1F18  
                             l8697 181A                               l8689 17C6  
                             l9497 2406                               l9489 21D4  
                             l9569 33CC                               l9673 2EF6  
                             l9665 2E92                               l9921 0398  
                             l9913 0228                               l9905 006E  
                             l8961 161E                               l8953 15EE  
                             l8945 15CC                               l8937 158E  
                             l8929 14E2                               l8881 11D4  
                             l8873 118A                               l8865 1166  
                             l8857 10DC                               l8849 104E  
                             l8793 0E3A                               l8785 0E08  
                             l8777 0DBE                               l9755 6DA4  
                             l9747 6D94                               l9739 6D84  
                             l9771 6A94                               l9763 6A6C  
                             l7995 46BA                               l7987 6CE6  
                             l8699 182E                               l9499 2448  
                             l9595 3504                               l9691 2F86  
                             l9675 2F06                               l9683 2F3E  
                             l9659 2DEE                               l9931 050C  
                             l9923 03B4                               l9915 024C  
                             l9907 00FE                               l8971 16BC  
                             l8963 1622                               l8955 15F4  
                             l8947 15D2                               l8939 15AA  
                             l8891 126C                               l8875 119C  
                             l8883 11DC                               l8867 1172  
                             l8795 0E46                               l8787 0E12  
                             l8779 0DD2                               l9757 6DAA  
                             l9749 6D96                               l9781 6AB2  
                             l9773 6A9A                               l9765 6A72  
                             l7997 46C8                               l7989 6D06  
                             l9597 351A                               l9589 34CC  
                             l9693 2FBE                               l9669 2EBA  
                             l9941 0732                               l9933 0564  
                             l9925 043A                               l9917 0280  
                             l9909 0132                               l8981 1710  
                             l8965 1628                               l8949 15DA  
                             l8957 15FA                               l8973 16C0  
                             l8893 12C4                               l8885 11E4  
                             l8877 11AA                               l8869 117C  
                             l8797 0E4E                               l8789 0E1A  
                             l9759 6F40                               l9775 6AA0  
                             l9767 6A80                               l7999 46D6  
                             l9599 352A                               l9695 2FF2  
                             l9951 087A                               l9943 0756  
                             l9935 05FE                               l9919 0340  
                             l9927 04B8                               l8991 178C  
                             l8983 1740                               l8975 16DE  
                             l8967 1680                               l8959 160C  
                             l8895 12F8                               l8887 11F4  
                             l8879 11C2                               l8799 0E52  
                             l9783 69BC                               STR_1 FF84  
                             STR_2 FFC8                               l9793 6E9E  
                             l9777 6AA6                               l9769 6A8E  
                             l9689 2F76                               l9961 0962  
                             l9953 089E                               l9945 077A  
                             l9937 063A                               l9929 04CC  
                             l8993 1794                               l8985 174E  
                             l8977 16FA                               l8969 16B4  
                             l8889 1208                               l8897 12FE  
                             l9785 69C8                               STR_3 FFEC  
                             STR_4 FFAC                               l9795 6EB0  
                             l9779 6AAC                               l9699 301A  
                             l9971 0B60                               l9963 0A8C  
                             l9955 08F6                               l9947 07D2  
                             l9939 06FE                               l8987 1766  
                             l8979 1702                               l8899 131C  
                             l9787 69E6                               STR_5 FFD1  
                             STR_6 FF39                               l9797 6EB2  
                             l9981 0CAE                               l9973 0BEA  
                             l9965 0AC0                               l9957 091A  
                             l9949 0856                               l9893 0000  
                             l8989 1776                               l8997 6442  
                             l9789 6A06                               STR_7 FF62  
                             STR_8 FF0E                               l9799 6EB4  
                             l9983 0CD2                               l9975 0C0E  
                             l9967 0AE4                               l9959 093E  
                             l9895 000C                               l9887 6EF0  
                             l9991 67A8                               l8999 644A  
                             STR_9 FF4E                               l9985 0CF6  
                             l9977 0C32                               l9969 0B08  
                             l9889 6F02                               l9993 67B8  
                             l9979 0C8A                               l9987 0DB4  
                             l9899 003A                               l9995 67C4  
                             l9997 67D6                               l9999 67E2  
                             _LATD 04C1                               u5000 39D6  
                             u5001 39D2                               u5010 39EC  
                             u5011 39E8                               u5100 3AD8  
                             u5020 3A02                               u5101 3AD4  
                             u5021 39FE                               u5030 3A16  
                             u5110 6C34                               u5031 3A12  
                             u5111 6C30                               u5040 3A30  
                             u6000 53CE                               u5041 3A2C  
                             u5050 3A6A                               u6010 53FC  
                             u5051 3A66                               u6011 53F8  
                             u4500 6D38                               u5060 3A7C  
                             u5300 6712                               u6020 541E  
                             u6100 6B58                               u4501 6D34  
                             u5061 3A78                               u5301 670E  
                             u6021 541A                               u6005 53C4  
                             u6101 6B54                               u4510 6D46  
                             u5310 46D6                               u5070 3A8C  
                             u4511 6D42                               u5311 46D2  
                             u5071 3A88                               u5400 4870  
                             u5320 46E8                               u5080 3AAC  
                             u7000 4024                               u6200 673E  
                             u6040 548C                               u5401 486C  
                             u5321 46E4                               u5081 3AA8  
                             u7001 4020                               u6201 673A  
                             u6041 5488                               u4530 5C02  
                             u5410 489A                               u5330 46F8  
                             u5090 3ABC                               u6210 675E  
                             u6050 54B0                               u4531 5BFE  
                             u5411 4896                               u5331 46F4  
                             u5091 3AB8                               u6211 675A  
                             u6035 5432                               u4700 6236  
                             u6300 5B72                               u5500 4994  
                             u5420 48BE                               u5340 473A  
                             u7100 26CC                               u7020 4096  
                             u5260 669A                               u6220 677E  
                             u6060 54CC                               u6036 543C  
                             u4540 6520                               u4701 6232  
                             u6301 5B6E                               u5501 4990  
                             u5421 48BA                               u5341 4736  
                             u7101 26C8                               u7021 4092  
                             u5261 6696                               u6221 677A  
                             u6061 54C8                               u6037 544C  
                             u4541 651C                               u4710 6246  
                             u6310 5BA6                               u5510 49DC  
                             u5430 48D4                               u5350 474C  
                             u7110 2742                               u7030 40CE  
                             u5270 66BA                               u6230 679A  
                             u6070 5520                               u4550 6532  
                             u4711 6242                               u6311 5BA2  
                             u5511 49D8                               u5431 48D0  
                             u5351 4748                               u7111 273E  
                             u7031 40CA                               u7015 4056  
                             u5271 66B6                               u6231 6796  
                             u6055 54A6                               u4551 652E  
                             u6320 5BE6                               u6240 5ACE  
                             u6400 58E2                               u5520 4A0C  
                             u5440 48F2                               u5360 475C  
                             u5600 3BC0                               u4800 3732  
                             u4720 3650                               u7200 2A08  
                             u7120 278A                               u7040 4144  
                             u7016 4060                               u5280 66DA  
                             u6080 553C                               u4560 655A  
                             u6321 5BE2                               u6241 5ACA  
                             u6401 58DE                               u5521 4A08  
                             u5441 48EE                               u5361 4758  
                             u5601 3BBC                               u4801 372E  
                             u4721 364C                               u7201 2A04  
                             u7041 4140                               u7017 4070  
                             u5281 66D6                               u6081 5538  
                             u4561 6556                               u6330 6890  
                             u4650 4A5E                               u6250 5ADE  
                             u6410 58F0                               u5530 4A38  
                             u5450 4912                               u5370 479A  
                             u5610 3BD0                               u4810 379E  
                             u4730 3662                               u7210 2A16  
                             u7130 27B4                               u7050 41E0  
                             u5290 66F4                               u6090 5578  
                             u4570 6590                               u6331 688C  
                             u4651 4A5A                               u6251 5ADA  
                             u6411 58EC                               u5531 4A34  
                             u5451 490E                               u5371 4796  
                             u5611 3BCC                               u4811 379A  
                             u4731 365E                               u7211 2A12  
                             u7051 41DC                               u5291 66F0  
                             u6091 5574                               u6075 5516  
                             u4571 658C                               u4660 4B8C  
                             u6260 5AFA                               u6420 592A  
                             u6340 57AA                               u5460 4922  
                             u5380 47DA                               u5700 3E8E  
                             u5620 3D4A                               u5540 3B06  
                             u4900 387C                               u4820 37B6  
                             u4740 3672                               u6500 18F0  
                             u7220 2A4C                               u7140 27DC  
                             u7060 4248                               u7300 46B4  
                             u4661 4B88                               u6261 5AF6  
                             u6421 5926                               u6341 57A6  
                             u5461 491E                               u5381 47D6  
                             u5701 3E8A                               u5541 3B02  
                             u4901 3878                               u4821 37B0  
                             u4741 366E                               u6501 18EC  
                             u7221 2A48                               u7141 27D8  
                             u7125 2780                               u7061 4244  
                             u7301 46B0                               u4670 4CB6  
                             u6270 5B1A                               u6430 5938  
                             u6350 57B8                               u5470 4950  
                             u5390 484E                               u5710 3EBC  
                             u5630 3DA4                               u5550 3B18  
                             u4910 389A                               u4830 37B8  
                             u4750 36B2                               u6510 1936  
                             u7230 2A82                               u7150 2858  
                             u7070 425E                               u6190 69BA  
                             u7310 4F34                               u4671 4CB0  
                             u6271 5B16                               u6431 5934  
                             u6351 57B4                               u5471 494C  
                             u5391 484A                               u5711 3EB8  
                             u5631 3DA0                               u5551 3B14  
                             u4911 3896                               u4751 36AE  
                             u6511 1932                               u7231 2A7E  
                             u7151 2854                               u7135 27AA  
                             u7071 425A                               u6191 69B6  
                             u7311 4F30                               u4680 4CB8  
                             u6280 5B3A                               u7240 6E0C  
                             u6360 5814                               u5480 4966  
                             u5720 3EF4                               u5640 3DC4  
                             u5560 3B28                               u4920 38D2  
                             u4840 37E0                               u4760 36C8  
                             u6520 194C                               u6440 17D8  
                             u7160 2866                               u5800 6148  
                             u7400 63BE                               u6600 0E8A  
                             u7320 4F7C                               u6281 5B36  
                             u7241 6E06                               u6361 5810  
                             u5481 4962                               u5721 3EF0  
                             u5641 3DC0                               u5625 3D40  
                             u5561 3B24                               u4921 38CE  
                             u4841 37DC                               u4761 36C4  
                             u6521 1948                               u6441 17D2  
                             u7161 2862                               u5801 6144  
                             u7401 63BA                               u6601 0E86  
                             u7321 4F78                               u4690 61C6  
                             u6290 5B54                               u7250 6E0E  
                             u6370 586A                               u5490 497A  
                             u5650 3DD4                               u5570 3B68  
                             u5810 6CC4                               u4930 3918  
                             u4850 37FE                               u4770 36DA  
                             u6530 1A8C                               u6450 17DA  
                             u7170 28AA                               u7090 26A6  
                             u7410 63DC                               u5730 6606  
                             u6610 0F04                               u7330 5022  
                             u4691 61C2                               u6291 5B50  
                             u6371 5866                               u5491 4976  
                             u5651 3DD0                               u5571 3B64  
                             u5811 6CC0                               u4931 3914  
                             u4851 37FA                               u4771 36D6  
                             u6531 1A88                               u7171 28A6  
                             u7091 26A2                               u7411 63D8  
                             u5731 6602                               u6611 0F00  
                             u7331 501E                               u6380 58B4  
                             u5660 3E02                               u5580 3B7A  
                             u4940 394E                               u4860 381E  
                             u4780 36EA                               u5900 62B4  
                             u6540 1D54                               u6460 17F4  
                             u7180 28C6                               u5820 5F5E  
                             u7260 4322                               u7500 3220  
                             u7420 63FA                               u5740 6644  
                             u6700 119C                               u6620 0F16  
                             u6381 58B0                               u5661 3DFE  
                             u5581 3B76                               u4941 394A  
                             u4861 381A                               u4781 36E6  
                             u5901 62B0                               u6541 1D50  
                             u6461 17F0                               u7181 28C2  
                             u7085 42CA                               u5821 5F5A  
                             u7261 431C                               u7501 321C  
                             u7421 63F6                               u5741 6640  
                             u6701 1198                               u6621 0F12  
                             u6390 58D2                               u5670 3E18  
                             u5590 3B8A                               u4950 395E  
                             u4870 382C                               u4790 3724  
                             u5910 62DC                               u6550 1F2A  
                             u6470 181A                               u7190 29EC  
                             u5830 5F92                               u7270 4324  
                             u7510 3230                               u7430 6418  
                             u5750 6678                               u6710 11AA  
                             u6630 0F90                               u9007 4B3C  
                             u6391 58CE                               u5671 3E14  
                             u5591 3B86                               u4951 395A  
                             u4871 3828                               u4791 3720  
                             u5911 62D8                               u6551 1F26  
                             u6471 1816                               u7191 29E8  
                             u7511 322C                               u7431 6414  
                             u5751 6674                               u6711 11A6  
                             u6631 0F8C                               u5680 3E2C  
                             u4960 398A                               u4880 383C  
                             u5920 6306                               u6480 1888  
                             u7440 1F52                               u5760 607C  
                             u5840 5FC0                               u7280 4346  
                             u7520 32E8                               u7600 2C84  
                             u6800 15AA                               u6720 11D4  
                             u6640 101C                               u6560 0DE0  
                             u9017 4B94                               u5681 3E28  
                             u4961 3986                               u4881 3838  
                             u5921 6302                               u6481 1884  
                             u7441 1F4E                               u5761 6078  
                             u5841 5FBC                               u7281 4342  
                             u7521 32E4                               u7601 2C80  
                             u6801 15A6                               u6721 11D0  
                             u6641 1018                               u6561 0DDC  
                             u5690 3E46                               u4970 399A  
                             u4890 386E                               u6490 18DA  
                             u5770 60BA                               u5850 5FD4  
                             u7290 44C6                               u7530 33AE  
                             u7450 316E                               u7610 2C9A  
                             u6810 15B8                               u6730 131C  
                             u6650 104E                               u6570 0E2A  
                             u9107 6F0E                               u9027 4BA0  
                             u5691 3E42                               u4971 3996  
                             u4891 386A                               u6491 18D6  
                             u5771 60B6                               u5851 5FD0  
                             u5835 5F88                               u7291 44C2  
                             u7531 33AA                               u7451 3168  
                             u7611 2C96                               u6811 15B4  
                             u6731 1318                               u6651 104A  
                             u6571 0E26                               u4980 39B6  
                             u5940 6340                               u5780 60D8  
                             u5860 5FFC                               u7540 33CC  
                             u7460 3170                               u7700 3030  
                             u7620 2CF4                               u7380 6368  
                             u6820 160C                               u6740 1382  
                             u6660 108C                               u6580 0E3A  
                             u9117 5956                               u9037 4BAC  
                             u4981 39B2                               u5941 633A  
                             u5781 60D4                               u5861 5FF8  
                             u7541 33C8                               u7701 302C  
                             u7621 2CF0                               u7381 6364  
                             u6821 1608                               u6741 137E  
                             u6661 1088                               u6581 0E36  
                             u7710 6DC4                               u4990 39C6  
                             u5950 6342                               u5790 60F8  
                             u5870 601C                               u7550 33DC  
                             u7470 3192                               u7630 2D12  
                             u6910 6E7E                               u7390 6388  
                             u6830 16DE                               u6750 13CA  
                             u6670 1118                               u6590 0E78  
                             u7711 6DC0                               u9207 5A66  
                             u9127 5962                               u9047 4BEE  
                             u4991 39C2                               u5935 6318  
                             u5791 60F4                               u5871 6018  
                             u7551 33D8                               u7471 318E  
                             u7631 2D0E                               u6911 6E78  
                             u7391 6384                               u6831 16DA  
                             u6751 13C6                               u6671 1114  
                             u6591 0E74                               u7720 6DDA  
                             u5880 602C                               u7560 3480  
                             u7480 31A8                               u7640 2D22  
                             u7800 006E                               u6920 6E80  
                             u5960 68A0                               u6840 16FA  
                             u6760 13DA                               u6680 114E  
                             u7721 6DD6                               u9217 5A72  
                             u9137 596E                               u9057 4BFA  
                             u5881 6028                               u7561 347C  
                             u7481 31A4                               u7641 2D1E  
                             u7801 006A                               u5961 689C  
                             u6841 16F6                               u6761 13D6  
                             u6681 114A                               u5890 6296  
                             u7570 351A                               u7490 3202  
                             u7650 2DFE                               u7810 0436  
                             u6930 6E5E                               u5970 68EA  
                             u6850 1760                               u6770 1474  
                             u6690 1166                               u7730 6A06  
                             u9307 5CD6                               u9227 5A7E  
                             u9147 59B2                               u9067 4C06  
                             u7571 3516                               u7491 31FE  
                             u7651 2DFA                               u7811 0432  
                             u6931 6E58                               u5971 68E6  
                             u6851 175A                               u6771 1470  
                             u6691 1162                               u7731 6A02  
                             u7660 2ED8                               u7580 2C60  
                             u7820 04B8                               u6940 6E60  
                             u5980 6CAC                               u6860 1762  
                             u6780 14C2                               u9317 5CE2  
                             u9237 5C12                               u9157 59BE  
                             u9077 4C52                               u7661 2ED4  
                             u7581 2C5A                               u7821 04B4  
                             u5981 6CA8                               u6781 14BE  
                             u6950 3F56                               u7670 2EF6  
                             u7590 2C62                               u7830 04CC  
                             u5990 6A20                               u6870 1776  
                             u6790 156E                               u9407 5E4A  
                             u9327 6D22                               u9247 5C1E  
                             u9167 59CA                               u9087 4C5E  
                             u5895 628C                               u6951 3F52  
                             u7671 2EF2                               u7831 04C8  
                             u5991 6A1C                               u6871 1772  
                             u6791 156A                               u6960 3F84  
                             u7680 2F06                               u7840 67B8  
                             u6880 6472                               u9417 5E56  
                             u9337 6166                               u9257 5C2A  
                             u9177 5A0C                               u9097 4C6A  
                             u6961 3F80                               u7681 2F02  
                             u7841 67B4                               u6881 646E  
                             u6970 3F92                               u7690 2F86  
                             u7770 6F02                               u7850 67D6  
                             u6890 6504                               u9507 5D42  
                             u9427 5E98                               u9347 6172  
                             u9267 5C6E                               u9187 5A18  
                             u6971 3F8E                               u7691 2F82  
                             u7771 6EFE                               u7851 67D2  
                             u6891 6500                               u6980 3FD4  
                             u7780 0036                               u7860 67F4  
                             u9517 5D84                               u9437 5EA4  
                             u9357 617E                               u9277 5C7A  
                             u9197 5A24                               u6981 3FD0  
                             u7781 0032                               u7861 67F0  
                             u6990 4002                               u7790 0056  
                             u7870 6812                               u9607 6D5A  
                             u9527 5D90                               u9447 5EB0  
                             u9367 61D2                               u9287 5C86  
                             u6991 3FFE                               u7791 0052  
                             u7871 680E                               u7880 6B90  
                             u8840 4DF6                               u9617 6D8C  
                             u9537 5D9C                               u9457 5EF4  
                             u9377 61DE                               u9297 5CCA  
                             u8841 4DF2                               u7890 6BA8  
                             u8850 4E3C                               u9627 682C  
                             u7891 6BA4                               u9547 5DE0  
                             u9467 5F00                               u9387 61EA  
                             u8907 6396                               u8851 4E38  
                             u8860 4E82                               u9637 683A  
                             u9557 5DEC                               u9477 5F0C  
                             u9397 5E3E                               u8917 642A  
                             u8861 4E7E                               u8870 4EC8  
                             u9647 6844                               u7887 6B86  
                             u9567 5DF8                               u9487 5D2A  
                             u8927 4A6E                               u8871 4EC4  
                             u9657 685A                               u9577 6E1A  
                             u9497 5D36                               u8937 4A7A  
                             u9667 6868                               u9587 6A78  
                             u8947 4A86                               u9677 6872  
                             u9597 6A88                               u8957 4AC8  
                             u9687 6ECC                               u8967 4AD4  
                             u8887 4CE6                               u8977 4AE0  
                             u8897 4EF8                               u8987 4B24  
                             u8997 4B30                               _WPUD 0419  
                             _dbuf 0800                               _half FECE  
                             _labs 6A12                               _cosf 314C  
                             _main 4CBA                        _SW_I2C_Stop 594C  
                             _prec 06F7                               _sinf 2C3E  
                             pad@i 0518                               pad@p 0515  
                             fsr0h 04EA                               fsr1h 04E2  
                             indf0 04EF                               fsr2h 04DA  
                             fsr0l 04E9                               indf2 04DF  
                             fsr1l 04E1                               fsr2l 04D9  
   MPU6050_DMP_GetData@sensor_data 065E                      ___fpclassifyf 6256  
                             prodh 04F4                               prodl 04F3  
                             start FFFC                    ___fldiv@new_exp 0565  
                    ?_CURSOR_ONOFF 0501                       ___param_bank 0000  
                  ??_ENVIA_LCD_CMD 0502                MPU6050_ReadAll@data 05CC  
                 ?_SW_I2C_ReadByte 0501                              ??_pad 0517  
                 __end_of_LEER_LCD 6892            SW_I2C_ReadRegister@data 0509  
                 ?_SW_I2C_SendNack 0501                   __end_of_LCD_init 6E3C  
                            l10001 67F4                              l10011 6B94  
                            l10003 6800                              l10013 6B96  
                            l10005 6812                              l10021 6E94  
                            l10007 6B5A                              l10031 6E2C  
                            l10023 6E98                              l10015 6E82  
                            l10009 6B62                              l10033 6E30  
                            l10025 6E9A                              l10017 6E90  
                            l10041 6AD4                              l10035 6E34  
                            l10027 6E10                              l10019 6E92  
                            l10043 6ADC                              l10029 6E28  
                            l10045 6AF8                              l10037 6ABA  
                            l10039 6ACC                              l11211 4C22  
                            l11203 4AA2                              l11221 5A9A  
                            l11213 4C86                              l11205 4AFC  
                            l11231 6206                              l11223 5C46  
                            l11215 598A                              l11207 4B58  
                            l11241 5DB8                              l11233 5E72  
                            l11225 5CA2                              l11217 59E6  
                            l11209 4BC8                              l11243 5E14  
                            l11235 5ECC                              l11227 5CFE  
                            l11219 5A40                              l11237 5F28  
                            l11229 619A                              l11239 5D5E  
                            l10731 4CBA                              l10741 4CDA  
                            l10733 4CBE                              l10751 4D42  
                            l10743 4CF4                              l10735 4CC2  
                            l10761 4DBA                              l10753 4D56  
                            l10745 4CF8                              l10737 4CC6  
                            l10771 4E50                              l10763 4DC4  
                            l10755 4D6A                              l10747 4D0E  
                            l10739 4CCA                              l10773 4E82  
                            l10781 4EEC                              l10765 4DF6  
                            l10757 4DA0                              l10749 4D32  
                            l10775 4E96                              l10767 4E0A  
                            l10759 4DAA                              l10777 4EC8  
                            l10769 4E3C                              l10779 4EDC  
                    ___fltol@sign1 0536                              ?_labs 0501  
                            ?_cosf 0596                    __end_of___fladd 3AEC  
                            ?_main 0501                    __end_of___fldiv 4A4C  
                  __end_of___cosdf 5798                    __end_of___flneg 6CE6  
                            STR_10 FFBF                              STR_11 FFE6  
                            STR_20 FFF2                              STR_12 FFA0  
                            STR_13 FFD9                              STR_14 FF74  
                            STR_23 FFF6                              STR_15 FFE0  
                            STR_16 FFFA                              STR_17 FFB6  
                            STR_18 FF93                              STR_19 FF24  
                            ?_sinf 0596                    __end_of___flmul 3F12  
                  __end_of___flsub 6BF2                    __end_of___fltol 604E  
                  __end_of___sindf 5384                       ___sindf$3502 0581  
                     ___sindf$3503 0585                       ___sindf$3504 0589  
       __end_of_i2c1_fsmStateTable FE82                              _OSCEN 00B3  
                     vfpfcnvrt@fmt 05B8                              _PORTD 04D1  
                            _TRISD 04C9                  ??_I2C1_Initialize 0501  
                     _accel_offset 06E5                    __end_of_pio2_1t FEC6  
                            _fabsf 6CE6                              _atanf 17B6  
                            _flags 06FD                      ?_MPU6050_Init 0501  
                     _SW_I2C_Start 5BEE                read_prec_or_width@c 0507  
                            _errno 0710                read_prec_or_width@n 0508  
                            _fputc 650E                              _pi_lo FF06  
                            _fputs 6BF2                        ?_POS_CURSOR 0504  
                            labs@a 0501                              pad@fp 0511  
                            cosf@n 05A2                              cosf@x 0596  
                            _width 06F5                              cosf@y 05A8  
                  __end_of_invpio2 FECE                              _putch 6F48  
                            _sqrtf 3F12                   _MPU6050_DMP_Init 6EF0  
                            tablat 04F5                              sinf@n 05A2  
                            sinf@x 0596                              sinf@y 05A8  
                            status 04D8                    __end_of_sprintf 6B0A  
                   ?___fpclassifyf 0501                  ?_SW_I2C_IsBusFree 0501  
          ??_MPU6050_WriteRegister 050B                     ??_CURSOR_ONOFF 0504  
               ??_SW_I2C_IsBusFree 0501                    __initialization 6C36  
                     __end_of_half FED2                       __end_of_labs 6A68  
                     __end_of_cosf 3636                       __end_of_main 4F0C  
            _MPU6050_Movement_Init 6900                       __end_of_sinf 314C  
                  _ESCRIBE_MENSAJE 6B5A               SW_I2C_ReadBlock@data 0509  
                ?_SW_I2C_ReadBlock 0508                             ??_labs 0505  
                           ??_cosf 055F                             ??_main 0689  
                           ??_sinf 055F                 ??_SW_I2C_ReadBlock 050C  
                    __activetblptr 0003              MPU6050_DMP_GetData@dt 0600  
         ??_MPU6050_TestConnection 050D         __end_of_read_prec_or_width 650E  
        MovingAverage_Reset@filter 0501                     ??_MPU6050_Init 050E  
                _movement_detector 0714                             ?_fabsf 056D  
                           ?_atanf 0575                _SW_I2C_ReadRegister 6682  
                           ?_fputc 0501                             ?_fputs 050A  
             MovingAverage_Reset@i 0505                  SW_I2C_WriteByte@i 0505  
                           ?_putch 0501                             _ANSELD 0418  
                           ?_sqrtf 052E                             _RC2PPS 0213  
                           _RC5PPS 0216                             _RC6PPS 0217  
                    ___rem_pio2f@n 0592                      ___rem_pio2f@t 058E  
                    ___rem_pio2f@x 0575                      ___rem_pio2f@y 0579  
                           _OSCFRQ 00B1                   __end_of___xxtofl 594C  
                 _I2C1_DO_RX_EMPTY 0000                             _c1pio2 FEEE  
                           _c2pio2 FEEA                   _I2C1_DO_TX_EMPTY 0000  
                           _c3pio2 FEE6                             _c4pio2 FEE2  
       MPU6050_DMP_GetData@yaw_rad 065A                       vfprintf@cfmt 05CB  
                           _s1pio2 FEAE                             _s2pio2 FEAA  
                           _s3pio2 FEA6                             _s4pio2 FEA2  
                           ___flge 604E                             ___fleq 65D8  
             ?_SW_I2C_ReadRegister 0508                          ??___fladd 0526  
                        ??___fldiv 055B                          ??___cosdf 0532  
                        ??___flneg 0505               __end_of_ENVIA_NIBBLE 6ED6  
                        ??___flmul 050D                             _atan2f 2680  
                        ??___flsub 055F                          ??___fltol 0532  
                           _efgtoa 0DBE                             _atanhi FE92  
                           _atanlo FE82                          ??___sindf 055F  
                           _pio2_1 FEC6                             _floorf 5384  
                           fabsf@u 0571                             fabsf@x 056D  
                           _memcpy 6B0A               read_prec_or_width@ap 0503  
                           clear_0 6C4E                             clear_1 6C5A  
                           clear_2 6C66            MPU6050_ReadAll@raw_data 05DA  
                           atanf@w 0596                             atanf@x 0575  
                           atanf@z 059B                             isa$std 0001  
          MPU6050_ReadAll@raw_temp 05EE                  ?_SW_I2C_WriteByte 0501  
                           pad@buf 0513                             cosf@ix 05AC  
                           _strcpy 6C72              _I2C1_DO_SEND_ADR_READ 0000  
                           fputc@c 0501                 ??_SW_I2C_WriteByte 0501  
                           fputs@c 050E                             fputs@i 050F  
                     __pdataCOMRAM 055F                             fputs@s 050A  
                  ___fpclassifyf@e 0509                    ___fpclassifyf@u 050B  
                  ___fpclassifyf@x 0501                       __mediumconst FE48  
                           sinf@ux 05AC                             tblptrh 04F7  
                           tblptrl 04F6                             tblptru 04F8  
                           putch@c 0501                   __end_of_vfprintf 6A12  
                     ??_BORRAR_LCD 0504                             sqrtf@i 053B  
                           sqrtf@m 0547                             sqrtf@q 053F  
                           sqrtf@r 054B                             sqrtf@s 0537  
                           sqrtf@t 0543                             sqrtf@x 052E  
                        ??_sprintf 055F            _I2C1_DO_RX_NACK_RESTART 0000  
                       ___flge@ff1 051E                         ___flge@ff2 0522  
                  ??___fpclassifyf 0505                       ___xxtofl@arg 050B  
                     ___xxtofl@exp 050A                       ___xxtofl@val 0501  
                       ___fleq@ff1 0501                         ___fleq@ff2 0505  
                        ?_LEER_LCD 0501                         __accesstop 0560  
          __end_of__initialization 6C6C                         ___flneg@f1 0501  
                     ??_LCD_CONFIG 0504        SW_I2C_ReadRegister@reg_addr 0508  
                        ?_LCD_init 0501                      ___rparam_used 0001  
                     ??_ENVIA_CHAR 0502       __end_of_SW_I2C_WriteRegister 67A6  
                       ___fltol@f1 052E            __end_of_ESCRIBE_MENSAJE 6BAA  
          _rdBlkRegCompleteHandler 0000             ?_MPU6050_Movement_Init 0501  
            ??_SW_I2C_ReadRegister 0509                     __pcstackCOMRAM 0501  
                    __end_of_fabsf 6D1C                      __end_of_atanf 1F30  
                    __end_of_fputc 65D8                      __end_of_pi_lo FF0A  
                    __end_of_fputs 6C36                      __end_of_putch 6F4A  
                    __end_of_sqrtf 42F0                 __end_of_BORRAR_LCD 6F48  
                       __end_of_C0 FEE2                         __end_of_C1 FEDE  
                       __end_of_C2 FEDA                         __end_of_C3 FED6  
                       __end_of_S1 FEC2                         __end_of_S2 FEBE  
                       __end_of_S3 FEBA                         __end_of_S4 FEB6  
                       __end_of_pi FF0E        __end_of_MPU6050_DMP_GetData 0DBE  
                 ENVIA_LCD_CMD@aux 0503               __end_of_CURSOR_ONOFF 6DE2  
               __end_of_LCD_CONFIG 6ABA                 __end_of_ENVIA_CHAR 6DB2  
         MPU6050_CombineBytes@high 0505                            ??_fabsf 055F  
            MPU6050_ReadAll@raw_ax 05E8              MPU6050_ReadAll@raw_ay 05EA  
            MPU6050_ReadAll@raw_az 05EC              MPU6050_ReadAll@raw_gx 05F0  
            MPU6050_ReadAll@raw_gy 05F2              MPU6050_ReadAll@raw_gz 05F4  
                _I2C1_DO_BUS_ERROR 0000                            ??_atanf 055F  
                          ??_fputc 0505                            ??_fputs 050E  
                          ??_putch 0501                            ??_sqrtf 0532  
                       __pbssBANK6 06AF                         __pbssBANK7 0700  
                       __pbssBANK8 0800             MPU6050_DMP_GetData@ypr 05FA  
    __end_of_MPU6050_ReadRegisters 6E10        __end_of_MovingAverage_Reset 69BC  
                       ??_LEER_LCD 0501                   ENVIA_NIBBLE@dato 0501  
                     ?_SW_I2C_Stop 0501                         _atanf$3492 058D  
                       _atanf$3493 0579                         _atanf$3494 0591  
                       _atanf$3495 057D                         _atanf$3496 0581  
                       ??_LCD_init 0505              _rd1RegCompleteHandler 0000  
                _I2C1_DO_SEND_STOP 0000              _wr1RegCompleteHandler 0000  
                          ?___flge 051E                            ?___fleq 0501  
             __end_of_MPU6050_Init 6442                            _I2C1CLK 029C  
                          _I2C1CNT 028D                            _I2C1ERR 0297  
                          _I2C1PIE 029B                            _I2C1PIR 029A  
                          _I2C1RXB 028B                            _I2C1TXB 028C  
                          ?_atan2f 05A3                            ?_efgtoa 0581  
                    ??___rem_pio2f 057B                  ??_MPU6050_ReadAll 055F  
                  _I2C1_Initialize 6E9E           __end_of_MPU6050_DMP_Init 6F08  
                          ?_floorf 056D                            ?_memcpy 0501  
                          ?_strcpy 0501       MPU6050_DMP_GetData@pitch_rad 0656  
                          _U1RXPPS 0272                          ?___xxtofl 0501  
                          _OSCCON1 00AD                            _OSCCON3 00AF  
                   ___rem_pio2f@fn 058A                     ___rem_pio2f@ty 057D  
                   ___rem_pio2f@ux 0586                       ??_POS_CURSOR 0505  
         SW_I2C_ReadBlock@reg_addr 0508                 _i2c1_fsmStateTable FE49  
           _MPU6050_TestConnection 6E62        MPU6050_DMP_GetData@roll_rad 0652  
                          __Hparam 0000                            __Lparam 0000  
                 ?_ESCRIBE_MENSAJE 0504      __end_of_MPU6050_WriteRegister 6E62  
             SW_I2C_WriteByte@data 0503                  __end_of_configuro 6E9E  
                          ___fladd 3636                            ___fldiv 46BA  
                          ___cosdf 559A                            ___flneg 6CAE  
                          ___flmul 3AEC                            ___flsub 6BAA  
                          ___fltol 5F48                            ___sindf 5152  
                        ?_vfprintf 05C5              __end_of_ENVIA_LCD_CMD 6D80  
                   _SW_I2C_SendAck 5D20                            __pcinit 6C36  
               __end_of_POS_CURSOR 6820                            __ramtop 2600  
                          __ptext0 4CBA                            __ptext1 6ABA  
                          __ptext2 69BC                            __ptext3 4F0C  
                          __ptext4 6442                            __ptext5 0DBE  
                          __ptext6 6C72                            __ptext7 6892  
                          __ptext8 6BF2                            __ptext9 650E  
                   _SW_I2C_Restart 6F08                            _pio2_1t FEC2  
                ??_GetTimestamp_ms 0503  MPU6050_DMP_GetData@last_read_time 06FB  
                          atan2f@m 05CB              read_prec_or_width@fmt 0501  
                          atan2f@x 05A7                            atan2f@y 05A3  
                          atan2f@z 05BF                        _I2C1ERRbits 0297  
                       ??___xxtofl 0505                __end_of___rem_pio2f 46BA  
                          _invpio2 FECA               _SW_I2C_WriteRegister 6726  
                      _I2C1PIEbits 029B                            atanf@s1 0585  
                          atanf@s2 0589                            atanf@id 059A  
                          atanf@ix 059F                            efgtoa@c 0587  
                          efgtoa@d 0595                            efgtoa@e 0599  
                          efgtoa@f 0583                            efgtoa@g 05AE  
                          efgtoa@h 05A3                            efgtoa@i 05A1  
                          efgtoa@l 05A7                            efgtoa@m 0597  
                          efgtoa@n 05AC                            efgtoa@p 058C  
                          efgtoa@t 058E                            efgtoa@u 05B2  
                          efgtoa@w 059B                        _I2C1PIRbits 029A  
                          _sprintf 6ABA                            main@ypr 06A3  
                 ___rem_pio2f$3501 0581                       _ENVIA_NIBBLE 6EBA  
             end_of_initialization 6C6C                            floorf@e 057B  
                          floorf@m 0577                            floorf@u 057D  
                          floorf@x 056D    MPU6050_DMP_GetData@current_time 062C  
                          memcpy@d 0507                            memcpy@n 0505  
                          memcpy@s 0509                   SW_I2C_ReadByte@i 0507  
                          fputc@fp 0503                   ___rem_pio2f@F526 0708  
                          fputs@fp 050C             _I2C1_DO_SEND_ADR_WRITE 0000  
               _read_prec_or_width 6442       __end_of_MPU6050_CombineBytes 6EF0  
          __end_of_I2C1_Initialize 6EBA                   ___rem_pio2f@sign 0585  
                      _I2C1_Status 06AF                  __end_of_vfpfcnvrt 5152  
                       efgtoa@mode 0593                         efgtoa@sign 05AB  
                          postdec2 04DD                ?_read_prec_or_width 0501  
                          postinc0 04EE                            postinc1 04E6  
                          postinc2 04DE             __end_of_SW_I2C_SendAck 5E36  
                 vfpfcnvrt@convarg 05BE                         ??_vfprintf 055F  
   SW_I2C_ReadRegister@device_addr 050A             __end_of_SW_I2C_Restart 6F1A  
                          sqrtf@ix 054F         _I2C1_DO_SEND_RESTART_WRITE 0000  
                          strcpy@d 0505                          _PORTBbits 04CF  
                      ___fladd@grs 052D        MPU6050_ReadRegisters@length 0515  
            ?_SW_I2C_WriteRegister 0506                      ___xxtofl@sign 0509  
                        _TRISBbits 04C7                          _TRISCbits 04C8  
                        _TRISDbits 04C9                          _TRISFbits 04CB  
             ??_read_prec_or_width 0505                        ___fldiv@grs 0567  
                      ___fldiv@rem 0560                        ___flmul@grs 0512  
          ??_MPU6050_Movement_Init 0506                     _last_timestamp 0712  
                     _CURSOR_ONOFF 6DB2                 CURSOR_ONOFF@estado 0504  
                   __end_of_c1pio2 FEF2                     __end_of_c2pio2 FEEE  
                   __end_of_c3pio2 FEEA                     __end_of_c4pio2 FEE6  
                  ?_SW_I2C_SendAck 0501                     __end_of_s1pio2 FEB2  
                   __end_of_s2pio2 FEAE                     __end_of_s3pio2 FEAA  
                   __end_of_s4pio2 FEA6                     __end_of___flge 6152  
                   __end_of___fleq 6682                        vfpfcnvrt@ap 05BA  
                      vfpfcnvrt@cp 05C3                        ___rem_pio2f 42F0  
                      vfpfcnvrt@fp 05B6                    ?_SW_I2C_Restart 0501  
                   _I2C1_DO_RX_ACK 0000                     __end_of_atan2f 2C3E  
                   _I2C1_DO_TX_ACK 0000                      __pidataCOMRAM 6F4A  
                   __end_of_efgtoa 17B6                     __end_of_atanhi FEA2  
                   __end_of_atanlo FE92                     __end_of_pio2_1 FECA  
                   __end_of_floorf 559A                     __end_of_memcpy 6B5A  
                       floorf@F521 0700                     __end_of_strcpy 6CAE  
                    ??_CURSOR_HOME 0504                start_initialization 6C36  
                      __end_of_aT0 FF06                        __end_of_aT1 FF02  
                      __end_of_aT2 FEFE                        __end_of_aT3 FEFA  
                      __end_of_aT4 FEF6                        __end_of_pad 6900  
        MPU6050_WriteRegister@data 050A                       _MPU6050_Init 6354  
                ??_SW_I2C_ReadByte 0503                  ENVIA_LCD_CMD@dato 0502  
            __end_of___fpclassifyf 6354        __end_of_SW_I2C_ReadRegister 6726  
                ??_SW_I2C_SendNack 0501                    _MPU6050_ReadAll 1F30  
           SW_I2C_ReadBlock@length 050B                   ?_I2C1_Initialize 0501  
           SW_I2C_ReadBlock@result 0512                SW_I2C_ReadByte@data 0506  
                      vfprintf@fmt 05C7                           ??___flge 0526  
                         ??___fleq 0509                           ??_atan2f 05AB  
                         ??_efgtoa 0588                           ??_floorf 0571  
                         ??_memcpy 0507                        _atan2f$3490 05B7  
                      _atan2f$3491 05BB                        _atan2f$3489 05B3  
                ?_MPU6050_DMP_Init 0501                   _SW_I2C_IsBusFree 6D1C  
                         ??_strcpy 0505             ??_SW_I2C_WriteRegister 0508  
               ??_MPU6050_DMP_Init 0510                          ___fladd@a 0522  
                        ___fladd@b 051E                          ___fldiv@a 0557  
                        ___fldiv@b 0553                          ___cosdf@r 0532  
                        ___cosdf@w 0542                          ___cosdf@x 052E  
                        ___cosdf@z 0546            MPU6050_DMP_GetData@quat 05FC  
                        ___flmul@a 0509                          ___flmul@b 0505  
             _I2C1_DO_SEND_RESTART 0000                          ___flsub@a 0571  
                        ___flsub@b 056D               _MPU6050_CombineBytes 6ED6  
                    __pcstackBANK5 0560                      __pcstackBANK6 0600  
                    ?_SW_I2C_Start 0501                          ___sindf@r 0579  
                        ___sindf@s 058D                          ___sindf@w 057D  
                        ___sindf@x 0575                          ___sindf@z 0591  
         MPU6050_ReadRegisters@reg 0516                   _SW_I2C_ReadBlock 5ABA  
              _mpu6050_initialized 06FE            ?_MPU6050_TestConnection 0501  
              __end_of_CURSOR_HOME 6F40            MPU6050_CombineBytes@low 0501  
            _MPU6050_ReadRegisters 6DE2       __end_of_MPU6050_ReadRegister 6F38  
                        _cosf$2780 059A                          _cosf$2781 059E  
                        _cosf$3497 05A3              _rd2RegCompleteHandler 0000  
                      _efgtoa$2955 0590              _wr2RegCompleteHandler 0000  
                  _GetTimestamp_ms 6F1A                      __pmediumconst FE48  
                         ?___fladd 051E                           ?___fldiv 0553  
                         ?___cosdf 052E                           ?___flneg 0501  
                         ?___flmul 0505                           ?___flsub 056D  
                         ?___fltol 052E                           ?___sindf 0575  
                         _I2C1CON0 0294                           _I2C1CON1 0295  
                         _I2C1CON2 0296                          _configuro 6E82  
       SW_I2C_WriteRegister@result 0509                          fabsf@F465 0704  
            ?_MPU6050_CombineBytes 0501                SW_I2C_WriteByte@ack 0504  
                   ??_SW_I2C_Start 0502            __end_of_MPU6050_ReadAll 2680  
   __end_of_MPU6050_TestConnection 6E82                           ?_sprintf 05CD  
                        _sinf$3068 059A                          _sinf$3069 059E  
                        _sinf$3505 05A4                         _I2C1SDAPPS 0270  
                 _SW_I2C_WriteByte 4A4C                         _I2C1SCLPPS 0271  
                         _LEER_LCD 6820                           _LATBbits 04BF  
                         _LATDbits 04C1                           _LATFbits 04C3  
                       _I2C1_DO_RX 0000                         _I2C1_DO_TX 0000  
                         _LCD_init 6E10                           _PIE7bits 04A5  
                    _I2C1STAT1bits 0299                          atanf@sign 0595  
                         _PIR7bits 04B5          _I2C1_DO_SEND_RESTART_READ 0000  
            _MPU6050_WriteRegister 6E3C                   ESCRIBE_MENSAJE@i 0509  
                        _vfpfcnvrt 4F0C                     POS_CURSOR@fila 0505  
                       ?_configuro 0501                           _WPUBbits 0409  
                         _WPUCbits 0411                           _WPUDbits 0419  
                        main@pitch 069B                        _CURSOR_HOME 6F38  
             _MPU6050_ReadAll$3484 05F6               _MPU6050_ReadAll$3485 05CE  
             _MPU6050_ReadAll$3486 05D2               _MPU6050_ReadAll$3487 05D6  
                    _I2C1_DO_RESET 0000                         vfpfcnvrt@c 05C2  
            _SW_I2C_IsBusFree$1645 0501            __end_of_GetTimestamp_ms 6F2A  
           ?_MPU6050_ReadRegisters 0513                   ??_SW_I2C_SendAck 0501  
    __end_of_MPU6050_Movement_Init 6962                           __Hrparam 0000  
                 ??_SW_I2C_Restart 0504                          memcpy@tmp 050B  
               SW_I2C_ReadByte@ack 0505                         vfprintf@ap 05C9  
                         __Lrparam 0000                         vfprintf@fp 05C5  
                     ?___rem_pio2f 0575                         ?_vfpfcnvrt 05B6  
          MPU6050_ReadRegister@reg 050C                         _ANSELBbits 0408  
                       _ANSELCbits 0410             ??_MPU6050_CombineBytes 0503  
                  _SW_I2C_ReadByte 6152                 ___fpclassifyf@F465 070C  
                       _ANSELFbits 0428    MPU6050_DMP_GetData@yaw_integral 06F1  
                       sprintf@fmt 05CF                           ___xxtofl 5798  
             _MPU6050_ReadRegister 6F2A                    _SW_I2C_SendNack 5E36  
                     _I2C1CON0bits 0294                       _I2C1CON1bits 0295  
                         __ptext10 6F48                           __ptext11 6B0A  
                         __ptext20 6726                           __ptext12 6A12  
                         __ptext21 6E62                           __ptext13 5384  
                         __ptext30 42F0                           __ptext22 6F2A  
                         __ptext14 65D8                           __ptext31 5F48  
                         __ptext23 6682                           __ptext15 6E82  
                         __ptext40 6BAA                           __ptext32 559A  
                         __ptext24 6900                           __ptext16 67A6  
                         __ptext41 3636                           __ptext33 604E  
                         __ptext25 6962                           __ptext17 6EF0  
                         __ptext50 594C                           __ptext42 6CAE  
                         __ptext34 1F30                           __ptext26 0000  
                         __ptext18 6354                           __ptext51 5BEE  
                         __ptext43 3AEC                           __ptext35 3F12  
                         __ptext27 2C3E                           __ptext19 6E3C  
                         __ptext60 6DB2                           __ptext52 6D1C  
                         __ptext44 46BA                           __ptext36 2680  
                         __ptext28 314C                           __ptext61 6F38  
                         __ptext53 6152                           __ptext45 5798  
                         __ptext37 17B6                           __ptext29 5152  
                         __ptext62 6F40                           __ptext54 5E36  
                         __ptext46 6DE2                           __ptext38 6CE6  
                         __ptext63 6D4E                           __ptext55 5D20  
                         __ptext47 5ABA                           __ptext39 6256  
                         __ptext64 6E9E                           __ptext56 6ED6  
                         __ptext48 4A4C                           __ptext65 6B5A  
                         __ptext57 6F1A                           __ptext49 6F08  
                         __ptext66 6D80                           __ptext58 6E10  
                         __ptext67 6820                           __ptext59 6A68  
                         __ptext68 6EBA                   ?_MPU6050_ReadAll 05CC  
                       _BORRAR_LCD 6F40              _I2C1_DO_BUS_COLLISION 0000  
      SW_I2C_ReadBlock@device_addr 0510                         strcpy@dest 0501  
                    ??_SW_I2C_Stop 0501           _I2C1_CallbackReturnReset 0000  
         __end_of_SW_I2C_IsBusFree 6D4E                           atan2f@ix 05C3  
                         atan2f@iy 05C7                         _LCD_CONFIG 6A68  
                       _ENVIA_CHAR 6D80                           efgtoa@fp 0581  
                         efgtoa@ne 058A                           efgtoa@pp 0592  
                         efgtoa@ou 059D             ?_MPU6050_WriteRegister 050A  
                         isa$xinst 0000               __end_of_SW_I2C_Start 5D20  
        MPU6050_ReadRegisters@data 0513           SW_I2C_WriteRegister@data 0507  
                         cosf@sign 05A7                         _ODCONBbits 040A  
                       _ODCONCbits 0412                _MPU6050_DMP_GetData 0000  
                _current_i2c_speed 055F                           _vfprintf 69BC  
         __end_of_SW_I2C_ReadBlock 5BEE                           main@roll 069F  
                    _ENVIA_LCD_CMD 6D4E                        ??_configuro 0501  
                     _I2C1_DO_IDLE 0000              ?_MPU6050_ReadRegister 0501  
                SW_I2C_ReadBlock@i 0511                           memcpy@d1 0501  
                         memcpy@s1 0503                _MovingAverage_Reset 6962  
                ??_ESCRIBE_MENSAJE 0507               ?_MPU6050_DMP_GetData 05FA  
            ESCRIBE_MENSAJE@cadena 0504                          sprintf@ap 05D9  
                      _gyro_offset 06D9                   ?_GetTimestamp_ms 0501  
        SW_I2C_ReadRegister@result 050B       SW_I2C_WriteRegister@reg_addr 0506  
                        strcpy@src 0503                           sinf@sign 05A3  
          _I2C1_CallbackReturnStop 0000               ?_MovingAverage_Reset 0501  
             _I2C1_DO_ADDRESS_NACK 0000                __end_of_SW_I2C_Stop 5ABA  
                      efgtoa@nmode 0594            __end_of_SW_I2C_ReadByte 6256  
                   ?_ENVIA_LCD_CMD 0501                        ??_vfpfcnvrt 05BC  
         __end_of_SW_I2C_WriteByte 4CBA            __end_of_SW_I2C_SendNack 5F48  
                         sprintf@f 05DB                           sprintf@s 05CD  
                      ?_BORRAR_LCD 0501              ??_MPU6050_DMP_GetData 05FE  
                    ?_ENVIA_NIBBLE 0501                      ___fladd@signs 052A  
                       _POS_CURSOR 67A6                       ___fladd@aexp 052B  
                     ___fladd@bexp 052C                        ?_LCD_CONFIG 0501  
   MPU6050_TestConnection@who_am_i 050D                 ESCRIBE_MENSAJE@tam 0506  
         MPU6050_WriteRegister@reg 050B                       ___cosdf$3500 053E  
                     ___cosdf$3498 0536                       ___cosdf$3499 053A  
                      ?_ENVIA_CHAR 0501                  POS_CURSOR@columna 0504  
            ??_MovingAverage_Reset 0503  
