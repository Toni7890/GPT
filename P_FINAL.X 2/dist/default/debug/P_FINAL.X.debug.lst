

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Jul 11 17:35:30 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=3
    51                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=3
    53                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=3
    54                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=3
    55                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87   000000                     
    88                           ; Generated 23/02/2024 GMT
    89                           ; 
    90                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution. Publication is not required when
   104                           ;        this file is used in an embedded application.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F57Q43 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122   0004E0                     bsr             equ	1248
   123   0004E9                     fsr0            equ	1257
   124   0004EA                     fsr0h           equ	1258
   125   0004E9                     fsr0l           equ	1257
   126   0004E1                     fsr1            equ	1249
   127   0004E2                     fsr1h           equ	1250
   128   0004E1                     fsr1l           equ	1249
   129   0004D9                     fsr2            equ	1241
   130   0004DA                     fsr2h           equ	1242
   131   0004D9                     fsr2l           equ	1241
   132   0004EF                     indf0           equ	1263
   133   0004E7                     indf1           equ	1255
   134   0004DF                     indf2           equ	1247
   135   0004D6                     intcon          equ	1238
   136   000041                     nvmcon          equ	65
   137   0004F9                     pcl             equ	1273
   138   0004FA                     pclath          equ	1274
   139   0004FB                     pclatu          equ	1275
   140   0004EB                     plusw0          equ	1259
   141   0004E3                     plusw1          equ	1251
   142   0004DB                     plusw2          equ	1243
   143   0004ED                     postdec0        equ	1261
   144   0004E5                     postdec1        equ	1253
   145   0004DD                     postdec2        equ	1245
   146   0004EE                     postinc0        equ	1262
   147   0004E6                     postinc1        equ	1254
   148   0004DE                     postinc2        equ	1246
   149   0004EC                     preinc0         equ	1260
   150   0004E4                     preinc1         equ	1252
   151   0004DC                     preinc2         equ	1244
   152   0004F3                     prod            equ	1267
   153   0004F4                     prodh           equ	1268
   154   0004F3                     prodl           equ	1267
   155   0004D8                     status          equ	1240
   156   0004F5                     tablat          equ	1269
   157   0004F6                     tblptr          equ	1270
   158   0004F7                     tblptrh         equ	1271
   159   0004F6                     tblptrl         equ	1270
   160   0004F8                     tblptru         equ	1272
   161   0004FD                     tosl            equ	1277
   162   0004E8                     wreg            equ	1256
   163   000039                     CLKRCON         equ	57	;# 
   164   00003A                     CLKRCLK         equ	58	;# 
   165   000040                     NVMCON0         equ	64	;# 
   166   000041                     NVMCON1         equ	65	;# 
   167   000042                     NVMLOCK         equ	66	;# 
   168   000043                     NVMADR          equ	67	;# 
   169   000043                     NVMADRL         equ	67	;# 
   170   000044                     NVMADRH         equ	68	;# 
   171   000045                     NVMADRU         equ	69	;# 
   172   000046                     NVMDAT          equ	70	;# 
   173   000046                     NVMDATL         equ	70	;# 
   174   000047                     NVMDATH         equ	71	;# 
   175   000048                     VREGCON         equ	72	;# 
   176   000049                     BORCON          equ	73	;# 
   177   00004A                     HLVDCON0        equ	74	;# 
   178   00004B                     HLVDCON1        equ	75	;# 
   179   00004C                     ZCDCON          equ	76	;# 
   180   000060                     PMD0            equ	96	;# 
   181   000061                     PMD1            equ	97	;# 
   182   000063                     PMD3            equ	99	;# 
   183   000064                     PMD4            equ	100	;# 
   184   000065                     PMD5            equ	101	;# 
   185   000066                     PMD6            equ	102	;# 
   186   000067                     PMD7            equ	103	;# 
   187   000068                     PMD8            equ	104	;# 
   188   00006A                     MD1CON0         equ	106	;# 
   189   00006B                     MD1CON1         equ	107	;# 
   190   00006C                     MD1SRC          equ	108	;# 
   191   00006D                     MD1CARL         equ	109	;# 
   192   00006E                     MD1CARH         equ	110	;# 
   193   00006F                     CMOUT           equ	111	;# 
   194   000070                     CM1CON0         equ	112	;# 
   195   000071                     CM1CON1         equ	113	;# 
   196   000072                     CM1NCH          equ	114	;# 
   197   000073                     CM1PCH          equ	115	;# 
   198   000074                     CM2CON0         equ	116	;# 
   199   000075                     CM2CON1         equ	117	;# 
   200   000076                     CM2NCH          equ	118	;# 
   201   000077                     CM2PCH          equ	119	;# 
   202   000078                     WDTCON0         equ	120	;# 
   203   000079                     WDTCON1         equ	121	;# 
   204   00007A                     WDTPS           equ	122	;# 
   205   00007A                     WDTPSL          equ	122	;# 
   206   00007B                     WDTPSH          equ	123	;# 
   207   00007C                     WDTTMR          equ	124	;# 
   208   00007D                     DAC1DAT         equ	125	;# 
   209   00007D                     DAC1DATL        equ	125	;# 
   210   00007F                     DAC1CON         equ	127	;# 
   211   000080                     SPI1RXB         equ	128	;# 
   212   000081                     SPI1TXB         equ	129	;# 
   213   000082                     SPI1TCNT        equ	130	;# 
   214   000082                     SPI1TCNTL       equ	130	;# 
   215   000083                     SPI1TCNTH       equ	131	;# 
   216   000084                     SPI1CON0        equ	132	;# 
   217   000085                     SPI1CON1        equ	133	;# 
   218   000086                     SPI1CON2        equ	134	;# 
   219   000087                     SPI1STATUS      equ	135	;# 
   220   000088                     SPI1TWIDTH      equ	136	;# 
   221   000089                     SPI1BAUD        equ	137	;# 
   222   00008A                     SPI1INTF        equ	138	;# 
   223   00008B                     SPI1INTE        equ	139	;# 
   224   00008C                     SPI1CLK         equ	140	;# 
   225   00008D                     SPI2RXB         equ	141	;# 
   226   00008E                     SPI2TXB         equ	142	;# 
   227   00008F                     SPI2TCNT        equ	143	;# 
   228   00008F                     SPI2TCNTL       equ	143	;# 
   229   000090                     SPI2TCNTH       equ	144	;# 
   230   000091                     SPI2CON0        equ	145	;# 
   231   000092                     SPI2CON1        equ	146	;# 
   232   000093                     SPI2CON2        equ	147	;# 
   233   000094                     SPI2STATUS      equ	148	;# 
   234   000095                     SPI2TWIDTH      equ	149	;# 
   235   000096                     SPI2BAUD        equ	150	;# 
   236   000097                     SPI2INTF        equ	151	;# 
   237   000098                     SPI2INTE        equ	152	;# 
   238   000099                     SPI2CLK         equ	153	;# 
   239   0000AC                     ACTCON          equ	172	;# 
   240   0000AD                     OSCCON1         equ	173	;# 
   241   0000AE                     OSCCON2         equ	174	;# 
   242   0000AF                     OSCCON3         equ	175	;# 
   243   0000B0                     OSCTUNE         equ	176	;# 
   244   0000B1                     OSCFRQ          equ	177	;# 
   245   0000B1                     OSCFREQ         equ	177	;# 
   246   0000B2                     OSCSTAT         equ	178	;# 
   247   0000B2                     OSCSTAT1        equ	178	;# 
   248   0000B3                     OSCEN           equ	179	;# 
   249   0000B4                     PRLOCK          equ	180	;# 
   250   0000B5                     SCANPR          equ	181	;# 
   251   0000B6                     DMA1PR          equ	182	;# 
   252   0000B7                     DMA2PR          equ	183	;# 
   253   0000B8                     DMA3PR          equ	184	;# 
   254   0000B9                     DMA4PR          equ	185	;# 
   255   0000BA                     DMA5PR          equ	186	;# 
   256   0000BB                     DMA6PR          equ	187	;# 
   257   0000BE                     MAINPR          equ	190	;# 
   258   0000BF                     ISRPR           equ	191	;# 
   259   0000D4                     CLCDATA         equ	212	;# 
   260   0000D5                     CLCSELECT       equ	213	;# 
   261   0000D6                     CLCnCON         equ	214	;# 
   262   0000D7                     CLCnPOL         equ	215	;# 
   263   0000D8                     CLCnSEL0        equ	216	;# 
   264   0000D9                     CLCnSEL1        equ	217	;# 
   265   0000DA                     CLCnSEL2        equ	218	;# 
   266   0000DB                     CLCnSEL3        equ	219	;# 
   267   0000DC                     CLCnGLS0        equ	220	;# 
   268   0000DD                     CLCnGLS1        equ	221	;# 
   269   0000DE                     CLCnGLS2        equ	222	;# 
   270   0000DF                     CLCnGLS3        equ	223	;# 
   271   0000E8                     DMASELECT       equ	232	;# 
   272   0000E9                     DMAnBUF         equ	233	;# 
   273   0000EA                     DMAnDCNT        equ	234	;# 
   274   0000EA                     DMAnDCNTL       equ	234	;# 
   275   0000EB                     DMAnDCNTH       equ	235	;# 
   276   0000EC                     DMAnDPTR        equ	236	;# 
   277   0000EC                     DMAnDPTRL       equ	236	;# 
   278   0000ED                     DMAnDPTRH       equ	237	;# 
   279   0000EE                     DMAnDSZ         equ	238	;# 
   280   0000EE                     DMAnDSZL        equ	238	;# 
   281   0000EF                     DMAnDSZH        equ	239	;# 
   282   0000F0                     DMAnDSA         equ	240	;# 
   283   0000F0                     DMAnDSAL        equ	240	;# 
   284   0000F1                     DMAnDSAH        equ	241	;# 
   285   0000F2                     DMAnSCNT        equ	242	;# 
   286   0000F2                     DMAnSCNTL       equ	242	;# 
   287   0000F3                     DMAnSCNTH       equ	243	;# 
   288   0000F4                     DMAnSPTR        equ	244	;# 
   289   0000F4                     DMAnSPTRL       equ	244	;# 
   290   0000F5                     DMAnSPTRH       equ	245	;# 
   291   0000F6                     DMAnSPTRU       equ	246	;# 
   292   0000F7                     DMAnSSZ         equ	247	;# 
   293   0000F7                     DMAnSSZL        equ	247	;# 
   294   0000F8                     DMAnSSZH        equ	248	;# 
   295   0000F9                     DMAnSSA         equ	249	;# 
   296   0000F9                     DMAnSSAL        equ	249	;# 
   297   0000FA                     DMAnSSAH        equ	250	;# 
   298   0000FB                     DMAnSSAU        equ	251	;# 
   299   0000FC                     DMAnCON0        equ	252	;# 
   300   0000FD                     DMAnCON1        equ	253	;# 
   301   0000FE                     DMAnAIRQ        equ	254	;# 
   302   0000FF                     DMAnSIRQ        equ	255	;# 
   303   000200                     PPSLOCK         equ	512	;# 
   304   000201                     RA0PPS          equ	513	;# 
   305   000202                     RA1PPS          equ	514	;# 
   306   000203                     RA2PPS          equ	515	;# 
   307   000204                     RA3PPS          equ	516	;# 
   308   000205                     RA4PPS          equ	517	;# 
   309   000206                     RA5PPS          equ	518	;# 
   310   000207                     RA6PPS          equ	519	;# 
   311   000208                     RA7PPS          equ	520	;# 
   312   000209                     RB0PPS          equ	521	;# 
   313   00020A                     RB1PPS          equ	522	;# 
   314   00020B                     RB2PPS          equ	523	;# 
   315   00020C                     RB3PPS          equ	524	;# 
   316   00020D                     RB4PPS          equ	525	;# 
   317   00020E                     RB5PPS          equ	526	;# 
   318   00020F                     RB6PPS          equ	527	;# 
   319   000210                     RB7PPS          equ	528	;# 
   320   000211                     RC0PPS          equ	529	;# 
   321   000212                     RC1PPS          equ	530	;# 
   322   000213                     RC2PPS          equ	531	;# 
   323   000214                     RC3PPS          equ	532	;# 
   324   000215                     RC4PPS          equ	533	;# 
   325   000216                     RC5PPS          equ	534	;# 
   326   000217                     RC6PPS          equ	535	;# 
   327   000218                     RC7PPS          equ	536	;# 
   328   000219                     RD0PPS          equ	537	;# 
   329   00021A                     RD1PPS          equ	538	;# 
   330   00021B                     RD2PPS          equ	539	;# 
   331   00021C                     RD3PPS          equ	540	;# 
   332   00021D                     RD4PPS          equ	541	;# 
   333   00021E                     RD5PPS          equ	542	;# 
   334   00021F                     RD6PPS          equ	543	;# 
   335   000220                     RD7PPS          equ	544	;# 
   336   000221                     RE0PPS          equ	545	;# 
   337   000222                     RE1PPS          equ	546	;# 
   338   000223                     RE2PPS          equ	547	;# 
   339   000229                     RF0PPS          equ	553	;# 
   340   00022A                     RF1PPS          equ	554	;# 
   341   00022B                     RF2PPS          equ	555	;# 
   342   00022C                     RF3PPS          equ	556	;# 
   343   00022D                     RF4PPS          equ	557	;# 
   344   00022E                     RF5PPS          equ	558	;# 
   345   00022F                     RF6PPS          equ	559	;# 
   346   000230                     RF7PPS          equ	560	;# 
   347   00023E                     INT0PPS         equ	574	;# 
   348   00023F                     INT1PPS         equ	575	;# 
   349   000240                     INT2PPS         equ	576	;# 
   350   000241                     T0CKIPPS        equ	577	;# 
   351   000242                     T1CKIPPS        equ	578	;# 
   352   000243                     T1GPPS          equ	579	;# 
   353   000244                     T3CKIPPS        equ	580	;# 
   354   000245                     T3GPPS          equ	581	;# 
   355   000246                     T5CKIPPS        equ	582	;# 
   356   000247                     T5GPPS          equ	583	;# 
   357   000248                     T2INPPS         equ	584	;# 
   358   000249                     T4INPPS         equ	585	;# 
   359   00024A                     T6INPPS         equ	586	;# 
   360   00024F                     CCP1PPS         equ	591	;# 
   361   000250                     CCP2PPS         equ	592	;# 
   362   000251                     CCP3PPS         equ	593	;# 
   363   000253                     PWM1ERSPPS      equ	595	;# 
   364   000254                     PWM2ERSPPS      equ	596	;# 
   365   000255                     PWM3ERSPPS      equ	597	;# 
   366   000257                     PWMIN0PPS       equ	599	;# 
   367   000258                     PWMIN1PPS       equ	600	;# 
   368   000259                     SMT1WINPPS      equ	601	;# 
   369   00025A                     SMT1SIGPPS      equ	602	;# 
   370   00025B                     CWG1PPS         equ	603	;# 
   371   00025B                     CWG1INPPS       equ	603	;# 
   372   00025C                     CWG2PPS         equ	604	;# 
   373   00025C                     CWG2INPPS       equ	604	;# 
   374   00025D                     CWG3PPS         equ	605	;# 
   375   00025D                     CWG3INPPS       equ	605	;# 
   376   00025E                     MD1CARLPPS      equ	606	;# 
   377   00025E                     MDCARLPPS       equ	606	;# 
   378   00025F                     MD1CARHPPS      equ	607	;# 
   379   00025F                     MDCARHPPS       equ	607	;# 
   380   000260                     MD1SRCPPS       equ	608	;# 
   381   000260                     MDSRCPPS        equ	608	;# 
   382   000261                     CLCIN0PPS       equ	609	;# 
   383   000262                     CLCIN1PPS       equ	610	;# 
   384   000263                     CLCIN2PPS       equ	611	;# 
   385   000264                     CLCIN3PPS       equ	612	;# 
   386   000265                     CLCIN4PPS       equ	613	;# 
   387   000266                     CLCIN5PPS       equ	614	;# 
   388   000267                     CLCIN6PPS       equ	615	;# 
   389   000268                     CLCIN7PPS       equ	616	;# 
   390   000269                     ADACTPPS        equ	617	;# 
   391   00026A                     SPI1SCKPPS      equ	618	;# 
   392   00026B                     SPI1SDIPPS      equ	619	;# 
   393   00026C                     SPI1SSPPS       equ	620	;# 
   394   00026D                     SPI2SCKPPS      equ	621	;# 
   395   00026E                     SPI2SDIPPS      equ	622	;# 
   396   00026F                     SPI2SSPPS       equ	623	;# 
   397   000270                     I2C1SDAPPS      equ	624	;# 
   398   000271                     I2C1SCLPPS      equ	625	;# 
   399   000272                     U1RXPPS         equ	626	;# 
   400   000273                     U1CTSPPS        equ	627	;# 
   401   000274                     U2RXPPS         equ	628	;# 
   402   000275                     U2CTSPPS        equ	629	;# 
   403   000276                     U3RXPPS         equ	630	;# 
   404   000277                     U3CTSPPS        equ	631	;# 
   405   000278                     U4RXPPS         equ	632	;# 
   406   000279                     U4CTSPPS        equ	633	;# 
   407   00027A                     U5RXPPS         equ	634	;# 
   408   00027B                     U5CTSPPS        equ	635	;# 
   409   000286                     RC4I2C          equ	646	;# 
   410   000287                     RC3I2C          equ	647	;# 
   411   000288                     RB2I2C          equ	648	;# 
   412   000289                     RB1I2C          equ	649	;# 
   413   00028B                     I2C1RXB         equ	651	;# 
   414   00028C                     I2C1TXB         equ	652	;# 
   415   00028D                     I2C1CNT         equ	653	;# 
   416   00028E                     I2C1ADB0        equ	654	;# 
   417   00028F                     I2C1ADB1        equ	655	;# 
   418   000290                     I2C1ADR0        equ	656	;# 
   419   000291                     I2C1ADR1        equ	657	;# 
   420   000292                     I2C1ADR2        equ	658	;# 
   421   000293                     I2C1ADR3        equ	659	;# 
   422   000294                     I2C1CON0        equ	660	;# 
   423   000295                     I2C1CON1        equ	661	;# 
   424   000296                     I2C1CON2        equ	662	;# 
   425   000297                     I2C1ERR         equ	663	;# 
   426   000298                     I2C1STAT0       equ	664	;# 
   427   000299                     I2C1STAT1       equ	665	;# 
   428   00029A                     I2C1PIR         equ	666	;# 
   429   00029B                     I2C1PIE         equ	667	;# 
   430   00029C                     I2C1CLK         equ	668	;# 
   431   00029D                     I2C1BTO         equ	669	;# 
   432   0002A1                     U1RXB           equ	673	;# 
   433   0002A1                     U1RXBL          equ	673	;# 
   434   0002A2                     U1RXCHK         equ	674	;# 
   435   0002A3                     U1TXB           equ	675	;# 
   436   0002A3                     U1TXBL          equ	675	;# 
   437   0002A4                     U1TXCHK         equ	676	;# 
   438   0002A5                     U1P1            equ	677	;# 
   439   0002A5                     U1P1L           equ	677	;# 
   440   0002A6                     U1P1H           equ	678	;# 
   441   0002A7                     U1P2            equ	679	;# 
   442   0002A7                     U1P2L           equ	679	;# 
   443   0002A8                     U1P2H           equ	680	;# 
   444   0002A9                     U1P3            equ	681	;# 
   445   0002A9                     U1P3L           equ	681	;# 
   446   0002AA                     U1P3H           equ	682	;# 
   447   0002AB                     U1CON0          equ	683	;# 
   448   0002AC                     U1CON1          equ	684	;# 
   449   0002AD                     U1CON2          equ	685	;# 
   450   0002AE                     U1BRG           equ	686	;# 
   451   0002AE                     U1BRGL          equ	686	;# 
   452   0002AF                     U1BRGH          equ	687	;# 
   453   0002B0                     U1FIFO          equ	688	;# 
   454   0002B1                     U1UIR           equ	689	;# 
   455   0002B2                     U1ERRIR         equ	690	;# 
   456   0002B3                     U1ERRIE         equ	691	;# 
   457   0002B4                     U2RXB           equ	692	;# 
   458   0002B4                     U2RXBL          equ	692	;# 
   459   0002B6                     U2TXB           equ	694	;# 
   460   0002B6                     U2TXBL          equ	694	;# 
   461   0002B8                     U2P1            equ	696	;# 
   462   0002B8                     U2P1L           equ	696	;# 
   463   0002BA                     U2P2            equ	698	;# 
   464   0002BA                     U2P2L           equ	698	;# 
   465   0002BC                     U2P3            equ	700	;# 
   466   0002BC                     U2P3L           equ	700	;# 
   467   0002BE                     U2CON0          equ	702	;# 
   468   0002BF                     U2CON1          equ	703	;# 
   469   0002C0                     U2CON2          equ	704	;# 
   470   0002C1                     U2BRG           equ	705	;# 
   471   0002C1                     U2BRGL          equ	705	;# 
   472   0002C2                     U2BRGH          equ	706	;# 
   473   0002C3                     U2FIFO          equ	707	;# 
   474   0002C4                     U2UIR           equ	708	;# 
   475   0002C5                     U2ERRIR         equ	709	;# 
   476   0002C6                     U2ERRIE         equ	710	;# 
   477   0002C7                     U3RXB           equ	711	;# 
   478   0002C7                     U3RXBL          equ	711	;# 
   479   0002C9                     U3TXB           equ	713	;# 
   480   0002C9                     U3TXBL          equ	713	;# 
   481   0002CB                     U3P1            equ	715	;# 
   482   0002CB                     U3P1L           equ	715	;# 
   483   0002CD                     U3P2            equ	717	;# 
   484   0002CD                     U3P2L           equ	717	;# 
   485   0002CF                     U3P3            equ	719	;# 
   486   0002CF                     U3P3L           equ	719	;# 
   487   0002D1                     U3CON0          equ	721	;# 
   488   0002D2                     U3CON1          equ	722	;# 
   489   0002D3                     U3CON2          equ	723	;# 
   490   0002D4                     U3BRG           equ	724	;# 
   491   0002D4                     U3BRGL          equ	724	;# 
   492   0002D5                     U3BRGH          equ	725	;# 
   493   0002D6                     U3FIFO          equ	726	;# 
   494   0002D7                     U3UIR           equ	727	;# 
   495   0002D8                     U3ERRIR         equ	728	;# 
   496   0002D9                     U3ERRIE         equ	729	;# 
   497   0002DA                     U4RXB           equ	730	;# 
   498   0002DA                     U4RXBL          equ	730	;# 
   499   0002DC                     U4TXB           equ	732	;# 
   500   0002DC                     U4TXBL          equ	732	;# 
   501   0002DE                     U4P1            equ	734	;# 
   502   0002DE                     U4P1L           equ	734	;# 
   503   0002E0                     U4P2            equ	736	;# 
   504   0002E0                     U4P2L           equ	736	;# 
   505   0002E2                     U4P3            equ	738	;# 
   506   0002E2                     U4P3L           equ	738	;# 
   507   0002E4                     U4CON0          equ	740	;# 
   508   0002E5                     U4CON1          equ	741	;# 
   509   0002E6                     U4CON2          equ	742	;# 
   510   0002E7                     U4BRG           equ	743	;# 
   511   0002E7                     U4BRGL          equ	743	;# 
   512   0002E8                     U4BRGH          equ	744	;# 
   513   0002E9                     U4FIFO          equ	745	;# 
   514   0002EA                     U4UIR           equ	746	;# 
   515   0002EB                     U4ERRIR         equ	747	;# 
   516   0002EC                     U4ERRIE         equ	748	;# 
   517   0002ED                     U5RXB           equ	749	;# 
   518   0002ED                     U5RXBL          equ	749	;# 
   519   0002EF                     U5TXB           equ	751	;# 
   520   0002EF                     U5TXBL          equ	751	;# 
   521   0002F1                     U5P1            equ	753	;# 
   522   0002F1                     U5P1L           equ	753	;# 
   523   0002F3                     U5P2            equ	755	;# 
   524   0002F3                     U5P2L           equ	755	;# 
   525   0002F5                     U5P3            equ	757	;# 
   526   0002F5                     U5P3L           equ	757	;# 
   527   0002F7                     U5CON0          equ	759	;# 
   528   0002F8                     U5CON1          equ	760	;# 
   529   0002F9                     U5CON2          equ	761	;# 
   530   0002FA                     U5BRG           equ	762	;# 
   531   0002FA                     U5BRGL          equ	762	;# 
   532   0002FB                     U5BRGH          equ	763	;# 
   533   0002FC                     U5FIFO          equ	764	;# 
   534   0002FD                     U5UIR           equ	765	;# 
   535   0002FE                     U5ERRIR         equ	766	;# 
   536   0002FF                     U5ERRIE         equ	767	;# 
   537   000300                     SMT1TMR         equ	768	;# 
   538   000300                     SMT1TMRL        equ	768	;# 
   539   000301                     SMT1TMRH        equ	769	;# 
   540   000302                     SMT1TMRU        equ	770	;# 
   541   000303                     SMT1CPR         equ	771	;# 
   542   000303                     SMT1CPRL        equ	771	;# 
   543   000304                     SMT1CPRH        equ	772	;# 
   544   000305                     SMT1CPRU        equ	773	;# 
   545   000306                     SMT1CPW         equ	774	;# 
   546   000306                     SMT1CPWL        equ	774	;# 
   547   000307                     SMT1CPWH        equ	775	;# 
   548   000308                     SMT1CPWU        equ	776	;# 
   549   000309                     SMT1PR          equ	777	;# 
   550   000309                     SMT1PRL         equ	777	;# 
   551   00030A                     SMT1PRH         equ	778	;# 
   552   00030B                     SMT1PRU         equ	779	;# 
   553   00030C                     SMT1CON0        equ	780	;# 
   554   00030D                     SMT1CON1        equ	781	;# 
   555   00030E                     SMT1STAT        equ	782	;# 
   556   00030F                     SMT1CLK         equ	783	;# 
   557   000310                     SMT1SIG         equ	784	;# 
   558   000311                     SMT1WIN         equ	785	;# 
   559   000318                     TMR0L           equ	792	;# 
   560   000318                     TMR0            equ	792	;# 
   561   000319                     TMR0H           equ	793	;# 
   562   000319                     PR0             equ	793	;# 
   563   00031A                     T0CON0          equ	794	;# 
   564   00031B                     T0CON1          equ	795	;# 
   565   00031C                     TMR1            equ	796	;# 
   566   00031C                     TMR1L           equ	796	;# 
   567   00031D                     TMR1H           equ	797	;# 
   568   00031E                     T1CON           equ	798	;# 
   569   00031E                     TMR1CON         equ	798	;# 
   570   00031F                     T1GCON          equ	799	;# 
   571   00031F                     TMR1GCON        equ	799	;# 
   572   000320                     T1GATE          equ	800	;# 
   573   000320                     TMR1GATE        equ	800	;# 
   574   000321                     T1CLK           equ	801	;# 
   575   000321                     TMR1CLK         equ	801	;# 
   576   000321                     PR1             equ	801	;# 
   577   000322                     T2TMR           equ	802	;# 
   578   000322                     TMR2            equ	802	;# 
   579   000323                     T2PR            equ	803	;# 
   580   000323                     PR2             equ	803	;# 
   581   000324                     T2CON           equ	804	;# 
   582   000325                     T2HLT           equ	805	;# 
   583   000326                     T2CLKCON        equ	806	;# 
   584   000326                     T2CLK           equ	806	;# 
   585   000327                     T2RST           equ	807	;# 
   586   000328                     TMR3            equ	808	;# 
   587   000328                     TMR3L           equ	808	;# 
   588   000329                     TMR3H           equ	809	;# 
   589   00032A                     T3CON           equ	810	;# 
   590   00032A                     TMR3CON         equ	810	;# 
   591   00032B                     T3GCON          equ	811	;# 
   592   00032B                     TMR3GCON        equ	811	;# 
   593   00032C                     T3GATE          equ	812	;# 
   594   00032C                     TMR3GATE        equ	812	;# 
   595   00032D                     T3CLK           equ	813	;# 
   596   00032D                     TMR3CLK         equ	813	;# 
   597   00032D                     PR3             equ	813	;# 
   598   00032E                     T4TMR           equ	814	;# 
   599   00032E                     TMR4            equ	814	;# 
   600   00032F                     T4PR            equ	815	;# 
   601   00032F                     PR4             equ	815	;# 
   602   000330                     T4CON           equ	816	;# 
   603   000331                     T4HLT           equ	817	;# 
   604   000332                     T4CLKCON        equ	818	;# 
   605   000332                     T4CLK           equ	818	;# 
   606   000333                     T4RST           equ	819	;# 
   607   000334                     TMR5            equ	820	;# 
   608   000334                     TMR5L           equ	820	;# 
   609   000335                     TMR5H           equ	821	;# 
   610   000336                     T5CON           equ	822	;# 
   611   000336                     TMR5CON         equ	822	;# 
   612   000337                     T5GCON          equ	823	;# 
   613   000337                     TMR5GCON        equ	823	;# 
   614   000338                     T5GATE          equ	824	;# 
   615   000338                     TMR5GATE        equ	824	;# 
   616   000339                     T5CLK           equ	825	;# 
   617   000339                     TMR5CLK         equ	825	;# 
   618   000339                     PR5             equ	825	;# 
   619   00033A                     T6TMR           equ	826	;# 
   620   00033A                     TMR6            equ	826	;# 
   621   00033B                     T6PR            equ	827	;# 
   622   00033B                     PR6             equ	827	;# 
   623   00033C                     T6CON           equ	828	;# 
   624   00033D                     T6HLT           equ	829	;# 
   625   00033E                     T6CLKCON        equ	830	;# 
   626   00033E                     T6CLK           equ	830	;# 
   627   00033F                     T6RST           equ	831	;# 
   628   000340                     CCPR1           equ	832	;# 
   629   000340                     CCPR1L          equ	832	;# 
   630   000341                     CCPR1H          equ	833	;# 
   631   000342                     CCP1CON         equ	834	;# 
   632   000343                     CCP1CAP         equ	835	;# 
   633   000344                     CCPR2           equ	836	;# 
   634   000344                     CCPR2L          equ	836	;# 
   635   000345                     CCPR2H          equ	837	;# 
   636   000346                     CCP2CON         equ	838	;# 
   637   000347                     CCP2CAP         equ	839	;# 
   638   000348                     CCPR3           equ	840	;# 
   639   000348                     CCPR3L          equ	840	;# 
   640   000349                     CCPR3H          equ	841	;# 
   641   00034A                     CCP3CON         equ	842	;# 
   642   00034B                     CCP3CAP         equ	843	;# 
   643   00034C                     CCPTMRS0        equ	844	;# 
   644   00034F                     CRCDATA         equ	847	;# 
   645   00034F                     CRCDATL         equ	847	;# 
   646   000350                     CRCDATH         equ	848	;# 
   647   000351                     CRCACC          equ	849	;# 
   648   000351                     CRCACCL         equ	849	;# 
   649   000352                     CRCACCH         equ	850	;# 
   650   000353                     CRCSHFT         equ	851	;# 
   651   000353                     CRCSHIFTL       equ	851	;# 
   652   000354                     CRCSHIFTH       equ	852	;# 
   653   000355                     CRCXOR          equ	853	;# 
   654   000355                     CRCXORL         equ	853	;# 
   655   000356                     CRCXORH         equ	854	;# 
   656   000357                     CRCCON0         equ	855	;# 
   657   000358                     CRCCON1         equ	856	;# 
   658   00035A                     SCANLADR        equ	858	;# 
   659   00035A                     SCANLADRL       equ	858	;# 
   660   00035B                     SCANLADRH       equ	859	;# 
   661   00035C                     SCANLADRU       equ	860	;# 
   662   00035D                     SCANHADR        equ	861	;# 
   663   00035D                     SCANHADRL       equ	861	;# 
   664   00035E                     SCANHADRH       equ	862	;# 
   665   00035F                     SCANHADRU       equ	863	;# 
   666   000360                     SCANCON0        equ	864	;# 
   667   000361                     SCANTRIG        equ	865	;# 
   668   000362                     IPR0            equ	866	;# 
   669   000363                     IPR1            equ	867	;# 
   670   000364                     IPR2            equ	868	;# 
   671   000365                     IPR3            equ	869	;# 
   672   000366                     IPR4            equ	870	;# 
   673   000367                     IPR5            equ	871	;# 
   674   000368                     IPR6            equ	872	;# 
   675   000369                     IPR7            equ	873	;# 
   676   00036A                     IPR8            equ	874	;# 
   677   00036B                     IPR9            equ	875	;# 
   678   00036C                     IPR10           equ	876	;# 
   679   00036D                     IPR11           equ	877	;# 
   680   00036E                     IPR12           equ	878	;# 
   681   00036F                     IPR13           equ	879	;# 
   682   000370                     IPR14           equ	880	;# 
   683   000371                     IPR15           equ	881	;# 
   684   000373                     STATUS_CSHAD    equ	883	;# 
   685   000374                     WREG_CSHAD      equ	884	;# 
   686   000375                     BSR_CSHAD       equ	885	;# 
   687   000376                     SHADCON         equ	886	;# 
   688   000377                     STATUS_SHAD     equ	887	;# 
   689   000378                     WREG_SHAD       equ	888	;# 
   690   000379                     BSR_SHAD        equ	889	;# 
   691   00037A                     PCLATH_SHAD     equ	890	;# 
   692   00037B                     PCLATU_SHAD     equ	891	;# 
   693   00037C                     FSR0SH          equ	892	;# 
   694   00037C                     FSR0L_SHAD      equ	892	;# 
   695   00037D                     FSR0H_SHAD      equ	893	;# 
   696   00037E                     FSR1SH          equ	894	;# 
   697   00037E                     FSR1L_SHAD      equ	894	;# 
   698   00037F                     FSR1H_SHAD      equ	895	;# 
   699   000380                     FSR2SH          equ	896	;# 
   700   000380                     FSR2L_SHAD      equ	896	;# 
   701   000381                     FSR2H_SHAD      equ	897	;# 
   702   000382                     PRODSH          equ	898	;# 
   703   000382                     PRODL_SHAD      equ	898	;# 
   704   000383                     PRODH_SHAD      equ	899	;# 
   705   0003BC                     CWG1CLK         equ	956	;# 
   706   0003BC                     CWG1CLKCON      equ	956	;# 
   707   0003BD                     CWG1ISM         equ	957	;# 
   708   0003BD                     CWG1DAT         equ	957	;# 
   709   0003BE                     CWG1DBR         equ	958	;# 
   710   0003BF                     CWG1DBF         equ	959	;# 
   711   0003C0                     CWG1CON0        equ	960	;# 
   712   0003C1                     CWG1CON1        equ	961	;# 
   713   0003C2                     CWG1AS0         equ	962	;# 
   714   0003C3                     CWG1AS1         equ	963	;# 
   715   0003C4                     CWG1STR         equ	964	;# 
   716   0003C5                     CWG2CLK         equ	965	;# 
   717   0003C5                     CWG2CLKCON      equ	965	;# 
   718   0003C6                     CWG2ISM         equ	966	;# 
   719   0003C6                     CWG2DAT         equ	966	;# 
   720   0003C7                     CWG2DBR         equ	967	;# 
   721   0003C8                     CWG2DBF         equ	968	;# 
   722   0003C9                     CWG2CON0        equ	969	;# 
   723   0003CA                     CWG2CON1        equ	970	;# 
   724   0003CB                     CWG2AS0         equ	971	;# 
   725   0003CC                     CWG2AS1         equ	972	;# 
   726   0003CD                     CWG2STR         equ	973	;# 
   727   0003CE                     CWG3CLK         equ	974	;# 
   728   0003CE                     CWG3CLKCON      equ	974	;# 
   729   0003CF                     CWG3ISM         equ	975	;# 
   730   0003CF                     CWG3DAT         equ	975	;# 
   731   0003D0                     CWG3DBR         equ	976	;# 
   732   0003D1                     CWG3DBF         equ	977	;# 
   733   0003D2                     CWG3CON0        equ	978	;# 
   734   0003D3                     CWG3CON1        equ	979	;# 
   735   0003D4                     CWG3AS0         equ	980	;# 
   736   0003D5                     CWG3AS1         equ	981	;# 
   737   0003D6                     CWG3STR         equ	982	;# 
   738   0003D7                     FVRCON          equ	983	;# 
   739   0003D8                     ADCPCON         equ	984	;# 
   740   0003D8                     ADCP            equ	984	;# 
   741   0003D9                     ADLTH           equ	985	;# 
   742   0003D9                     ADLTHL          equ	985	;# 
   743   0003DA                     ADLTHH          equ	986	;# 
   744   0003DB                     ADUTH           equ	987	;# 
   745   0003DB                     ADUTHL          equ	987	;# 
   746   0003DC                     ADUTHH          equ	988	;# 
   747   0003DD                     ADERR           equ	989	;# 
   748   0003DD                     ADERRL          equ	989	;# 
   749   0003DE                     ADERRH          equ	990	;# 
   750   0003DF                     ADSTPT          equ	991	;# 
   751   0003DF                     ADSTPTL         equ	991	;# 
   752   0003E0                     ADSTPTH         equ	992	;# 
   753   0003E1                     ADFLTR          equ	993	;# 
   754   0003E1                     ADFLTRL         equ	993	;# 
   755   0003E2                     ADFLTRH         equ	994	;# 
   756   0003E3                     ADACC           equ	995	;# 
   757   0003E3                     ADACCL          equ	995	;# 
   758   0003E4                     ADACCH          equ	996	;# 
   759   0003E5                     ADACCU          equ	997	;# 
   760   0003E6                     ADCNT           equ	998	;# 
   761   0003E7                     ADRPT           equ	999	;# 
   762   0003E8                     ADPREV          equ	1000	;# 
   763   0003E8                     ADPREVL         equ	1000	;# 
   764   0003E9                     ADPREVH         equ	1001	;# 
   765   0003EA                     ADRES           equ	1002	;# 
   766   0003EA                     ADRESL          equ	1002	;# 
   767   0003EB                     ADRESH          equ	1003	;# 
   768   0003EC                     ADPCH           equ	1004	;# 
   769   0003EE                     ADACQ           equ	1006	;# 
   770   0003EE                     ADACQL          equ	1006	;# 
   771   0003EF                     ADACQH          equ	1007	;# 
   772   0003F0                     ADCAP           equ	1008	;# 
   773   0003F1                     ADPRE           equ	1009	;# 
   774   0003F1                     ADPREL          equ	1009	;# 
   775   0003F2                     ADPREH          equ	1010	;# 
   776   0003F3                     ADCON0          equ	1011	;# 
   777   0003F4                     ADCON1          equ	1012	;# 
   778   0003F5                     ADCON2          equ	1013	;# 
   779   0003F6                     ADCON3          equ	1014	;# 
   780   0003F7                     ADSTAT          equ	1015	;# 
   781   0003F8                     ADREF           equ	1016	;# 
   782   0003F9                     ADACT           equ	1017	;# 
   783   0003FA                     ADCLK           equ	1018	;# 
   784   000400                     ANSELA          equ	1024	;# 
   785   000401                     WPUA            equ	1025	;# 
   786   000402                     ODCONA          equ	1026	;# 
   787   000403                     SLRCONA         equ	1027	;# 
   788   000404                     INLVLA          equ	1028	;# 
   789   000405                     IOCAP           equ	1029	;# 
   790   000406                     IOCAN           equ	1030	;# 
   791   000407                     IOCAF           equ	1031	;# 
   792   000408                     ANSELB          equ	1032	;# 
   793   000409                     WPUB            equ	1033	;# 
   794   00040A                     ODCONB          equ	1034	;# 
   795   00040B                     SLRCONB         equ	1035	;# 
   796   00040C                     INLVLB          equ	1036	;# 
   797   00040D                     IOCBP           equ	1037	;# 
   798   00040E                     IOCBN           equ	1038	;# 
   799   00040F                     IOCBF           equ	1039	;# 
   800   000410                     ANSELC          equ	1040	;# 
   801   000411                     WPUC            equ	1041	;# 
   802   000412                     ODCONC          equ	1042	;# 
   803   000413                     SLRCONC         equ	1043	;# 
   804   000414                     INLVLC          equ	1044	;# 
   805   000415                     IOCCP           equ	1045	;# 
   806   000416                     IOCCN           equ	1046	;# 
   807   000417                     IOCCF           equ	1047	;# 
   808   000418                     ANSELD          equ	1048	;# 
   809   000419                     WPUD            equ	1049	;# 
   810   00041A                     ODCOND          equ	1050	;# 
   811   00041B                     SLRCOND         equ	1051	;# 
   812   00041C                     INLVLD          equ	1052	;# 
   813   000420                     ANSELE          equ	1056	;# 
   814   000421                     WPUE            equ	1057	;# 
   815   000422                     ODCONE          equ	1058	;# 
   816   000423                     SLRCONE         equ	1059	;# 
   817   000424                     INLVLE          equ	1060	;# 
   818   000425                     IOCEP           equ	1061	;# 
   819   000426                     IOCEN           equ	1062	;# 
   820   000427                     IOCEF           equ	1063	;# 
   821   000428                     ANSELF          equ	1064	;# 
   822   000429                     WPUF            equ	1065	;# 
   823   00042A                     ODCONF          equ	1066	;# 
   824   00042B                     SLRCONF         equ	1067	;# 
   825   00042C                     INLVLF          equ	1068	;# 
   826   000440                     NCO1ACC         equ	1088	;# 
   827   000440                     NCO1ACCL        equ	1088	;# 
   828   000441                     NCO1ACCH        equ	1089	;# 
   829   000442                     NCO1ACCU        equ	1090	;# 
   830   000443                     NCO1INC         equ	1091	;# 
   831   000443                     NCO1INCL        equ	1091	;# 
   832   000444                     NCO1INCH        equ	1092	;# 
   833   000445                     NCO1INCU        equ	1093	;# 
   834   000446                     NCO1CON         equ	1094	;# 
   835   000447                     NCO1CLK         equ	1095	;# 
   836   000448                     NCO2ACC         equ	1096	;# 
   837   000448                     NCO2ACCL        equ	1096	;# 
   838   000449                     NCO2ACCH        equ	1097	;# 
   839   00044A                     NCO2ACCU        equ	1098	;# 
   840   00044B                     NCO2INC         equ	1099	;# 
   841   00044B                     NCO2INCL        equ	1099	;# 
   842   00044C                     NCO2INCH        equ	1100	;# 
   843   00044D                     NCO2INCU        equ	1101	;# 
   844   00044E                     NCO2CON         equ	1102	;# 
   845   00044F                     NCO2CLK         equ	1103	;# 
   846   000450                     NCO3ACC         equ	1104	;# 
   847   000450                     NCO3ACCL        equ	1104	;# 
   848   000451                     NCO3ACCH        equ	1105	;# 
   849   000452                     NCO3ACCU        equ	1106	;# 
   850   000453                     NCO3INC         equ	1107	;# 
   851   000453                     NCO3INCL        equ	1107	;# 
   852   000454                     NCO3INCH        equ	1108	;# 
   853   000455                     NCO3INCU        equ	1109	;# 
   854   000456                     NCO3CON         equ	1110	;# 
   855   000457                     NCO3CLK         equ	1111	;# 
   856   000459                     IVTLOCK         equ	1113	;# 
   857   00045A                     IVTAD           equ	1114	;# 
   858   00045A                     IVTADL          equ	1114	;# 
   859   00045B                     IVTADH          equ	1115	;# 
   860   00045C                     IVTADU          equ	1116	;# 
   861   00045D                     IVTBASE         equ	1117	;# 
   862   00045D                     IVTBASEL        equ	1117	;# 
   863   00045E                     IVTBASEH        equ	1118	;# 
   864   00045F                     IVTBASEU        equ	1119	;# 
   865   000460                     PWM1ERS         equ	1120	;# 
   866   000461                     PWM1CLK         equ	1121	;# 
   867   000462                     PWM1LDS         equ	1122	;# 
   868   000463                     PWM1PR          equ	1123	;# 
   869   000463                     PWM1PRL         equ	1123	;# 
   870   000464                     PWM1PRH         equ	1124	;# 
   871   000465                     PWM1CPRE        equ	1125	;# 
   872   000466                     PWM1PIPOS       equ	1126	;# 
   873   000467                     PWM1GIR         equ	1127	;# 
   874   000468                     PWM1GIE         equ	1128	;# 
   875   000469                     PWM1CON         equ	1129	;# 
   876   00046A                     PWM1S1CFG       equ	1130	;# 
   877   00046B                     PWM1S1P1        equ	1131	;# 
   878   00046B                     PWM1S1P1L       equ	1131	;# 
   879   00046C                     PWM1S1P1H       equ	1132	;# 
   880   00046D                     PWM1S1P2        equ	1133	;# 
   881   00046D                     PWM1S1P2L       equ	1133	;# 
   882   00046E                     PWM1S1P2H       equ	1134	;# 
   883   00046F                     PWM2ERS         equ	1135	;# 
   884   000470                     PWM2CLK         equ	1136	;# 
   885   000471                     PWM2LDS         equ	1137	;# 
   886   000472                     PWM2PR          equ	1138	;# 
   887   000472                     PWM2PRL         equ	1138	;# 
   888   000473                     PWM2PRH         equ	1139	;# 
   889   000474                     PWM2CPRE        equ	1140	;# 
   890   000475                     PWM2PIPOS       equ	1141	;# 
   891   000476                     PWM2GIR         equ	1142	;# 
   892   000477                     PWM2GIE         equ	1143	;# 
   893   000478                     PWM2CON         equ	1144	;# 
   894   000479                     PWM2S1CFG       equ	1145	;# 
   895   00047A                     PWM2S1P1        equ	1146	;# 
   896   00047A                     PWM2S1P1L       equ	1146	;# 
   897   00047B                     PWM2S1P1H       equ	1147	;# 
   898   00047C                     PWM2S1P2        equ	1148	;# 
   899   00047C                     PWM2S1P2L       equ	1148	;# 
   900   00047D                     PWM2S1P2H       equ	1149	;# 
   901   00047E                     PWM3ERS         equ	1150	;# 
   902   00047F                     PWM3CLK         equ	1151	;# 
   903   000480                     PWM3LDS         equ	1152	;# 
   904   000481                     PWM3PR          equ	1153	;# 
   905   000481                     PWM3PRL         equ	1153	;# 
   906   000482                     PWM3PRH         equ	1154	;# 
   907   000483                     PWM3CPRE        equ	1155	;# 
   908   000484                     PWM3PIPOS       equ	1156	;# 
   909   000485                     PWM3GIR         equ	1157	;# 
   910   000486                     PWM3GIE         equ	1158	;# 
   911   000487                     PWM3CON         equ	1159	;# 
   912   000488                     PWM3S1CFG       equ	1160	;# 
   913   000489                     PWM3S1P1        equ	1161	;# 
   914   000489                     PWM3S1P1L       equ	1161	;# 
   915   00048A                     PWM3S1P1H       equ	1162	;# 
   916   00048B                     PWM3S1P2        equ	1163	;# 
   917   00048B                     PWM3S1P2L       equ	1163	;# 
   918   00048C                     PWM3S1P2H       equ	1164	;# 
   919   00049C                     PWMLOAD         equ	1180	;# 
   920   00049D                     PWMEN           equ	1181	;# 
   921   00049E                     PIE0            equ	1182	;# 
   922   00049F                     PIE1            equ	1183	;# 
   923   0004A0                     PIE2            equ	1184	;# 
   924   0004A1                     PIE3            equ	1185	;# 
   925   0004A2                     PIE4            equ	1186	;# 
   926   0004A3                     PIE5            equ	1187	;# 
   927   0004A4                     PIE6            equ	1188	;# 
   928   0004A5                     PIE7            equ	1189	;# 
   929   0004A6                     PIE8            equ	1190	;# 
   930   0004A7                     PIE9            equ	1191	;# 
   931   0004A8                     PIE10           equ	1192	;# 
   932   0004A9                     PIE11           equ	1193	;# 
   933   0004AA                     PIE12           equ	1194	;# 
   934   0004AB                     PIE13           equ	1195	;# 
   935   0004AC                     PIE14           equ	1196	;# 
   936   0004AD                     PIE15           equ	1197	;# 
   937   0004AE                     PIR0            equ	1198	;# 
   938   0004AF                     PIR1            equ	1199	;# 
   939   0004B0                     PIR2            equ	1200	;# 
   940   0004B1                     PIR3            equ	1201	;# 
   941   0004B2                     PIR4            equ	1202	;# 
   942   0004B3                     PIR5            equ	1203	;# 
   943   0004B4                     PIR6            equ	1204	;# 
   944   0004B5                     PIR7            equ	1205	;# 
   945   0004B6                     PIR8            equ	1206	;# 
   946   0004B7                     PIR9            equ	1207	;# 
   947   0004B8                     PIR10           equ	1208	;# 
   948   0004B9                     PIR11           equ	1209	;# 
   949   0004BA                     PIR12           equ	1210	;# 
   950   0004BB                     PIR13           equ	1211	;# 
   951   0004BC                     PIR14           equ	1212	;# 
   952   0004BD                     PIR15           equ	1213	;# 
   953   0004BE                     LATA            equ	1214	;# 
   954   0004BF                     LATB            equ	1215	;# 
   955   0004C0                     LATC            equ	1216	;# 
   956   0004C1                     LATD            equ	1217	;# 
   957   0004C2                     LATE            equ	1218	;# 
   958   0004C3                     LATF            equ	1219	;# 
   959   0004C6                     TRISA           equ	1222	;# 
   960   0004C7                     TRISB           equ	1223	;# 
   961   0004C8                     TRISC           equ	1224	;# 
   962   0004C9                     TRISD           equ	1225	;# 
   963   0004CA                     TRISE           equ	1226	;# 
   964   0004CB                     TRISF           equ	1227	;# 
   965   0004CE                     PORTA           equ	1230	;# 
   966   0004CF                     PORTB           equ	1231	;# 
   967   0004D0                     PORTC           equ	1232	;# 
   968   0004D1                     PORTD           equ	1233	;# 
   969   0004D2                     PORTE           equ	1234	;# 
   970   0004D3                     PORTF           equ	1235	;# 
   971   0004D6                     INTCON0         equ	1238	;# 
   972   0004D7                     INTCON1         equ	1239	;# 
   973   0004D8                     STATUS          equ	1240	;# 
   974   0004D9                     FSR2            equ	1241	;# 
   975   0004D9                     FSR2L           equ	1241	;# 
   976   0004DA                     FSR2H           equ	1242	;# 
   977   0004DB                     PLUSW2          equ	1243	;# 
   978   0004DC                     PREINC2         equ	1244	;# 
   979   0004DD                     POSTDEC2        equ	1245	;# 
   980   0004DE                     POSTINC2        equ	1246	;# 
   981   0004DF                     INDF2           equ	1247	;# 
   982   0004E0                     BSR             equ	1248	;# 
   983   0004E1                     FSR1            equ	1249	;# 
   984   0004E1                     FSR1L           equ	1249	;# 
   985   0004E2                     FSR1H           equ	1250	;# 
   986   0004E3                     PLUSW1          equ	1251	;# 
   987   0004E4                     PREINC1         equ	1252	;# 
   988   0004E5                     POSTDEC1        equ	1253	;# 
   989   0004E6                     POSTINC1        equ	1254	;# 
   990   0004E7                     INDF1           equ	1255	;# 
   991   0004E8                     WREG            equ	1256	;# 
   992   0004E9                     FSR0            equ	1257	;# 
   993   0004E9                     FSR0L           equ	1257	;# 
   994   0004EA                     FSR0H           equ	1258	;# 
   995   0004EB                     PLUSW0          equ	1259	;# 
   996   0004EC                     PREINC0         equ	1260	;# 
   997   0004ED                     POSTDEC0        equ	1261	;# 
   998   0004EE                     POSTINC0        equ	1262	;# 
   999   0004EF                     INDF0           equ	1263	;# 
  1000   0004F0                     PCON0           equ	1264	;# 
  1001   0004F1                     PCON1           equ	1265	;# 
  1002   0004F2                     CPUDOZE         equ	1266	;# 
  1003   0004F3                     PROD            equ	1267	;# 
  1004   0004F3                     PRODL           equ	1267	;# 
  1005   0004F4                     PRODH           equ	1268	;# 
  1006   0004F5                     TABLAT          equ	1269	;# 
  1007   0004F6                     TBLPTR          equ	1270	;# 
  1008   0004F6                     TBLPTRL         equ	1270	;# 
  1009   0004F7                     TBLPTRH         equ	1271	;# 
  1010   0004F8                     TBLPTRU         equ	1272	;# 
  1011   0004F9                     PCLAT           equ	1273	;# 
  1012   0004F9                     PCL             equ	1273	;# 
  1013   0004FA                     PCLATH          equ	1274	;# 
  1014   0004FB                     PCLATU          equ	1275	;# 
  1015   0004FC                     STKPTR          equ	1276	;# 
  1016   0004FD                     TOS             equ	1277	;# 
  1017   0004FD                     TOSL            equ	1277	;# 
  1018   0004FE                     TOSH            equ	1278	;# 
  1019   0004FF                     TOSU            equ	1279	;# 
  1020   000039                     CLKRCON         equ	57	;# 
  1021   00003A                     CLKRCLK         equ	58	;# 
  1022   000040                     NVMCON0         equ	64	;# 
  1023   000041                     NVMCON1         equ	65	;# 
  1024   000042                     NVMLOCK         equ	66	;# 
  1025   000043                     NVMADR          equ	67	;# 
  1026   000043                     NVMADRL         equ	67	;# 
  1027   000044                     NVMADRH         equ	68	;# 
  1028   000045                     NVMADRU         equ	69	;# 
  1029   000046                     NVMDAT          equ	70	;# 
  1030   000046                     NVMDATL         equ	70	;# 
  1031   000047                     NVMDATH         equ	71	;# 
  1032   000048                     VREGCON         equ	72	;# 
  1033   000049                     BORCON          equ	73	;# 
  1034   00004A                     HLVDCON0        equ	74	;# 
  1035   00004B                     HLVDCON1        equ	75	;# 
  1036   00004C                     ZCDCON          equ	76	;# 
  1037   000060                     PMD0            equ	96	;# 
  1038   000061                     PMD1            equ	97	;# 
  1039   000063                     PMD3            equ	99	;# 
  1040   000064                     PMD4            equ	100	;# 
  1041   000065                     PMD5            equ	101	;# 
  1042   000066                     PMD6            equ	102	;# 
  1043   000067                     PMD7            equ	103	;# 
  1044   000068                     PMD8            equ	104	;# 
  1045   00006A                     MD1CON0         equ	106	;# 
  1046   00006B                     MD1CON1         equ	107	;# 
  1047   00006C                     MD1SRC          equ	108	;# 
  1048   00006D                     MD1CARL         equ	109	;# 
  1049   00006E                     MD1CARH         equ	110	;# 
  1050   00006F                     CMOUT           equ	111	;# 
  1051   000070                     CM1CON0         equ	112	;# 
  1052   000071                     CM1CON1         equ	113	;# 
  1053   000072                     CM1NCH          equ	114	;# 
  1054   000073                     CM1PCH          equ	115	;# 
  1055   000074                     CM2CON0         equ	116	;# 
  1056   000075                     CM2CON1         equ	117	;# 
  1057   000076                     CM2NCH          equ	118	;# 
  1058   000077                     CM2PCH          equ	119	;# 
  1059   000078                     WDTCON0         equ	120	;# 
  1060   000079                     WDTCON1         equ	121	;# 
  1061   00007A                     WDTPS           equ	122	;# 
  1062   00007A                     WDTPSL          equ	122	;# 
  1063   00007B                     WDTPSH          equ	123	;# 
  1064   00007C                     WDTTMR          equ	124	;# 
  1065   00007D                     DAC1DAT         equ	125	;# 
  1066   00007D                     DAC1DATL        equ	125	;# 
  1067   00007F                     DAC1CON         equ	127	;# 
  1068   000080                     SPI1RXB         equ	128	;# 
  1069   000081                     SPI1TXB         equ	129	;# 
  1070   000082                     SPI1TCNT        equ	130	;# 
  1071   000082                     SPI1TCNTL       equ	130	;# 
  1072   000083                     SPI1TCNTH       equ	131	;# 
  1073   000084                     SPI1CON0        equ	132	;# 
  1074   000085                     SPI1CON1        equ	133	;# 
  1075   000086                     SPI1CON2        equ	134	;# 
  1076   000087                     SPI1STATUS      equ	135	;# 
  1077   000088                     SPI1TWIDTH      equ	136	;# 
  1078   000089                     SPI1BAUD        equ	137	;# 
  1079   00008A                     SPI1INTF        equ	138	;# 
  1080   00008B                     SPI1INTE        equ	139	;# 
  1081   00008C                     SPI1CLK         equ	140	;# 
  1082   00008D                     SPI2RXB         equ	141	;# 
  1083   00008E                     SPI2TXB         equ	142	;# 
  1084   00008F                     SPI2TCNT        equ	143	;# 
  1085   00008F                     SPI2TCNTL       equ	143	;# 
  1086   000090                     SPI2TCNTH       equ	144	;# 
  1087   000091                     SPI2CON0        equ	145	;# 
  1088   000092                     SPI2CON1        equ	146	;# 
  1089   000093                     SPI2CON2        equ	147	;# 
  1090   000094                     SPI2STATUS      equ	148	;# 
  1091   000095                     SPI2TWIDTH      equ	149	;# 
  1092   000096                     SPI2BAUD        equ	150	;# 
  1093   000097                     SPI2INTF        equ	151	;# 
  1094   000098                     SPI2INTE        equ	152	;# 
  1095   000099                     SPI2CLK         equ	153	;# 
  1096   0000AC                     ACTCON          equ	172	;# 
  1097   0000AD                     OSCCON1         equ	173	;# 
  1098   0000AE                     OSCCON2         equ	174	;# 
  1099   0000AF                     OSCCON3         equ	175	;# 
  1100   0000B0                     OSCTUNE         equ	176	;# 
  1101   0000B1                     OSCFRQ          equ	177	;# 
  1102   0000B1                     OSCFREQ         equ	177	;# 
  1103   0000B2                     OSCSTAT         equ	178	;# 
  1104   0000B2                     OSCSTAT1        equ	178	;# 
  1105   0000B3                     OSCEN           equ	179	;# 
  1106   0000B4                     PRLOCK          equ	180	;# 
  1107   0000B5                     SCANPR          equ	181	;# 
  1108   0000B6                     DMA1PR          equ	182	;# 
  1109   0000B7                     DMA2PR          equ	183	;# 
  1110   0000B8                     DMA3PR          equ	184	;# 
  1111   0000B9                     DMA4PR          equ	185	;# 
  1112   0000BA                     DMA5PR          equ	186	;# 
  1113   0000BB                     DMA6PR          equ	187	;# 
  1114   0000BE                     MAINPR          equ	190	;# 
  1115   0000BF                     ISRPR           equ	191	;# 
  1116   0000D4                     CLCDATA         equ	212	;# 
  1117   0000D5                     CLCSELECT       equ	213	;# 
  1118   0000D6                     CLCnCON         equ	214	;# 
  1119   0000D7                     CLCnPOL         equ	215	;# 
  1120   0000D8                     CLCnSEL0        equ	216	;# 
  1121   0000D9                     CLCnSEL1        equ	217	;# 
  1122   0000DA                     CLCnSEL2        equ	218	;# 
  1123   0000DB                     CLCnSEL3        equ	219	;# 
  1124   0000DC                     CLCnGLS0        equ	220	;# 
  1125   0000DD                     CLCnGLS1        equ	221	;# 
  1126   0000DE                     CLCnGLS2        equ	222	;# 
  1127   0000DF                     CLCnGLS3        equ	223	;# 
  1128   0000E8                     DMASELECT       equ	232	;# 
  1129   0000E9                     DMAnBUF         equ	233	;# 
  1130   0000EA                     DMAnDCNT        equ	234	;# 
  1131   0000EA                     DMAnDCNTL       equ	234	;# 
  1132   0000EB                     DMAnDCNTH       equ	235	;# 
  1133   0000EC                     DMAnDPTR        equ	236	;# 
  1134   0000EC                     DMAnDPTRL       equ	236	;# 
  1135   0000ED                     DMAnDPTRH       equ	237	;# 
  1136   0000EE                     DMAnDSZ         equ	238	;# 
  1137   0000EE                     DMAnDSZL        equ	238	;# 
  1138   0000EF                     DMAnDSZH        equ	239	;# 
  1139   0000F0                     DMAnDSA         equ	240	;# 
  1140   0000F0                     DMAnDSAL        equ	240	;# 
  1141   0000F1                     DMAnDSAH        equ	241	;# 
  1142   0000F2                     DMAnSCNT        equ	242	;# 
  1143   0000F2                     DMAnSCNTL       equ	242	;# 
  1144   0000F3                     DMAnSCNTH       equ	243	;# 
  1145   0000F4                     DMAnSPTR        equ	244	;# 
  1146   0000F4                     DMAnSPTRL       equ	244	;# 
  1147   0000F5                     DMAnSPTRH       equ	245	;# 
  1148   0000F6                     DMAnSPTRU       equ	246	;# 
  1149   0000F7                     DMAnSSZ         equ	247	;# 
  1150   0000F7                     DMAnSSZL        equ	247	;# 
  1151   0000F8                     DMAnSSZH        equ	248	;# 
  1152   0000F9                     DMAnSSA         equ	249	;# 
  1153   0000F9                     DMAnSSAL        equ	249	;# 
  1154   0000FA                     DMAnSSAH        equ	250	;# 
  1155   0000FB                     DMAnSSAU        equ	251	;# 
  1156   0000FC                     DMAnCON0        equ	252	;# 
  1157   0000FD                     DMAnCON1        equ	253	;# 
  1158   0000FE                     DMAnAIRQ        equ	254	;# 
  1159   0000FF                     DMAnSIRQ        equ	255	;# 
  1160   000200                     PPSLOCK         equ	512	;# 
  1161   000201                     RA0PPS          equ	513	;# 
  1162   000202                     RA1PPS          equ	514	;# 
  1163   000203                     RA2PPS          equ	515	;# 
  1164   000204                     RA3PPS          equ	516	;# 
  1165   000205                     RA4PPS          equ	517	;# 
  1166   000206                     RA5PPS          equ	518	;# 
  1167   000207                     RA6PPS          equ	519	;# 
  1168   000208                     RA7PPS          equ	520	;# 
  1169   000209                     RB0PPS          equ	521	;# 
  1170   00020A                     RB1PPS          equ	522	;# 
  1171   00020B                     RB2PPS          equ	523	;# 
  1172   00020C                     RB3PPS          equ	524	;# 
  1173   00020D                     RB4PPS          equ	525	;# 
  1174   00020E                     RB5PPS          equ	526	;# 
  1175   00020F                     RB6PPS          equ	527	;# 
  1176   000210                     RB7PPS          equ	528	;# 
  1177   000211                     RC0PPS          equ	529	;# 
  1178   000212                     RC1PPS          equ	530	;# 
  1179   000213                     RC2PPS          equ	531	;# 
  1180   000214                     RC3PPS          equ	532	;# 
  1181   000215                     RC4PPS          equ	533	;# 
  1182   000216                     RC5PPS          equ	534	;# 
  1183   000217                     RC6PPS          equ	535	;# 
  1184   000218                     RC7PPS          equ	536	;# 
  1185   000219                     RD0PPS          equ	537	;# 
  1186   00021A                     RD1PPS          equ	538	;# 
  1187   00021B                     RD2PPS          equ	539	;# 
  1188   00021C                     RD3PPS          equ	540	;# 
  1189   00021D                     RD4PPS          equ	541	;# 
  1190   00021E                     RD5PPS          equ	542	;# 
  1191   00021F                     RD6PPS          equ	543	;# 
  1192   000220                     RD7PPS          equ	544	;# 
  1193   000221                     RE0PPS          equ	545	;# 
  1194   000222                     RE1PPS          equ	546	;# 
  1195   000223                     RE2PPS          equ	547	;# 
  1196   000229                     RF0PPS          equ	553	;# 
  1197   00022A                     RF1PPS          equ	554	;# 
  1198   00022B                     RF2PPS          equ	555	;# 
  1199   00022C                     RF3PPS          equ	556	;# 
  1200   00022D                     RF4PPS          equ	557	;# 
  1201   00022E                     RF5PPS          equ	558	;# 
  1202   00022F                     RF6PPS          equ	559	;# 
  1203   000230                     RF7PPS          equ	560	;# 
  1204   00023E                     INT0PPS         equ	574	;# 
  1205   00023F                     INT1PPS         equ	575	;# 
  1206   000240                     INT2PPS         equ	576	;# 
  1207   000241                     T0CKIPPS        equ	577	;# 
  1208   000242                     T1CKIPPS        equ	578	;# 
  1209   000243                     T1GPPS          equ	579	;# 
  1210   000244                     T3CKIPPS        equ	580	;# 
  1211   000245                     T3GPPS          equ	581	;# 
  1212   000246                     T5CKIPPS        equ	582	;# 
  1213   000247                     T5GPPS          equ	583	;# 
  1214   000248                     T2INPPS         equ	584	;# 
  1215   000249                     T4INPPS         equ	585	;# 
  1216   00024A                     T6INPPS         equ	586	;# 
  1217   00024F                     CCP1PPS         equ	591	;# 
  1218   000250                     CCP2PPS         equ	592	;# 
  1219   000251                     CCP3PPS         equ	593	;# 
  1220   000253                     PWM1ERSPPS      equ	595	;# 
  1221   000254                     PWM2ERSPPS      equ	596	;# 
  1222   000255                     PWM3ERSPPS      equ	597	;# 
  1223   000257                     PWMIN0PPS       equ	599	;# 
  1224   000258                     PWMIN1PPS       equ	600	;# 
  1225   000259                     SMT1WINPPS      equ	601	;# 
  1226   00025A                     SMT1SIGPPS      equ	602	;# 
  1227   00025B                     CWG1PPS         equ	603	;# 
  1228   00025B                     CWG1INPPS       equ	603	;# 
  1229   00025C                     CWG2PPS         equ	604	;# 
  1230   00025C                     CWG2INPPS       equ	604	;# 
  1231   00025D                     CWG3PPS         equ	605	;# 
  1232   00025D                     CWG3INPPS       equ	605	;# 
  1233   00025E                     MD1CARLPPS      equ	606	;# 
  1234   00025E                     MDCARLPPS       equ	606	;# 
  1235   00025F                     MD1CARHPPS      equ	607	;# 
  1236   00025F                     MDCARHPPS       equ	607	;# 
  1237   000260                     MD1SRCPPS       equ	608	;# 
  1238   000260                     MDSRCPPS        equ	608	;# 
  1239   000261                     CLCIN0PPS       equ	609	;# 
  1240   000262                     CLCIN1PPS       equ	610	;# 
  1241   000263                     CLCIN2PPS       equ	611	;# 
  1242   000264                     CLCIN3PPS       equ	612	;# 
  1243   000265                     CLCIN4PPS       equ	613	;# 
  1244   000266                     CLCIN5PPS       equ	614	;# 
  1245   000267                     CLCIN6PPS       equ	615	;# 
  1246   000268                     CLCIN7PPS       equ	616	;# 
  1247   000269                     ADACTPPS        equ	617	;# 
  1248   00026A                     SPI1SCKPPS      equ	618	;# 
  1249   00026B                     SPI1SDIPPS      equ	619	;# 
  1250   00026C                     SPI1SSPPS       equ	620	;# 
  1251   00026D                     SPI2SCKPPS      equ	621	;# 
  1252   00026E                     SPI2SDIPPS      equ	622	;# 
  1253   00026F                     SPI2SSPPS       equ	623	;# 
  1254   000270                     I2C1SDAPPS      equ	624	;# 
  1255   000271                     I2C1SCLPPS      equ	625	;# 
  1256   000272                     U1RXPPS         equ	626	;# 
  1257   000273                     U1CTSPPS        equ	627	;# 
  1258   000274                     U2RXPPS         equ	628	;# 
  1259   000275                     U2CTSPPS        equ	629	;# 
  1260   000276                     U3RXPPS         equ	630	;# 
  1261   000277                     U3CTSPPS        equ	631	;# 
  1262   000278                     U4RXPPS         equ	632	;# 
  1263   000279                     U4CTSPPS        equ	633	;# 
  1264   00027A                     U5RXPPS         equ	634	;# 
  1265   00027B                     U5CTSPPS        equ	635	;# 
  1266   000286                     RC4I2C          equ	646	;# 
  1267   000287                     RC3I2C          equ	647	;# 
  1268   000288                     RB2I2C          equ	648	;# 
  1269   000289                     RB1I2C          equ	649	;# 
  1270   00028B                     I2C1RXB         equ	651	;# 
  1271   00028C                     I2C1TXB         equ	652	;# 
  1272   00028D                     I2C1CNT         equ	653	;# 
  1273   00028E                     I2C1ADB0        equ	654	;# 
  1274   00028F                     I2C1ADB1        equ	655	;# 
  1275   000290                     I2C1ADR0        equ	656	;# 
  1276   000291                     I2C1ADR1        equ	657	;# 
  1277   000292                     I2C1ADR2        equ	658	;# 
  1278   000293                     I2C1ADR3        equ	659	;# 
  1279   000294                     I2C1CON0        equ	660	;# 
  1280   000295                     I2C1CON1        equ	661	;# 
  1281   000296                     I2C1CON2        equ	662	;# 
  1282   000297                     I2C1ERR         equ	663	;# 
  1283   000298                     I2C1STAT0       equ	664	;# 
  1284   000299                     I2C1STAT1       equ	665	;# 
  1285   00029A                     I2C1PIR         equ	666	;# 
  1286   00029B                     I2C1PIE         equ	667	;# 
  1287   00029C                     I2C1CLK         equ	668	;# 
  1288   00029D                     I2C1BTO         equ	669	;# 
  1289   0002A1                     U1RXB           equ	673	;# 
  1290   0002A1                     U1RXBL          equ	673	;# 
  1291   0002A2                     U1RXCHK         equ	674	;# 
  1292   0002A3                     U1TXB           equ	675	;# 
  1293   0002A3                     U1TXBL          equ	675	;# 
  1294   0002A4                     U1TXCHK         equ	676	;# 
  1295   0002A5                     U1P1            equ	677	;# 
  1296   0002A5                     U1P1L           equ	677	;# 
  1297   0002A6                     U1P1H           equ	678	;# 
  1298   0002A7                     U1P2            equ	679	;# 
  1299   0002A7                     U1P2L           equ	679	;# 
  1300   0002A8                     U1P2H           equ	680	;# 
  1301   0002A9                     U1P3            equ	681	;# 
  1302   0002A9                     U1P3L           equ	681	;# 
  1303   0002AA                     U1P3H           equ	682	;# 
  1304   0002AB                     U1CON0          equ	683	;# 
  1305   0002AC                     U1CON1          equ	684	;# 
  1306   0002AD                     U1CON2          equ	685	;# 
  1307   0002AE                     U1BRG           equ	686	;# 
  1308   0002AE                     U1BRGL          equ	686	;# 
  1309   0002AF                     U1BRGH          equ	687	;# 
  1310   0002B0                     U1FIFO          equ	688	;# 
  1311   0002B1                     U1UIR           equ	689	;# 
  1312   0002B2                     U1ERRIR         equ	690	;# 
  1313   0002B3                     U1ERRIE         equ	691	;# 
  1314   0002B4                     U2RXB           equ	692	;# 
  1315   0002B4                     U2RXBL          equ	692	;# 
  1316   0002B6                     U2TXB           equ	694	;# 
  1317   0002B6                     U2TXBL          equ	694	;# 
  1318   0002B8                     U2P1            equ	696	;# 
  1319   0002B8                     U2P1L           equ	696	;# 
  1320   0002BA                     U2P2            equ	698	;# 
  1321   0002BA                     U2P2L           equ	698	;# 
  1322   0002BC                     U2P3            equ	700	;# 
  1323   0002BC                     U2P3L           equ	700	;# 
  1324   0002BE                     U2CON0          equ	702	;# 
  1325   0002BF                     U2CON1          equ	703	;# 
  1326   0002C0                     U2CON2          equ	704	;# 
  1327   0002C1                     U2BRG           equ	705	;# 
  1328   0002C1                     U2BRGL          equ	705	;# 
  1329   0002C2                     U2BRGH          equ	706	;# 
  1330   0002C3                     U2FIFO          equ	707	;# 
  1331   0002C4                     U2UIR           equ	708	;# 
  1332   0002C5                     U2ERRIR         equ	709	;# 
  1333   0002C6                     U2ERRIE         equ	710	;# 
  1334   0002C7                     U3RXB           equ	711	;# 
  1335   0002C7                     U3RXBL          equ	711	;# 
  1336   0002C9                     U3TXB           equ	713	;# 
  1337   0002C9                     U3TXBL          equ	713	;# 
  1338   0002CB                     U3P1            equ	715	;# 
  1339   0002CB                     U3P1L           equ	715	;# 
  1340   0002CD                     U3P2            equ	717	;# 
  1341   0002CD                     U3P2L           equ	717	;# 
  1342   0002CF                     U3P3            equ	719	;# 
  1343   0002CF                     U3P3L           equ	719	;# 
  1344   0002D1                     U3CON0          equ	721	;# 
  1345   0002D2                     U3CON1          equ	722	;# 
  1346   0002D3                     U3CON2          equ	723	;# 
  1347   0002D4                     U3BRG           equ	724	;# 
  1348   0002D4                     U3BRGL          equ	724	;# 
  1349   0002D5                     U3BRGH          equ	725	;# 
  1350   0002D6                     U3FIFO          equ	726	;# 
  1351   0002D7                     U3UIR           equ	727	;# 
  1352   0002D8                     U3ERRIR         equ	728	;# 
  1353   0002D9                     U3ERRIE         equ	729	;# 
  1354   0002DA                     U4RXB           equ	730	;# 
  1355   0002DA                     U4RXBL          equ	730	;# 
  1356   0002DC                     U4TXB           equ	732	;# 
  1357   0002DC                     U4TXBL          equ	732	;# 
  1358   0002DE                     U4P1            equ	734	;# 
  1359   0002DE                     U4P1L           equ	734	;# 
  1360   0002E0                     U4P2            equ	736	;# 
  1361   0002E0                     U4P2L           equ	736	;# 
  1362   0002E2                     U4P3            equ	738	;# 
  1363   0002E2                     U4P3L           equ	738	;# 
  1364   0002E4                     U4CON0          equ	740	;# 
  1365   0002E5                     U4CON1          equ	741	;# 
  1366   0002E6                     U4CON2          equ	742	;# 
  1367   0002E7                     U4BRG           equ	743	;# 
  1368   0002E7                     U4BRGL          equ	743	;# 
  1369   0002E8                     U4BRGH          equ	744	;# 
  1370   0002E9                     U4FIFO          equ	745	;# 
  1371   0002EA                     U4UIR           equ	746	;# 
  1372   0002EB                     U4ERRIR         equ	747	;# 
  1373   0002EC                     U4ERRIE         equ	748	;# 
  1374   0002ED                     U5RXB           equ	749	;# 
  1375   0002ED                     U5RXBL          equ	749	;# 
  1376   0002EF                     U5TXB           equ	751	;# 
  1377   0002EF                     U5TXBL          equ	751	;# 
  1378   0002F1                     U5P1            equ	753	;# 
  1379   0002F1                     U5P1L           equ	753	;# 
  1380   0002F3                     U5P2            equ	755	;# 
  1381   0002F3                     U5P2L           equ	755	;# 
  1382   0002F5                     U5P3            equ	757	;# 
  1383   0002F5                     U5P3L           equ	757	;# 
  1384   0002F7                     U5CON0          equ	759	;# 
  1385   0002F8                     U5CON1          equ	760	;# 
  1386   0002F9                     U5CON2          equ	761	;# 
  1387   0002FA                     U5BRG           equ	762	;# 
  1388   0002FA                     U5BRGL          equ	762	;# 
  1389   0002FB                     U5BRGH          equ	763	;# 
  1390   0002FC                     U5FIFO          equ	764	;# 
  1391   0002FD                     U5UIR           equ	765	;# 
  1392   0002FE                     U5ERRIR         equ	766	;# 
  1393   0002FF                     U5ERRIE         equ	767	;# 
  1394   000300                     SMT1TMR         equ	768	;# 
  1395   000300                     SMT1TMRL        equ	768	;# 
  1396   000301                     SMT1TMRH        equ	769	;# 
  1397   000302                     SMT1TMRU        equ	770	;# 
  1398   000303                     SMT1CPR         equ	771	;# 
  1399   000303                     SMT1CPRL        equ	771	;# 
  1400   000304                     SMT1CPRH        equ	772	;# 
  1401   000305                     SMT1CPRU        equ	773	;# 
  1402   000306                     SMT1CPW         equ	774	;# 
  1403   000306                     SMT1CPWL        equ	774	;# 
  1404   000307                     SMT1CPWH        equ	775	;# 
  1405   000308                     SMT1CPWU        equ	776	;# 
  1406   000309                     SMT1PR          equ	777	;# 
  1407   000309                     SMT1PRL         equ	777	;# 
  1408   00030A                     SMT1PRH         equ	778	;# 
  1409   00030B                     SMT1PRU         equ	779	;# 
  1410   00030C                     SMT1CON0        equ	780	;# 
  1411   00030D                     SMT1CON1        equ	781	;# 
  1412   00030E                     SMT1STAT        equ	782	;# 
  1413   00030F                     SMT1CLK         equ	783	;# 
  1414   000310                     SMT1SIG         equ	784	;# 
  1415   000311                     SMT1WIN         equ	785	;# 
  1416   000318                     TMR0L           equ	792	;# 
  1417   000318                     TMR0            equ	792	;# 
  1418   000319                     TMR0H           equ	793	;# 
  1419   000319                     PR0             equ	793	;# 
  1420   00031A                     T0CON0          equ	794	;# 
  1421   00031B                     T0CON1          equ	795	;# 
  1422   00031C                     TMR1            equ	796	;# 
  1423   00031C                     TMR1L           equ	796	;# 
  1424   00031D                     TMR1H           equ	797	;# 
  1425   00031E                     T1CON           equ	798	;# 
  1426   00031E                     TMR1CON         equ	798	;# 
  1427   00031F                     T1GCON          equ	799	;# 
  1428   00031F                     TMR1GCON        equ	799	;# 
  1429   000320                     T1GATE          equ	800	;# 
  1430   000320                     TMR1GATE        equ	800	;# 
  1431   000321                     T1CLK           equ	801	;# 
  1432   000321                     TMR1CLK         equ	801	;# 
  1433   000321                     PR1             equ	801	;# 
  1434   000322                     T2TMR           equ	802	;# 
  1435   000322                     TMR2            equ	802	;# 
  1436   000323                     T2PR            equ	803	;# 
  1437   000323                     PR2             equ	803	;# 
  1438   000324                     T2CON           equ	804	;# 
  1439   000325                     T2HLT           equ	805	;# 
  1440   000326                     T2CLKCON        equ	806	;# 
  1441   000326                     T2CLK           equ	806	;# 
  1442   000327                     T2RST           equ	807	;# 
  1443   000328                     TMR3            equ	808	;# 
  1444   000328                     TMR3L           equ	808	;# 
  1445   000329                     TMR3H           equ	809	;# 
  1446   00032A                     T3CON           equ	810	;# 
  1447   00032A                     TMR3CON         equ	810	;# 
  1448   00032B                     T3GCON          equ	811	;# 
  1449   00032B                     TMR3GCON        equ	811	;# 
  1450   00032C                     T3GATE          equ	812	;# 
  1451   00032C                     TMR3GATE        equ	812	;# 
  1452   00032D                     T3CLK           equ	813	;# 
  1453   00032D                     TMR3CLK         equ	813	;# 
  1454   00032D                     PR3             equ	813	;# 
  1455   00032E                     T4TMR           equ	814	;# 
  1456   00032E                     TMR4            equ	814	;# 
  1457   00032F                     T4PR            equ	815	;# 
  1458   00032F                     PR4             equ	815	;# 
  1459   000330                     T4CON           equ	816	;# 
  1460   000331                     T4HLT           equ	817	;# 
  1461   000332                     T4CLKCON        equ	818	;# 
  1462   000332                     T4CLK           equ	818	;# 
  1463   000333                     T4RST           equ	819	;# 
  1464   000334                     TMR5            equ	820	;# 
  1465   000334                     TMR5L           equ	820	;# 
  1466   000335                     TMR5H           equ	821	;# 
  1467   000336                     T5CON           equ	822	;# 
  1468   000336                     TMR5CON         equ	822	;# 
  1469   000337                     T5GCON          equ	823	;# 
  1470   000337                     TMR5GCON        equ	823	;# 
  1471   000338                     T5GATE          equ	824	;# 
  1472   000338                     TMR5GATE        equ	824	;# 
  1473   000339                     T5CLK           equ	825	;# 
  1474   000339                     TMR5CLK         equ	825	;# 
  1475   000339                     PR5             equ	825	;# 
  1476   00033A                     T6TMR           equ	826	;# 
  1477   00033A                     TMR6            equ	826	;# 
  1478   00033B                     T6PR            equ	827	;# 
  1479   00033B                     PR6             equ	827	;# 
  1480   00033C                     T6CON           equ	828	;# 
  1481   00033D                     T6HLT           equ	829	;# 
  1482   00033E                     T6CLKCON        equ	830	;# 
  1483   00033E                     T6CLK           equ	830	;# 
  1484   00033F                     T6RST           equ	831	;# 
  1485   000340                     CCPR1           equ	832	;# 
  1486   000340                     CCPR1L          equ	832	;# 
  1487   000341                     CCPR1H          equ	833	;# 
  1488   000342                     CCP1CON         equ	834	;# 
  1489   000343                     CCP1CAP         equ	835	;# 
  1490   000344                     CCPR2           equ	836	;# 
  1491   000344                     CCPR2L          equ	836	;# 
  1492   000345                     CCPR2H          equ	837	;# 
  1493   000346                     CCP2CON         equ	838	;# 
  1494   000347                     CCP2CAP         equ	839	;# 
  1495   000348                     CCPR3           equ	840	;# 
  1496   000348                     CCPR3L          equ	840	;# 
  1497   000349                     CCPR3H          equ	841	;# 
  1498   00034A                     CCP3CON         equ	842	;# 
  1499   00034B                     CCP3CAP         equ	843	;# 
  1500   00034C                     CCPTMRS0        equ	844	;# 
  1501   00034F                     CRCDATA         equ	847	;# 
  1502   00034F                     CRCDATL         equ	847	;# 
  1503   000350                     CRCDATH         equ	848	;# 
  1504   000351                     CRCACC          equ	849	;# 
  1505   000351                     CRCACCL         equ	849	;# 
  1506   000352                     CRCACCH         equ	850	;# 
  1507   000353                     CRCSHFT         equ	851	;# 
  1508   000353                     CRCSHIFTL       equ	851	;# 
  1509   000354                     CRCSHIFTH       equ	852	;# 
  1510   000355                     CRCXOR          equ	853	;# 
  1511   000355                     CRCXORL         equ	853	;# 
  1512   000356                     CRCXORH         equ	854	;# 
  1513   000357                     CRCCON0         equ	855	;# 
  1514   000358                     CRCCON1         equ	856	;# 
  1515   00035A                     SCANLADR        equ	858	;# 
  1516   00035A                     SCANLADRL       equ	858	;# 
  1517   00035B                     SCANLADRH       equ	859	;# 
  1518   00035C                     SCANLADRU       equ	860	;# 
  1519   00035D                     SCANHADR        equ	861	;# 
  1520   00035D                     SCANHADRL       equ	861	;# 
  1521   00035E                     SCANHADRH       equ	862	;# 
  1522   00035F                     SCANHADRU       equ	863	;# 
  1523   000360                     SCANCON0        equ	864	;# 
  1524   000361                     SCANTRIG        equ	865	;# 
  1525   000362                     IPR0            equ	866	;# 
  1526   000363                     IPR1            equ	867	;# 
  1527   000364                     IPR2            equ	868	;# 
  1528   000365                     IPR3            equ	869	;# 
  1529   000366                     IPR4            equ	870	;# 
  1530   000367                     IPR5            equ	871	;# 
  1531   000368                     IPR6            equ	872	;# 
  1532   000369                     IPR7            equ	873	;# 
  1533   00036A                     IPR8            equ	874	;# 
  1534   00036B                     IPR9            equ	875	;# 
  1535   00036C                     IPR10           equ	876	;# 
  1536   00036D                     IPR11           equ	877	;# 
  1537   00036E                     IPR12           equ	878	;# 
  1538   00036F                     IPR13           equ	879	;# 
  1539   000370                     IPR14           equ	880	;# 
  1540   000371                     IPR15           equ	881	;# 
  1541   000373                     STATUS_CSHAD    equ	883	;# 
  1542   000374                     WREG_CSHAD      equ	884	;# 
  1543   000375                     BSR_CSHAD       equ	885	;# 
  1544   000376                     SHADCON         equ	886	;# 
  1545   000377                     STATUS_SHAD     equ	887	;# 
  1546   000378                     WREG_SHAD       equ	888	;# 
  1547   000379                     BSR_SHAD        equ	889	;# 
  1548   00037A                     PCLATH_SHAD     equ	890	;# 
  1549   00037B                     PCLATU_SHAD     equ	891	;# 
  1550   00037C                     FSR0SH          equ	892	;# 
  1551   00037C                     FSR0L_SHAD      equ	892	;# 
  1552   00037D                     FSR0H_SHAD      equ	893	;# 
  1553   00037E                     FSR1SH          equ	894	;# 
  1554   00037E                     FSR1L_SHAD      equ	894	;# 
  1555   00037F                     FSR1H_SHAD      equ	895	;# 
  1556   000380                     FSR2SH          equ	896	;# 
  1557   000380                     FSR2L_SHAD      equ	896	;# 
  1558   000381                     FSR2H_SHAD      equ	897	;# 
  1559   000382                     PRODSH          equ	898	;# 
  1560   000382                     PRODL_SHAD      equ	898	;# 
  1561   000383                     PRODH_SHAD      equ	899	;# 
  1562   0003BC                     CWG1CLK         equ	956	;# 
  1563   0003BC                     CWG1CLKCON      equ	956	;# 
  1564   0003BD                     CWG1ISM         equ	957	;# 
  1565   0003BD                     CWG1DAT         equ	957	;# 
  1566   0003BE                     CWG1DBR         equ	958	;# 
  1567   0003BF                     CWG1DBF         equ	959	;# 
  1568   0003C0                     CWG1CON0        equ	960	;# 
  1569   0003C1                     CWG1CON1        equ	961	;# 
  1570   0003C2                     CWG1AS0         equ	962	;# 
  1571   0003C3                     CWG1AS1         equ	963	;# 
  1572   0003C4                     CWG1STR         equ	964	;# 
  1573   0003C5                     CWG2CLK         equ	965	;# 
  1574   0003C5                     CWG2CLKCON      equ	965	;# 
  1575   0003C6                     CWG2ISM         equ	966	;# 
  1576   0003C6                     CWG2DAT         equ	966	;# 
  1577   0003C7                     CWG2DBR         equ	967	;# 
  1578   0003C8                     CWG2DBF         equ	968	;# 
  1579   0003C9                     CWG2CON0        equ	969	;# 
  1580   0003CA                     CWG2CON1        equ	970	;# 
  1581   0003CB                     CWG2AS0         equ	971	;# 
  1582   0003CC                     CWG2AS1         equ	972	;# 
  1583   0003CD                     CWG2STR         equ	973	;# 
  1584   0003CE                     CWG3CLK         equ	974	;# 
  1585   0003CE                     CWG3CLKCON      equ	974	;# 
  1586   0003CF                     CWG3ISM         equ	975	;# 
  1587   0003CF                     CWG3DAT         equ	975	;# 
  1588   0003D0                     CWG3DBR         equ	976	;# 
  1589   0003D1                     CWG3DBF         equ	977	;# 
  1590   0003D2                     CWG3CON0        equ	978	;# 
  1591   0003D3                     CWG3CON1        equ	979	;# 
  1592   0003D4                     CWG3AS0         equ	980	;# 
  1593   0003D5                     CWG3AS1         equ	981	;# 
  1594   0003D6                     CWG3STR         equ	982	;# 
  1595   0003D7                     FVRCON          equ	983	;# 
  1596   0003D8                     ADCPCON         equ	984	;# 
  1597   0003D8                     ADCP            equ	984	;# 
  1598   0003D9                     ADLTH           equ	985	;# 
  1599   0003D9                     ADLTHL          equ	985	;# 
  1600   0003DA                     ADLTHH          equ	986	;# 
  1601   0003DB                     ADUTH           equ	987	;# 
  1602   0003DB                     ADUTHL          equ	987	;# 
  1603   0003DC                     ADUTHH          equ	988	;# 
  1604   0003DD                     ADERR           equ	989	;# 
  1605   0003DD                     ADERRL          equ	989	;# 
  1606   0003DE                     ADERRH          equ	990	;# 
  1607   0003DF                     ADSTPT          equ	991	;# 
  1608   0003DF                     ADSTPTL         equ	991	;# 
  1609   0003E0                     ADSTPTH         equ	992	;# 
  1610   0003E1                     ADFLTR          equ	993	;# 
  1611   0003E1                     ADFLTRL         equ	993	;# 
  1612   0003E2                     ADFLTRH         equ	994	;# 
  1613   0003E3                     ADACC           equ	995	;# 
  1614   0003E3                     ADACCL          equ	995	;# 
  1615   0003E4                     ADACCH          equ	996	;# 
  1616   0003E5                     ADACCU          equ	997	;# 
  1617   0003E6                     ADCNT           equ	998	;# 
  1618   0003E7                     ADRPT           equ	999	;# 
  1619   0003E8                     ADPREV          equ	1000	;# 
  1620   0003E8                     ADPREVL         equ	1000	;# 
  1621   0003E9                     ADPREVH         equ	1001	;# 
  1622   0003EA                     ADRES           equ	1002	;# 
  1623   0003EA                     ADRESL          equ	1002	;# 
  1624   0003EB                     ADRESH          equ	1003	;# 
  1625   0003EC                     ADPCH           equ	1004	;# 
  1626   0003EE                     ADACQ           equ	1006	;# 
  1627   0003EE                     ADACQL          equ	1006	;# 
  1628   0003EF                     ADACQH          equ	1007	;# 
  1629   0003F0                     ADCAP           equ	1008	;# 
  1630   0003F1                     ADPRE           equ	1009	;# 
  1631   0003F1                     ADPREL          equ	1009	;# 
  1632   0003F2                     ADPREH          equ	1010	;# 
  1633   0003F3                     ADCON0          equ	1011	;# 
  1634   0003F4                     ADCON1          equ	1012	;# 
  1635   0003F5                     ADCON2          equ	1013	;# 
  1636   0003F6                     ADCON3          equ	1014	;# 
  1637   0003F7                     ADSTAT          equ	1015	;# 
  1638   0003F8                     ADREF           equ	1016	;# 
  1639   0003F9                     ADACT           equ	1017	;# 
  1640   0003FA                     ADCLK           equ	1018	;# 
  1641   000400                     ANSELA          equ	1024	;# 
  1642   000401                     WPUA            equ	1025	;# 
  1643   000402                     ODCONA          equ	1026	;# 
  1644   000403                     SLRCONA         equ	1027	;# 
  1645   000404                     INLVLA          equ	1028	;# 
  1646   000405                     IOCAP           equ	1029	;# 
  1647   000406                     IOCAN           equ	1030	;# 
  1648   000407                     IOCAF           equ	1031	;# 
  1649   000408                     ANSELB          equ	1032	;# 
  1650   000409                     WPUB            equ	1033	;# 
  1651   00040A                     ODCONB          equ	1034	;# 
  1652   00040B                     SLRCONB         equ	1035	;# 
  1653   00040C                     INLVLB          equ	1036	;# 
  1654   00040D                     IOCBP           equ	1037	;# 
  1655   00040E                     IOCBN           equ	1038	;# 
  1656   00040F                     IOCBF           equ	1039	;# 
  1657   000410                     ANSELC          equ	1040	;# 
  1658   000411                     WPUC            equ	1041	;# 
  1659   000412                     ODCONC          equ	1042	;# 
  1660   000413                     SLRCONC         equ	1043	;# 
  1661   000414                     INLVLC          equ	1044	;# 
  1662   000415                     IOCCP           equ	1045	;# 
  1663   000416                     IOCCN           equ	1046	;# 
  1664   000417                     IOCCF           equ	1047	;# 
  1665   000418                     ANSELD          equ	1048	;# 
  1666   000419                     WPUD            equ	1049	;# 
  1667   00041A                     ODCOND          equ	1050	;# 
  1668   00041B                     SLRCOND         equ	1051	;# 
  1669   00041C                     INLVLD          equ	1052	;# 
  1670   000420                     ANSELE          equ	1056	;# 
  1671   000421                     WPUE            equ	1057	;# 
  1672   000422                     ODCONE          equ	1058	;# 
  1673   000423                     SLRCONE         equ	1059	;# 
  1674   000424                     INLVLE          equ	1060	;# 
  1675   000425                     IOCEP           equ	1061	;# 
  1676   000426                     IOCEN           equ	1062	;# 
  1677   000427                     IOCEF           equ	1063	;# 
  1678   000428                     ANSELF          equ	1064	;# 
  1679   000429                     WPUF            equ	1065	;# 
  1680   00042A                     ODCONF          equ	1066	;# 
  1681   00042B                     SLRCONF         equ	1067	;# 
  1682   00042C                     INLVLF          equ	1068	;# 
  1683   000440                     NCO1ACC         equ	1088	;# 
  1684   000440                     NCO1ACCL        equ	1088	;# 
  1685   000441                     NCO1ACCH        equ	1089	;# 
  1686   000442                     NCO1ACCU        equ	1090	;# 
  1687   000443                     NCO1INC         equ	1091	;# 
  1688   000443                     NCO1INCL        equ	1091	;# 
  1689   000444                     NCO1INCH        equ	1092	;# 
  1690   000445                     NCO1INCU        equ	1093	;# 
  1691   000446                     NCO1CON         equ	1094	;# 
  1692   000447                     NCO1CLK         equ	1095	;# 
  1693   000448                     NCO2ACC         equ	1096	;# 
  1694   000448                     NCO2ACCL        equ	1096	;# 
  1695   000449                     NCO2ACCH        equ	1097	;# 
  1696   00044A                     NCO2ACCU        equ	1098	;# 
  1697   00044B                     NCO2INC         equ	1099	;# 
  1698   00044B                     NCO2INCL        equ	1099	;# 
  1699   00044C                     NCO2INCH        equ	1100	;# 
  1700   00044D                     NCO2INCU        equ	1101	;# 
  1701   00044E                     NCO2CON         equ	1102	;# 
  1702   00044F                     NCO2CLK         equ	1103	;# 
  1703   000450                     NCO3ACC         equ	1104	;# 
  1704   000450                     NCO3ACCL        equ	1104	;# 
  1705   000451                     NCO3ACCH        equ	1105	;# 
  1706   000452                     NCO3ACCU        equ	1106	;# 
  1707   000453                     NCO3INC         equ	1107	;# 
  1708   000453                     NCO3INCL        equ	1107	;# 
  1709   000454                     NCO3INCH        equ	1108	;# 
  1710   000455                     NCO3INCU        equ	1109	;# 
  1711   000456                     NCO3CON         equ	1110	;# 
  1712   000457                     NCO3CLK         equ	1111	;# 
  1713   000459                     IVTLOCK         equ	1113	;# 
  1714   00045A                     IVTAD           equ	1114	;# 
  1715   00045A                     IVTADL          equ	1114	;# 
  1716   00045B                     IVTADH          equ	1115	;# 
  1717   00045C                     IVTADU          equ	1116	;# 
  1718   00045D                     IVTBASE         equ	1117	;# 
  1719   00045D                     IVTBASEL        equ	1117	;# 
  1720   00045E                     IVTBASEH        equ	1118	;# 
  1721   00045F                     IVTBASEU        equ	1119	;# 
  1722   000460                     PWM1ERS         equ	1120	;# 
  1723   000461                     PWM1CLK         equ	1121	;# 
  1724   000462                     PWM1LDS         equ	1122	;# 
  1725   000463                     PWM1PR          equ	1123	;# 
  1726   000463                     PWM1PRL         equ	1123	;# 
  1727   000464                     PWM1PRH         equ	1124	;# 
  1728   000465                     PWM1CPRE        equ	1125	;# 
  1729   000466                     PWM1PIPOS       equ	1126	;# 
  1730   000467                     PWM1GIR         equ	1127	;# 
  1731   000468                     PWM1GIE         equ	1128	;# 
  1732   000469                     PWM1CON         equ	1129	;# 
  1733   00046A                     PWM1S1CFG       equ	1130	;# 
  1734   00046B                     PWM1S1P1        equ	1131	;# 
  1735   00046B                     PWM1S1P1L       equ	1131	;# 
  1736   00046C                     PWM1S1P1H       equ	1132	;# 
  1737   00046D                     PWM1S1P2        equ	1133	;# 
  1738   00046D                     PWM1S1P2L       equ	1133	;# 
  1739   00046E                     PWM1S1P2H       equ	1134	;# 
  1740   00046F                     PWM2ERS         equ	1135	;# 
  1741   000470                     PWM2CLK         equ	1136	;# 
  1742   000471                     PWM2LDS         equ	1137	;# 
  1743   000472                     PWM2PR          equ	1138	;# 
  1744   000472                     PWM2PRL         equ	1138	;# 
  1745   000473                     PWM2PRH         equ	1139	;# 
  1746   000474                     PWM2CPRE        equ	1140	;# 
  1747   000475                     PWM2PIPOS       equ	1141	;# 
  1748   000476                     PWM2GIR         equ	1142	;# 
  1749   000477                     PWM2GIE         equ	1143	;# 
  1750   000478                     PWM2CON         equ	1144	;# 
  1751   000479                     PWM2S1CFG       equ	1145	;# 
  1752   00047A                     PWM2S1P1        equ	1146	;# 
  1753   00047A                     PWM2S1P1L       equ	1146	;# 
  1754   00047B                     PWM2S1P1H       equ	1147	;# 
  1755   00047C                     PWM2S1P2        equ	1148	;# 
  1756   00047C                     PWM2S1P2L       equ	1148	;# 
  1757   00047D                     PWM2S1P2H       equ	1149	;# 
  1758   00047E                     PWM3ERS         equ	1150	;# 
  1759   00047F                     PWM3CLK         equ	1151	;# 
  1760   000480                     PWM3LDS         equ	1152	;# 
  1761   000481                     PWM3PR          equ	1153	;# 
  1762   000481                     PWM3PRL         equ	1153	;# 
  1763   000482                     PWM3PRH         equ	1154	;# 
  1764   000483                     PWM3CPRE        equ	1155	;# 
  1765   000484                     PWM3PIPOS       equ	1156	;# 
  1766   000485                     PWM3GIR         equ	1157	;# 
  1767   000486                     PWM3GIE         equ	1158	;# 
  1768   000487                     PWM3CON         equ	1159	;# 
  1769   000488                     PWM3S1CFG       equ	1160	;# 
  1770   000489                     PWM3S1P1        equ	1161	;# 
  1771   000489                     PWM3S1P1L       equ	1161	;# 
  1772   00048A                     PWM3S1P1H       equ	1162	;# 
  1773   00048B                     PWM3S1P2        equ	1163	;# 
  1774   00048B                     PWM3S1P2L       equ	1163	;# 
  1775   00048C                     PWM3S1P2H       equ	1164	;# 
  1776   00049C                     PWMLOAD         equ	1180	;# 
  1777   00049D                     PWMEN           equ	1181	;# 
  1778   00049E                     PIE0            equ	1182	;# 
  1779   00049F                     PIE1            equ	1183	;# 
  1780   0004A0                     PIE2            equ	1184	;# 
  1781   0004A1                     PIE3            equ	1185	;# 
  1782   0004A2                     PIE4            equ	1186	;# 
  1783   0004A3                     PIE5            equ	1187	;# 
  1784   0004A4                     PIE6            equ	1188	;# 
  1785   0004A5                     PIE7            equ	1189	;# 
  1786   0004A6                     PIE8            equ	1190	;# 
  1787   0004A7                     PIE9            equ	1191	;# 
  1788   0004A8                     PIE10           equ	1192	;# 
  1789   0004A9                     PIE11           equ	1193	;# 
  1790   0004AA                     PIE12           equ	1194	;# 
  1791   0004AB                     PIE13           equ	1195	;# 
  1792   0004AC                     PIE14           equ	1196	;# 
  1793   0004AD                     PIE15           equ	1197	;# 
  1794   0004AE                     PIR0            equ	1198	;# 
  1795   0004AF                     PIR1            equ	1199	;# 
  1796   0004B0                     PIR2            equ	1200	;# 
  1797   0004B1                     PIR3            equ	1201	;# 
  1798   0004B2                     PIR4            equ	1202	;# 
  1799   0004B3                     PIR5            equ	1203	;# 
  1800   0004B4                     PIR6            equ	1204	;# 
  1801   0004B5                     PIR7            equ	1205	;# 
  1802   0004B6                     PIR8            equ	1206	;# 
  1803   0004B7                     PIR9            equ	1207	;# 
  1804   0004B8                     PIR10           equ	1208	;# 
  1805   0004B9                     PIR11           equ	1209	;# 
  1806   0004BA                     PIR12           equ	1210	;# 
  1807   0004BB                     PIR13           equ	1211	;# 
  1808   0004BC                     PIR14           equ	1212	;# 
  1809   0004BD                     PIR15           equ	1213	;# 
  1810   0004BE                     LATA            equ	1214	;# 
  1811   0004BF                     LATB            equ	1215	;# 
  1812   0004C0                     LATC            equ	1216	;# 
  1813   0004C1                     LATD            equ	1217	;# 
  1814   0004C2                     LATE            equ	1218	;# 
  1815   0004C3                     LATF            equ	1219	;# 
  1816   0004C6                     TRISA           equ	1222	;# 
  1817   0004C7                     TRISB           equ	1223	;# 
  1818   0004C8                     TRISC           equ	1224	;# 
  1819   0004C9                     TRISD           equ	1225	;# 
  1820   0004CA                     TRISE           equ	1226	;# 
  1821   0004CB                     TRISF           equ	1227	;# 
  1822   0004CE                     PORTA           equ	1230	;# 
  1823   0004CF                     PORTB           equ	1231	;# 
  1824   0004D0                     PORTC           equ	1232	;# 
  1825   0004D1                     PORTD           equ	1233	;# 
  1826   0004D2                     PORTE           equ	1234	;# 
  1827   0004D3                     PORTF           equ	1235	;# 
  1828   0004D6                     INTCON0         equ	1238	;# 
  1829   0004D7                     INTCON1         equ	1239	;# 
  1830   0004D8                     STATUS          equ	1240	;# 
  1831   0004D9                     FSR2            equ	1241	;# 
  1832   0004D9                     FSR2L           equ	1241	;# 
  1833   0004DA                     FSR2H           equ	1242	;# 
  1834   0004DB                     PLUSW2          equ	1243	;# 
  1835   0004DC                     PREINC2         equ	1244	;# 
  1836   0004DD                     POSTDEC2        equ	1245	;# 
  1837   0004DE                     POSTINC2        equ	1246	;# 
  1838   0004DF                     INDF2           equ	1247	;# 
  1839   0004E0                     BSR             equ	1248	;# 
  1840   0004E1                     FSR1            equ	1249	;# 
  1841   0004E1                     FSR1L           equ	1249	;# 
  1842   0004E2                     FSR1H           equ	1250	;# 
  1843   0004E3                     PLUSW1          equ	1251	;# 
  1844   0004E4                     PREINC1         equ	1252	;# 
  1845   0004E5                     POSTDEC1        equ	1253	;# 
  1846   0004E6                     POSTINC1        equ	1254	;# 
  1847   0004E7                     INDF1           equ	1255	;# 
  1848   0004E8                     WREG            equ	1256	;# 
  1849   0004E9                     FSR0            equ	1257	;# 
  1850   0004E9                     FSR0L           equ	1257	;# 
  1851   0004EA                     FSR0H           equ	1258	;# 
  1852   0004EB                     PLUSW0          equ	1259	;# 
  1853   0004EC                     PREINC0         equ	1260	;# 
  1854   0004ED                     POSTDEC0        equ	1261	;# 
  1855   0004EE                     POSTINC0        equ	1262	;# 
  1856   0004EF                     INDF0           equ	1263	;# 
  1857   0004F0                     PCON0           equ	1264	;# 
  1858   0004F1                     PCON1           equ	1265	;# 
  1859   0004F2                     CPUDOZE         equ	1266	;# 
  1860   0004F3                     PROD            equ	1267	;# 
  1861   0004F3                     PRODL           equ	1267	;# 
  1862   0004F4                     PRODH           equ	1268	;# 
  1863   0004F5                     TABLAT          equ	1269	;# 
  1864   0004F6                     TBLPTR          equ	1270	;# 
  1865   0004F6                     TBLPTRL         equ	1270	;# 
  1866   0004F7                     TBLPTRH         equ	1271	;# 
  1867   0004F8                     TBLPTRU         equ	1272	;# 
  1868   0004F9                     PCLAT           equ	1273	;# 
  1869   0004F9                     PCL             equ	1273	;# 
  1870   0004FA                     PCLATH          equ	1274	;# 
  1871   0004FB                     PCLATU          equ	1275	;# 
  1872   0004FC                     STKPTR          equ	1276	;# 
  1873   0004FD                     TOS             equ	1277	;# 
  1874   0004FD                     TOSL            equ	1277	;# 
  1875   0004FE                     TOSH            equ	1278	;# 
  1876   0004FF                     TOSU            equ	1279	;# 
  1877   000039                     CLKRCON         equ	57	;# 
  1878   00003A                     CLKRCLK         equ	58	;# 
  1879   000040                     NVMCON0         equ	64	;# 
  1880   000041                     NVMCON1         equ	65	;# 
  1881   000042                     NVMLOCK         equ	66	;# 
  1882   000043                     NVMADR          equ	67	;# 
  1883   000043                     NVMADRL         equ	67	;# 
  1884   000044                     NVMADRH         equ	68	;# 
  1885   000045                     NVMADRU         equ	69	;# 
  1886   000046                     NVMDAT          equ	70	;# 
  1887   000046                     NVMDATL         equ	70	;# 
  1888   000047                     NVMDATH         equ	71	;# 
  1889   000048                     VREGCON         equ	72	;# 
  1890   000049                     BORCON          equ	73	;# 
  1891   00004A                     HLVDCON0        equ	74	;# 
  1892   00004B                     HLVDCON1        equ	75	;# 
  1893   00004C                     ZCDCON          equ	76	;# 
  1894   000060                     PMD0            equ	96	;# 
  1895   000061                     PMD1            equ	97	;# 
  1896   000063                     PMD3            equ	99	;# 
  1897   000064                     PMD4            equ	100	;# 
  1898   000065                     PMD5            equ	101	;# 
  1899   000066                     PMD6            equ	102	;# 
  1900   000067                     PMD7            equ	103	;# 
  1901   000068                     PMD8            equ	104	;# 
  1902   00006A                     MD1CON0         equ	106	;# 
  1903   00006B                     MD1CON1         equ	107	;# 
  1904   00006C                     MD1SRC          equ	108	;# 
  1905   00006D                     MD1CARL         equ	109	;# 
  1906   00006E                     MD1CARH         equ	110	;# 
  1907   00006F                     CMOUT           equ	111	;# 
  1908   000070                     CM1CON0         equ	112	;# 
  1909   000071                     CM1CON1         equ	113	;# 
  1910   000072                     CM1NCH          equ	114	;# 
  1911   000073                     CM1PCH          equ	115	;# 
  1912   000074                     CM2CON0         equ	116	;# 
  1913   000075                     CM2CON1         equ	117	;# 
  1914   000076                     CM2NCH          equ	118	;# 
  1915   000077                     CM2PCH          equ	119	;# 
  1916   000078                     WDTCON0         equ	120	;# 
  1917   000079                     WDTCON1         equ	121	;# 
  1918   00007A                     WDTPS           equ	122	;# 
  1919   00007A                     WDTPSL          equ	122	;# 
  1920   00007B                     WDTPSH          equ	123	;# 
  1921   00007C                     WDTTMR          equ	124	;# 
  1922   00007D                     DAC1DAT         equ	125	;# 
  1923   00007D                     DAC1DATL        equ	125	;# 
  1924   00007F                     DAC1CON         equ	127	;# 
  1925   000080                     SPI1RXB         equ	128	;# 
  1926   000081                     SPI1TXB         equ	129	;# 
  1927   000082                     SPI1TCNT        equ	130	;# 
  1928   000082                     SPI1TCNTL       equ	130	;# 
  1929   000083                     SPI1TCNTH       equ	131	;# 
  1930   000084                     SPI1CON0        equ	132	;# 
  1931   000085                     SPI1CON1        equ	133	;# 
  1932   000086                     SPI1CON2        equ	134	;# 
  1933   000087                     SPI1STATUS      equ	135	;# 
  1934   000088                     SPI1TWIDTH      equ	136	;# 
  1935   000089                     SPI1BAUD        equ	137	;# 
  1936   00008A                     SPI1INTF        equ	138	;# 
  1937   00008B                     SPI1INTE        equ	139	;# 
  1938   00008C                     SPI1CLK         equ	140	;# 
  1939   00008D                     SPI2RXB         equ	141	;# 
  1940   00008E                     SPI2TXB         equ	142	;# 
  1941   00008F                     SPI2TCNT        equ	143	;# 
  1942   00008F                     SPI2TCNTL       equ	143	;# 
  1943   000090                     SPI2TCNTH       equ	144	;# 
  1944   000091                     SPI2CON0        equ	145	;# 
  1945   000092                     SPI2CON1        equ	146	;# 
  1946   000093                     SPI2CON2        equ	147	;# 
  1947   000094                     SPI2STATUS      equ	148	;# 
  1948   000095                     SPI2TWIDTH      equ	149	;# 
  1949   000096                     SPI2BAUD        equ	150	;# 
  1950   000097                     SPI2INTF        equ	151	;# 
  1951   000098                     SPI2INTE        equ	152	;# 
  1952   000099                     SPI2CLK         equ	153	;# 
  1953   0000AC                     ACTCON          equ	172	;# 
  1954   0000AD                     OSCCON1         equ	173	;# 
  1955   0000AE                     OSCCON2         equ	174	;# 
  1956   0000AF                     OSCCON3         equ	175	;# 
  1957   0000B0                     OSCTUNE         equ	176	;# 
  1958   0000B1                     OSCFRQ          equ	177	;# 
  1959   0000B1                     OSCFREQ         equ	177	;# 
  1960   0000B2                     OSCSTAT         equ	178	;# 
  1961   0000B2                     OSCSTAT1        equ	178	;# 
  1962   0000B3                     OSCEN           equ	179	;# 
  1963   0000B4                     PRLOCK          equ	180	;# 
  1964   0000B5                     SCANPR          equ	181	;# 
  1965   0000B6                     DMA1PR          equ	182	;# 
  1966   0000B7                     DMA2PR          equ	183	;# 
  1967   0000B8                     DMA3PR          equ	184	;# 
  1968   0000B9                     DMA4PR          equ	185	;# 
  1969   0000BA                     DMA5PR          equ	186	;# 
  1970   0000BB                     DMA6PR          equ	187	;# 
  1971   0000BE                     MAINPR          equ	190	;# 
  1972   0000BF                     ISRPR           equ	191	;# 
  1973   0000D4                     CLCDATA         equ	212	;# 
  1974   0000D5                     CLCSELECT       equ	213	;# 
  1975   0000D6                     CLCnCON         equ	214	;# 
  1976   0000D7                     CLCnPOL         equ	215	;# 
  1977   0000D8                     CLCnSEL0        equ	216	;# 
  1978   0000D9                     CLCnSEL1        equ	217	;# 
  1979   0000DA                     CLCnSEL2        equ	218	;# 
  1980   0000DB                     CLCnSEL3        equ	219	;# 
  1981   0000DC                     CLCnGLS0        equ	220	;# 
  1982   0000DD                     CLCnGLS1        equ	221	;# 
  1983   0000DE                     CLCnGLS2        equ	222	;# 
  1984   0000DF                     CLCnGLS3        equ	223	;# 
  1985   0000E8                     DMASELECT       equ	232	;# 
  1986   0000E9                     DMAnBUF         equ	233	;# 
  1987   0000EA                     DMAnDCNT        equ	234	;# 
  1988   0000EA                     DMAnDCNTL       equ	234	;# 
  1989   0000EB                     DMAnDCNTH       equ	235	;# 
  1990   0000EC                     DMAnDPTR        equ	236	;# 
  1991   0000EC                     DMAnDPTRL       equ	236	;# 
  1992   0000ED                     DMAnDPTRH       equ	237	;# 
  1993   0000EE                     DMAnDSZ         equ	238	;# 
  1994   0000EE                     DMAnDSZL        equ	238	;# 
  1995   0000EF                     DMAnDSZH        equ	239	;# 
  1996   0000F0                     DMAnDSA         equ	240	;# 
  1997   0000F0                     DMAnDSAL        equ	240	;# 
  1998   0000F1                     DMAnDSAH        equ	241	;# 
  1999   0000F2                     DMAnSCNT        equ	242	;# 
  2000   0000F2                     DMAnSCNTL       equ	242	;# 
  2001   0000F3                     DMAnSCNTH       equ	243	;# 
  2002   0000F4                     DMAnSPTR        equ	244	;# 
  2003   0000F4                     DMAnSPTRL       equ	244	;# 
  2004   0000F5                     DMAnSPTRH       equ	245	;# 
  2005   0000F6                     DMAnSPTRU       equ	246	;# 
  2006   0000F7                     DMAnSSZ         equ	247	;# 
  2007   0000F7                     DMAnSSZL        equ	247	;# 
  2008   0000F8                     DMAnSSZH        equ	248	;# 
  2009   0000F9                     DMAnSSA         equ	249	;# 
  2010   0000F9                     DMAnSSAL        equ	249	;# 
  2011   0000FA                     DMAnSSAH        equ	250	;# 
  2012   0000FB                     DMAnSSAU        equ	251	;# 
  2013   0000FC                     DMAnCON0        equ	252	;# 
  2014   0000FD                     DMAnCON1        equ	253	;# 
  2015   0000FE                     DMAnAIRQ        equ	254	;# 
  2016   0000FF                     DMAnSIRQ        equ	255	;# 
  2017   000200                     PPSLOCK         equ	512	;# 
  2018   000201                     RA0PPS          equ	513	;# 
  2019   000202                     RA1PPS          equ	514	;# 
  2020   000203                     RA2PPS          equ	515	;# 
  2021   000204                     RA3PPS          equ	516	;# 
  2022   000205                     RA4PPS          equ	517	;# 
  2023   000206                     RA5PPS          equ	518	;# 
  2024   000207                     RA6PPS          equ	519	;# 
  2025   000208                     RA7PPS          equ	520	;# 
  2026   000209                     RB0PPS          equ	521	;# 
  2027   00020A                     RB1PPS          equ	522	;# 
  2028   00020B                     RB2PPS          equ	523	;# 
  2029   00020C                     RB3PPS          equ	524	;# 
  2030   00020D                     RB4PPS          equ	525	;# 
  2031   00020E                     RB5PPS          equ	526	;# 
  2032   00020F                     RB6PPS          equ	527	;# 
  2033   000210                     RB7PPS          equ	528	;# 
  2034   000211                     RC0PPS          equ	529	;# 
  2035   000212                     RC1PPS          equ	530	;# 
  2036   000213                     RC2PPS          equ	531	;# 
  2037   000214                     RC3PPS          equ	532	;# 
  2038   000215                     RC4PPS          equ	533	;# 
  2039   000216                     RC5PPS          equ	534	;# 
  2040   000217                     RC6PPS          equ	535	;# 
  2041   000218                     RC7PPS          equ	536	;# 
  2042   000219                     RD0PPS          equ	537	;# 
  2043   00021A                     RD1PPS          equ	538	;# 
  2044   00021B                     RD2PPS          equ	539	;# 
  2045   00021C                     RD3PPS          equ	540	;# 
  2046   00021D                     RD4PPS          equ	541	;# 
  2047   00021E                     RD5PPS          equ	542	;# 
  2048   00021F                     RD6PPS          equ	543	;# 
  2049   000220                     RD7PPS          equ	544	;# 
  2050   000221                     RE0PPS          equ	545	;# 
  2051   000222                     RE1PPS          equ	546	;# 
  2052   000223                     RE2PPS          equ	547	;# 
  2053   000229                     RF0PPS          equ	553	;# 
  2054   00022A                     RF1PPS          equ	554	;# 
  2055   00022B                     RF2PPS          equ	555	;# 
  2056   00022C                     RF3PPS          equ	556	;# 
  2057   00022D                     RF4PPS          equ	557	;# 
  2058   00022E                     RF5PPS          equ	558	;# 
  2059   00022F                     RF6PPS          equ	559	;# 
  2060   000230                     RF7PPS          equ	560	;# 
  2061   00023E                     INT0PPS         equ	574	;# 
  2062   00023F                     INT1PPS         equ	575	;# 
  2063   000240                     INT2PPS         equ	576	;# 
  2064   000241                     T0CKIPPS        equ	577	;# 
  2065   000242                     T1CKIPPS        equ	578	;# 
  2066   000243                     T1GPPS          equ	579	;# 
  2067   000244                     T3CKIPPS        equ	580	;# 
  2068   000245                     T3GPPS          equ	581	;# 
  2069   000246                     T5CKIPPS        equ	582	;# 
  2070   000247                     T5GPPS          equ	583	;# 
  2071   000248                     T2INPPS         equ	584	;# 
  2072   000249                     T4INPPS         equ	585	;# 
  2073   00024A                     T6INPPS         equ	586	;# 
  2074   00024F                     CCP1PPS         equ	591	;# 
  2075   000250                     CCP2PPS         equ	592	;# 
  2076   000251                     CCP3PPS         equ	593	;# 
  2077   000253                     PWM1ERSPPS      equ	595	;# 
  2078   000254                     PWM2ERSPPS      equ	596	;# 
  2079   000255                     PWM3ERSPPS      equ	597	;# 
  2080   000257                     PWMIN0PPS       equ	599	;# 
  2081   000258                     PWMIN1PPS       equ	600	;# 
  2082   000259                     SMT1WINPPS      equ	601	;# 
  2083   00025A                     SMT1SIGPPS      equ	602	;# 
  2084   00025B                     CWG1PPS         equ	603	;# 
  2085   00025B                     CWG1INPPS       equ	603	;# 
  2086   00025C                     CWG2PPS         equ	604	;# 
  2087   00025C                     CWG2INPPS       equ	604	;# 
  2088   00025D                     CWG3PPS         equ	605	;# 
  2089   00025D                     CWG3INPPS       equ	605	;# 
  2090   00025E                     MD1CARLPPS      equ	606	;# 
  2091   00025E                     MDCARLPPS       equ	606	;# 
  2092   00025F                     MD1CARHPPS      equ	607	;# 
  2093   00025F                     MDCARHPPS       equ	607	;# 
  2094   000260                     MD1SRCPPS       equ	608	;# 
  2095   000260                     MDSRCPPS        equ	608	;# 
  2096   000261                     CLCIN0PPS       equ	609	;# 
  2097   000262                     CLCIN1PPS       equ	610	;# 
  2098   000263                     CLCIN2PPS       equ	611	;# 
  2099   000264                     CLCIN3PPS       equ	612	;# 
  2100   000265                     CLCIN4PPS       equ	613	;# 
  2101   000266                     CLCIN5PPS       equ	614	;# 
  2102   000267                     CLCIN6PPS       equ	615	;# 
  2103   000268                     CLCIN7PPS       equ	616	;# 
  2104   000269                     ADACTPPS        equ	617	;# 
  2105   00026A                     SPI1SCKPPS      equ	618	;# 
  2106   00026B                     SPI1SDIPPS      equ	619	;# 
  2107   00026C                     SPI1SSPPS       equ	620	;# 
  2108   00026D                     SPI2SCKPPS      equ	621	;# 
  2109   00026E                     SPI2SDIPPS      equ	622	;# 
  2110   00026F                     SPI2SSPPS       equ	623	;# 
  2111   000270                     I2C1SDAPPS      equ	624	;# 
  2112   000271                     I2C1SCLPPS      equ	625	;# 
  2113   000272                     U1RXPPS         equ	626	;# 
  2114   000273                     U1CTSPPS        equ	627	;# 
  2115   000274                     U2RXPPS         equ	628	;# 
  2116   000275                     U2CTSPPS        equ	629	;# 
  2117   000276                     U3RXPPS         equ	630	;# 
  2118   000277                     U3CTSPPS        equ	631	;# 
  2119   000278                     U4RXPPS         equ	632	;# 
  2120   000279                     U4CTSPPS        equ	633	;# 
  2121   00027A                     U5RXPPS         equ	634	;# 
  2122   00027B                     U5CTSPPS        equ	635	;# 
  2123   000286                     RC4I2C          equ	646	;# 
  2124   000287                     RC3I2C          equ	647	;# 
  2125   000288                     RB2I2C          equ	648	;# 
  2126   000289                     RB1I2C          equ	649	;# 
  2127   00028B                     I2C1RXB         equ	651	;# 
  2128   00028C                     I2C1TXB         equ	652	;# 
  2129   00028D                     I2C1CNT         equ	653	;# 
  2130   00028E                     I2C1ADB0        equ	654	;# 
  2131   00028F                     I2C1ADB1        equ	655	;# 
  2132   000290                     I2C1ADR0        equ	656	;# 
  2133   000291                     I2C1ADR1        equ	657	;# 
  2134   000292                     I2C1ADR2        equ	658	;# 
  2135   000293                     I2C1ADR3        equ	659	;# 
  2136   000294                     I2C1CON0        equ	660	;# 
  2137   000295                     I2C1CON1        equ	661	;# 
  2138   000296                     I2C1CON2        equ	662	;# 
  2139   000297                     I2C1ERR         equ	663	;# 
  2140   000298                     I2C1STAT0       equ	664	;# 
  2141   000299                     I2C1STAT1       equ	665	;# 
  2142   00029A                     I2C1PIR         equ	666	;# 
  2143   00029B                     I2C1PIE         equ	667	;# 
  2144   00029C                     I2C1CLK         equ	668	;# 
  2145   00029D                     I2C1BTO         equ	669	;# 
  2146   0002A1                     U1RXB           equ	673	;# 
  2147   0002A1                     U1RXBL          equ	673	;# 
  2148   0002A2                     U1RXCHK         equ	674	;# 
  2149   0002A3                     U1TXB           equ	675	;# 
  2150   0002A3                     U1TXBL          equ	675	;# 
  2151   0002A4                     U1TXCHK         equ	676	;# 
  2152   0002A5                     U1P1            equ	677	;# 
  2153   0002A5                     U1P1L           equ	677	;# 
  2154   0002A6                     U1P1H           equ	678	;# 
  2155   0002A7                     U1P2            equ	679	;# 
  2156   0002A7                     U1P2L           equ	679	;# 
  2157   0002A8                     U1P2H           equ	680	;# 
  2158   0002A9                     U1P3            equ	681	;# 
  2159   0002A9                     U1P3L           equ	681	;# 
  2160   0002AA                     U1P3H           equ	682	;# 
  2161   0002AB                     U1CON0          equ	683	;# 
  2162   0002AC                     U1CON1          equ	684	;# 
  2163   0002AD                     U1CON2          equ	685	;# 
  2164   0002AE                     U1BRG           equ	686	;# 
  2165   0002AE                     U1BRGL          equ	686	;# 
  2166   0002AF                     U1BRGH          equ	687	;# 
  2167   0002B0                     U1FIFO          equ	688	;# 
  2168   0002B1                     U1UIR           equ	689	;# 
  2169   0002B2                     U1ERRIR         equ	690	;# 
  2170   0002B3                     U1ERRIE         equ	691	;# 
  2171   0002B4                     U2RXB           equ	692	;# 
  2172   0002B4                     U2RXBL          equ	692	;# 
  2173   0002B6                     U2TXB           equ	694	;# 
  2174   0002B6                     U2TXBL          equ	694	;# 
  2175   0002B8                     U2P1            equ	696	;# 
  2176   0002B8                     U2P1L           equ	696	;# 
  2177   0002BA                     U2P2            equ	698	;# 
  2178   0002BA                     U2P2L           equ	698	;# 
  2179   0002BC                     U2P3            equ	700	;# 
  2180   0002BC                     U2P3L           equ	700	;# 
  2181   0002BE                     U2CON0          equ	702	;# 
  2182   0002BF                     U2CON1          equ	703	;# 
  2183   0002C0                     U2CON2          equ	704	;# 
  2184   0002C1                     U2BRG           equ	705	;# 
  2185   0002C1                     U2BRGL          equ	705	;# 
  2186   0002C2                     U2BRGH          equ	706	;# 
  2187   0002C3                     U2FIFO          equ	707	;# 
  2188   0002C4                     U2UIR           equ	708	;# 
  2189   0002C5                     U2ERRIR         equ	709	;# 
  2190   0002C6                     U2ERRIE         equ	710	;# 
  2191   0002C7                     U3RXB           equ	711	;# 
  2192   0002C7                     U3RXBL          equ	711	;# 
  2193   0002C9                     U3TXB           equ	713	;# 
  2194   0002C9                     U3TXBL          equ	713	;# 
  2195   0002CB                     U3P1            equ	715	;# 
  2196   0002CB                     U3P1L           equ	715	;# 
  2197   0002CD                     U3P2            equ	717	;# 
  2198   0002CD                     U3P2L           equ	717	;# 
  2199   0002CF                     U3P3            equ	719	;# 
  2200   0002CF                     U3P3L           equ	719	;# 
  2201   0002D1                     U3CON0          equ	721	;# 
  2202   0002D2                     U3CON1          equ	722	;# 
  2203   0002D3                     U3CON2          equ	723	;# 
  2204   0002D4                     U3BRG           equ	724	;# 
  2205   0002D4                     U3BRGL          equ	724	;# 
  2206   0002D5                     U3BRGH          equ	725	;# 
  2207   0002D6                     U3FIFO          equ	726	;# 
  2208   0002D7                     U3UIR           equ	727	;# 
  2209   0002D8                     U3ERRIR         equ	728	;# 
  2210   0002D9                     U3ERRIE         equ	729	;# 
  2211   0002DA                     U4RXB           equ	730	;# 
  2212   0002DA                     U4RXBL          equ	730	;# 
  2213   0002DC                     U4TXB           equ	732	;# 
  2214   0002DC                     U4TXBL          equ	732	;# 
  2215   0002DE                     U4P1            equ	734	;# 
  2216   0002DE                     U4P1L           equ	734	;# 
  2217   0002E0                     U4P2            equ	736	;# 
  2218   0002E0                     U4P2L           equ	736	;# 
  2219   0002E2                     U4P3            equ	738	;# 
  2220   0002E2                     U4P3L           equ	738	;# 
  2221   0002E4                     U4CON0          equ	740	;# 
  2222   0002E5                     U4CON1          equ	741	;# 
  2223   0002E6                     U4CON2          equ	742	;# 
  2224   0002E7                     U4BRG           equ	743	;# 
  2225   0002E7                     U4BRGL          equ	743	;# 
  2226   0002E8                     U4BRGH          equ	744	;# 
  2227   0002E9                     U4FIFO          equ	745	;# 
  2228   0002EA                     U4UIR           equ	746	;# 
  2229   0002EB                     U4ERRIR         equ	747	;# 
  2230   0002EC                     U4ERRIE         equ	748	;# 
  2231   0002ED                     U5RXB           equ	749	;# 
  2232   0002ED                     U5RXBL          equ	749	;# 
  2233   0002EF                     U5TXB           equ	751	;# 
  2234   0002EF                     U5TXBL          equ	751	;# 
  2235   0002F1                     U5P1            equ	753	;# 
  2236   0002F1                     U5P1L           equ	753	;# 
  2237   0002F3                     U5P2            equ	755	;# 
  2238   0002F3                     U5P2L           equ	755	;# 
  2239   0002F5                     U5P3            equ	757	;# 
  2240   0002F5                     U5P3L           equ	757	;# 
  2241   0002F7                     U5CON0          equ	759	;# 
  2242   0002F8                     U5CON1          equ	760	;# 
  2243   0002F9                     U5CON2          equ	761	;# 
  2244   0002FA                     U5BRG           equ	762	;# 
  2245   0002FA                     U5BRGL          equ	762	;# 
  2246   0002FB                     U5BRGH          equ	763	;# 
  2247   0002FC                     U5FIFO          equ	764	;# 
  2248   0002FD                     U5UIR           equ	765	;# 
  2249   0002FE                     U5ERRIR         equ	766	;# 
  2250   0002FF                     U5ERRIE         equ	767	;# 
  2251   000300                     SMT1TMR         equ	768	;# 
  2252   000300                     SMT1TMRL        equ	768	;# 
  2253   000301                     SMT1TMRH        equ	769	;# 
  2254   000302                     SMT1TMRU        equ	770	;# 
  2255   000303                     SMT1CPR         equ	771	;# 
  2256   000303                     SMT1CPRL        equ	771	;# 
  2257   000304                     SMT1CPRH        equ	772	;# 
  2258   000305                     SMT1CPRU        equ	773	;# 
  2259   000306                     SMT1CPW         equ	774	;# 
  2260   000306                     SMT1CPWL        equ	774	;# 
  2261   000307                     SMT1CPWH        equ	775	;# 
  2262   000308                     SMT1CPWU        equ	776	;# 
  2263   000309                     SMT1PR          equ	777	;# 
  2264   000309                     SMT1PRL         equ	777	;# 
  2265   00030A                     SMT1PRH         equ	778	;# 
  2266   00030B                     SMT1PRU         equ	779	;# 
  2267   00030C                     SMT1CON0        equ	780	;# 
  2268   00030D                     SMT1CON1        equ	781	;# 
  2269   00030E                     SMT1STAT        equ	782	;# 
  2270   00030F                     SMT1CLK         equ	783	;# 
  2271   000310                     SMT1SIG         equ	784	;# 
  2272   000311                     SMT1WIN         equ	785	;# 
  2273   000318                     TMR0L           equ	792	;# 
  2274   000318                     TMR0            equ	792	;# 
  2275   000319                     TMR0H           equ	793	;# 
  2276   000319                     PR0             equ	793	;# 
  2277   00031A                     T0CON0          equ	794	;# 
  2278   00031B                     T0CON1          equ	795	;# 
  2279   00031C                     TMR1            equ	796	;# 
  2280   00031C                     TMR1L           equ	796	;# 
  2281   00031D                     TMR1H           equ	797	;# 
  2282   00031E                     T1CON           equ	798	;# 
  2283   00031E                     TMR1CON         equ	798	;# 
  2284   00031F                     T1GCON          equ	799	;# 
  2285   00031F                     TMR1GCON        equ	799	;# 
  2286   000320                     T1GATE          equ	800	;# 
  2287   000320                     TMR1GATE        equ	800	;# 
  2288   000321                     T1CLK           equ	801	;# 
  2289   000321                     TMR1CLK         equ	801	;# 
  2290   000321                     PR1             equ	801	;# 
  2291   000322                     T2TMR           equ	802	;# 
  2292   000322                     TMR2            equ	802	;# 
  2293   000323                     T2PR            equ	803	;# 
  2294   000323                     PR2             equ	803	;# 
  2295   000324                     T2CON           equ	804	;# 
  2296   000325                     T2HLT           equ	805	;# 
  2297   000326                     T2CLKCON        equ	806	;# 
  2298   000326                     T2CLK           equ	806	;# 
  2299   000327                     T2RST           equ	807	;# 
  2300   000328                     TMR3            equ	808	;# 
  2301   000328                     TMR3L           equ	808	;# 
  2302   000329                     TMR3H           equ	809	;# 
  2303   00032A                     T3CON           equ	810	;# 
  2304   00032A                     TMR3CON         equ	810	;# 
  2305   00032B                     T3GCON          equ	811	;# 
  2306   00032B                     TMR3GCON        equ	811	;# 
  2307   00032C                     T3GATE          equ	812	;# 
  2308   00032C                     TMR3GATE        equ	812	;# 
  2309   00032D                     T3CLK           equ	813	;# 
  2310   00032D                     TMR3CLK         equ	813	;# 
  2311   00032D                     PR3             equ	813	;# 
  2312   00032E                     T4TMR           equ	814	;# 
  2313   00032E                     TMR4            equ	814	;# 
  2314   00032F                     T4PR            equ	815	;# 
  2315   00032F                     PR4             equ	815	;# 
  2316   000330                     T4CON           equ	816	;# 
  2317   000331                     T4HLT           equ	817	;# 
  2318   000332                     T4CLKCON        equ	818	;# 
  2319   000332                     T4CLK           equ	818	;# 
  2320   000333                     T4RST           equ	819	;# 
  2321   000334                     TMR5            equ	820	;# 
  2322   000334                     TMR5L           equ	820	;# 
  2323   000335                     TMR5H           equ	821	;# 
  2324   000336                     T5CON           equ	822	;# 
  2325   000336                     TMR5CON         equ	822	;# 
  2326   000337                     T5GCON          equ	823	;# 
  2327   000337                     TMR5GCON        equ	823	;# 
  2328   000338                     T5GATE          equ	824	;# 
  2329   000338                     TMR5GATE        equ	824	;# 
  2330   000339                     T5CLK           equ	825	;# 
  2331   000339                     TMR5CLK         equ	825	;# 
  2332   000339                     PR5             equ	825	;# 
  2333   00033A                     T6TMR           equ	826	;# 
  2334   00033A                     TMR6            equ	826	;# 
  2335   00033B                     T6PR            equ	827	;# 
  2336   00033B                     PR6             equ	827	;# 
  2337   00033C                     T6CON           equ	828	;# 
  2338   00033D                     T6HLT           equ	829	;# 
  2339   00033E                     T6CLKCON        equ	830	;# 
  2340   00033E                     T6CLK           equ	830	;# 
  2341   00033F                     T6RST           equ	831	;# 
  2342   000340                     CCPR1           equ	832	;# 
  2343   000340                     CCPR1L          equ	832	;# 
  2344   000341                     CCPR1H          equ	833	;# 
  2345   000342                     CCP1CON         equ	834	;# 
  2346   000343                     CCP1CAP         equ	835	;# 
  2347   000344                     CCPR2           equ	836	;# 
  2348   000344                     CCPR2L          equ	836	;# 
  2349   000345                     CCPR2H          equ	837	;# 
  2350   000346                     CCP2CON         equ	838	;# 
  2351   000347                     CCP2CAP         equ	839	;# 
  2352   000348                     CCPR3           equ	840	;# 
  2353   000348                     CCPR3L          equ	840	;# 
  2354   000349                     CCPR3H          equ	841	;# 
  2355   00034A                     CCP3CON         equ	842	;# 
  2356   00034B                     CCP3CAP         equ	843	;# 
  2357   00034C                     CCPTMRS0        equ	844	;# 
  2358   00034F                     CRCDATA         equ	847	;# 
  2359   00034F                     CRCDATL         equ	847	;# 
  2360   000350                     CRCDATH         equ	848	;# 
  2361   000351                     CRCACC          equ	849	;# 
  2362   000351                     CRCACCL         equ	849	;# 
  2363   000352                     CRCACCH         equ	850	;# 
  2364   000353                     CRCSHFT         equ	851	;# 
  2365   000353                     CRCSHIFTL       equ	851	;# 
  2366   000354                     CRCSHIFTH       equ	852	;# 
  2367   000355                     CRCXOR          equ	853	;# 
  2368   000355                     CRCXORL         equ	853	;# 
  2369   000356                     CRCXORH         equ	854	;# 
  2370   000357                     CRCCON0         equ	855	;# 
  2371   000358                     CRCCON1         equ	856	;# 
  2372   00035A                     SCANLADR        equ	858	;# 
  2373   00035A                     SCANLADRL       equ	858	;# 
  2374   00035B                     SCANLADRH       equ	859	;# 
  2375   00035C                     SCANLADRU       equ	860	;# 
  2376   00035D                     SCANHADR        equ	861	;# 
  2377   00035D                     SCANHADRL       equ	861	;# 
  2378   00035E                     SCANHADRH       equ	862	;# 
  2379   00035F                     SCANHADRU       equ	863	;# 
  2380   000360                     SCANCON0        equ	864	;# 
  2381   000361                     SCANTRIG        equ	865	;# 
  2382   000362                     IPR0            equ	866	;# 
  2383   000363                     IPR1            equ	867	;# 
  2384   000364                     IPR2            equ	868	;# 
  2385   000365                     IPR3            equ	869	;# 
  2386   000366                     IPR4            equ	870	;# 
  2387   000367                     IPR5            equ	871	;# 
  2388   000368                     IPR6            equ	872	;# 
  2389   000369                     IPR7            equ	873	;# 
  2390   00036A                     IPR8            equ	874	;# 
  2391   00036B                     IPR9            equ	875	;# 
  2392   00036C                     IPR10           equ	876	;# 
  2393   00036D                     IPR11           equ	877	;# 
  2394   00036E                     IPR12           equ	878	;# 
  2395   00036F                     IPR13           equ	879	;# 
  2396   000370                     IPR14           equ	880	;# 
  2397   000371                     IPR15           equ	881	;# 
  2398   000373                     STATUS_CSHAD    equ	883	;# 
  2399   000374                     WREG_CSHAD      equ	884	;# 
  2400   000375                     BSR_CSHAD       equ	885	;# 
  2401   000376                     SHADCON         equ	886	;# 
  2402   000377                     STATUS_SHAD     equ	887	;# 
  2403   000378                     WREG_SHAD       equ	888	;# 
  2404   000379                     BSR_SHAD        equ	889	;# 
  2405   00037A                     PCLATH_SHAD     equ	890	;# 
  2406   00037B                     PCLATU_SHAD     equ	891	;# 
  2407   00037C                     FSR0SH          equ	892	;# 
  2408   00037C                     FSR0L_SHAD      equ	892	;# 
  2409   00037D                     FSR0H_SHAD      equ	893	;# 
  2410   00037E                     FSR1SH          equ	894	;# 
  2411   00037E                     FSR1L_SHAD      equ	894	;# 
  2412   00037F                     FSR1H_SHAD      equ	895	;# 
  2413   000380                     FSR2SH          equ	896	;# 
  2414   000380                     FSR2L_SHAD      equ	896	;# 
  2415   000381                     FSR2H_SHAD      equ	897	;# 
  2416   000382                     PRODSH          equ	898	;# 
  2417   000382                     PRODL_SHAD      equ	898	;# 
  2418   000383                     PRODH_SHAD      equ	899	;# 
  2419   0003BC                     CWG1CLK         equ	956	;# 
  2420   0003BC                     CWG1CLKCON      equ	956	;# 
  2421   0003BD                     CWG1ISM         equ	957	;# 
  2422   0003BD                     CWG1DAT         equ	957	;# 
  2423   0003BE                     CWG1DBR         equ	958	;# 
  2424   0003BF                     CWG1DBF         equ	959	;# 
  2425   0003C0                     CWG1CON0        equ	960	;# 
  2426   0003C1                     CWG1CON1        equ	961	;# 
  2427   0003C2                     CWG1AS0         equ	962	;# 
  2428   0003C3                     CWG1AS1         equ	963	;# 
  2429   0003C4                     CWG1STR         equ	964	;# 
  2430   0003C5                     CWG2CLK         equ	965	;# 
  2431   0003C5                     CWG2CLKCON      equ	965	;# 
  2432   0003C6                     CWG2ISM         equ	966	;# 
  2433   0003C6                     CWG2DAT         equ	966	;# 
  2434   0003C7                     CWG2DBR         equ	967	;# 
  2435   0003C8                     CWG2DBF         equ	968	;# 
  2436   0003C9                     CWG2CON0        equ	969	;# 
  2437   0003CA                     CWG2CON1        equ	970	;# 
  2438   0003CB                     CWG2AS0         equ	971	;# 
  2439   0003CC                     CWG2AS1         equ	972	;# 
  2440   0003CD                     CWG2STR         equ	973	;# 
  2441   0003CE                     CWG3CLK         equ	974	;# 
  2442   0003CE                     CWG3CLKCON      equ	974	;# 
  2443   0003CF                     CWG3ISM         equ	975	;# 
  2444   0003CF                     CWG3DAT         equ	975	;# 
  2445   0003D0                     CWG3DBR         equ	976	;# 
  2446   0003D1                     CWG3DBF         equ	977	;# 
  2447   0003D2                     CWG3CON0        equ	978	;# 
  2448   0003D3                     CWG3CON1        equ	979	;# 
  2449   0003D4                     CWG3AS0         equ	980	;# 
  2450   0003D5                     CWG3AS1         equ	981	;# 
  2451   0003D6                     CWG3STR         equ	982	;# 
  2452   0003D7                     FVRCON          equ	983	;# 
  2453   0003D8                     ADCPCON         equ	984	;# 
  2454   0003D8                     ADCP            equ	984	;# 
  2455   0003D9                     ADLTH           equ	985	;# 
  2456   0003D9                     ADLTHL          equ	985	;# 
  2457   0003DA                     ADLTHH          equ	986	;# 
  2458   0003DB                     ADUTH           equ	987	;# 
  2459   0003DB                     ADUTHL          equ	987	;# 
  2460   0003DC                     ADUTHH          equ	988	;# 
  2461   0003DD                     ADERR           equ	989	;# 
  2462   0003DD                     ADERRL          equ	989	;# 
  2463   0003DE                     ADERRH          equ	990	;# 
  2464   0003DF                     ADSTPT          equ	991	;# 
  2465   0003DF                     ADSTPTL         equ	991	;# 
  2466   0003E0                     ADSTPTH         equ	992	;# 
  2467   0003E1                     ADFLTR          equ	993	;# 
  2468   0003E1                     ADFLTRL         equ	993	;# 
  2469   0003E2                     ADFLTRH         equ	994	;# 
  2470   0003E3                     ADACC           equ	995	;# 
  2471   0003E3                     ADACCL          equ	995	;# 
  2472   0003E4                     ADACCH          equ	996	;# 
  2473   0003E5                     ADACCU          equ	997	;# 
  2474   0003E6                     ADCNT           equ	998	;# 
  2475   0003E7                     ADRPT           equ	999	;# 
  2476   0003E8                     ADPREV          equ	1000	;# 
  2477   0003E8                     ADPREVL         equ	1000	;# 
  2478   0003E9                     ADPREVH         equ	1001	;# 
  2479   0003EA                     ADRES           equ	1002	;# 
  2480   0003EA                     ADRESL          equ	1002	;# 
  2481   0003EB                     ADRESH          equ	1003	;# 
  2482   0003EC                     ADPCH           equ	1004	;# 
  2483   0003EE                     ADACQ           equ	1006	;# 
  2484   0003EE                     ADACQL          equ	1006	;# 
  2485   0003EF                     ADACQH          equ	1007	;# 
  2486   0003F0                     ADCAP           equ	1008	;# 
  2487   0003F1                     ADPRE           equ	1009	;# 
  2488   0003F1                     ADPREL          equ	1009	;# 
  2489   0003F2                     ADPREH          equ	1010	;# 
  2490   0003F3                     ADCON0          equ	1011	;# 
  2491   0003F4                     ADCON1          equ	1012	;# 
  2492   0003F5                     ADCON2          equ	1013	;# 
  2493   0003F6                     ADCON3          equ	1014	;# 
  2494   0003F7                     ADSTAT          equ	1015	;# 
  2495   0003F8                     ADREF           equ	1016	;# 
  2496   0003F9                     ADACT           equ	1017	;# 
  2497   0003FA                     ADCLK           equ	1018	;# 
  2498   000400                     ANSELA          equ	1024	;# 
  2499   000401                     WPUA            equ	1025	;# 
  2500   000402                     ODCONA          equ	1026	;# 
  2501   000403                     SLRCONA         equ	1027	;# 
  2502   000404                     INLVLA          equ	1028	;# 
  2503   000405                     IOCAP           equ	1029	;# 
  2504   000406                     IOCAN           equ	1030	;# 
  2505   000407                     IOCAF           equ	1031	;# 
  2506   000408                     ANSELB          equ	1032	;# 
  2507   000409                     WPUB            equ	1033	;# 
  2508   00040A                     ODCONB          equ	1034	;# 
  2509   00040B                     SLRCONB         equ	1035	;# 
  2510   00040C                     INLVLB          equ	1036	;# 
  2511   00040D                     IOCBP           equ	1037	;# 
  2512   00040E                     IOCBN           equ	1038	;# 
  2513   00040F                     IOCBF           equ	1039	;# 
  2514   000410                     ANSELC          equ	1040	;# 
  2515   000411                     WPUC            equ	1041	;# 
  2516   000412                     ODCONC          equ	1042	;# 
  2517   000413                     SLRCONC         equ	1043	;# 
  2518   000414                     INLVLC          equ	1044	;# 
  2519   000415                     IOCCP           equ	1045	;# 
  2520   000416                     IOCCN           equ	1046	;# 
  2521   000417                     IOCCF           equ	1047	;# 
  2522   000418                     ANSELD          equ	1048	;# 
  2523   000419                     WPUD            equ	1049	;# 
  2524   00041A                     ODCOND          equ	1050	;# 
  2525   00041B                     SLRCOND         equ	1051	;# 
  2526   00041C                     INLVLD          equ	1052	;# 
  2527   000420                     ANSELE          equ	1056	;# 
  2528   000421                     WPUE            equ	1057	;# 
  2529   000422                     ODCONE          equ	1058	;# 
  2530   000423                     SLRCONE         equ	1059	;# 
  2531   000424                     INLVLE          equ	1060	;# 
  2532   000425                     IOCEP           equ	1061	;# 
  2533   000426                     IOCEN           equ	1062	;# 
  2534   000427                     IOCEF           equ	1063	;# 
  2535   000428                     ANSELF          equ	1064	;# 
  2536   000429                     WPUF            equ	1065	;# 
  2537   00042A                     ODCONF          equ	1066	;# 
  2538   00042B                     SLRCONF         equ	1067	;# 
  2539   00042C                     INLVLF          equ	1068	;# 
  2540   000440                     NCO1ACC         equ	1088	;# 
  2541   000440                     NCO1ACCL        equ	1088	;# 
  2542   000441                     NCO1ACCH        equ	1089	;# 
  2543   000442                     NCO1ACCU        equ	1090	;# 
  2544   000443                     NCO1INC         equ	1091	;# 
  2545   000443                     NCO1INCL        equ	1091	;# 
  2546   000444                     NCO1INCH        equ	1092	;# 
  2547   000445                     NCO1INCU        equ	1093	;# 
  2548   000446                     NCO1CON         equ	1094	;# 
  2549   000447                     NCO1CLK         equ	1095	;# 
  2550   000448                     NCO2ACC         equ	1096	;# 
  2551   000448                     NCO2ACCL        equ	1096	;# 
  2552   000449                     NCO2ACCH        equ	1097	;# 
  2553   00044A                     NCO2ACCU        equ	1098	;# 
  2554   00044B                     NCO2INC         equ	1099	;# 
  2555   00044B                     NCO2INCL        equ	1099	;# 
  2556   00044C                     NCO2INCH        equ	1100	;# 
  2557   00044D                     NCO2INCU        equ	1101	;# 
  2558   00044E                     NCO2CON         equ	1102	;# 
  2559   00044F                     NCO2CLK         equ	1103	;# 
  2560   000450                     NCO3ACC         equ	1104	;# 
  2561   000450                     NCO3ACCL        equ	1104	;# 
  2562   000451                     NCO3ACCH        equ	1105	;# 
  2563   000452                     NCO3ACCU        equ	1106	;# 
  2564   000453                     NCO3INC         equ	1107	;# 
  2565   000453                     NCO3INCL        equ	1107	;# 
  2566   000454                     NCO3INCH        equ	1108	;# 
  2567   000455                     NCO3INCU        equ	1109	;# 
  2568   000456                     NCO3CON         equ	1110	;# 
  2569   000457                     NCO3CLK         equ	1111	;# 
  2570   000459                     IVTLOCK         equ	1113	;# 
  2571   00045A                     IVTAD           equ	1114	;# 
  2572   00045A                     IVTADL          equ	1114	;# 
  2573   00045B                     IVTADH          equ	1115	;# 
  2574   00045C                     IVTADU          equ	1116	;# 
  2575   00045D                     IVTBASE         equ	1117	;# 
  2576   00045D                     IVTBASEL        equ	1117	;# 
  2577   00045E                     IVTBASEH        equ	1118	;# 
  2578   00045F                     IVTBASEU        equ	1119	;# 
  2579   000460                     PWM1ERS         equ	1120	;# 
  2580   000461                     PWM1CLK         equ	1121	;# 
  2581   000462                     PWM1LDS         equ	1122	;# 
  2582   000463                     PWM1PR          equ	1123	;# 
  2583   000463                     PWM1PRL         equ	1123	;# 
  2584   000464                     PWM1PRH         equ	1124	;# 
  2585   000465                     PWM1CPRE        equ	1125	;# 
  2586   000466                     PWM1PIPOS       equ	1126	;# 
  2587   000467                     PWM1GIR         equ	1127	;# 
  2588   000468                     PWM1GIE         equ	1128	;# 
  2589   000469                     PWM1CON         equ	1129	;# 
  2590   00046A                     PWM1S1CFG       equ	1130	;# 
  2591   00046B                     PWM1S1P1        equ	1131	;# 
  2592   00046B                     PWM1S1P1L       equ	1131	;# 
  2593   00046C                     PWM1S1P1H       equ	1132	;# 
  2594   00046D                     PWM1S1P2        equ	1133	;# 
  2595   00046D                     PWM1S1P2L       equ	1133	;# 
  2596   00046E                     PWM1S1P2H       equ	1134	;# 
  2597   00046F                     PWM2ERS         equ	1135	;# 
  2598   000470                     PWM2CLK         equ	1136	;# 
  2599   000471                     PWM2LDS         equ	1137	;# 
  2600   000472                     PWM2PR          equ	1138	;# 
  2601   000472                     PWM2PRL         equ	1138	;# 
  2602   000473                     PWM2PRH         equ	1139	;# 
  2603   000474                     PWM2CPRE        equ	1140	;# 
  2604   000475                     PWM2PIPOS       equ	1141	;# 
  2605   000476                     PWM2GIR         equ	1142	;# 
  2606   000477                     PWM2GIE         equ	1143	;# 
  2607   000478                     PWM2CON         equ	1144	;# 
  2608   000479                     PWM2S1CFG       equ	1145	;# 
  2609   00047A                     PWM2S1P1        equ	1146	;# 
  2610   00047A                     PWM2S1P1L       equ	1146	;# 
  2611   00047B                     PWM2S1P1H       equ	1147	;# 
  2612   00047C                     PWM2S1P2        equ	1148	;# 
  2613   00047C                     PWM2S1P2L       equ	1148	;# 
  2614   00047D                     PWM2S1P2H       equ	1149	;# 
  2615   00047E                     PWM3ERS         equ	1150	;# 
  2616   00047F                     PWM3CLK         equ	1151	;# 
  2617   000480                     PWM3LDS         equ	1152	;# 
  2618   000481                     PWM3PR          equ	1153	;# 
  2619   000481                     PWM3PRL         equ	1153	;# 
  2620   000482                     PWM3PRH         equ	1154	;# 
  2621   000483                     PWM3CPRE        equ	1155	;# 
  2622   000484                     PWM3PIPOS       equ	1156	;# 
  2623   000485                     PWM3GIR         equ	1157	;# 
  2624   000486                     PWM3GIE         equ	1158	;# 
  2625   000487                     PWM3CON         equ	1159	;# 
  2626   000488                     PWM3S1CFG       equ	1160	;# 
  2627   000489                     PWM3S1P1        equ	1161	;# 
  2628   000489                     PWM3S1P1L       equ	1161	;# 
  2629   00048A                     PWM3S1P1H       equ	1162	;# 
  2630   00048B                     PWM3S1P2        equ	1163	;# 
  2631   00048B                     PWM3S1P2L       equ	1163	;# 
  2632   00048C                     PWM3S1P2H       equ	1164	;# 
  2633   00049C                     PWMLOAD         equ	1180	;# 
  2634   00049D                     PWMEN           equ	1181	;# 
  2635   00049E                     PIE0            equ	1182	;# 
  2636   00049F                     PIE1            equ	1183	;# 
  2637   0004A0                     PIE2            equ	1184	;# 
  2638   0004A1                     PIE3            equ	1185	;# 
  2639   0004A2                     PIE4            equ	1186	;# 
  2640   0004A3                     PIE5            equ	1187	;# 
  2641   0004A4                     PIE6            equ	1188	;# 
  2642   0004A5                     PIE7            equ	1189	;# 
  2643   0004A6                     PIE8            equ	1190	;# 
  2644   0004A7                     PIE9            equ	1191	;# 
  2645   0004A8                     PIE10           equ	1192	;# 
  2646   0004A9                     PIE11           equ	1193	;# 
  2647   0004AA                     PIE12           equ	1194	;# 
  2648   0004AB                     PIE13           equ	1195	;# 
  2649   0004AC                     PIE14           equ	1196	;# 
  2650   0004AD                     PIE15           equ	1197	;# 
  2651   0004AE                     PIR0            equ	1198	;# 
  2652   0004AF                     PIR1            equ	1199	;# 
  2653   0004B0                     PIR2            equ	1200	;# 
  2654   0004B1                     PIR3            equ	1201	;# 
  2655   0004B2                     PIR4            equ	1202	;# 
  2656   0004B3                     PIR5            equ	1203	;# 
  2657   0004B4                     PIR6            equ	1204	;# 
  2658   0004B5                     PIR7            equ	1205	;# 
  2659   0004B6                     PIR8            equ	1206	;# 
  2660   0004B7                     PIR9            equ	1207	;# 
  2661   0004B8                     PIR10           equ	1208	;# 
  2662   0004B9                     PIR11           equ	1209	;# 
  2663   0004BA                     PIR12           equ	1210	;# 
  2664   0004BB                     PIR13           equ	1211	;# 
  2665   0004BC                     PIR14           equ	1212	;# 
  2666   0004BD                     PIR15           equ	1213	;# 
  2667   0004BE                     LATA            equ	1214	;# 
  2668   0004BF                     LATB            equ	1215	;# 
  2669   0004C0                     LATC            equ	1216	;# 
  2670   0004C1                     LATD            equ	1217	;# 
  2671   0004C2                     LATE            equ	1218	;# 
  2672   0004C3                     LATF            equ	1219	;# 
  2673   0004C6                     TRISA           equ	1222	;# 
  2674   0004C7                     TRISB           equ	1223	;# 
  2675   0004C8                     TRISC           equ	1224	;# 
  2676   0004C9                     TRISD           equ	1225	;# 
  2677   0004CA                     TRISE           equ	1226	;# 
  2678   0004CB                     TRISF           equ	1227	;# 
  2679   0004CE                     PORTA           equ	1230	;# 
  2680   0004CF                     PORTB           equ	1231	;# 
  2681   0004D0                     PORTC           equ	1232	;# 
  2682   0004D1                     PORTD           equ	1233	;# 
  2683   0004D2                     PORTE           equ	1234	;# 
  2684   0004D3                     PORTF           equ	1235	;# 
  2685   0004D6                     INTCON0         equ	1238	;# 
  2686   0004D7                     INTCON1         equ	1239	;# 
  2687   0004D8                     STATUS          equ	1240	;# 
  2688   0004D9                     FSR2            equ	1241	;# 
  2689   0004D9                     FSR2L           equ	1241	;# 
  2690   0004DA                     FSR2H           equ	1242	;# 
  2691   0004DB                     PLUSW2          equ	1243	;# 
  2692   0004DC                     PREINC2         equ	1244	;# 
  2693   0004DD                     POSTDEC2        equ	1245	;# 
  2694   0004DE                     POSTINC2        equ	1246	;# 
  2695   0004DF                     INDF2           equ	1247	;# 
  2696   0004E0                     BSR             equ	1248	;# 
  2697   0004E1                     FSR1            equ	1249	;# 
  2698   0004E1                     FSR1L           equ	1249	;# 
  2699   0004E2                     FSR1H           equ	1250	;# 
  2700   0004E3                     PLUSW1          equ	1251	;# 
  2701   0004E4                     PREINC1         equ	1252	;# 
  2702   0004E5                     POSTDEC1        equ	1253	;# 
  2703   0004E6                     POSTINC1        equ	1254	;# 
  2704   0004E7                     INDF1           equ	1255	;# 
  2705   0004E8                     WREG            equ	1256	;# 
  2706   0004E9                     FSR0            equ	1257	;# 
  2707   0004E9                     FSR0L           equ	1257	;# 
  2708   0004EA                     FSR0H           equ	1258	;# 
  2709   0004EB                     PLUSW0          equ	1259	;# 
  2710   0004EC                     PREINC0         equ	1260	;# 
  2711   0004ED                     POSTDEC0        equ	1261	;# 
  2712   0004EE                     POSTINC0        equ	1262	;# 
  2713   0004EF                     INDF0           equ	1263	;# 
  2714   0004F0                     PCON0           equ	1264	;# 
  2715   0004F1                     PCON1           equ	1265	;# 
  2716   0004F2                     CPUDOZE         equ	1266	;# 
  2717   0004F3                     PROD            equ	1267	;# 
  2718   0004F3                     PRODL           equ	1267	;# 
  2719   0004F4                     PRODH           equ	1268	;# 
  2720   0004F5                     TABLAT          equ	1269	;# 
  2721   0004F6                     TBLPTR          equ	1270	;# 
  2722   0004F6                     TBLPTRL         equ	1270	;# 
  2723   0004F7                     TBLPTRH         equ	1271	;# 
  2724   0004F8                     TBLPTRU         equ	1272	;# 
  2725   0004F9                     PCLAT           equ	1273	;# 
  2726   0004F9                     PCL             equ	1273	;# 
  2727   0004FA                     PCLATH          equ	1274	;# 
  2728   0004FB                     PCLATU          equ	1275	;# 
  2729   0004FC                     STKPTR          equ	1276	;# 
  2730   0004FD                     TOS             equ	1277	;# 
  2731   0004FD                     TOSL            equ	1277	;# 
  2732   0004FE                     TOSH            equ	1278	;# 
  2733   0004FF                     TOSU            equ	1279	;# 
  2734   000039                     CLKRCON         equ	57	;# 
  2735   00003A                     CLKRCLK         equ	58	;# 
  2736   000040                     NVMCON0         equ	64	;# 
  2737   000041                     NVMCON1         equ	65	;# 
  2738   000042                     NVMLOCK         equ	66	;# 
  2739   000043                     NVMADR          equ	67	;# 
  2740   000043                     NVMADRL         equ	67	;# 
  2741   000044                     NVMADRH         equ	68	;# 
  2742   000045                     NVMADRU         equ	69	;# 
  2743   000046                     NVMDAT          equ	70	;# 
  2744   000046                     NVMDATL         equ	70	;# 
  2745   000047                     NVMDATH         equ	71	;# 
  2746   000048                     VREGCON         equ	72	;# 
  2747   000049                     BORCON          equ	73	;# 
  2748   00004A                     HLVDCON0        equ	74	;# 
  2749   00004B                     HLVDCON1        equ	75	;# 
  2750   00004C                     ZCDCON          equ	76	;# 
  2751   000060                     PMD0            equ	96	;# 
  2752   000061                     PMD1            equ	97	;# 
  2753   000063                     PMD3            equ	99	;# 
  2754   000064                     PMD4            equ	100	;# 
  2755   000065                     PMD5            equ	101	;# 
  2756   000066                     PMD6            equ	102	;# 
  2757   000067                     PMD7            equ	103	;# 
  2758   000068                     PMD8            equ	104	;# 
  2759   00006A                     MD1CON0         equ	106	;# 
  2760   00006B                     MD1CON1         equ	107	;# 
  2761   00006C                     MD1SRC          equ	108	;# 
  2762   00006D                     MD1CARL         equ	109	;# 
  2763   00006E                     MD1CARH         equ	110	;# 
  2764   00006F                     CMOUT           equ	111	;# 
  2765   000070                     CM1CON0         equ	112	;# 
  2766   000071                     CM1CON1         equ	113	;# 
  2767   000072                     CM1NCH          equ	114	;# 
  2768   000073                     CM1PCH          equ	115	;# 
  2769   000074                     CM2CON0         equ	116	;# 
  2770   000075                     CM2CON1         equ	117	;# 
  2771   000076                     CM2NCH          equ	118	;# 
  2772   000077                     CM2PCH          equ	119	;# 
  2773   000078                     WDTCON0         equ	120	;# 
  2774   000079                     WDTCON1         equ	121	;# 
  2775   00007A                     WDTPS           equ	122	;# 
  2776   00007A                     WDTPSL          equ	122	;# 
  2777   00007B                     WDTPSH          equ	123	;# 
  2778   00007C                     WDTTMR          equ	124	;# 
  2779   00007D                     DAC1DAT         equ	125	;# 
  2780   00007D                     DAC1DATL        equ	125	;# 
  2781   00007F                     DAC1CON         equ	127	;# 
  2782   000080                     SPI1RXB         equ	128	;# 
  2783   000081                     SPI1TXB         equ	129	;# 
  2784   000082                     SPI1TCNT        equ	130	;# 
  2785   000082                     SPI1TCNTL       equ	130	;# 
  2786   000083                     SPI1TCNTH       equ	131	;# 
  2787   000084                     SPI1CON0        equ	132	;# 
  2788   000085                     SPI1CON1        equ	133	;# 
  2789   000086                     SPI1CON2        equ	134	;# 
  2790   000087                     SPI1STATUS      equ	135	;# 
  2791   000088                     SPI1TWIDTH      equ	136	;# 
  2792   000089                     SPI1BAUD        equ	137	;# 
  2793   00008A                     SPI1INTF        equ	138	;# 
  2794   00008B                     SPI1INTE        equ	139	;# 
  2795   00008C                     SPI1CLK         equ	140	;# 
  2796   00008D                     SPI2RXB         equ	141	;# 
  2797   00008E                     SPI2TXB         equ	142	;# 
  2798   00008F                     SPI2TCNT        equ	143	;# 
  2799   00008F                     SPI2TCNTL       equ	143	;# 
  2800   000090                     SPI2TCNTH       equ	144	;# 
  2801   000091                     SPI2CON0        equ	145	;# 
  2802   000092                     SPI2CON1        equ	146	;# 
  2803   000093                     SPI2CON2        equ	147	;# 
  2804   000094                     SPI2STATUS      equ	148	;# 
  2805   000095                     SPI2TWIDTH      equ	149	;# 
  2806   000096                     SPI2BAUD        equ	150	;# 
  2807   000097                     SPI2INTF        equ	151	;# 
  2808   000098                     SPI2INTE        equ	152	;# 
  2809   000099                     SPI2CLK         equ	153	;# 
  2810   0000AC                     ACTCON          equ	172	;# 
  2811   0000AD                     OSCCON1         equ	173	;# 
  2812   0000AE                     OSCCON2         equ	174	;# 
  2813   0000AF                     OSCCON3         equ	175	;# 
  2814   0000B0                     OSCTUNE         equ	176	;# 
  2815   0000B1                     OSCFRQ          equ	177	;# 
  2816   0000B1                     OSCFREQ         equ	177	;# 
  2817   0000B2                     OSCSTAT         equ	178	;# 
  2818   0000B2                     OSCSTAT1        equ	178	;# 
  2819   0000B3                     OSCEN           equ	179	;# 
  2820   0000B4                     PRLOCK          equ	180	;# 
  2821   0000B5                     SCANPR          equ	181	;# 
  2822   0000B6                     DMA1PR          equ	182	;# 
  2823   0000B7                     DMA2PR          equ	183	;# 
  2824   0000B8                     DMA3PR          equ	184	;# 
  2825   0000B9                     DMA4PR          equ	185	;# 
  2826   0000BA                     DMA5PR          equ	186	;# 
  2827   0000BB                     DMA6PR          equ	187	;# 
  2828   0000BE                     MAINPR          equ	190	;# 
  2829   0000BF                     ISRPR           equ	191	;# 
  2830   0000D4                     CLCDATA         equ	212	;# 
  2831   0000D5                     CLCSELECT       equ	213	;# 
  2832   0000D6                     CLCnCON         equ	214	;# 
  2833   0000D7                     CLCnPOL         equ	215	;# 
  2834   0000D8                     CLCnSEL0        equ	216	;# 
  2835   0000D9                     CLCnSEL1        equ	217	;# 
  2836   0000DA                     CLCnSEL2        equ	218	;# 
  2837   0000DB                     CLCnSEL3        equ	219	;# 
  2838   0000DC                     CLCnGLS0        equ	220	;# 
  2839   0000DD                     CLCnGLS1        equ	221	;# 
  2840   0000DE                     CLCnGLS2        equ	222	;# 
  2841   0000DF                     CLCnGLS3        equ	223	;# 
  2842   0000E8                     DMASELECT       equ	232	;# 
  2843   0000E9                     DMAnBUF         equ	233	;# 
  2844   0000EA                     DMAnDCNT        equ	234	;# 
  2845   0000EA                     DMAnDCNTL       equ	234	;# 
  2846   0000EB                     DMAnDCNTH       equ	235	;# 
  2847   0000EC                     DMAnDPTR        equ	236	;# 
  2848   0000EC                     DMAnDPTRL       equ	236	;# 
  2849   0000ED                     DMAnDPTRH       equ	237	;# 
  2850   0000EE                     DMAnDSZ         equ	238	;# 
  2851   0000EE                     DMAnDSZL        equ	238	;# 
  2852   0000EF                     DMAnDSZH        equ	239	;# 
  2853   0000F0                     DMAnDSA         equ	240	;# 
  2854   0000F0                     DMAnDSAL        equ	240	;# 
  2855   0000F1                     DMAnDSAH        equ	241	;# 
  2856   0000F2                     DMAnSCNT        equ	242	;# 
  2857   0000F2                     DMAnSCNTL       equ	242	;# 
  2858   0000F3                     DMAnSCNTH       equ	243	;# 
  2859   0000F4                     DMAnSPTR        equ	244	;# 
  2860   0000F4                     DMAnSPTRL       equ	244	;# 
  2861   0000F5                     DMAnSPTRH       equ	245	;# 
  2862   0000F6                     DMAnSPTRU       equ	246	;# 
  2863   0000F7                     DMAnSSZ         equ	247	;# 
  2864   0000F7                     DMAnSSZL        equ	247	;# 
  2865   0000F8                     DMAnSSZH        equ	248	;# 
  2866   0000F9                     DMAnSSA         equ	249	;# 
  2867   0000F9                     DMAnSSAL        equ	249	;# 
  2868   0000FA                     DMAnSSAH        equ	250	;# 
  2869   0000FB                     DMAnSSAU        equ	251	;# 
  2870   0000FC                     DMAnCON0        equ	252	;# 
  2871   0000FD                     DMAnCON1        equ	253	;# 
  2872   0000FE                     DMAnAIRQ        equ	254	;# 
  2873   0000FF                     DMAnSIRQ        equ	255	;# 
  2874   000200                     PPSLOCK         equ	512	;# 
  2875   000201                     RA0PPS          equ	513	;# 
  2876   000202                     RA1PPS          equ	514	;# 
  2877   000203                     RA2PPS          equ	515	;# 
  2878   000204                     RA3PPS          equ	516	;# 
  2879   000205                     RA4PPS          equ	517	;# 
  2880   000206                     RA5PPS          equ	518	;# 
  2881   000207                     RA6PPS          equ	519	;# 
  2882   000208                     RA7PPS          equ	520	;# 
  2883   000209                     RB0PPS          equ	521	;# 
  2884   00020A                     RB1PPS          equ	522	;# 
  2885   00020B                     RB2PPS          equ	523	;# 
  2886   00020C                     RB3PPS          equ	524	;# 
  2887   00020D                     RB4PPS          equ	525	;# 
  2888   00020E                     RB5PPS          equ	526	;# 
  2889   00020F                     RB6PPS          equ	527	;# 
  2890   000210                     RB7PPS          equ	528	;# 
  2891   000211                     RC0PPS          equ	529	;# 
  2892   000212                     RC1PPS          equ	530	;# 
  2893   000213                     RC2PPS          equ	531	;# 
  2894   000214                     RC3PPS          equ	532	;# 
  2895   000215                     RC4PPS          equ	533	;# 
  2896   000216                     RC5PPS          equ	534	;# 
  2897   000217                     RC6PPS          equ	535	;# 
  2898   000218                     RC7PPS          equ	536	;# 
  2899   000219                     RD0PPS          equ	537	;# 
  2900   00021A                     RD1PPS          equ	538	;# 
  2901   00021B                     RD2PPS          equ	539	;# 
  2902   00021C                     RD3PPS          equ	540	;# 
  2903   00021D                     RD4PPS          equ	541	;# 
  2904   00021E                     RD5PPS          equ	542	;# 
  2905   00021F                     RD6PPS          equ	543	;# 
  2906   000220                     RD7PPS          equ	544	;# 
  2907   000221                     RE0PPS          equ	545	;# 
  2908   000222                     RE1PPS          equ	546	;# 
  2909   000223                     RE2PPS          equ	547	;# 
  2910   000229                     RF0PPS          equ	553	;# 
  2911   00022A                     RF1PPS          equ	554	;# 
  2912   00022B                     RF2PPS          equ	555	;# 
  2913   00022C                     RF3PPS          equ	556	;# 
  2914   00022D                     RF4PPS          equ	557	;# 
  2915   00022E                     RF5PPS          equ	558	;# 
  2916   00022F                     RF6PPS          equ	559	;# 
  2917   000230                     RF7PPS          equ	560	;# 
  2918   00023E                     INT0PPS         equ	574	;# 
  2919   00023F                     INT1PPS         equ	575	;# 
  2920   000240                     INT2PPS         equ	576	;# 
  2921   000241                     T0CKIPPS        equ	577	;# 
  2922   000242                     T1CKIPPS        equ	578	;# 
  2923   000243                     T1GPPS          equ	579	;# 
  2924   000244                     T3CKIPPS        equ	580	;# 
  2925   000245                     T3GPPS          equ	581	;# 
  2926   000246                     T5CKIPPS        equ	582	;# 
  2927   000247                     T5GPPS          equ	583	;# 
  2928   000248                     T2INPPS         equ	584	;# 
  2929   000249                     T4INPPS         equ	585	;# 
  2930   00024A                     T6INPPS         equ	586	;# 
  2931   00024F                     CCP1PPS         equ	591	;# 
  2932   000250                     CCP2PPS         equ	592	;# 
  2933   000251                     CCP3PPS         equ	593	;# 
  2934   000253                     PWM1ERSPPS      equ	595	;# 
  2935   000254                     PWM2ERSPPS      equ	596	;# 
  2936   000255                     PWM3ERSPPS      equ	597	;# 
  2937   000257                     PWMIN0PPS       equ	599	;# 
  2938   000258                     PWMIN1PPS       equ	600	;# 
  2939   000259                     SMT1WINPPS      equ	601	;# 
  2940   00025A                     SMT1SIGPPS      equ	602	;# 
  2941   00025B                     CWG1PPS         equ	603	;# 
  2942   00025B                     CWG1INPPS       equ	603	;# 
  2943   00025C                     CWG2PPS         equ	604	;# 
  2944   00025C                     CWG2INPPS       equ	604	;# 
  2945   00025D                     CWG3PPS         equ	605	;# 
  2946   00025D                     CWG3INPPS       equ	605	;# 
  2947   00025E                     MD1CARLPPS      equ	606	;# 
  2948   00025E                     MDCARLPPS       equ	606	;# 
  2949   00025F                     MD1CARHPPS      equ	607	;# 
  2950   00025F                     MDCARHPPS       equ	607	;# 
  2951   000260                     MD1SRCPPS       equ	608	;# 
  2952   000260                     MDSRCPPS        equ	608	;# 
  2953   000261                     CLCIN0PPS       equ	609	;# 
  2954   000262                     CLCIN1PPS       equ	610	;# 
  2955   000263                     CLCIN2PPS       equ	611	;# 
  2956   000264                     CLCIN3PPS       equ	612	;# 
  2957   000265                     CLCIN4PPS       equ	613	;# 
  2958   000266                     CLCIN5PPS       equ	614	;# 
  2959   000267                     CLCIN6PPS       equ	615	;# 
  2960   000268                     CLCIN7PPS       equ	616	;# 
  2961   000269                     ADACTPPS        equ	617	;# 
  2962   00026A                     SPI1SCKPPS      equ	618	;# 
  2963   00026B                     SPI1SDIPPS      equ	619	;# 
  2964   00026C                     SPI1SSPPS       equ	620	;# 
  2965   00026D                     SPI2SCKPPS      equ	621	;# 
  2966   00026E                     SPI2SDIPPS      equ	622	;# 
  2967   00026F                     SPI2SSPPS       equ	623	;# 
  2968   000270                     I2C1SDAPPS      equ	624	;# 
  2969   000271                     I2C1SCLPPS      equ	625	;# 
  2970   000272                     U1RXPPS         equ	626	;# 
  2971   000273                     U1CTSPPS        equ	627	;# 
  2972   000274                     U2RXPPS         equ	628	;# 
  2973   000275                     U2CTSPPS        equ	629	;# 
  2974   000276                     U3RXPPS         equ	630	;# 
  2975   000277                     U3CTSPPS        equ	631	;# 
  2976   000278                     U4RXPPS         equ	632	;# 
  2977   000279                     U4CTSPPS        equ	633	;# 
  2978   00027A                     U5RXPPS         equ	634	;# 
  2979   00027B                     U5CTSPPS        equ	635	;# 
  2980   000286                     RC4I2C          equ	646	;# 
  2981   000287                     RC3I2C          equ	647	;# 
  2982   000288                     RB2I2C          equ	648	;# 
  2983   000289                     RB1I2C          equ	649	;# 
  2984   00028B                     I2C1RXB         equ	651	;# 
  2985   00028C                     I2C1TXB         equ	652	;# 
  2986   00028D                     I2C1CNT         equ	653	;# 
  2987   00028E                     I2C1ADB0        equ	654	;# 
  2988   00028F                     I2C1ADB1        equ	655	;# 
  2989   000290                     I2C1ADR0        equ	656	;# 
  2990   000291                     I2C1ADR1        equ	657	;# 
  2991   000292                     I2C1ADR2        equ	658	;# 
  2992   000293                     I2C1ADR3        equ	659	;# 
  2993   000294                     I2C1CON0        equ	660	;# 
  2994   000295                     I2C1CON1        equ	661	;# 
  2995   000296                     I2C1CON2        equ	662	;# 
  2996   000297                     I2C1ERR         equ	663	;# 
  2997   000298                     I2C1STAT0       equ	664	;# 
  2998   000299                     I2C1STAT1       equ	665	;# 
  2999   00029A                     I2C1PIR         equ	666	;# 
  3000   00029B                     I2C1PIE         equ	667	;# 
  3001   00029C                     I2C1CLK         equ	668	;# 
  3002   00029D                     I2C1BTO         equ	669	;# 
  3003   0002A1                     U1RXB           equ	673	;# 
  3004   0002A1                     U1RXBL          equ	673	;# 
  3005   0002A2                     U1RXCHK         equ	674	;# 
  3006   0002A3                     U1TXB           equ	675	;# 
  3007   0002A3                     U1TXBL          equ	675	;# 
  3008   0002A4                     U1TXCHK         equ	676	;# 
  3009   0002A5                     U1P1            equ	677	;# 
  3010   0002A5                     U1P1L           equ	677	;# 
  3011   0002A6                     U1P1H           equ	678	;# 
  3012   0002A7                     U1P2            equ	679	;# 
  3013   0002A7                     U1P2L           equ	679	;# 
  3014   0002A8                     U1P2H           equ	680	;# 
  3015   0002A9                     U1P3            equ	681	;# 
  3016   0002A9                     U1P3L           equ	681	;# 
  3017   0002AA                     U1P3H           equ	682	;# 
  3018   0002AB                     U1CON0          equ	683	;# 
  3019   0002AC                     U1CON1          equ	684	;# 
  3020   0002AD                     U1CON2          equ	685	;# 
  3021   0002AE                     U1BRG           equ	686	;# 
  3022   0002AE                     U1BRGL          equ	686	;# 
  3023   0002AF                     U1BRGH          equ	687	;# 
  3024   0002B0                     U1FIFO          equ	688	;# 
  3025   0002B1                     U1UIR           equ	689	;# 
  3026   0002B2                     U1ERRIR         equ	690	;# 
  3027   0002B3                     U1ERRIE         equ	691	;# 
  3028   0002B4                     U2RXB           equ	692	;# 
  3029   0002B4                     U2RXBL          equ	692	;# 
  3030   0002B6                     U2TXB           equ	694	;# 
  3031   0002B6                     U2TXBL          equ	694	;# 
  3032   0002B8                     U2P1            equ	696	;# 
  3033   0002B8                     U2P1L           equ	696	;# 
  3034   0002BA                     U2P2            equ	698	;# 
  3035   0002BA                     U2P2L           equ	698	;# 
  3036   0002BC                     U2P3            equ	700	;# 
  3037   0002BC                     U2P3L           equ	700	;# 
  3038   0002BE                     U2CON0          equ	702	;# 
  3039   0002BF                     U2CON1          equ	703	;# 
  3040   0002C0                     U2CON2          equ	704	;# 
  3041   0002C1                     U2BRG           equ	705	;# 
  3042   0002C1                     U2BRGL          equ	705	;# 
  3043   0002C2                     U2BRGH          equ	706	;# 
  3044   0002C3                     U2FIFO          equ	707	;# 
  3045   0002C4                     U2UIR           equ	708	;# 
  3046   0002C5                     U2ERRIR         equ	709	;# 
  3047   0002C6                     U2ERRIE         equ	710	;# 
  3048   0002C7                     U3RXB           equ	711	;# 
  3049   0002C7                     U3RXBL          equ	711	;# 
  3050   0002C9                     U3TXB           equ	713	;# 
  3051   0002C9                     U3TXBL          equ	713	;# 
  3052   0002CB                     U3P1            equ	715	;# 
  3053   0002CB                     U3P1L           equ	715	;# 
  3054   0002CD                     U3P2            equ	717	;# 
  3055   0002CD                     U3P2L           equ	717	;# 
  3056   0002CF                     U3P3            equ	719	;# 
  3057   0002CF                     U3P3L           equ	719	;# 
  3058   0002D1                     U3CON0          equ	721	;# 
  3059   0002D2                     U3CON1          equ	722	;# 
  3060   0002D3                     U3CON2          equ	723	;# 
  3061   0002D4                     U3BRG           equ	724	;# 
  3062   0002D4                     U3BRGL          equ	724	;# 
  3063   0002D5                     U3BRGH          equ	725	;# 
  3064   0002D6                     U3FIFO          equ	726	;# 
  3065   0002D7                     U3UIR           equ	727	;# 
  3066   0002D8                     U3ERRIR         equ	728	;# 
  3067   0002D9                     U3ERRIE         equ	729	;# 
  3068   0002DA                     U4RXB           equ	730	;# 
  3069   0002DA                     U4RXBL          equ	730	;# 
  3070   0002DC                     U4TXB           equ	732	;# 
  3071   0002DC                     U4TXBL          equ	732	;# 
  3072   0002DE                     U4P1            equ	734	;# 
  3073   0002DE                     U4P1L           equ	734	;# 
  3074   0002E0                     U4P2            equ	736	;# 
  3075   0002E0                     U4P2L           equ	736	;# 
  3076   0002E2                     U4P3            equ	738	;# 
  3077   0002E2                     U4P3L           equ	738	;# 
  3078   0002E4                     U4CON0          equ	740	;# 
  3079   0002E5                     U4CON1          equ	741	;# 
  3080   0002E6                     U4CON2          equ	742	;# 
  3081   0002E7                     U4BRG           equ	743	;# 
  3082   0002E7                     U4BRGL          equ	743	;# 
  3083   0002E8                     U4BRGH          equ	744	;# 
  3084   0002E9                     U4FIFO          equ	745	;# 
  3085   0002EA                     U4UIR           equ	746	;# 
  3086   0002EB                     U4ERRIR         equ	747	;# 
  3087   0002EC                     U4ERRIE         equ	748	;# 
  3088   0002ED                     U5RXB           equ	749	;# 
  3089   0002ED                     U5RXBL          equ	749	;# 
  3090   0002EF                     U5TXB           equ	751	;# 
  3091   0002EF                     U5TXBL          equ	751	;# 
  3092   0002F1                     U5P1            equ	753	;# 
  3093   0002F1                     U5P1L           equ	753	;# 
  3094   0002F3                     U5P2            equ	755	;# 
  3095   0002F3                     U5P2L           equ	755	;# 
  3096   0002F5                     U5P3            equ	757	;# 
  3097   0002F5                     U5P3L           equ	757	;# 
  3098   0002F7                     U5CON0          equ	759	;# 
  3099   0002F8                     U5CON1          equ	760	;# 
  3100   0002F9                     U5CON2          equ	761	;# 
  3101   0002FA                     U5BRG           equ	762	;# 
  3102   0002FA                     U5BRGL          equ	762	;# 
  3103   0002FB                     U5BRGH          equ	763	;# 
  3104   0002FC                     U5FIFO          equ	764	;# 
  3105   0002FD                     U5UIR           equ	765	;# 
  3106   0002FE                     U5ERRIR         equ	766	;# 
  3107   0002FF                     U5ERRIE         equ	767	;# 
  3108   000300                     SMT1TMR         equ	768	;# 
  3109   000300                     SMT1TMRL        equ	768	;# 
  3110   000301                     SMT1TMRH        equ	769	;# 
  3111   000302                     SMT1TMRU        equ	770	;# 
  3112   000303                     SMT1CPR         equ	771	;# 
  3113   000303                     SMT1CPRL        equ	771	;# 
  3114   000304                     SMT1CPRH        equ	772	;# 
  3115   000305                     SMT1CPRU        equ	773	;# 
  3116   000306                     SMT1CPW         equ	774	;# 
  3117   000306                     SMT1CPWL        equ	774	;# 
  3118   000307                     SMT1CPWH        equ	775	;# 
  3119   000308                     SMT1CPWU        equ	776	;# 
  3120   000309                     SMT1PR          equ	777	;# 
  3121   000309                     SMT1PRL         equ	777	;# 
  3122   00030A                     SMT1PRH         equ	778	;# 
  3123   00030B                     SMT1PRU         equ	779	;# 
  3124   00030C                     SMT1CON0        equ	780	;# 
  3125   00030D                     SMT1CON1        equ	781	;# 
  3126   00030E                     SMT1STAT        equ	782	;# 
  3127   00030F                     SMT1CLK         equ	783	;# 
  3128   000310                     SMT1SIG         equ	784	;# 
  3129   000311                     SMT1WIN         equ	785	;# 
  3130   000318                     TMR0L           equ	792	;# 
  3131   000318                     TMR0            equ	792	;# 
  3132   000319                     TMR0H           equ	793	;# 
  3133   000319                     PR0             equ	793	;# 
  3134   00031A                     T0CON0          equ	794	;# 
  3135   00031B                     T0CON1          equ	795	;# 
  3136   00031C                     TMR1            equ	796	;# 
  3137   00031C                     TMR1L           equ	796	;# 
  3138   00031D                     TMR1H           equ	797	;# 
  3139   00031E                     T1CON           equ	798	;# 
  3140   00031E                     TMR1CON         equ	798	;# 
  3141   00031F                     T1GCON          equ	799	;# 
  3142   00031F                     TMR1GCON        equ	799	;# 
  3143   000320                     T1GATE          equ	800	;# 
  3144   000320                     TMR1GATE        equ	800	;# 
  3145   000321                     T1CLK           equ	801	;# 
  3146   000321                     TMR1CLK         equ	801	;# 
  3147   000321                     PR1             equ	801	;# 
  3148   000322                     T2TMR           equ	802	;# 
  3149   000322                     TMR2            equ	802	;# 
  3150   000323                     T2PR            equ	803	;# 
  3151   000323                     PR2             equ	803	;# 
  3152   000324                     T2CON           equ	804	;# 
  3153   000325                     T2HLT           equ	805	;# 
  3154   000326                     T2CLKCON        equ	806	;# 
  3155   000326                     T2CLK           equ	806	;# 
  3156   000327                     T2RST           equ	807	;# 
  3157   000328                     TMR3            equ	808	;# 
  3158   000328                     TMR3L           equ	808	;# 
  3159   000329                     TMR3H           equ	809	;# 
  3160   00032A                     T3CON           equ	810	;# 
  3161   00032A                     TMR3CON         equ	810	;# 
  3162   00032B                     T3GCON          equ	811	;# 
  3163   00032B                     TMR3GCON        equ	811	;# 
  3164   00032C                     T3GATE          equ	812	;# 
  3165   00032C                     TMR3GATE        equ	812	;# 
  3166   00032D                     T3CLK           equ	813	;# 
  3167   00032D                     TMR3CLK         equ	813	;# 
  3168   00032D                     PR3             equ	813	;# 
  3169   00032E                     T4TMR           equ	814	;# 
  3170   00032E                     TMR4            equ	814	;# 
  3171   00032F                     T4PR            equ	815	;# 
  3172   00032F                     PR4             equ	815	;# 
  3173   000330                     T4CON           equ	816	;# 
  3174   000331                     T4HLT           equ	817	;# 
  3175   000332                     T4CLKCON        equ	818	;# 
  3176   000332                     T4CLK           equ	818	;# 
  3177   000333                     T4RST           equ	819	;# 
  3178   000334                     TMR5            equ	820	;# 
  3179   000334                     TMR5L           equ	820	;# 
  3180   000335                     TMR5H           equ	821	;# 
  3181   000336                     T5CON           equ	822	;# 
  3182   000336                     TMR5CON         equ	822	;# 
  3183   000337                     T5GCON          equ	823	;# 
  3184   000337                     TMR5GCON        equ	823	;# 
  3185   000338                     T5GATE          equ	824	;# 
  3186   000338                     TMR5GATE        equ	824	;# 
  3187   000339                     T5CLK           equ	825	;# 
  3188   000339                     TMR5CLK         equ	825	;# 
  3189   000339                     PR5             equ	825	;# 
  3190   00033A                     T6TMR           equ	826	;# 
  3191   00033A                     TMR6            equ	826	;# 
  3192   00033B                     T6PR            equ	827	;# 
  3193   00033B                     PR6             equ	827	;# 
  3194   00033C                     T6CON           equ	828	;# 
  3195   00033D                     T6HLT           equ	829	;# 
  3196   00033E                     T6CLKCON        equ	830	;# 
  3197   00033E                     T6CLK           equ	830	;# 
  3198   00033F                     T6RST           equ	831	;# 
  3199   000340                     CCPR1           equ	832	;# 
  3200   000340                     CCPR1L          equ	832	;# 
  3201   000341                     CCPR1H          equ	833	;# 
  3202   000342                     CCP1CON         equ	834	;# 
  3203   000343                     CCP1CAP         equ	835	;# 
  3204   000344                     CCPR2           equ	836	;# 
  3205   000344                     CCPR2L          equ	836	;# 
  3206   000345                     CCPR2H          equ	837	;# 
  3207   000346                     CCP2CON         equ	838	;# 
  3208   000347                     CCP2CAP         equ	839	;# 
  3209   000348                     CCPR3           equ	840	;# 
  3210   000348                     CCPR3L          equ	840	;# 
  3211   000349                     CCPR3H          equ	841	;# 
  3212   00034A                     CCP3CON         equ	842	;# 
  3213   00034B                     CCP3CAP         equ	843	;# 
  3214   00034C                     CCPTMRS0        equ	844	;# 
  3215   00034F                     CRCDATA         equ	847	;# 
  3216   00034F                     CRCDATL         equ	847	;# 
  3217   000350                     CRCDATH         equ	848	;# 
  3218   000351                     CRCACC          equ	849	;# 
  3219   000351                     CRCACCL         equ	849	;# 
  3220   000352                     CRCACCH         equ	850	;# 
  3221   000353                     CRCSHFT         equ	851	;# 
  3222   000353                     CRCSHIFTL       equ	851	;# 
  3223   000354                     CRCSHIFTH       equ	852	;# 
  3224   000355                     CRCXOR          equ	853	;# 
  3225   000355                     CRCXORL         equ	853	;# 
  3226   000356                     CRCXORH         equ	854	;# 
  3227   000357                     CRCCON0         equ	855	;# 
  3228   000358                     CRCCON1         equ	856	;# 
  3229   00035A                     SCANLADR        equ	858	;# 
  3230   00035A                     SCANLADRL       equ	858	;# 
  3231   00035B                     SCANLADRH       equ	859	;# 
  3232   00035C                     SCANLADRU       equ	860	;# 
  3233   00035D                     SCANHADR        equ	861	;# 
  3234   00035D                     SCANHADRL       equ	861	;# 
  3235   00035E                     SCANHADRH       equ	862	;# 
  3236   00035F                     SCANHADRU       equ	863	;# 
  3237   000360                     SCANCON0        equ	864	;# 
  3238   000361                     SCANTRIG        equ	865	;# 
  3239   000362                     IPR0            equ	866	;# 
  3240   000363                     IPR1            equ	867	;# 
  3241   000364                     IPR2            equ	868	;# 
  3242   000365                     IPR3            equ	869	;# 
  3243   000366                     IPR4            equ	870	;# 
  3244   000367                     IPR5            equ	871	;# 
  3245   000368                     IPR6            equ	872	;# 
  3246   000369                     IPR7            equ	873	;# 
  3247   00036A                     IPR8            equ	874	;# 
  3248   00036B                     IPR9            equ	875	;# 
  3249   00036C                     IPR10           equ	876	;# 
  3250   00036D                     IPR11           equ	877	;# 
  3251   00036E                     IPR12           equ	878	;# 
  3252   00036F                     IPR13           equ	879	;# 
  3253   000370                     IPR14           equ	880	;# 
  3254   000371                     IPR15           equ	881	;# 
  3255   000373                     STATUS_CSHAD    equ	883	;# 
  3256   000374                     WREG_CSHAD      equ	884	;# 
  3257   000375                     BSR_CSHAD       equ	885	;# 
  3258   000376                     SHADCON         equ	886	;# 
  3259   000377                     STATUS_SHAD     equ	887	;# 
  3260   000378                     WREG_SHAD       equ	888	;# 
  3261   000379                     BSR_SHAD        equ	889	;# 
  3262   00037A                     PCLATH_SHAD     equ	890	;# 
  3263   00037B                     PCLATU_SHAD     equ	891	;# 
  3264   00037C                     FSR0SH          equ	892	;# 
  3265   00037C                     FSR0L_SHAD      equ	892	;# 
  3266   00037D                     FSR0H_SHAD      equ	893	;# 
  3267   00037E                     FSR1SH          equ	894	;# 
  3268   00037E                     FSR1L_SHAD      equ	894	;# 
  3269   00037F                     FSR1H_SHAD      equ	895	;# 
  3270   000380                     FSR2SH          equ	896	;# 
  3271   000380                     FSR2L_SHAD      equ	896	;# 
  3272   000381                     FSR2H_SHAD      equ	897	;# 
  3273   000382                     PRODSH          equ	898	;# 
  3274   000382                     PRODL_SHAD      equ	898	;# 
  3275   000383                     PRODH_SHAD      equ	899	;# 
  3276   0003BC                     CWG1CLK         equ	956	;# 
  3277   0003BC                     CWG1CLKCON      equ	956	;# 
  3278   0003BD                     CWG1ISM         equ	957	;# 
  3279   0003BD                     CWG1DAT         equ	957	;# 
  3280   0003BE                     CWG1DBR         equ	958	;# 
  3281   0003BF                     CWG1DBF         equ	959	;# 
  3282   0003C0                     CWG1CON0        equ	960	;# 
  3283   0003C1                     CWG1CON1        equ	961	;# 
  3284   0003C2                     CWG1AS0         equ	962	;# 
  3285   0003C3                     CWG1AS1         equ	963	;# 
  3286   0003C4                     CWG1STR         equ	964	;# 
  3287   0003C5                     CWG2CLK         equ	965	;# 
  3288   0003C5                     CWG2CLKCON      equ	965	;# 
  3289   0003C6                     CWG2ISM         equ	966	;# 
  3290   0003C6                     CWG2DAT         equ	966	;# 
  3291   0003C7                     CWG2DBR         equ	967	;# 
  3292   0003C8                     CWG2DBF         equ	968	;# 
  3293   0003C9                     CWG2CON0        equ	969	;# 
  3294   0003CA                     CWG2CON1        equ	970	;# 
  3295   0003CB                     CWG2AS0         equ	971	;# 
  3296   0003CC                     CWG2AS1         equ	972	;# 
  3297   0003CD                     CWG2STR         equ	973	;# 
  3298   0003CE                     CWG3CLK         equ	974	;# 
  3299   0003CE                     CWG3CLKCON      equ	974	;# 
  3300   0003CF                     CWG3ISM         equ	975	;# 
  3301   0003CF                     CWG3DAT         equ	975	;# 
  3302   0003D0                     CWG3DBR         equ	976	;# 
  3303   0003D1                     CWG3DBF         equ	977	;# 
  3304   0003D2                     CWG3CON0        equ	978	;# 
  3305   0003D3                     CWG3CON1        equ	979	;# 
  3306   0003D4                     CWG3AS0         equ	980	;# 
  3307   0003D5                     CWG3AS1         equ	981	;# 
  3308   0003D6                     CWG3STR         equ	982	;# 
  3309   0003D7                     FVRCON          equ	983	;# 
  3310   0003D8                     ADCPCON         equ	984	;# 
  3311   0003D8                     ADCP            equ	984	;# 
  3312   0003D9                     ADLTH           equ	985	;# 
  3313   0003D9                     ADLTHL          equ	985	;# 
  3314   0003DA                     ADLTHH          equ	986	;# 
  3315   0003DB                     ADUTH           equ	987	;# 
  3316   0003DB                     ADUTHL          equ	987	;# 
  3317   0003DC                     ADUTHH          equ	988	;# 
  3318   0003DD                     ADERR           equ	989	;# 
  3319   0003DD                     ADERRL          equ	989	;# 
  3320   0003DE                     ADERRH          equ	990	;# 
  3321   0003DF                     ADSTPT          equ	991	;# 
  3322   0003DF                     ADSTPTL         equ	991	;# 
  3323   0003E0                     ADSTPTH         equ	992	;# 
  3324   0003E1                     ADFLTR          equ	993	;# 
  3325   0003E1                     ADFLTRL         equ	993	;# 
  3326   0003E2                     ADFLTRH         equ	994	;# 
  3327   0003E3                     ADACC           equ	995	;# 
  3328   0003E3                     ADACCL          equ	995	;# 
  3329   0003E4                     ADACCH          equ	996	;# 
  3330   0003E5                     ADACCU          equ	997	;# 
  3331   0003E6                     ADCNT           equ	998	;# 
  3332   0003E7                     ADRPT           equ	999	;# 
  3333   0003E8                     ADPREV          equ	1000	;# 
  3334   0003E8                     ADPREVL         equ	1000	;# 
  3335   0003E9                     ADPREVH         equ	1001	;# 
  3336   0003EA                     ADRES           equ	1002	;# 
  3337   0003EA                     ADRESL          equ	1002	;# 
  3338   0003EB                     ADRESH          equ	1003	;# 
  3339   0003EC                     ADPCH           equ	1004	;# 
  3340   0003EE                     ADACQ           equ	1006	;# 
  3341   0003EE                     ADACQL          equ	1006	;# 
  3342   0003EF                     ADACQH          equ	1007	;# 
  3343   0003F0                     ADCAP           equ	1008	;# 
  3344   0003F1                     ADPRE           equ	1009	;# 
  3345   0003F1                     ADPREL          equ	1009	;# 
  3346   0003F2                     ADPREH          equ	1010	;# 
  3347   0003F3                     ADCON0          equ	1011	;# 
  3348   0003F4                     ADCON1          equ	1012	;# 
  3349   0003F5                     ADCON2          equ	1013	;# 
  3350   0003F6                     ADCON3          equ	1014	;# 
  3351   0003F7                     ADSTAT          equ	1015	;# 
  3352   0003F8                     ADREF           equ	1016	;# 
  3353   0003F9                     ADACT           equ	1017	;# 
  3354   0003FA                     ADCLK           equ	1018	;# 
  3355   000400                     ANSELA          equ	1024	;# 
  3356   000401                     WPUA            equ	1025	;# 
  3357   000402                     ODCONA          equ	1026	;# 
  3358   000403                     SLRCONA         equ	1027	;# 
  3359   000404                     INLVLA          equ	1028	;# 
  3360   000405                     IOCAP           equ	1029	;# 
  3361   000406                     IOCAN           equ	1030	;# 
  3362   000407                     IOCAF           equ	1031	;# 
  3363   000408                     ANSELB          equ	1032	;# 
  3364   000409                     WPUB            equ	1033	;# 
  3365   00040A                     ODCONB          equ	1034	;# 
  3366   00040B                     SLRCONB         equ	1035	;# 
  3367   00040C                     INLVLB          equ	1036	;# 
  3368   00040D                     IOCBP           equ	1037	;# 
  3369   00040E                     IOCBN           equ	1038	;# 
  3370   00040F                     IOCBF           equ	1039	;# 
  3371   000410                     ANSELC          equ	1040	;# 
  3372   000411                     WPUC            equ	1041	;# 
  3373   000412                     ODCONC          equ	1042	;# 
  3374   000413                     SLRCONC         equ	1043	;# 
  3375   000414                     INLVLC          equ	1044	;# 
  3376   000415                     IOCCP           equ	1045	;# 
  3377   000416                     IOCCN           equ	1046	;# 
  3378   000417                     IOCCF           equ	1047	;# 
  3379   000418                     ANSELD          equ	1048	;# 
  3380   000419                     WPUD            equ	1049	;# 
  3381   00041A                     ODCOND          equ	1050	;# 
  3382   00041B                     SLRCOND         equ	1051	;# 
  3383   00041C                     INLVLD          equ	1052	;# 
  3384   000420                     ANSELE          equ	1056	;# 
  3385   000421                     WPUE            equ	1057	;# 
  3386   000422                     ODCONE          equ	1058	;# 
  3387   000423                     SLRCONE         equ	1059	;# 
  3388   000424                     INLVLE          equ	1060	;# 
  3389   000425                     IOCEP           equ	1061	;# 
  3390   000426                     IOCEN           equ	1062	;# 
  3391   000427                     IOCEF           equ	1063	;# 
  3392   000428                     ANSELF          equ	1064	;# 
  3393   000429                     WPUF            equ	1065	;# 
  3394   00042A                     ODCONF          equ	1066	;# 
  3395   00042B                     SLRCONF         equ	1067	;# 
  3396   00042C                     INLVLF          equ	1068	;# 
  3397   000440                     NCO1ACC         equ	1088	;# 
  3398   000440                     NCO1ACCL        equ	1088	;# 
  3399   000441                     NCO1ACCH        equ	1089	;# 
  3400   000442                     NCO1ACCU        equ	1090	;# 
  3401   000443                     NCO1INC         equ	1091	;# 
  3402   000443                     NCO1INCL        equ	1091	;# 
  3403   000444                     NCO1INCH        equ	1092	;# 
  3404   000445                     NCO1INCU        equ	1093	;# 
  3405   000446                     NCO1CON         equ	1094	;# 
  3406   000447                     NCO1CLK         equ	1095	;# 
  3407   000448                     NCO2ACC         equ	1096	;# 
  3408   000448                     NCO2ACCL        equ	1096	;# 
  3409   000449                     NCO2ACCH        equ	1097	;# 
  3410   00044A                     NCO2ACCU        equ	1098	;# 
  3411   00044B                     NCO2INC         equ	1099	;# 
  3412   00044B                     NCO2INCL        equ	1099	;# 
  3413   00044C                     NCO2INCH        equ	1100	;# 
  3414   00044D                     NCO2INCU        equ	1101	;# 
  3415   00044E                     NCO2CON         equ	1102	;# 
  3416   00044F                     NCO2CLK         equ	1103	;# 
  3417   000450                     NCO3ACC         equ	1104	;# 
  3418   000450                     NCO3ACCL        equ	1104	;# 
  3419   000451                     NCO3ACCH        equ	1105	;# 
  3420   000452                     NCO3ACCU        equ	1106	;# 
  3421   000453                     NCO3INC         equ	1107	;# 
  3422   000453                     NCO3INCL        equ	1107	;# 
  3423   000454                     NCO3INCH        equ	1108	;# 
  3424   000455                     NCO3INCU        equ	1109	;# 
  3425   000456                     NCO3CON         equ	1110	;# 
  3426   000457                     NCO3CLK         equ	1111	;# 
  3427   000459                     IVTLOCK         equ	1113	;# 
  3428   00045A                     IVTAD           equ	1114	;# 
  3429   00045A                     IVTADL          equ	1114	;# 
  3430   00045B                     IVTADH          equ	1115	;# 
  3431   00045C                     IVTADU          equ	1116	;# 
  3432   00045D                     IVTBASE         equ	1117	;# 
  3433   00045D                     IVTBASEL        equ	1117	;# 
  3434   00045E                     IVTBASEH        equ	1118	;# 
  3435   00045F                     IVTBASEU        equ	1119	;# 
  3436   000460                     PWM1ERS         equ	1120	;# 
  3437   000461                     PWM1CLK         equ	1121	;# 
  3438   000462                     PWM1LDS         equ	1122	;# 
  3439   000463                     PWM1PR          equ	1123	;# 
  3440   000463                     PWM1PRL         equ	1123	;# 
  3441   000464                     PWM1PRH         equ	1124	;# 
  3442   000465                     PWM1CPRE        equ	1125	;# 
  3443   000466                     PWM1PIPOS       equ	1126	;# 
  3444   000467                     PWM1GIR         equ	1127	;# 
  3445   000468                     PWM1GIE         equ	1128	;# 
  3446   000469                     PWM1CON         equ	1129	;# 
  3447   00046A                     PWM1S1CFG       equ	1130	;# 
  3448   00046B                     PWM1S1P1        equ	1131	;# 
  3449   00046B                     PWM1S1P1L       equ	1131	;# 
  3450   00046C                     PWM1S1P1H       equ	1132	;# 
  3451   00046D                     PWM1S1P2        equ	1133	;# 
  3452   00046D                     PWM1S1P2L       equ	1133	;# 
  3453   00046E                     PWM1S1P2H       equ	1134	;# 
  3454   00046F                     PWM2ERS         equ	1135	;# 
  3455   000470                     PWM2CLK         equ	1136	;# 
  3456   000471                     PWM2LDS         equ	1137	;# 
  3457   000472                     PWM2PR          equ	1138	;# 
  3458   000472                     PWM2PRL         equ	1138	;# 
  3459   000473                     PWM2PRH         equ	1139	;# 
  3460   000474                     PWM2CPRE        equ	1140	;# 
  3461   000475                     PWM2PIPOS       equ	1141	;# 
  3462   000476                     PWM2GIR         equ	1142	;# 
  3463   000477                     PWM2GIE         equ	1143	;# 
  3464   000478                     PWM2CON         equ	1144	;# 
  3465   000479                     PWM2S1CFG       equ	1145	;# 
  3466   00047A                     PWM2S1P1        equ	1146	;# 
  3467   00047A                     PWM2S1P1L       equ	1146	;# 
  3468   00047B                     PWM2S1P1H       equ	1147	;# 
  3469   00047C                     PWM2S1P2        equ	1148	;# 
  3470   00047C                     PWM2S1P2L       equ	1148	;# 
  3471   00047D                     PWM2S1P2H       equ	1149	;# 
  3472   00047E                     PWM3ERS         equ	1150	;# 
  3473   00047F                     PWM3CLK         equ	1151	;# 
  3474   000480                     PWM3LDS         equ	1152	;# 
  3475   000481                     PWM3PR          equ	1153	;# 
  3476   000481                     PWM3PRL         equ	1153	;# 
  3477   000482                     PWM3PRH         equ	1154	;# 
  3478   000483                     PWM3CPRE        equ	1155	;# 
  3479   000484                     PWM3PIPOS       equ	1156	;# 
  3480   000485                     PWM3GIR         equ	1157	;# 
  3481   000486                     PWM3GIE         equ	1158	;# 
  3482   000487                     PWM3CON         equ	1159	;# 
  3483   000488                     PWM3S1CFG       equ	1160	;# 
  3484   000489                     PWM3S1P1        equ	1161	;# 
  3485   000489                     PWM3S1P1L       equ	1161	;# 
  3486   00048A                     PWM3S1P1H       equ	1162	;# 
  3487   00048B                     PWM3S1P2        equ	1163	;# 
  3488   00048B                     PWM3S1P2L       equ	1163	;# 
  3489   00048C                     PWM3S1P2H       equ	1164	;# 
  3490   00049C                     PWMLOAD         equ	1180	;# 
  3491   00049D                     PWMEN           equ	1181	;# 
  3492   00049E                     PIE0            equ	1182	;# 
  3493   00049F                     PIE1            equ	1183	;# 
  3494   0004A0                     PIE2            equ	1184	;# 
  3495   0004A1                     PIE3            equ	1185	;# 
  3496   0004A2                     PIE4            equ	1186	;# 
  3497   0004A3                     PIE5            equ	1187	;# 
  3498   0004A4                     PIE6            equ	1188	;# 
  3499   0004A5                     PIE7            equ	1189	;# 
  3500   0004A6                     PIE8            equ	1190	;# 
  3501   0004A7                     PIE9            equ	1191	;# 
  3502   0004A8                     PIE10           equ	1192	;# 
  3503   0004A9                     PIE11           equ	1193	;# 
  3504   0004AA                     PIE12           equ	1194	;# 
  3505   0004AB                     PIE13           equ	1195	;# 
  3506   0004AC                     PIE14           equ	1196	;# 
  3507   0004AD                     PIE15           equ	1197	;# 
  3508   0004AE                     PIR0            equ	1198	;# 
  3509   0004AF                     PIR1            equ	1199	;# 
  3510   0004B0                     PIR2            equ	1200	;# 
  3511   0004B1                     PIR3            equ	1201	;# 
  3512   0004B2                     PIR4            equ	1202	;# 
  3513   0004B3                     PIR5            equ	1203	;# 
  3514   0004B4                     PIR6            equ	1204	;# 
  3515   0004B5                     PIR7            equ	1205	;# 
  3516   0004B6                     PIR8            equ	1206	;# 
  3517   0004B7                     PIR9            equ	1207	;# 
  3518   0004B8                     PIR10           equ	1208	;# 
  3519   0004B9                     PIR11           equ	1209	;# 
  3520   0004BA                     PIR12           equ	1210	;# 
  3521   0004BB                     PIR13           equ	1211	;# 
  3522   0004BC                     PIR14           equ	1212	;# 
  3523   0004BD                     PIR15           equ	1213	;# 
  3524   0004BE                     LATA            equ	1214	;# 
  3525   0004BF                     LATB            equ	1215	;# 
  3526   0004C0                     LATC            equ	1216	;# 
  3527   0004C1                     LATD            equ	1217	;# 
  3528   0004C2                     LATE            equ	1218	;# 
  3529   0004C3                     LATF            equ	1219	;# 
  3530   0004C6                     TRISA           equ	1222	;# 
  3531   0004C7                     TRISB           equ	1223	;# 
  3532   0004C8                     TRISC           equ	1224	;# 
  3533   0004C9                     TRISD           equ	1225	;# 
  3534   0004CA                     TRISE           equ	1226	;# 
  3535   0004CB                     TRISF           equ	1227	;# 
  3536   0004CE                     PORTA           equ	1230	;# 
  3537   0004CF                     PORTB           equ	1231	;# 
  3538   0004D0                     PORTC           equ	1232	;# 
  3539   0004D1                     PORTD           equ	1233	;# 
  3540   0004D2                     PORTE           equ	1234	;# 
  3541   0004D3                     PORTF           equ	1235	;# 
  3542   0004D6                     INTCON0         equ	1238	;# 
  3543   0004D7                     INTCON1         equ	1239	;# 
  3544   0004D8                     STATUS          equ	1240	;# 
  3545   0004D9                     FSR2            equ	1241	;# 
  3546   0004D9                     FSR2L           equ	1241	;# 
  3547   0004DA                     FSR2H           equ	1242	;# 
  3548   0004DB                     PLUSW2          equ	1243	;# 
  3549   0004DC                     PREINC2         equ	1244	;# 
  3550   0004DD                     POSTDEC2        equ	1245	;# 
  3551   0004DE                     POSTINC2        equ	1246	;# 
  3552   0004DF                     INDF2           equ	1247	;# 
  3553   0004E0                     BSR             equ	1248	;# 
  3554   0004E1                     FSR1            equ	1249	;# 
  3555   0004E1                     FSR1L           equ	1249	;# 
  3556   0004E2                     FSR1H           equ	1250	;# 
  3557   0004E3                     PLUSW1          equ	1251	;# 
  3558   0004E4                     PREINC1         equ	1252	;# 
  3559   0004E5                     POSTDEC1        equ	1253	;# 
  3560   0004E6                     POSTINC1        equ	1254	;# 
  3561   0004E7                     INDF1           equ	1255	;# 
  3562   0004E8                     WREG            equ	1256	;# 
  3563   0004E9                     FSR0            equ	1257	;# 
  3564   0004E9                     FSR0L           equ	1257	;# 
  3565   0004EA                     FSR0H           equ	1258	;# 
  3566   0004EB                     PLUSW0          equ	1259	;# 
  3567   0004EC                     PREINC0         equ	1260	;# 
  3568   0004ED                     POSTDEC0        equ	1261	;# 
  3569   0004EE                     POSTINC0        equ	1262	;# 
  3570   0004EF                     INDF0           equ	1263	;# 
  3571   0004F0                     PCON0           equ	1264	;# 
  3572   0004F1                     PCON1           equ	1265	;# 
  3573   0004F2                     CPUDOZE         equ	1266	;# 
  3574   0004F3                     PROD            equ	1267	;# 
  3575   0004F3                     PRODL           equ	1267	;# 
  3576   0004F4                     PRODH           equ	1268	;# 
  3577   0004F5                     TABLAT          equ	1269	;# 
  3578   0004F6                     TBLPTR          equ	1270	;# 
  3579   0004F6                     TBLPTRL         equ	1270	;# 
  3580   0004F7                     TBLPTRH         equ	1271	;# 
  3581   0004F8                     TBLPTRU         equ	1272	;# 
  3582   0004F9                     PCLAT           equ	1273	;# 
  3583   0004F9                     PCL             equ	1273	;# 
  3584   0004FA                     PCLATH          equ	1274	;# 
  3585   0004FB                     PCLATU          equ	1275	;# 
  3586   0004FC                     STKPTR          equ	1276	;# 
  3587   0004FD                     TOS             equ	1277	;# 
  3588   0004FD                     TOSL            equ	1277	;# 
  3589   0004FE                     TOSH            equ	1278	;# 
  3590   0004FF                     TOSU            equ	1279	;# 
  3591   000039                     CLKRCON         equ	57	;# 
  3592   00003A                     CLKRCLK         equ	58	;# 
  3593   000040                     NVMCON0         equ	64	;# 
  3594   000041                     NVMCON1         equ	65	;# 
  3595   000042                     NVMLOCK         equ	66	;# 
  3596   000043                     NVMADR          equ	67	;# 
  3597   000043                     NVMADRL         equ	67	;# 
  3598   000044                     NVMADRH         equ	68	;# 
  3599   000045                     NVMADRU         equ	69	;# 
  3600   000046                     NVMDAT          equ	70	;# 
  3601   000046                     NVMDATL         equ	70	;# 
  3602   000047                     NVMDATH         equ	71	;# 
  3603   000048                     VREGCON         equ	72	;# 
  3604   000049                     BORCON          equ	73	;# 
  3605   00004A                     HLVDCON0        equ	74	;# 
  3606   00004B                     HLVDCON1        equ	75	;# 
  3607   00004C                     ZCDCON          equ	76	;# 
  3608   000060                     PMD0            equ	96	;# 
  3609   000061                     PMD1            equ	97	;# 
  3610   000063                     PMD3            equ	99	;# 
  3611   000064                     PMD4            equ	100	;# 
  3612   000065                     PMD5            equ	101	;# 
  3613   000066                     PMD6            equ	102	;# 
  3614   000067                     PMD7            equ	103	;# 
  3615   000068                     PMD8            equ	104	;# 
  3616   00006A                     MD1CON0         equ	106	;# 
  3617   00006B                     MD1CON1         equ	107	;# 
  3618   00006C                     MD1SRC          equ	108	;# 
  3619   00006D                     MD1CARL         equ	109	;# 
  3620   00006E                     MD1CARH         equ	110	;# 
  3621   00006F                     CMOUT           equ	111	;# 
  3622   000070                     CM1CON0         equ	112	;# 
  3623   000071                     CM1CON1         equ	113	;# 
  3624   000072                     CM1NCH          equ	114	;# 
  3625   000073                     CM1PCH          equ	115	;# 
  3626   000074                     CM2CON0         equ	116	;# 
  3627   000075                     CM2CON1         equ	117	;# 
  3628   000076                     CM2NCH          equ	118	;# 
  3629   000077                     CM2PCH          equ	119	;# 
  3630   000078                     WDTCON0         equ	120	;# 
  3631   000079                     WDTCON1         equ	121	;# 
  3632   00007A                     WDTPS           equ	122	;# 
  3633   00007A                     WDTPSL          equ	122	;# 
  3634   00007B                     WDTPSH          equ	123	;# 
  3635   00007C                     WDTTMR          equ	124	;# 
  3636   00007D                     DAC1DAT         equ	125	;# 
  3637   00007D                     DAC1DATL        equ	125	;# 
  3638   00007F                     DAC1CON         equ	127	;# 
  3639   000080                     SPI1RXB         equ	128	;# 
  3640   000081                     SPI1TXB         equ	129	;# 
  3641   000082                     SPI1TCNT        equ	130	;# 
  3642   000082                     SPI1TCNTL       equ	130	;# 
  3643   000083                     SPI1TCNTH       equ	131	;# 
  3644   000084                     SPI1CON0        equ	132	;# 
  3645   000085                     SPI1CON1        equ	133	;# 
  3646   000086                     SPI1CON2        equ	134	;# 
  3647   000087                     SPI1STATUS      equ	135	;# 
  3648   000088                     SPI1TWIDTH      equ	136	;# 
  3649   000089                     SPI1BAUD        equ	137	;# 
  3650   00008A                     SPI1INTF        equ	138	;# 
  3651   00008B                     SPI1INTE        equ	139	;# 
  3652   00008C                     SPI1CLK         equ	140	;# 
  3653   00008D                     SPI2RXB         equ	141	;# 
  3654   00008E                     SPI2TXB         equ	142	;# 
  3655   00008F                     SPI2TCNT        equ	143	;# 
  3656   00008F                     SPI2TCNTL       equ	143	;# 
  3657   000090                     SPI2TCNTH       equ	144	;# 
  3658   000091                     SPI2CON0        equ	145	;# 
  3659   000092                     SPI2CON1        equ	146	;# 
  3660   000093                     SPI2CON2        equ	147	;# 
  3661   000094                     SPI2STATUS      equ	148	;# 
  3662   000095                     SPI2TWIDTH      equ	149	;# 
  3663   000096                     SPI2BAUD        equ	150	;# 
  3664   000097                     SPI2INTF        equ	151	;# 
  3665   000098                     SPI2INTE        equ	152	;# 
  3666   000099                     SPI2CLK         equ	153	;# 
  3667   0000AC                     ACTCON          equ	172	;# 
  3668   0000AD                     OSCCON1         equ	173	;# 
  3669   0000AE                     OSCCON2         equ	174	;# 
  3670   0000AF                     OSCCON3         equ	175	;# 
  3671   0000B0                     OSCTUNE         equ	176	;# 
  3672   0000B1                     OSCFRQ          equ	177	;# 
  3673   0000B1                     OSCFREQ         equ	177	;# 
  3674   0000B2                     OSCSTAT         equ	178	;# 
  3675   0000B2                     OSCSTAT1        equ	178	;# 
  3676   0000B3                     OSCEN           equ	179	;# 
  3677   0000B4                     PRLOCK          equ	180	;# 
  3678   0000B5                     SCANPR          equ	181	;# 
  3679   0000B6                     DMA1PR          equ	182	;# 
  3680   0000B7                     DMA2PR          equ	183	;# 
  3681   0000B8                     DMA3PR          equ	184	;# 
  3682   0000B9                     DMA4PR          equ	185	;# 
  3683   0000BA                     DMA5PR          equ	186	;# 
  3684   0000BB                     DMA6PR          equ	187	;# 
  3685   0000BE                     MAINPR          equ	190	;# 
  3686   0000BF                     ISRPR           equ	191	;# 
  3687   0000D4                     CLCDATA         equ	212	;# 
  3688   0000D5                     CLCSELECT       equ	213	;# 
  3689   0000D6                     CLCnCON         equ	214	;# 
  3690   0000D7                     CLCnPOL         equ	215	;# 
  3691   0000D8                     CLCnSEL0        equ	216	;# 
  3692   0000D9                     CLCnSEL1        equ	217	;# 
  3693   0000DA                     CLCnSEL2        equ	218	;# 
  3694   0000DB                     CLCnSEL3        equ	219	;# 
  3695   0000DC                     CLCnGLS0        equ	220	;# 
  3696   0000DD                     CLCnGLS1        equ	221	;# 
  3697   0000DE                     CLCnGLS2        equ	222	;# 
  3698   0000DF                     CLCnGLS3        equ	223	;# 
  3699   0000E8                     DMASELECT       equ	232	;# 
  3700   0000E9                     DMAnBUF         equ	233	;# 
  3701   0000EA                     DMAnDCNT        equ	234	;# 
  3702   0000EA                     DMAnDCNTL       equ	234	;# 
  3703   0000EB                     DMAnDCNTH       equ	235	;# 
  3704   0000EC                     DMAnDPTR        equ	236	;# 
  3705   0000EC                     DMAnDPTRL       equ	236	;# 
  3706   0000ED                     DMAnDPTRH       equ	237	;# 
  3707   0000EE                     DMAnDSZ         equ	238	;# 
  3708   0000EE                     DMAnDSZL        equ	238	;# 
  3709   0000EF                     DMAnDSZH        equ	239	;# 
  3710   0000F0                     DMAnDSA         equ	240	;# 
  3711   0000F0                     DMAnDSAL        equ	240	;# 
  3712   0000F1                     DMAnDSAH        equ	241	;# 
  3713   0000F2                     DMAnSCNT        equ	242	;# 
  3714   0000F2                     DMAnSCNTL       equ	242	;# 
  3715   0000F3                     DMAnSCNTH       equ	243	;# 
  3716   0000F4                     DMAnSPTR        equ	244	;# 
  3717   0000F4                     DMAnSPTRL       equ	244	;# 
  3718   0000F5                     DMAnSPTRH       equ	245	;# 
  3719   0000F6                     DMAnSPTRU       equ	246	;# 
  3720   0000F7                     DMAnSSZ         equ	247	;# 
  3721   0000F7                     DMAnSSZL        equ	247	;# 
  3722   0000F8                     DMAnSSZH        equ	248	;# 
  3723   0000F9                     DMAnSSA         equ	249	;# 
  3724   0000F9                     DMAnSSAL        equ	249	;# 
  3725   0000FA                     DMAnSSAH        equ	250	;# 
  3726   0000FB                     DMAnSSAU        equ	251	;# 
  3727   0000FC                     DMAnCON0        equ	252	;# 
  3728   0000FD                     DMAnCON1        equ	253	;# 
  3729   0000FE                     DMAnAIRQ        equ	254	;# 
  3730   0000FF                     DMAnSIRQ        equ	255	;# 
  3731   000200                     PPSLOCK         equ	512	;# 
  3732   000201                     RA0PPS          equ	513	;# 
  3733   000202                     RA1PPS          equ	514	;# 
  3734   000203                     RA2PPS          equ	515	;# 
  3735   000204                     RA3PPS          equ	516	;# 
  3736   000205                     RA4PPS          equ	517	;# 
  3737   000206                     RA5PPS          equ	518	;# 
  3738   000207                     RA6PPS          equ	519	;# 
  3739   000208                     RA7PPS          equ	520	;# 
  3740   000209                     RB0PPS          equ	521	;# 
  3741   00020A                     RB1PPS          equ	522	;# 
  3742   00020B                     RB2PPS          equ	523	;# 
  3743   00020C                     RB3PPS          equ	524	;# 
  3744   00020D                     RB4PPS          equ	525	;# 
  3745   00020E                     RB5PPS          equ	526	;# 
  3746   00020F                     RB6PPS          equ	527	;# 
  3747   000210                     RB7PPS          equ	528	;# 
  3748   000211                     RC0PPS          equ	529	;# 
  3749   000212                     RC1PPS          equ	530	;# 
  3750   000213                     RC2PPS          equ	531	;# 
  3751   000214                     RC3PPS          equ	532	;# 
  3752   000215                     RC4PPS          equ	533	;# 
  3753   000216                     RC5PPS          equ	534	;# 
  3754   000217                     RC6PPS          equ	535	;# 
  3755   000218                     RC7PPS          equ	536	;# 
  3756   000219                     RD0PPS          equ	537	;# 
  3757   00021A                     RD1PPS          equ	538	;# 
  3758   00021B                     RD2PPS          equ	539	;# 
  3759   00021C                     RD3PPS          equ	540	;# 
  3760   00021D                     RD4PPS          equ	541	;# 
  3761   00021E                     RD5PPS          equ	542	;# 
  3762   00021F                     RD6PPS          equ	543	;# 
  3763   000220                     RD7PPS          equ	544	;# 
  3764   000221                     RE0PPS          equ	545	;# 
  3765   000222                     RE1PPS          equ	546	;# 
  3766   000223                     RE2PPS          equ	547	;# 
  3767   000229                     RF0PPS          equ	553	;# 
  3768   00022A                     RF1PPS          equ	554	;# 
  3769   00022B                     RF2PPS          equ	555	;# 
  3770   00022C                     RF3PPS          equ	556	;# 
  3771   00022D                     RF4PPS          equ	557	;# 
  3772   00022E                     RF5PPS          equ	558	;# 
  3773   00022F                     RF6PPS          equ	559	;# 
  3774   000230                     RF7PPS          equ	560	;# 
  3775   00023E                     INT0PPS         equ	574	;# 
  3776   00023F                     INT1PPS         equ	575	;# 
  3777   000240                     INT2PPS         equ	576	;# 
  3778   000241                     T0CKIPPS        equ	577	;# 
  3779   000242                     T1CKIPPS        equ	578	;# 
  3780   000243                     T1GPPS          equ	579	;# 
  3781   000244                     T3CKIPPS        equ	580	;# 
  3782   000245                     T3GPPS          equ	581	;# 
  3783   000246                     T5CKIPPS        equ	582	;# 
  3784   000247                     T5GPPS          equ	583	;# 
  3785   000248                     T2INPPS         equ	584	;# 
  3786   000249                     T4INPPS         equ	585	;# 
  3787   00024A                     T6INPPS         equ	586	;# 
  3788   00024F                     CCP1PPS         equ	591	;# 
  3789   000250                     CCP2PPS         equ	592	;# 
  3790   000251                     CCP3PPS         equ	593	;# 
  3791   000253                     PWM1ERSPPS      equ	595	;# 
  3792   000254                     PWM2ERSPPS      equ	596	;# 
  3793   000255                     PWM3ERSPPS      equ	597	;# 
  3794   000257                     PWMIN0PPS       equ	599	;# 
  3795   000258                     PWMIN1PPS       equ	600	;# 
  3796   000259                     SMT1WINPPS      equ	601	;# 
  3797   00025A                     SMT1SIGPPS      equ	602	;# 
  3798   00025B                     CWG1PPS         equ	603	;# 
  3799   00025B                     CWG1INPPS       equ	603	;# 
  3800   00025C                     CWG2PPS         equ	604	;# 
  3801   00025C                     CWG2INPPS       equ	604	;# 
  3802   00025D                     CWG3PPS         equ	605	;# 
  3803   00025D                     CWG3INPPS       equ	605	;# 
  3804   00025E                     MD1CARLPPS      equ	606	;# 
  3805   00025E                     MDCARLPPS       equ	606	;# 
  3806   00025F                     MD1CARHPPS      equ	607	;# 
  3807   00025F                     MDCARHPPS       equ	607	;# 
  3808   000260                     MD1SRCPPS       equ	608	;# 
  3809   000260                     MDSRCPPS        equ	608	;# 
  3810   000261                     CLCIN0PPS       equ	609	;# 
  3811   000262                     CLCIN1PPS       equ	610	;# 
  3812   000263                     CLCIN2PPS       equ	611	;# 
  3813   000264                     CLCIN3PPS       equ	612	;# 
  3814   000265                     CLCIN4PPS       equ	613	;# 
  3815   000266                     CLCIN5PPS       equ	614	;# 
  3816   000267                     CLCIN6PPS       equ	615	;# 
  3817   000268                     CLCIN7PPS       equ	616	;# 
  3818   000269                     ADACTPPS        equ	617	;# 
  3819   00026A                     SPI1SCKPPS      equ	618	;# 
  3820   00026B                     SPI1SDIPPS      equ	619	;# 
  3821   00026C                     SPI1SSPPS       equ	620	;# 
  3822   00026D                     SPI2SCKPPS      equ	621	;# 
  3823   00026E                     SPI2SDIPPS      equ	622	;# 
  3824   00026F                     SPI2SSPPS       equ	623	;# 
  3825   000270                     I2C1SDAPPS      equ	624	;# 
  3826   000271                     I2C1SCLPPS      equ	625	;# 
  3827   000272                     U1RXPPS         equ	626	;# 
  3828   000273                     U1CTSPPS        equ	627	;# 
  3829   000274                     U2RXPPS         equ	628	;# 
  3830   000275                     U2CTSPPS        equ	629	;# 
  3831   000276                     U3RXPPS         equ	630	;# 
  3832   000277                     U3CTSPPS        equ	631	;# 
  3833   000278                     U4RXPPS         equ	632	;# 
  3834   000279                     U4CTSPPS        equ	633	;# 
  3835   00027A                     U5RXPPS         equ	634	;# 
  3836   00027B                     U5CTSPPS        equ	635	;# 
  3837   000286                     RC4I2C          equ	646	;# 
  3838   000287                     RC3I2C          equ	647	;# 
  3839   000288                     RB2I2C          equ	648	;# 
  3840   000289                     RB1I2C          equ	649	;# 
  3841   00028B                     I2C1RXB         equ	651	;# 
  3842   00028C                     I2C1TXB         equ	652	;# 
  3843   00028D                     I2C1CNT         equ	653	;# 
  3844   00028E                     I2C1ADB0        equ	654	;# 
  3845   00028F                     I2C1ADB1        equ	655	;# 
  3846   000290                     I2C1ADR0        equ	656	;# 
  3847   000291                     I2C1ADR1        equ	657	;# 
  3848   000292                     I2C1ADR2        equ	658	;# 
  3849   000293                     I2C1ADR3        equ	659	;# 
  3850   000294                     I2C1CON0        equ	660	;# 
  3851   000295                     I2C1CON1        equ	661	;# 
  3852   000296                     I2C1CON2        equ	662	;# 
  3853   000297                     I2C1ERR         equ	663	;# 
  3854   000298                     I2C1STAT0       equ	664	;# 
  3855   000299                     I2C1STAT1       equ	665	;# 
  3856   00029A                     I2C1PIR         equ	666	;# 
  3857   00029B                     I2C1PIE         equ	667	;# 
  3858   00029C                     I2C1CLK         equ	668	;# 
  3859   00029D                     I2C1BTO         equ	669	;# 
  3860   0002A1                     U1RXB           equ	673	;# 
  3861   0002A1                     U1RXBL          equ	673	;# 
  3862   0002A2                     U1RXCHK         equ	674	;# 
  3863   0002A3                     U1TXB           equ	675	;# 
  3864   0002A3                     U1TXBL          equ	675	;# 
  3865   0002A4                     U1TXCHK         equ	676	;# 
  3866   0002A5                     U1P1            equ	677	;# 
  3867   0002A5                     U1P1L           equ	677	;# 
  3868   0002A6                     U1P1H           equ	678	;# 
  3869   0002A7                     U1P2            equ	679	;# 
  3870   0002A7                     U1P2L           equ	679	;# 
  3871   0002A8                     U1P2H           equ	680	;# 
  3872   0002A9                     U1P3            equ	681	;# 
  3873   0002A9                     U1P3L           equ	681	;# 
  3874   0002AA                     U1P3H           equ	682	;# 
  3875   0002AB                     U1CON0          equ	683	;# 
  3876   0002AC                     U1CON1          equ	684	;# 
  3877   0002AD                     U1CON2          equ	685	;# 
  3878   0002AE                     U1BRG           equ	686	;# 
  3879   0002AE                     U1BRGL          equ	686	;# 
  3880   0002AF                     U1BRGH          equ	687	;# 
  3881   0002B0                     U1FIFO          equ	688	;# 
  3882   0002B1                     U1UIR           equ	689	;# 
  3883   0002B2                     U1ERRIR         equ	690	;# 
  3884   0002B3                     U1ERRIE         equ	691	;# 
  3885   0002B4                     U2RXB           equ	692	;# 
  3886   0002B4                     U2RXBL          equ	692	;# 
  3887   0002B6                     U2TXB           equ	694	;# 
  3888   0002B6                     U2TXBL          equ	694	;# 
  3889   0002B8                     U2P1            equ	696	;# 
  3890   0002B8                     U2P1L           equ	696	;# 
  3891   0002BA                     U2P2            equ	698	;# 
  3892   0002BA                     U2P2L           equ	698	;# 
  3893   0002BC                     U2P3            equ	700	;# 
  3894   0002BC                     U2P3L           equ	700	;# 
  3895   0002BE                     U2CON0          equ	702	;# 
  3896   0002BF                     U2CON1          equ	703	;# 
  3897   0002C0                     U2CON2          equ	704	;# 
  3898   0002C1                     U2BRG           equ	705	;# 
  3899   0002C1                     U2BRGL          equ	705	;# 
  3900   0002C2                     U2BRGH          equ	706	;# 
  3901   0002C3                     U2FIFO          equ	707	;# 
  3902   0002C4                     U2UIR           equ	708	;# 
  3903   0002C5                     U2ERRIR         equ	709	;# 
  3904   0002C6                     U2ERRIE         equ	710	;# 
  3905   0002C7                     U3RXB           equ	711	;# 
  3906   0002C7                     U3RXBL          equ	711	;# 
  3907   0002C9                     U3TXB           equ	713	;# 
  3908   0002C9                     U3TXBL          equ	713	;# 
  3909   0002CB                     U3P1            equ	715	;# 
  3910   0002CB                     U3P1L           equ	715	;# 
  3911   0002CD                     U3P2            equ	717	;# 
  3912   0002CD                     U3P2L           equ	717	;# 
  3913   0002CF                     U3P3            equ	719	;# 
  3914   0002CF                     U3P3L           equ	719	;# 
  3915   0002D1                     U3CON0          equ	721	;# 
  3916   0002D2                     U3CON1          equ	722	;# 
  3917   0002D3                     U3CON2          equ	723	;# 
  3918   0002D4                     U3BRG           equ	724	;# 
  3919   0002D4                     U3BRGL          equ	724	;# 
  3920   0002D5                     U3BRGH          equ	725	;# 
  3921   0002D6                     U3FIFO          equ	726	;# 
  3922   0002D7                     U3UIR           equ	727	;# 
  3923   0002D8                     U3ERRIR         equ	728	;# 
  3924   0002D9                     U3ERRIE         equ	729	;# 
  3925   0002DA                     U4RXB           equ	730	;# 
  3926   0002DA                     U4RXBL          equ	730	;# 
  3927   0002DC                     U4TXB           equ	732	;# 
  3928   0002DC                     U4TXBL          equ	732	;# 
  3929   0002DE                     U4P1            equ	734	;# 
  3930   0002DE                     U4P1L           equ	734	;# 
  3931   0002E0                     U4P2            equ	736	;# 
  3932   0002E0                     U4P2L           equ	736	;# 
  3933   0002E2                     U4P3            equ	738	;# 
  3934   0002E2                     U4P3L           equ	738	;# 
  3935   0002E4                     U4CON0          equ	740	;# 
  3936   0002E5                     U4CON1          equ	741	;# 
  3937   0002E6                     U4CON2          equ	742	;# 
  3938   0002E7                     U4BRG           equ	743	;# 
  3939   0002E7                     U4BRGL          equ	743	;# 
  3940   0002E8                     U4BRGH          equ	744	;# 
  3941   0002E9                     U4FIFO          equ	745	;# 
  3942   0002EA                     U4UIR           equ	746	;# 
  3943   0002EB                     U4ERRIR         equ	747	;# 
  3944   0002EC                     U4ERRIE         equ	748	;# 
  3945   0002ED                     U5RXB           equ	749	;# 
  3946   0002ED                     U5RXBL          equ	749	;# 
  3947   0002EF                     U5TXB           equ	751	;# 
  3948   0002EF                     U5TXBL          equ	751	;# 
  3949   0002F1                     U5P1            equ	753	;# 
  3950   0002F1                     U5P1L           equ	753	;# 
  3951   0002F3                     U5P2            equ	755	;# 
  3952   0002F3                     U5P2L           equ	755	;# 
  3953   0002F5                     U5P3            equ	757	;# 
  3954   0002F5                     U5P3L           equ	757	;# 
  3955   0002F7                     U5CON0          equ	759	;# 
  3956   0002F8                     U5CON1          equ	760	;# 
  3957   0002F9                     U5CON2          equ	761	;# 
  3958   0002FA                     U5BRG           equ	762	;# 
  3959   0002FA                     U5BRGL          equ	762	;# 
  3960   0002FB                     U5BRGH          equ	763	;# 
  3961   0002FC                     U5FIFO          equ	764	;# 
  3962   0002FD                     U5UIR           equ	765	;# 
  3963   0002FE                     U5ERRIR         equ	766	;# 
  3964   0002FF                     U5ERRIE         equ	767	;# 
  3965   000300                     SMT1TMR         equ	768	;# 
  3966   000300                     SMT1TMRL        equ	768	;# 
  3967   000301                     SMT1TMRH        equ	769	;# 
  3968   000302                     SMT1TMRU        equ	770	;# 
  3969   000303                     SMT1CPR         equ	771	;# 
  3970   000303                     SMT1CPRL        equ	771	;# 
  3971   000304                     SMT1CPRH        equ	772	;# 
  3972   000305                     SMT1CPRU        equ	773	;# 
  3973   000306                     SMT1CPW         equ	774	;# 
  3974   000306                     SMT1CPWL        equ	774	;# 
  3975   000307                     SMT1CPWH        equ	775	;# 
  3976   000308                     SMT1CPWU        equ	776	;# 
  3977   000309                     SMT1PR          equ	777	;# 
  3978   000309                     SMT1PRL         equ	777	;# 
  3979   00030A                     SMT1PRH         equ	778	;# 
  3980   00030B                     SMT1PRU         equ	779	;# 
  3981   00030C                     SMT1CON0        equ	780	;# 
  3982   00030D                     SMT1CON1        equ	781	;# 
  3983   00030E                     SMT1STAT        equ	782	;# 
  3984   00030F                     SMT1CLK         equ	783	;# 
  3985   000310                     SMT1SIG         equ	784	;# 
  3986   000311                     SMT1WIN         equ	785	;# 
  3987   000318                     TMR0L           equ	792	;# 
  3988   000318                     TMR0            equ	792	;# 
  3989   000319                     TMR0H           equ	793	;# 
  3990   000319                     PR0             equ	793	;# 
  3991   00031A                     T0CON0          equ	794	;# 
  3992   00031B                     T0CON1          equ	795	;# 
  3993   00031C                     TMR1            equ	796	;# 
  3994   00031C                     TMR1L           equ	796	;# 
  3995   00031D                     TMR1H           equ	797	;# 
  3996   00031E                     T1CON           equ	798	;# 
  3997   00031E                     TMR1CON         equ	798	;# 
  3998   00031F                     T1GCON          equ	799	;# 
  3999   00031F                     TMR1GCON        equ	799	;# 
  4000   000320                     T1GATE          equ	800	;# 
  4001   000320                     TMR1GATE        equ	800	;# 
  4002   000321                     T1CLK           equ	801	;# 
  4003   000321                     TMR1CLK         equ	801	;# 
  4004   000321                     PR1             equ	801	;# 
  4005   000322                     T2TMR           equ	802	;# 
  4006   000322                     TMR2            equ	802	;# 
  4007   000323                     T2PR            equ	803	;# 
  4008   000323                     PR2             equ	803	;# 
  4009   000324                     T2CON           equ	804	;# 
  4010   000325                     T2HLT           equ	805	;# 
  4011   000326                     T2CLKCON        equ	806	;# 
  4012   000326                     T2CLK           equ	806	;# 
  4013   000327                     T2RST           equ	807	;# 
  4014   000328                     TMR3            equ	808	;# 
  4015   000328                     TMR3L           equ	808	;# 
  4016   000329                     TMR3H           equ	809	;# 
  4017   00032A                     T3CON           equ	810	;# 
  4018   00032A                     TMR3CON         equ	810	;# 
  4019   00032B                     T3GCON          equ	811	;# 
  4020   00032B                     TMR3GCON        equ	811	;# 
  4021   00032C                     T3GATE          equ	812	;# 
  4022   00032C                     TMR3GATE        equ	812	;# 
  4023   00032D                     T3CLK           equ	813	;# 
  4024   00032D                     TMR3CLK         equ	813	;# 
  4025   00032D                     PR3             equ	813	;# 
  4026   00032E                     T4TMR           equ	814	;# 
  4027   00032E                     TMR4            equ	814	;# 
  4028   00032F                     T4PR            equ	815	;# 
  4029   00032F                     PR4             equ	815	;# 
  4030   000330                     T4CON           equ	816	;# 
  4031   000331                     T4HLT           equ	817	;# 
  4032   000332                     T4CLKCON        equ	818	;# 
  4033   000332                     T4CLK           equ	818	;# 
  4034   000333                     T4RST           equ	819	;# 
  4035   000334                     TMR5            equ	820	;# 
  4036   000334                     TMR5L           equ	820	;# 
  4037   000335                     TMR5H           equ	821	;# 
  4038   000336                     T5CON           equ	822	;# 
  4039   000336                     TMR5CON         equ	822	;# 
  4040   000337                     T5GCON          equ	823	;# 
  4041   000337                     TMR5GCON        equ	823	;# 
  4042   000338                     T5GATE          equ	824	;# 
  4043   000338                     TMR5GATE        equ	824	;# 
  4044   000339                     T5CLK           equ	825	;# 
  4045   000339                     TMR5CLK         equ	825	;# 
  4046   000339                     PR5             equ	825	;# 
  4047   00033A                     T6TMR           equ	826	;# 
  4048   00033A                     TMR6            equ	826	;# 
  4049   00033B                     T6PR            equ	827	;# 
  4050   00033B                     PR6             equ	827	;# 
  4051   00033C                     T6CON           equ	828	;# 
  4052   00033D                     T6HLT           equ	829	;# 
  4053   00033E                     T6CLKCON        equ	830	;# 
  4054   00033E                     T6CLK           equ	830	;# 
  4055   00033F                     T6RST           equ	831	;# 
  4056   000340                     CCPR1           equ	832	;# 
  4057   000340                     CCPR1L          equ	832	;# 
  4058   000341                     CCPR1H          equ	833	;# 
  4059   000342                     CCP1CON         equ	834	;# 
  4060   000343                     CCP1CAP         equ	835	;# 
  4061   000344                     CCPR2           equ	836	;# 
  4062   000344                     CCPR2L          equ	836	;# 
  4063   000345                     CCPR2H          equ	837	;# 
  4064   000346                     CCP2CON         equ	838	;# 
  4065   000347                     CCP2CAP         equ	839	;# 
  4066   000348                     CCPR3           equ	840	;# 
  4067   000348                     CCPR3L          equ	840	;# 
  4068   000349                     CCPR3H          equ	841	;# 
  4069   00034A                     CCP3CON         equ	842	;# 
  4070   00034B                     CCP3CAP         equ	843	;# 
  4071   00034C                     CCPTMRS0        equ	844	;# 
  4072   00034F                     CRCDATA         equ	847	;# 
  4073   00034F                     CRCDATL         equ	847	;# 
  4074   000350                     CRCDATH         equ	848	;# 
  4075   000351                     CRCACC          equ	849	;# 
  4076   000351                     CRCACCL         equ	849	;# 
  4077   000352                     CRCACCH         equ	850	;# 
  4078   000353                     CRCSHFT         equ	851	;# 
  4079   000353                     CRCSHIFTL       equ	851	;# 
  4080   000354                     CRCSHIFTH       equ	852	;# 
  4081   000355                     CRCXOR          equ	853	;# 
  4082   000355                     CRCXORL         equ	853	;# 
  4083   000356                     CRCXORH         equ	854	;# 
  4084   000357                     CRCCON0         equ	855	;# 
  4085   000358                     CRCCON1         equ	856	;# 
  4086   00035A                     SCANLADR        equ	858	;# 
  4087   00035A                     SCANLADRL       equ	858	;# 
  4088   00035B                     SCANLADRH       equ	859	;# 
  4089   00035C                     SCANLADRU       equ	860	;# 
  4090   00035D                     SCANHADR        equ	861	;# 
  4091   00035D                     SCANHADRL       equ	861	;# 
  4092   00035E                     SCANHADRH       equ	862	;# 
  4093   00035F                     SCANHADRU       equ	863	;# 
  4094   000360                     SCANCON0        equ	864	;# 
  4095   000361                     SCANTRIG        equ	865	;# 
  4096   000362                     IPR0            equ	866	;# 
  4097   000363                     IPR1            equ	867	;# 
  4098   000364                     IPR2            equ	868	;# 
  4099   000365                     IPR3            equ	869	;# 
  4100   000366                     IPR4            equ	870	;# 
  4101   000367                     IPR5            equ	871	;# 
  4102   000368                     IPR6            equ	872	;# 
  4103   000369                     IPR7            equ	873	;# 
  4104   00036A                     IPR8            equ	874	;# 
  4105   00036B                     IPR9            equ	875	;# 
  4106   00036C                     IPR10           equ	876	;# 
  4107   00036D                     IPR11           equ	877	;# 
  4108   00036E                     IPR12           equ	878	;# 
  4109   00036F                     IPR13           equ	879	;# 
  4110   000370                     IPR14           equ	880	;# 
  4111   000371                     IPR15           equ	881	;# 
  4112   000373                     STATUS_CSHAD    equ	883	;# 
  4113   000374                     WREG_CSHAD      equ	884	;# 
  4114   000375                     BSR_CSHAD       equ	885	;# 
  4115   000376                     SHADCON         equ	886	;# 
  4116   000377                     STATUS_SHAD     equ	887	;# 
  4117   000378                     WREG_SHAD       equ	888	;# 
  4118   000379                     BSR_SHAD        equ	889	;# 
  4119   00037A                     PCLATH_SHAD     equ	890	;# 
  4120   00037B                     PCLATU_SHAD     equ	891	;# 
  4121   00037C                     FSR0SH          equ	892	;# 
  4122   00037C                     FSR0L_SHAD      equ	892	;# 
  4123   00037D                     FSR0H_SHAD      equ	893	;# 
  4124   00037E                     FSR1SH          equ	894	;# 
  4125   00037E                     FSR1L_SHAD      equ	894	;# 
  4126   00037F                     FSR1H_SHAD      equ	895	;# 
  4127   000380                     FSR2SH          equ	896	;# 
  4128   000380                     FSR2L_SHAD      equ	896	;# 
  4129   000381                     FSR2H_SHAD      equ	897	;# 
  4130   000382                     PRODSH          equ	898	;# 
  4131   000382                     PRODL_SHAD      equ	898	;# 
  4132   000383                     PRODH_SHAD      equ	899	;# 
  4133   0003BC                     CWG1CLK         equ	956	;# 
  4134   0003BC                     CWG1CLKCON      equ	956	;# 
  4135   0003BD                     CWG1ISM         equ	957	;# 
  4136   0003BD                     CWG1DAT         equ	957	;# 
  4137   0003BE                     CWG1DBR         equ	958	;# 
  4138   0003BF                     CWG1DBF         equ	959	;# 
  4139   0003C0                     CWG1CON0        equ	960	;# 
  4140   0003C1                     CWG1CON1        equ	961	;# 
  4141   0003C2                     CWG1AS0         equ	962	;# 
  4142   0003C3                     CWG1AS1         equ	963	;# 
  4143   0003C4                     CWG1STR         equ	964	;# 
  4144   0003C5                     CWG2CLK         equ	965	;# 
  4145   0003C5                     CWG2CLKCON      equ	965	;# 
  4146   0003C6                     CWG2ISM         equ	966	;# 
  4147   0003C6                     CWG2DAT         equ	966	;# 
  4148   0003C7                     CWG2DBR         equ	967	;# 
  4149   0003C8                     CWG2DBF         equ	968	;# 
  4150   0003C9                     CWG2CON0        equ	969	;# 
  4151   0003CA                     CWG2CON1        equ	970	;# 
  4152   0003CB                     CWG2AS0         equ	971	;# 
  4153   0003CC                     CWG2AS1         equ	972	;# 
  4154   0003CD                     CWG2STR         equ	973	;# 
  4155   0003CE                     CWG3CLK         equ	974	;# 
  4156   0003CE                     CWG3CLKCON      equ	974	;# 
  4157   0003CF                     CWG3ISM         equ	975	;# 
  4158   0003CF                     CWG3DAT         equ	975	;# 
  4159   0003D0                     CWG3DBR         equ	976	;# 
  4160   0003D1                     CWG3DBF         equ	977	;# 
  4161   0003D2                     CWG3CON0        equ	978	;# 
  4162   0003D3                     CWG3CON1        equ	979	;# 
  4163   0003D4                     CWG3AS0         equ	980	;# 
  4164   0003D5                     CWG3AS1         equ	981	;# 
  4165   0003D6                     CWG3STR         equ	982	;# 
  4166   0003D7                     FVRCON          equ	983	;# 
  4167   0003D8                     ADCPCON         equ	984	;# 
  4168   0003D8                     ADCP            equ	984	;# 
  4169   0003D9                     ADLTH           equ	985	;# 
  4170   0003D9                     ADLTHL          equ	985	;# 
  4171   0003DA                     ADLTHH          equ	986	;# 
  4172   0003DB                     ADUTH           equ	987	;# 
  4173   0003DB                     ADUTHL          equ	987	;# 
  4174   0003DC                     ADUTHH          equ	988	;# 
  4175   0003DD                     ADERR           equ	989	;# 
  4176   0003DD                     ADERRL          equ	989	;# 
  4177   0003DE                     ADERRH          equ	990	;# 
  4178   0003DF                     ADSTPT          equ	991	;# 
  4179   0003DF                     ADSTPTL         equ	991	;# 
  4180   0003E0                     ADSTPTH         equ	992	;# 
  4181   0003E1                     ADFLTR          equ	993	;# 
  4182   0003E1                     ADFLTRL         equ	993	;# 
  4183   0003E2                     ADFLTRH         equ	994	;# 
  4184   0003E3                     ADACC           equ	995	;# 
  4185   0003E3                     ADACCL          equ	995	;# 
  4186   0003E4                     ADACCH          equ	996	;# 
  4187   0003E5                     ADACCU          equ	997	;# 
  4188   0003E6                     ADCNT           equ	998	;# 
  4189   0003E7                     ADRPT           equ	999	;# 
  4190   0003E8                     ADPREV          equ	1000	;# 
  4191   0003E8                     ADPREVL         equ	1000	;# 
  4192   0003E9                     ADPREVH         equ	1001	;# 
  4193   0003EA                     ADRES           equ	1002	;# 
  4194   0003EA                     ADRESL          equ	1002	;# 
  4195   0003EB                     ADRESH          equ	1003	;# 
  4196   0003EC                     ADPCH           equ	1004	;# 
  4197   0003EE                     ADACQ           equ	1006	;# 
  4198   0003EE                     ADACQL          equ	1006	;# 
  4199   0003EF                     ADACQH          equ	1007	;# 
  4200   0003F0                     ADCAP           equ	1008	;# 
  4201   0003F1                     ADPRE           equ	1009	;# 
  4202   0003F1                     ADPREL          equ	1009	;# 
  4203   0003F2                     ADPREH          equ	1010	;# 
  4204   0003F3                     ADCON0          equ	1011	;# 
  4205   0003F4                     ADCON1          equ	1012	;# 
  4206   0003F5                     ADCON2          equ	1013	;# 
  4207   0003F6                     ADCON3          equ	1014	;# 
  4208   0003F7                     ADSTAT          equ	1015	;# 
  4209   0003F8                     ADREF           equ	1016	;# 
  4210   0003F9                     ADACT           equ	1017	;# 
  4211   0003FA                     ADCLK           equ	1018	;# 
  4212   000400                     ANSELA          equ	1024	;# 
  4213   000401                     WPUA            equ	1025	;# 
  4214   000402                     ODCONA          equ	1026	;# 
  4215   000403                     SLRCONA         equ	1027	;# 
  4216   000404                     INLVLA          equ	1028	;# 
  4217   000405                     IOCAP           equ	1029	;# 
  4218   000406                     IOCAN           equ	1030	;# 
  4219   000407                     IOCAF           equ	1031	;# 
  4220   000408                     ANSELB          equ	1032	;# 
  4221   000409                     WPUB            equ	1033	;# 
  4222   00040A                     ODCONB          equ	1034	;# 
  4223   00040B                     SLRCONB         equ	1035	;# 
  4224   00040C                     INLVLB          equ	1036	;# 
  4225   00040D                     IOCBP           equ	1037	;# 
  4226   00040E                     IOCBN           equ	1038	;# 
  4227   00040F                     IOCBF           equ	1039	;# 
  4228   000410                     ANSELC          equ	1040	;# 
  4229   000411                     WPUC            equ	1041	;# 
  4230   000412                     ODCONC          equ	1042	;# 
  4231   000413                     SLRCONC         equ	1043	;# 
  4232   000414                     INLVLC          equ	1044	;# 
  4233   000415                     IOCCP           equ	1045	;# 
  4234   000416                     IOCCN           equ	1046	;# 
  4235   000417                     IOCCF           equ	1047	;# 
  4236   000418                     ANSELD          equ	1048	;# 
  4237   000419                     WPUD            equ	1049	;# 
  4238   00041A                     ODCOND          equ	1050	;# 
  4239   00041B                     SLRCOND         equ	1051	;# 
  4240   00041C                     INLVLD          equ	1052	;# 
  4241   000420                     ANSELE          equ	1056	;# 
  4242   000421                     WPUE            equ	1057	;# 
  4243   000422                     ODCONE          equ	1058	;# 
  4244   000423                     SLRCONE         equ	1059	;# 
  4245   000424                     INLVLE          equ	1060	;# 
  4246   000425                     IOCEP           equ	1061	;# 
  4247   000426                     IOCEN           equ	1062	;# 
  4248   000427                     IOCEF           equ	1063	;# 
  4249   000428                     ANSELF          equ	1064	;# 
  4250   000429                     WPUF            equ	1065	;# 
  4251   00042A                     ODCONF          equ	1066	;# 
  4252   00042B                     SLRCONF         equ	1067	;# 
  4253   00042C                     INLVLF          equ	1068	;# 
  4254   000440                     NCO1ACC         equ	1088	;# 
  4255   000440                     NCO1ACCL        equ	1088	;# 
  4256   000441                     NCO1ACCH        equ	1089	;# 
  4257   000442                     NCO1ACCU        equ	1090	;# 
  4258   000443                     NCO1INC         equ	1091	;# 
  4259   000443                     NCO1INCL        equ	1091	;# 
  4260   000444                     NCO1INCH        equ	1092	;# 
  4261   000445                     NCO1INCU        equ	1093	;# 
  4262   000446                     NCO1CON         equ	1094	;# 
  4263   000447                     NCO1CLK         equ	1095	;# 
  4264   000448                     NCO2ACC         equ	1096	;# 
  4265   000448                     NCO2ACCL        equ	1096	;# 
  4266   000449                     NCO2ACCH        equ	1097	;# 
  4267   00044A                     NCO2ACCU        equ	1098	;# 
  4268   00044B                     NCO2INC         equ	1099	;# 
  4269   00044B                     NCO2INCL        equ	1099	;# 
  4270   00044C                     NCO2INCH        equ	1100	;# 
  4271   00044D                     NCO2INCU        equ	1101	;# 
  4272   00044E                     NCO2CON         equ	1102	;# 
  4273   00044F                     NCO2CLK         equ	1103	;# 
  4274   000450                     NCO3ACC         equ	1104	;# 
  4275   000450                     NCO3ACCL        equ	1104	;# 
  4276   000451                     NCO3ACCH        equ	1105	;# 
  4277   000452                     NCO3ACCU        equ	1106	;# 
  4278   000453                     NCO3INC         equ	1107	;# 
  4279   000453                     NCO3INCL        equ	1107	;# 
  4280   000454                     NCO3INCH        equ	1108	;# 
  4281   000455                     NCO3INCU        equ	1109	;# 
  4282   000456                     NCO3CON         equ	1110	;# 
  4283   000457                     NCO3CLK         equ	1111	;# 
  4284   000459                     IVTLOCK         equ	1113	;# 
  4285   00045A                     IVTAD           equ	1114	;# 
  4286   00045A                     IVTADL          equ	1114	;# 
  4287   00045B                     IVTADH          equ	1115	;# 
  4288   00045C                     IVTADU          equ	1116	;# 
  4289   00045D                     IVTBASE         equ	1117	;# 
  4290   00045D                     IVTBASEL        equ	1117	;# 
  4291   00045E                     IVTBASEH        equ	1118	;# 
  4292   00045F                     IVTBASEU        equ	1119	;# 
  4293   000460                     PWM1ERS         equ	1120	;# 
  4294   000461                     PWM1CLK         equ	1121	;# 
  4295   000462                     PWM1LDS         equ	1122	;# 
  4296   000463                     PWM1PR          equ	1123	;# 
  4297   000463                     PWM1PRL         equ	1123	;# 
  4298   000464                     PWM1PRH         equ	1124	;# 
  4299   000465                     PWM1CPRE        equ	1125	;# 
  4300   000466                     PWM1PIPOS       equ	1126	;# 
  4301   000467                     PWM1GIR         equ	1127	;# 
  4302   000468                     PWM1GIE         equ	1128	;# 
  4303   000469                     PWM1CON         equ	1129	;# 
  4304   00046A                     PWM1S1CFG       equ	1130	;# 
  4305   00046B                     PWM1S1P1        equ	1131	;# 
  4306   00046B                     PWM1S1P1L       equ	1131	;# 
  4307   00046C                     PWM1S1P1H       equ	1132	;# 
  4308   00046D                     PWM1S1P2        equ	1133	;# 
  4309   00046D                     PWM1S1P2L       equ	1133	;# 
  4310   00046E                     PWM1S1P2H       equ	1134	;# 
  4311   00046F                     PWM2ERS         equ	1135	;# 
  4312   000470                     PWM2CLK         equ	1136	;# 
  4313   000471                     PWM2LDS         equ	1137	;# 
  4314   000472                     PWM2PR          equ	1138	;# 
  4315   000472                     PWM2PRL         equ	1138	;# 
  4316   000473                     PWM2PRH         equ	1139	;# 
  4317   000474                     PWM2CPRE        equ	1140	;# 
  4318   000475                     PWM2PIPOS       equ	1141	;# 
  4319   000476                     PWM2GIR         equ	1142	;# 
  4320   000477                     PWM2GIE         equ	1143	;# 
  4321   000478                     PWM2CON         equ	1144	;# 
  4322   000479                     PWM2S1CFG       equ	1145	;# 
  4323   00047A                     PWM2S1P1        equ	1146	;# 
  4324   00047A                     PWM2S1P1L       equ	1146	;# 
  4325   00047B                     PWM2S1P1H       equ	1147	;# 
  4326   00047C                     PWM2S1P2        equ	1148	;# 
  4327   00047C                     PWM2S1P2L       equ	1148	;# 
  4328   00047D                     PWM2S1P2H       equ	1149	;# 
  4329   00047E                     PWM3ERS         equ	1150	;# 
  4330   00047F                     PWM3CLK         equ	1151	;# 
  4331   000480                     PWM3LDS         equ	1152	;# 
  4332   000481                     PWM3PR          equ	1153	;# 
  4333   000481                     PWM3PRL         equ	1153	;# 
  4334   000482                     PWM3PRH         equ	1154	;# 
  4335   000483                     PWM3CPRE        equ	1155	;# 
  4336   000484                     PWM3PIPOS       equ	1156	;# 
  4337   000485                     PWM3GIR         equ	1157	;# 
  4338   000486                     PWM3GIE         equ	1158	;# 
  4339   000487                     PWM3CON         equ	1159	;# 
  4340   000488                     PWM3S1CFG       equ	1160	;# 
  4341   000489                     PWM3S1P1        equ	1161	;# 
  4342   000489                     PWM3S1P1L       equ	1161	;# 
  4343   00048A                     PWM3S1P1H       equ	1162	;# 
  4344   00048B                     PWM3S1P2        equ	1163	;# 
  4345   00048B                     PWM3S1P2L       equ	1163	;# 
  4346   00048C                     PWM3S1P2H       equ	1164	;# 
  4347   00049C                     PWMLOAD         equ	1180	;# 
  4348   00049D                     PWMEN           equ	1181	;# 
  4349   00049E                     PIE0            equ	1182	;# 
  4350   00049F                     PIE1            equ	1183	;# 
  4351   0004A0                     PIE2            equ	1184	;# 
  4352   0004A1                     PIE3            equ	1185	;# 
  4353   0004A2                     PIE4            equ	1186	;# 
  4354   0004A3                     PIE5            equ	1187	;# 
  4355   0004A4                     PIE6            equ	1188	;# 
  4356   0004A5                     PIE7            equ	1189	;# 
  4357   0004A6                     PIE8            equ	1190	;# 
  4358   0004A7                     PIE9            equ	1191	;# 
  4359   0004A8                     PIE10           equ	1192	;# 
  4360   0004A9                     PIE11           equ	1193	;# 
  4361   0004AA                     PIE12           equ	1194	;# 
  4362   0004AB                     PIE13           equ	1195	;# 
  4363   0004AC                     PIE14           equ	1196	;# 
  4364   0004AD                     PIE15           equ	1197	;# 
  4365   0004AE                     PIR0            equ	1198	;# 
  4366   0004AF                     PIR1            equ	1199	;# 
  4367   0004B0                     PIR2            equ	1200	;# 
  4368   0004B1                     PIR3            equ	1201	;# 
  4369   0004B2                     PIR4            equ	1202	;# 
  4370   0004B3                     PIR5            equ	1203	;# 
  4371   0004B4                     PIR6            equ	1204	;# 
  4372   0004B5                     PIR7            equ	1205	;# 
  4373   0004B6                     PIR8            equ	1206	;# 
  4374   0004B7                     PIR9            equ	1207	;# 
  4375   0004B8                     PIR10           equ	1208	;# 
  4376   0004B9                     PIR11           equ	1209	;# 
  4377   0004BA                     PIR12           equ	1210	;# 
  4378   0004BB                     PIR13           equ	1211	;# 
  4379   0004BC                     PIR14           equ	1212	;# 
  4380   0004BD                     PIR15           equ	1213	;# 
  4381   0004BE                     LATA            equ	1214	;# 
  4382   0004BF                     LATB            equ	1215	;# 
  4383   0004C0                     LATC            equ	1216	;# 
  4384   0004C1                     LATD            equ	1217	;# 
  4385   0004C2                     LATE            equ	1218	;# 
  4386   0004C3                     LATF            equ	1219	;# 
  4387   0004C6                     TRISA           equ	1222	;# 
  4388   0004C7                     TRISB           equ	1223	;# 
  4389   0004C8                     TRISC           equ	1224	;# 
  4390   0004C9                     TRISD           equ	1225	;# 
  4391   0004CA                     TRISE           equ	1226	;# 
  4392   0004CB                     TRISF           equ	1227	;# 
  4393   0004CE                     PORTA           equ	1230	;# 
  4394   0004CF                     PORTB           equ	1231	;# 
  4395   0004D0                     PORTC           equ	1232	;# 
  4396   0004D1                     PORTD           equ	1233	;# 
  4397   0004D2                     PORTE           equ	1234	;# 
  4398   0004D3                     PORTF           equ	1235	;# 
  4399   0004D6                     INTCON0         equ	1238	;# 
  4400   0004D7                     INTCON1         equ	1239	;# 
  4401   0004D8                     STATUS          equ	1240	;# 
  4402   0004D9                     FSR2            equ	1241	;# 
  4403   0004D9                     FSR2L           equ	1241	;# 
  4404   0004DA                     FSR2H           equ	1242	;# 
  4405   0004DB                     PLUSW2          equ	1243	;# 
  4406   0004DC                     PREINC2         equ	1244	;# 
  4407   0004DD                     POSTDEC2        equ	1245	;# 
  4408   0004DE                     POSTINC2        equ	1246	;# 
  4409   0004DF                     INDF2           equ	1247	;# 
  4410   0004E0                     BSR             equ	1248	;# 
  4411   0004E1                     FSR1            equ	1249	;# 
  4412   0004E1                     FSR1L           equ	1249	;# 
  4413   0004E2                     FSR1H           equ	1250	;# 
  4414   0004E3                     PLUSW1          equ	1251	;# 
  4415   0004E4                     PREINC1         equ	1252	;# 
  4416   0004E5                     POSTDEC1        equ	1253	;# 
  4417   0004E6                     POSTINC1        equ	1254	;# 
  4418   0004E7                     INDF1           equ	1255	;# 
  4419   0004E8                     WREG            equ	1256	;# 
  4420   0004E9                     FSR0            equ	1257	;# 
  4421   0004E9                     FSR0L           equ	1257	;# 
  4422   0004EA                     FSR0H           equ	1258	;# 
  4423   0004EB                     PLUSW0          equ	1259	;# 
  4424   0004EC                     PREINC0         equ	1260	;# 
  4425   0004ED                     POSTDEC0        equ	1261	;# 
  4426   0004EE                     POSTINC0        equ	1262	;# 
  4427   0004EF                     INDF0           equ	1263	;# 
  4428   0004F0                     PCON0           equ	1264	;# 
  4429   0004F1                     PCON1           equ	1265	;# 
  4430   0004F2                     CPUDOZE         equ	1266	;# 
  4431   0004F3                     PROD            equ	1267	;# 
  4432   0004F3                     PRODL           equ	1267	;# 
  4433   0004F4                     PRODH           equ	1268	;# 
  4434   0004F5                     TABLAT          equ	1269	;# 
  4435   0004F6                     TBLPTR          equ	1270	;# 
  4436   0004F6                     TBLPTRL         equ	1270	;# 
  4437   0004F7                     TBLPTRH         equ	1271	;# 
  4438   0004F8                     TBLPTRU         equ	1272	;# 
  4439   0004F9                     PCLAT           equ	1273	;# 
  4440   0004F9                     PCL             equ	1273	;# 
  4441   0004FA                     PCLATH          equ	1274	;# 
  4442   0004FB                     PCLATU          equ	1275	;# 
  4443   0004FC                     STKPTR          equ	1276	;# 
  4444   0004FD                     TOS             equ	1277	;# 
  4445   0004FD                     TOSL            equ	1277	;# 
  4446   0004FE                     TOSH            equ	1278	;# 
  4447   0004FF                     TOSU            equ	1279	;# 
  4448   000039                     CLKRCON         equ	57	;# 
  4449   00003A                     CLKRCLK         equ	58	;# 
  4450   000040                     NVMCON0         equ	64	;# 
  4451   000041                     NVMCON1         equ	65	;# 
  4452   000042                     NVMLOCK         equ	66	;# 
  4453   000043                     NVMADR          equ	67	;# 
  4454   000043                     NVMADRL         equ	67	;# 
  4455   000044                     NVMADRH         equ	68	;# 
  4456   000045                     NVMADRU         equ	69	;# 
  4457   000046                     NVMDAT          equ	70	;# 
  4458   000046                     NVMDATL         equ	70	;# 
  4459   000047                     NVMDATH         equ	71	;# 
  4460   000048                     VREGCON         equ	72	;# 
  4461   000049                     BORCON          equ	73	;# 
  4462   00004A                     HLVDCON0        equ	74	;# 
  4463   00004B                     HLVDCON1        equ	75	;# 
  4464   00004C                     ZCDCON          equ	76	;# 
  4465   000060                     PMD0            equ	96	;# 
  4466   000061                     PMD1            equ	97	;# 
  4467   000063                     PMD3            equ	99	;# 
  4468   000064                     PMD4            equ	100	;# 
  4469   000065                     PMD5            equ	101	;# 
  4470   000066                     PMD6            equ	102	;# 
  4471   000067                     PMD7            equ	103	;# 
  4472   000068                     PMD8            equ	104	;# 
  4473   00006A                     MD1CON0         equ	106	;# 
  4474   00006B                     MD1CON1         equ	107	;# 
  4475   00006C                     MD1SRC          equ	108	;# 
  4476   00006D                     MD1CARL         equ	109	;# 
  4477   00006E                     MD1CARH         equ	110	;# 
  4478   00006F                     CMOUT           equ	111	;# 
  4479   000070                     CM1CON0         equ	112	;# 
  4480   000071                     CM1CON1         equ	113	;# 
  4481   000072                     CM1NCH          equ	114	;# 
  4482   000073                     CM1PCH          equ	115	;# 
  4483   000074                     CM2CON0         equ	116	;# 
  4484   000075                     CM2CON1         equ	117	;# 
  4485   000076                     CM2NCH          equ	118	;# 
  4486   000077                     CM2PCH          equ	119	;# 
  4487   000078                     WDTCON0         equ	120	;# 
  4488   000079                     WDTCON1         equ	121	;# 
  4489   00007A                     WDTPS           equ	122	;# 
  4490   00007A                     WDTPSL          equ	122	;# 
  4491   00007B                     WDTPSH          equ	123	;# 
  4492   00007C                     WDTTMR          equ	124	;# 
  4493   00007D                     DAC1DAT         equ	125	;# 
  4494   00007D                     DAC1DATL        equ	125	;# 
  4495   00007F                     DAC1CON         equ	127	;# 
  4496   000080                     SPI1RXB         equ	128	;# 
  4497   000081                     SPI1TXB         equ	129	;# 
  4498   000082                     SPI1TCNT        equ	130	;# 
  4499   000082                     SPI1TCNTL       equ	130	;# 
  4500   000083                     SPI1TCNTH       equ	131	;# 
  4501   000084                     SPI1CON0        equ	132	;# 
  4502   000085                     SPI1CON1        equ	133	;# 
  4503   000086                     SPI1CON2        equ	134	;# 
  4504   000087                     SPI1STATUS      equ	135	;# 
  4505   000088                     SPI1TWIDTH      equ	136	;# 
  4506   000089                     SPI1BAUD        equ	137	;# 
  4507   00008A                     SPI1INTF        equ	138	;# 
  4508   00008B                     SPI1INTE        equ	139	;# 
  4509   00008C                     SPI1CLK         equ	140	;# 
  4510   00008D                     SPI2RXB         equ	141	;# 
  4511   00008E                     SPI2TXB         equ	142	;# 
  4512   00008F                     SPI2TCNT        equ	143	;# 
  4513   00008F                     SPI2TCNTL       equ	143	;# 
  4514   000090                     SPI2TCNTH       equ	144	;# 
  4515   000091                     SPI2CON0        equ	145	;# 
  4516   000092                     SPI2CON1        equ	146	;# 
  4517   000093                     SPI2CON2        equ	147	;# 
  4518   000094                     SPI2STATUS      equ	148	;# 
  4519   000095                     SPI2TWIDTH      equ	149	;# 
  4520   000096                     SPI2BAUD        equ	150	;# 
  4521   000097                     SPI2INTF        equ	151	;# 
  4522   000098                     SPI2INTE        equ	152	;# 
  4523   000099                     SPI2CLK         equ	153	;# 
  4524   0000AC                     ACTCON          equ	172	;# 
  4525   0000AD                     OSCCON1         equ	173	;# 
  4526   0000AE                     OSCCON2         equ	174	;# 
  4527   0000AF                     OSCCON3         equ	175	;# 
  4528   0000B0                     OSCTUNE         equ	176	;# 
  4529   0000B1                     OSCFRQ          equ	177	;# 
  4530   0000B1                     OSCFREQ         equ	177	;# 
  4531   0000B2                     OSCSTAT         equ	178	;# 
  4532   0000B2                     OSCSTAT1        equ	178	;# 
  4533   0000B3                     OSCEN           equ	179	;# 
  4534   0000B4                     PRLOCK          equ	180	;# 
  4535   0000B5                     SCANPR          equ	181	;# 
  4536   0000B6                     DMA1PR          equ	182	;# 
  4537   0000B7                     DMA2PR          equ	183	;# 
  4538   0000B8                     DMA3PR          equ	184	;# 
  4539   0000B9                     DMA4PR          equ	185	;# 
  4540   0000BA                     DMA5PR          equ	186	;# 
  4541   0000BB                     DMA6PR          equ	187	;# 
  4542   0000BE                     MAINPR          equ	190	;# 
  4543   0000BF                     ISRPR           equ	191	;# 
  4544   0000D4                     CLCDATA         equ	212	;# 
  4545   0000D5                     CLCSELECT       equ	213	;# 
  4546   0000D6                     CLCnCON         equ	214	;# 
  4547   0000D7                     CLCnPOL         equ	215	;# 
  4548   0000D8                     CLCnSEL0        equ	216	;# 
  4549   0000D9                     CLCnSEL1        equ	217	;# 
  4550   0000DA                     CLCnSEL2        equ	218	;# 
  4551   0000DB                     CLCnSEL3        equ	219	;# 
  4552   0000DC                     CLCnGLS0        equ	220	;# 
  4553   0000DD                     CLCnGLS1        equ	221	;# 
  4554   0000DE                     CLCnGLS2        equ	222	;# 
  4555   0000DF                     CLCnGLS3        equ	223	;# 
  4556   0000E8                     DMASELECT       equ	232	;# 
  4557   0000E9                     DMAnBUF         equ	233	;# 
  4558   0000EA                     DMAnDCNT        equ	234	;# 
  4559   0000EA                     DMAnDCNTL       equ	234	;# 
  4560   0000EB                     DMAnDCNTH       equ	235	;# 
  4561   0000EC                     DMAnDPTR        equ	236	;# 
  4562   0000EC                     DMAnDPTRL       equ	236	;# 
  4563   0000ED                     DMAnDPTRH       equ	237	;# 
  4564   0000EE                     DMAnDSZ         equ	238	;# 
  4565   0000EE                     DMAnDSZL        equ	238	;# 
  4566   0000EF                     DMAnDSZH        equ	239	;# 
  4567   0000F0                     DMAnDSA         equ	240	;# 
  4568   0000F0                     DMAnDSAL        equ	240	;# 
  4569   0000F1                     DMAnDSAH        equ	241	;# 
  4570   0000F2                     DMAnSCNT        equ	242	;# 
  4571   0000F2                     DMAnSCNTL       equ	242	;# 
  4572   0000F3                     DMAnSCNTH       equ	243	;# 
  4573   0000F4                     DMAnSPTR        equ	244	;# 
  4574   0000F4                     DMAnSPTRL       equ	244	;# 
  4575   0000F5                     DMAnSPTRH       equ	245	;# 
  4576   0000F6                     DMAnSPTRU       equ	246	;# 
  4577   0000F7                     DMAnSSZ         equ	247	;# 
  4578   0000F7                     DMAnSSZL        equ	247	;# 
  4579   0000F8                     DMAnSSZH        equ	248	;# 
  4580   0000F9                     DMAnSSA         equ	249	;# 
  4581   0000F9                     DMAnSSAL        equ	249	;# 
  4582   0000FA                     DMAnSSAH        equ	250	;# 
  4583   0000FB                     DMAnSSAU        equ	251	;# 
  4584   0000FC                     DMAnCON0        equ	252	;# 
  4585   0000FD                     DMAnCON1        equ	253	;# 
  4586   0000FE                     DMAnAIRQ        equ	254	;# 
  4587   0000FF                     DMAnSIRQ        equ	255	;# 
  4588   000200                     PPSLOCK         equ	512	;# 
  4589   000201                     RA0PPS          equ	513	;# 
  4590   000202                     RA1PPS          equ	514	;# 
  4591   000203                     RA2PPS          equ	515	;# 
  4592   000204                     RA3PPS          equ	516	;# 
  4593   000205                     RA4PPS          equ	517	;# 
  4594   000206                     RA5PPS          equ	518	;# 
  4595   000207                     RA6PPS          equ	519	;# 
  4596   000208                     RA7PPS          equ	520	;# 
  4597   000209                     RB0PPS          equ	521	;# 
  4598   00020A                     RB1PPS          equ	522	;# 
  4599   00020B                     RB2PPS          equ	523	;# 
  4600   00020C                     RB3PPS          equ	524	;# 
  4601   00020D                     RB4PPS          equ	525	;# 
  4602   00020E                     RB5PPS          equ	526	;# 
  4603   00020F                     RB6PPS          equ	527	;# 
  4604   000210                     RB7PPS          equ	528	;# 
  4605   000211                     RC0PPS          equ	529	;# 
  4606   000212                     RC1PPS          equ	530	;# 
  4607   000213                     RC2PPS          equ	531	;# 
  4608   000214                     RC3PPS          equ	532	;# 
  4609   000215                     RC4PPS          equ	533	;# 
  4610   000216                     RC5PPS          equ	534	;# 
  4611   000217                     RC6PPS          equ	535	;# 
  4612   000218                     RC7PPS          equ	536	;# 
  4613   000219                     RD0PPS          equ	537	;# 
  4614   00021A                     RD1PPS          equ	538	;# 
  4615   00021B                     RD2PPS          equ	539	;# 
  4616   00021C                     RD3PPS          equ	540	;# 
  4617   00021D                     RD4PPS          equ	541	;# 
  4618   00021E                     RD5PPS          equ	542	;# 
  4619   00021F                     RD6PPS          equ	543	;# 
  4620   000220                     RD7PPS          equ	544	;# 
  4621   000221                     RE0PPS          equ	545	;# 
  4622   000222                     RE1PPS          equ	546	;# 
  4623   000223                     RE2PPS          equ	547	;# 
  4624   000229                     RF0PPS          equ	553	;# 
  4625   00022A                     RF1PPS          equ	554	;# 
  4626   00022B                     RF2PPS          equ	555	;# 
  4627   00022C                     RF3PPS          equ	556	;# 
  4628   00022D                     RF4PPS          equ	557	;# 
  4629   00022E                     RF5PPS          equ	558	;# 
  4630   00022F                     RF6PPS          equ	559	;# 
  4631   000230                     RF7PPS          equ	560	;# 
  4632   00023E                     INT0PPS         equ	574	;# 
  4633   00023F                     INT1PPS         equ	575	;# 
  4634   000240                     INT2PPS         equ	576	;# 
  4635   000241                     T0CKIPPS        equ	577	;# 
  4636   000242                     T1CKIPPS        equ	578	;# 
  4637   000243                     T1GPPS          equ	579	;# 
  4638   000244                     T3CKIPPS        equ	580	;# 
  4639   000245                     T3GPPS          equ	581	;# 
  4640   000246                     T5CKIPPS        equ	582	;# 
  4641   000247                     T5GPPS          equ	583	;# 
  4642   000248                     T2INPPS         equ	584	;# 
  4643   000249                     T4INPPS         equ	585	;# 
  4644   00024A                     T6INPPS         equ	586	;# 
  4645   00024F                     CCP1PPS         equ	591	;# 
  4646   000250                     CCP2PPS         equ	592	;# 
  4647   000251                     CCP3PPS         equ	593	;# 
  4648   000253                     PWM1ERSPPS      equ	595	;# 
  4649   000254                     PWM2ERSPPS      equ	596	;# 
  4650   000255                     PWM3ERSPPS      equ	597	;# 
  4651   000257                     PWMIN0PPS       equ	599	;# 
  4652   000258                     PWMIN1PPS       equ	600	;# 
  4653   000259                     SMT1WINPPS      equ	601	;# 
  4654   00025A                     SMT1SIGPPS      equ	602	;# 
  4655   00025B                     CWG1PPS         equ	603	;# 
  4656   00025B                     CWG1INPPS       equ	603	;# 
  4657   00025C                     CWG2PPS         equ	604	;# 
  4658   00025C                     CWG2INPPS       equ	604	;# 
  4659   00025D                     CWG3PPS         equ	605	;# 
  4660   00025D                     CWG3INPPS       equ	605	;# 
  4661   00025E                     MD1CARLPPS      equ	606	;# 
  4662   00025E                     MDCARLPPS       equ	606	;# 
  4663   00025F                     MD1CARHPPS      equ	607	;# 
  4664   00025F                     MDCARHPPS       equ	607	;# 
  4665   000260                     MD1SRCPPS       equ	608	;# 
  4666   000260                     MDSRCPPS        equ	608	;# 
  4667   000261                     CLCIN0PPS       equ	609	;# 
  4668   000262                     CLCIN1PPS       equ	610	;# 
  4669   000263                     CLCIN2PPS       equ	611	;# 
  4670   000264                     CLCIN3PPS       equ	612	;# 
  4671   000265                     CLCIN4PPS       equ	613	;# 
  4672   000266                     CLCIN5PPS       equ	614	;# 
  4673   000267                     CLCIN6PPS       equ	615	;# 
  4674   000268                     CLCIN7PPS       equ	616	;# 
  4675   000269                     ADACTPPS        equ	617	;# 
  4676   00026A                     SPI1SCKPPS      equ	618	;# 
  4677   00026B                     SPI1SDIPPS      equ	619	;# 
  4678   00026C                     SPI1SSPPS       equ	620	;# 
  4679   00026D                     SPI2SCKPPS      equ	621	;# 
  4680   00026E                     SPI2SDIPPS      equ	622	;# 
  4681   00026F                     SPI2SSPPS       equ	623	;# 
  4682   000270                     I2C1SDAPPS      equ	624	;# 
  4683   000271                     I2C1SCLPPS      equ	625	;# 
  4684   000272                     U1RXPPS         equ	626	;# 
  4685   000273                     U1CTSPPS        equ	627	;# 
  4686   000274                     U2RXPPS         equ	628	;# 
  4687   000275                     U2CTSPPS        equ	629	;# 
  4688   000276                     U3RXPPS         equ	630	;# 
  4689   000277                     U3CTSPPS        equ	631	;# 
  4690   000278                     U4RXPPS         equ	632	;# 
  4691   000279                     U4CTSPPS        equ	633	;# 
  4692   00027A                     U5RXPPS         equ	634	;# 
  4693   00027B                     U5CTSPPS        equ	635	;# 
  4694   000286                     RC4I2C          equ	646	;# 
  4695   000287                     RC3I2C          equ	647	;# 
  4696   000288                     RB2I2C          equ	648	;# 
  4697   000289                     RB1I2C          equ	649	;# 
  4698   00028B                     I2C1RXB         equ	651	;# 
  4699   00028C                     I2C1TXB         equ	652	;# 
  4700   00028D                     I2C1CNT         equ	653	;# 
  4701   00028E                     I2C1ADB0        equ	654	;# 
  4702   00028F                     I2C1ADB1        equ	655	;# 
  4703   000290                     I2C1ADR0        equ	656	;# 
  4704   000291                     I2C1ADR1        equ	657	;# 
  4705   000292                     I2C1ADR2        equ	658	;# 
  4706   000293                     I2C1ADR3        equ	659	;# 
  4707   000294                     I2C1CON0        equ	660	;# 
  4708   000295                     I2C1CON1        equ	661	;# 
  4709   000296                     I2C1CON2        equ	662	;# 
  4710   000297                     I2C1ERR         equ	663	;# 
  4711   000298                     I2C1STAT0       equ	664	;# 
  4712   000299                     I2C1STAT1       equ	665	;# 
  4713   00029A                     I2C1PIR         equ	666	;# 
  4714   00029B                     I2C1PIE         equ	667	;# 
  4715   00029C                     I2C1CLK         equ	668	;# 
  4716   00029D                     I2C1BTO         equ	669	;# 
  4717   0002A1                     U1RXB           equ	673	;# 
  4718   0002A1                     U1RXBL          equ	673	;# 
  4719   0002A2                     U1RXCHK         equ	674	;# 
  4720   0002A3                     U1TXB           equ	675	;# 
  4721   0002A3                     U1TXBL          equ	675	;# 
  4722   0002A4                     U1TXCHK         equ	676	;# 
  4723   0002A5                     U1P1            equ	677	;# 
  4724   0002A5                     U1P1L           equ	677	;# 
  4725   0002A6                     U1P1H           equ	678	;# 
  4726   0002A7                     U1P2            equ	679	;# 
  4727   0002A7                     U1P2L           equ	679	;# 
  4728   0002A8                     U1P2H           equ	680	;# 
  4729   0002A9                     U1P3            equ	681	;# 
  4730   0002A9                     U1P3L           equ	681	;# 
  4731   0002AA                     U1P3H           equ	682	;# 
  4732   0002AB                     U1CON0          equ	683	;# 
  4733   0002AC                     U1CON1          equ	684	;# 
  4734   0002AD                     U1CON2          equ	685	;# 
  4735   0002AE                     U1BRG           equ	686	;# 
  4736   0002AE                     U1BRGL          equ	686	;# 
  4737   0002AF                     U1BRGH          equ	687	;# 
  4738   0002B0                     U1FIFO          equ	688	;# 
  4739   0002B1                     U1UIR           equ	689	;# 
  4740   0002B2                     U1ERRIR         equ	690	;# 
  4741   0002B3                     U1ERRIE         equ	691	;# 
  4742   0002B4                     U2RXB           equ	692	;# 
  4743   0002B4                     U2RXBL          equ	692	;# 
  4744   0002B6                     U2TXB           equ	694	;# 
  4745   0002B6                     U2TXBL          equ	694	;# 
  4746   0002B8                     U2P1            equ	696	;# 
  4747   0002B8                     U2P1L           equ	696	;# 
  4748   0002BA                     U2P2            equ	698	;# 
  4749   0002BA                     U2P2L           equ	698	;# 
  4750   0002BC                     U2P3            equ	700	;# 
  4751   0002BC                     U2P3L           equ	700	;# 
  4752   0002BE                     U2CON0          equ	702	;# 
  4753   0002BF                     U2CON1          equ	703	;# 
  4754   0002C0                     U2CON2          equ	704	;# 
  4755   0002C1                     U2BRG           equ	705	;# 
  4756   0002C1                     U2BRGL          equ	705	;# 
  4757   0002C2                     U2BRGH          equ	706	;# 
  4758   0002C3                     U2FIFO          equ	707	;# 
  4759   0002C4                     U2UIR           equ	708	;# 
  4760   0002C5                     U2ERRIR         equ	709	;# 
  4761   0002C6                     U2ERRIE         equ	710	;# 
  4762   0002C7                     U3RXB           equ	711	;# 
  4763   0002C7                     U3RXBL          equ	711	;# 
  4764   0002C9                     U3TXB           equ	713	;# 
  4765   0002C9                     U3TXBL          equ	713	;# 
  4766   0002CB                     U3P1            equ	715	;# 
  4767   0002CB                     U3P1L           equ	715	;# 
  4768   0002CD                     U3P2            equ	717	;# 
  4769   0002CD                     U3P2L           equ	717	;# 
  4770   0002CF                     U3P3            equ	719	;# 
  4771   0002CF                     U3P3L           equ	719	;# 
  4772   0002D1                     U3CON0          equ	721	;# 
  4773   0002D2                     U3CON1          equ	722	;# 
  4774   0002D3                     U3CON2          equ	723	;# 
  4775   0002D4                     U3BRG           equ	724	;# 
  4776   0002D4                     U3BRGL          equ	724	;# 
  4777   0002D5                     U3BRGH          equ	725	;# 
  4778   0002D6                     U3FIFO          equ	726	;# 
  4779   0002D7                     U3UIR           equ	727	;# 
  4780   0002D8                     U3ERRIR         equ	728	;# 
  4781   0002D9                     U3ERRIE         equ	729	;# 
  4782   0002DA                     U4RXB           equ	730	;# 
  4783   0002DA                     U4RXBL          equ	730	;# 
  4784   0002DC                     U4TXB           equ	732	;# 
  4785   0002DC                     U4TXBL          equ	732	;# 
  4786   0002DE                     U4P1            equ	734	;# 
  4787   0002DE                     U4P1L           equ	734	;# 
  4788   0002E0                     U4P2            equ	736	;# 
  4789   0002E0                     U4P2L           equ	736	;# 
  4790   0002E2                     U4P3            equ	738	;# 
  4791   0002E2                     U4P3L           equ	738	;# 
  4792   0002E4                     U4CON0          equ	740	;# 
  4793   0002E5                     U4CON1          equ	741	;# 
  4794   0002E6                     U4CON2          equ	742	;# 
  4795   0002E7                     U4BRG           equ	743	;# 
  4796   0002E7                     U4BRGL          equ	743	;# 
  4797   0002E8                     U4BRGH          equ	744	;# 
  4798   0002E9                     U4FIFO          equ	745	;# 
  4799   0002EA                     U4UIR           equ	746	;# 
  4800   0002EB                     U4ERRIR         equ	747	;# 
  4801   0002EC                     U4ERRIE         equ	748	;# 
  4802   0002ED                     U5RXB           equ	749	;# 
  4803   0002ED                     U5RXBL          equ	749	;# 
  4804   0002EF                     U5TXB           equ	751	;# 
  4805   0002EF                     U5TXBL          equ	751	;# 
  4806   0002F1                     U5P1            equ	753	;# 
  4807   0002F1                     U5P1L           equ	753	;# 
  4808   0002F3                     U5P2            equ	755	;# 
  4809   0002F3                     U5P2L           equ	755	;# 
  4810   0002F5                     U5P3            equ	757	;# 
  4811   0002F5                     U5P3L           equ	757	;# 
  4812   0002F7                     U5CON0          equ	759	;# 
  4813   0002F8                     U5CON1          equ	760	;# 
  4814   0002F9                     U5CON2          equ	761	;# 
  4815   0002FA                     U5BRG           equ	762	;# 
  4816   0002FA                     U5BRGL          equ	762	;# 
  4817   0002FB                     U5BRGH          equ	763	;# 
  4818   0002FC                     U5FIFO          equ	764	;# 
  4819   0002FD                     U5UIR           equ	765	;# 
  4820   0002FE                     U5ERRIR         equ	766	;# 
  4821   0002FF                     U5ERRIE         equ	767	;# 
  4822   000300                     SMT1TMR         equ	768	;# 
  4823   000300                     SMT1TMRL        equ	768	;# 
  4824   000301                     SMT1TMRH        equ	769	;# 
  4825   000302                     SMT1TMRU        equ	770	;# 
  4826   000303                     SMT1CPR         equ	771	;# 
  4827   000303                     SMT1CPRL        equ	771	;# 
  4828   000304                     SMT1CPRH        equ	772	;# 
  4829   000305                     SMT1CPRU        equ	773	;# 
  4830   000306                     SMT1CPW         equ	774	;# 
  4831   000306                     SMT1CPWL        equ	774	;# 
  4832   000307                     SMT1CPWH        equ	775	;# 
  4833   000308                     SMT1CPWU        equ	776	;# 
  4834   000309                     SMT1PR          equ	777	;# 
  4835   000309                     SMT1PRL         equ	777	;# 
  4836   00030A                     SMT1PRH         equ	778	;# 
  4837   00030B                     SMT1PRU         equ	779	;# 
  4838   00030C                     SMT1CON0        equ	780	;# 
  4839   00030D                     SMT1CON1        equ	781	;# 
  4840   00030E                     SMT1STAT        equ	782	;# 
  4841   00030F                     SMT1CLK         equ	783	;# 
  4842   000310                     SMT1SIG         equ	784	;# 
  4843   000311                     SMT1WIN         equ	785	;# 
  4844   000318                     TMR0L           equ	792	;# 
  4845   000318                     TMR0            equ	792	;# 
  4846   000319                     TMR0H           equ	793	;# 
  4847   000319                     PR0             equ	793	;# 
  4848   00031A                     T0CON0          equ	794	;# 
  4849   00031B                     T0CON1          equ	795	;# 
  4850   00031C                     TMR1            equ	796	;# 
  4851   00031C                     TMR1L           equ	796	;# 
  4852   00031D                     TMR1H           equ	797	;# 
  4853   00031E                     T1CON           equ	798	;# 
  4854   00031E                     TMR1CON         equ	798	;# 
  4855   00031F                     T1GCON          equ	799	;# 
  4856   00031F                     TMR1GCON        equ	799	;# 
  4857   000320                     T1GATE          equ	800	;# 
  4858   000320                     TMR1GATE        equ	800	;# 
  4859   000321                     T1CLK           equ	801	;# 
  4860   000321                     TMR1CLK         equ	801	;# 
  4861   000321                     PR1             equ	801	;# 
  4862   000322                     T2TMR           equ	802	;# 
  4863   000322                     TMR2            equ	802	;# 
  4864   000323                     T2PR            equ	803	;# 
  4865   000323                     PR2             equ	803	;# 
  4866   000324                     T2CON           equ	804	;# 
  4867   000325                     T2HLT           equ	805	;# 
  4868   000326                     T2CLKCON        equ	806	;# 
  4869   000326                     T2CLK           equ	806	;# 
  4870   000327                     T2RST           equ	807	;# 
  4871   000328                     TMR3            equ	808	;# 
  4872   000328                     TMR3L           equ	808	;# 
  4873   000329                     TMR3H           equ	809	;# 
  4874   00032A                     T3CON           equ	810	;# 
  4875   00032A                     TMR3CON         equ	810	;# 
  4876   00032B                     T3GCON          equ	811	;# 
  4877   00032B                     TMR3GCON        equ	811	;# 
  4878   00032C                     T3GATE          equ	812	;# 
  4879   00032C                     TMR3GATE        equ	812	;# 
  4880   00032D                     T3CLK           equ	813	;# 
  4881   00032D                     TMR3CLK         equ	813	;# 
  4882   00032D                     PR3             equ	813	;# 
  4883   00032E                     T4TMR           equ	814	;# 
  4884   00032E                     TMR4            equ	814	;# 
  4885   00032F                     T4PR            equ	815	;# 
  4886   00032F                     PR4             equ	815	;# 
  4887   000330                     T4CON           equ	816	;# 
  4888   000331                     T4HLT           equ	817	;# 
  4889   000332                     T4CLKCON        equ	818	;# 
  4890   000332                     T4CLK           equ	818	;# 
  4891   000333                     T4RST           equ	819	;# 
  4892   000334                     TMR5            equ	820	;# 
  4893   000334                     TMR5L           equ	820	;# 
  4894   000335                     TMR5H           equ	821	;# 
  4895   000336                     T5CON           equ	822	;# 
  4896   000336                     TMR5CON         equ	822	;# 
  4897   000337                     T5GCON          equ	823	;# 
  4898   000337                     TMR5GCON        equ	823	;# 
  4899   000338                     T5GATE          equ	824	;# 
  4900   000338                     TMR5GATE        equ	824	;# 
  4901   000339                     T5CLK           equ	825	;# 
  4902   000339                     TMR5CLK         equ	825	;# 
  4903   000339                     PR5             equ	825	;# 
  4904   00033A                     T6TMR           equ	826	;# 
  4905   00033A                     TMR6            equ	826	;# 
  4906   00033B                     T6PR            equ	827	;# 
  4907   00033B                     PR6             equ	827	;# 
  4908   00033C                     T6CON           equ	828	;# 
  4909   00033D                     T6HLT           equ	829	;# 
  4910   00033E                     T6CLKCON        equ	830	;# 
  4911   00033E                     T6CLK           equ	830	;# 
  4912   00033F                     T6RST           equ	831	;# 
  4913   000340                     CCPR1           equ	832	;# 
  4914   000340                     CCPR1L          equ	832	;# 
  4915   000341                     CCPR1H          equ	833	;# 
  4916   000342                     CCP1CON         equ	834	;# 
  4917   000343                     CCP1CAP         equ	835	;# 
  4918   000344                     CCPR2           equ	836	;# 
  4919   000344                     CCPR2L          equ	836	;# 
  4920   000345                     CCPR2H          equ	837	;# 
  4921   000346                     CCP2CON         equ	838	;# 
  4922   000347                     CCP2CAP         equ	839	;# 
  4923   000348                     CCPR3           equ	840	;# 
  4924   000348                     CCPR3L          equ	840	;# 
  4925   000349                     CCPR3H          equ	841	;# 
  4926   00034A                     CCP3CON         equ	842	;# 
  4927   00034B                     CCP3CAP         equ	843	;# 
  4928   00034C                     CCPTMRS0        equ	844	;# 
  4929   00034F                     CRCDATA         equ	847	;# 
  4930   00034F                     CRCDATL         equ	847	;# 
  4931   000350                     CRCDATH         equ	848	;# 
  4932   000351                     CRCACC          equ	849	;# 
  4933   000351                     CRCACCL         equ	849	;# 
  4934   000352                     CRCACCH         equ	850	;# 
  4935   000353                     CRCSHFT         equ	851	;# 
  4936   000353                     CRCSHIFTL       equ	851	;# 
  4937   000354                     CRCSHIFTH       equ	852	;# 
  4938   000355                     CRCXOR          equ	853	;# 
  4939   000355                     CRCXORL         equ	853	;# 
  4940   000356                     CRCXORH         equ	854	;# 
  4941   000357                     CRCCON0         equ	855	;# 
  4942   000358                     CRCCON1         equ	856	;# 
  4943   00035A                     SCANLADR        equ	858	;# 
  4944   00035A                     SCANLADRL       equ	858	;# 
  4945   00035B                     SCANLADRH       equ	859	;# 
  4946   00035C                     SCANLADRU       equ	860	;# 
  4947   00035D                     SCANHADR        equ	861	;# 
  4948   00035D                     SCANHADRL       equ	861	;# 
  4949   00035E                     SCANHADRH       equ	862	;# 
  4950   00035F                     SCANHADRU       equ	863	;# 
  4951   000360                     SCANCON0        equ	864	;# 
  4952   000361                     SCANTRIG        equ	865	;# 
  4953   000362                     IPR0            equ	866	;# 
  4954   000363                     IPR1            equ	867	;# 
  4955   000364                     IPR2            equ	868	;# 
  4956   000365                     IPR3            equ	869	;# 
  4957   000366                     IPR4            equ	870	;# 
  4958   000367                     IPR5            equ	871	;# 
  4959   000368                     IPR6            equ	872	;# 
  4960   000369                     IPR7            equ	873	;# 
  4961   00036A                     IPR8            equ	874	;# 
  4962   00036B                     IPR9            equ	875	;# 
  4963   00036C                     IPR10           equ	876	;# 
  4964   00036D                     IPR11           equ	877	;# 
  4965   00036E                     IPR12           equ	878	;# 
  4966   00036F                     IPR13           equ	879	;# 
  4967   000370                     IPR14           equ	880	;# 
  4968   000371                     IPR15           equ	881	;# 
  4969   000373                     STATUS_CSHAD    equ	883	;# 
  4970   000374                     WREG_CSHAD      equ	884	;# 
  4971   000375                     BSR_CSHAD       equ	885	;# 
  4972   000376                     SHADCON         equ	886	;# 
  4973   000377                     STATUS_SHAD     equ	887	;# 
  4974   000378                     WREG_SHAD       equ	888	;# 
  4975   000379                     BSR_SHAD        equ	889	;# 
  4976   00037A                     PCLATH_SHAD     equ	890	;# 
  4977   00037B                     PCLATU_SHAD     equ	891	;# 
  4978   00037C                     FSR0SH          equ	892	;# 
  4979   00037C                     FSR0L_SHAD      equ	892	;# 
  4980   00037D                     FSR0H_SHAD      equ	893	;# 
  4981   00037E                     FSR1SH          equ	894	;# 
  4982   00037E                     FSR1L_SHAD      equ	894	;# 
  4983   00037F                     FSR1H_SHAD      equ	895	;# 
  4984   000380                     FSR2SH          equ	896	;# 
  4985   000380                     FSR2L_SHAD      equ	896	;# 
  4986   000381                     FSR2H_SHAD      equ	897	;# 
  4987   000382                     PRODSH          equ	898	;# 
  4988   000382                     PRODL_SHAD      equ	898	;# 
  4989   000383                     PRODH_SHAD      equ	899	;# 
  4990   0003BC                     CWG1CLK         equ	956	;# 
  4991   0003BC                     CWG1CLKCON      equ	956	;# 
  4992   0003BD                     CWG1ISM         equ	957	;# 
  4993   0003BD                     CWG1DAT         equ	957	;# 
  4994   0003BE                     CWG1DBR         equ	958	;# 
  4995   0003BF                     CWG1DBF         equ	959	;# 
  4996   0003C0                     CWG1CON0        equ	960	;# 
  4997   0003C1                     CWG1CON1        equ	961	;# 
  4998   0003C2                     CWG1AS0         equ	962	;# 
  4999   0003C3                     CWG1AS1         equ	963	;# 
  5000   0003C4                     CWG1STR         equ	964	;# 
  5001   0003C5                     CWG2CLK         equ	965	;# 
  5002   0003C5                     CWG2CLKCON      equ	965	;# 
  5003   0003C6                     CWG2ISM         equ	966	;# 
  5004   0003C6                     CWG2DAT         equ	966	;# 
  5005   0003C7                     CWG2DBR         equ	967	;# 
  5006   0003C8                     CWG2DBF         equ	968	;# 
  5007   0003C9                     CWG2CON0        equ	969	;# 
  5008   0003CA                     CWG2CON1        equ	970	;# 
  5009   0003CB                     CWG2AS0         equ	971	;# 
  5010   0003CC                     CWG2AS1         equ	972	;# 
  5011   0003CD                     CWG2STR         equ	973	;# 
  5012   0003CE                     CWG3CLK         equ	974	;# 
  5013   0003CE                     CWG3CLKCON      equ	974	;# 
  5014   0003CF                     CWG3ISM         equ	975	;# 
  5015   0003CF                     CWG3DAT         equ	975	;# 
  5016   0003D0                     CWG3DBR         equ	976	;# 
  5017   0003D1                     CWG3DBF         equ	977	;# 
  5018   0003D2                     CWG3CON0        equ	978	;# 
  5019   0003D3                     CWG3CON1        equ	979	;# 
  5020   0003D4                     CWG3AS0         equ	980	;# 
  5021   0003D5                     CWG3AS1         equ	981	;# 
  5022   0003D6                     CWG3STR         equ	982	;# 
  5023   0003D7                     FVRCON          equ	983	;# 
  5024   0003D8                     ADCPCON         equ	984	;# 
  5025   0003D8                     ADCP            equ	984	;# 
  5026   0003D9                     ADLTH           equ	985	;# 
  5027   0003D9                     ADLTHL          equ	985	;# 
  5028   0003DA                     ADLTHH          equ	986	;# 
  5029   0003DB                     ADUTH           equ	987	;# 
  5030   0003DB                     ADUTHL          equ	987	;# 
  5031   0003DC                     ADUTHH          equ	988	;# 
  5032   0003DD                     ADERR           equ	989	;# 
  5033   0003DD                     ADERRL          equ	989	;# 
  5034   0003DE                     ADERRH          equ	990	;# 
  5035   0003DF                     ADSTPT          equ	991	;# 
  5036   0003DF                     ADSTPTL         equ	991	;# 
  5037   0003E0                     ADSTPTH         equ	992	;# 
  5038   0003E1                     ADFLTR          equ	993	;# 
  5039   0003E1                     ADFLTRL         equ	993	;# 
  5040   0003E2                     ADFLTRH         equ	994	;# 
  5041   0003E3                     ADACC           equ	995	;# 
  5042   0003E3                     ADACCL          equ	995	;# 
  5043   0003E4                     ADACCH          equ	996	;# 
  5044   0003E5                     ADACCU          equ	997	;# 
  5045   0003E6                     ADCNT           equ	998	;# 
  5046   0003E7                     ADRPT           equ	999	;# 
  5047   0003E8                     ADPREV          equ	1000	;# 
  5048   0003E8                     ADPREVL         equ	1000	;# 
  5049   0003E9                     ADPREVH         equ	1001	;# 
  5050   0003EA                     ADRES           equ	1002	;# 
  5051   0003EA                     ADRESL          equ	1002	;# 
  5052   0003EB                     ADRESH          equ	1003	;# 
  5053   0003EC                     ADPCH           equ	1004	;# 
  5054   0003EE                     ADACQ           equ	1006	;# 
  5055   0003EE                     ADACQL          equ	1006	;# 
  5056   0003EF                     ADACQH          equ	1007	;# 
  5057   0003F0                     ADCAP           equ	1008	;# 
  5058   0003F1                     ADPRE           equ	1009	;# 
  5059   0003F1                     ADPREL          equ	1009	;# 
  5060   0003F2                     ADPREH          equ	1010	;# 
  5061   0003F3                     ADCON0          equ	1011	;# 
  5062   0003F4                     ADCON1          equ	1012	;# 
  5063   0003F5                     ADCON2          equ	1013	;# 
  5064   0003F6                     ADCON3          equ	1014	;# 
  5065   0003F7                     ADSTAT          equ	1015	;# 
  5066   0003F8                     ADREF           equ	1016	;# 
  5067   0003F9                     ADACT           equ	1017	;# 
  5068   0003FA                     ADCLK           equ	1018	;# 
  5069   000400                     ANSELA          equ	1024	;# 
  5070   000401                     WPUA            equ	1025	;# 
  5071   000402                     ODCONA          equ	1026	;# 
  5072   000403                     SLRCONA         equ	1027	;# 
  5073   000404                     INLVLA          equ	1028	;# 
  5074   000405                     IOCAP           equ	1029	;# 
  5075   000406                     IOCAN           equ	1030	;# 
  5076   000407                     IOCAF           equ	1031	;# 
  5077   000408                     ANSELB          equ	1032	;# 
  5078   000409                     WPUB            equ	1033	;# 
  5079   00040A                     ODCONB          equ	1034	;# 
  5080   00040B                     SLRCONB         equ	1035	;# 
  5081   00040C                     INLVLB          equ	1036	;# 
  5082   00040D                     IOCBP           equ	1037	;# 
  5083   00040E                     IOCBN           equ	1038	;# 
  5084   00040F                     IOCBF           equ	1039	;# 
  5085   000410                     ANSELC          equ	1040	;# 
  5086   000411                     WPUC            equ	1041	;# 
  5087   000412                     ODCONC          equ	1042	;# 
  5088   000413                     SLRCONC         equ	1043	;# 
  5089   000414                     INLVLC          equ	1044	;# 
  5090   000415                     IOCCP           equ	1045	;# 
  5091   000416                     IOCCN           equ	1046	;# 
  5092   000417                     IOCCF           equ	1047	;# 
  5093   000418                     ANSELD          equ	1048	;# 
  5094   000419                     WPUD            equ	1049	;# 
  5095   00041A                     ODCOND          equ	1050	;# 
  5096   00041B                     SLRCOND         equ	1051	;# 
  5097   00041C                     INLVLD          equ	1052	;# 
  5098   000420                     ANSELE          equ	1056	;# 
  5099   000421                     WPUE            equ	1057	;# 
  5100   000422                     ODCONE          equ	1058	;# 
  5101   000423                     SLRCONE         equ	1059	;# 
  5102   000424                     INLVLE          equ	1060	;# 
  5103   000425                     IOCEP           equ	1061	;# 
  5104   000426                     IOCEN           equ	1062	;# 
  5105   000427                     IOCEF           equ	1063	;# 
  5106   000428                     ANSELF          equ	1064	;# 
  5107   000429                     WPUF            equ	1065	;# 
  5108   00042A                     ODCONF          equ	1066	;# 
  5109   00042B                     SLRCONF         equ	1067	;# 
  5110   00042C                     INLVLF          equ	1068	;# 
  5111   000440                     NCO1ACC         equ	1088	;# 
  5112   000440                     NCO1ACCL        equ	1088	;# 
  5113   000441                     NCO1ACCH        equ	1089	;# 
  5114   000442                     NCO1ACCU        equ	1090	;# 
  5115   000443                     NCO1INC         equ	1091	;# 
  5116   000443                     NCO1INCL        equ	1091	;# 
  5117   000444                     NCO1INCH        equ	1092	;# 
  5118   000445                     NCO1INCU        equ	1093	;# 
  5119   000446                     NCO1CON         equ	1094	;# 
  5120   000447                     NCO1CLK         equ	1095	;# 
  5121   000448                     NCO2ACC         equ	1096	;# 
  5122   000448                     NCO2ACCL        equ	1096	;# 
  5123   000449                     NCO2ACCH        equ	1097	;# 
  5124   00044A                     NCO2ACCU        equ	1098	;# 
  5125   00044B                     NCO2INC         equ	1099	;# 
  5126   00044B                     NCO2INCL        equ	1099	;# 
  5127   00044C                     NCO2INCH        equ	1100	;# 
  5128   00044D                     NCO2INCU        equ	1101	;# 
  5129   00044E                     NCO2CON         equ	1102	;# 
  5130   00044F                     NCO2CLK         equ	1103	;# 
  5131   000450                     NCO3ACC         equ	1104	;# 
  5132   000450                     NCO3ACCL        equ	1104	;# 
  5133   000451                     NCO3ACCH        equ	1105	;# 
  5134   000452                     NCO3ACCU        equ	1106	;# 
  5135   000453                     NCO3INC         equ	1107	;# 
  5136   000453                     NCO3INCL        equ	1107	;# 
  5137   000454                     NCO3INCH        equ	1108	;# 
  5138   000455                     NCO3INCU        equ	1109	;# 
  5139   000456                     NCO3CON         equ	1110	;# 
  5140   000457                     NCO3CLK         equ	1111	;# 
  5141   000459                     IVTLOCK         equ	1113	;# 
  5142   00045A                     IVTAD           equ	1114	;# 
  5143   00045A                     IVTADL          equ	1114	;# 
  5144   00045B                     IVTADH          equ	1115	;# 
  5145   00045C                     IVTADU          equ	1116	;# 
  5146   00045D                     IVTBASE         equ	1117	;# 
  5147   00045D                     IVTBASEL        equ	1117	;# 
  5148   00045E                     IVTBASEH        equ	1118	;# 
  5149   00045F                     IVTBASEU        equ	1119	;# 
  5150   000460                     PWM1ERS         equ	1120	;# 
  5151   000461                     PWM1CLK         equ	1121	;# 
  5152   000462                     PWM1LDS         equ	1122	;# 
  5153   000463                     PWM1PR          equ	1123	;# 
  5154   000463                     PWM1PRL         equ	1123	;# 
  5155   000464                     PWM1PRH         equ	1124	;# 
  5156   000465                     PWM1CPRE        equ	1125	;# 
  5157   000466                     PWM1PIPOS       equ	1126	;# 
  5158   000467                     PWM1GIR         equ	1127	;# 
  5159   000468                     PWM1GIE         equ	1128	;# 
  5160   000469                     PWM1CON         equ	1129	;# 
  5161   00046A                     PWM1S1CFG       equ	1130	;# 
  5162   00046B                     PWM1S1P1        equ	1131	;# 
  5163   00046B                     PWM1S1P1L       equ	1131	;# 
  5164   00046C                     PWM1S1P1H       equ	1132	;# 
  5165   00046D                     PWM1S1P2        equ	1133	;# 
  5166   00046D                     PWM1S1P2L       equ	1133	;# 
  5167   00046E                     PWM1S1P2H       equ	1134	;# 
  5168   00046F                     PWM2ERS         equ	1135	;# 
  5169   000470                     PWM2CLK         equ	1136	;# 
  5170   000471                     PWM2LDS         equ	1137	;# 
  5171   000472                     PWM2PR          equ	1138	;# 
  5172   000472                     PWM2PRL         equ	1138	;# 
  5173   000473                     PWM2PRH         equ	1139	;# 
  5174   000474                     PWM2CPRE        equ	1140	;# 
  5175   000475                     PWM2PIPOS       equ	1141	;# 
  5176   000476                     PWM2GIR         equ	1142	;# 
  5177   000477                     PWM2GIE         equ	1143	;# 
  5178   000478                     PWM2CON         equ	1144	;# 
  5179   000479                     PWM2S1CFG       equ	1145	;# 
  5180   00047A                     PWM2S1P1        equ	1146	;# 
  5181   00047A                     PWM2S1P1L       equ	1146	;# 
  5182   00047B                     PWM2S1P1H       equ	1147	;# 
  5183   00047C                     PWM2S1P2        equ	1148	;# 
  5184   00047C                     PWM2S1P2L       equ	1148	;# 
  5185   00047D                     PWM2S1P2H       equ	1149	;# 
  5186   00047E                     PWM3ERS         equ	1150	;# 
  5187   00047F                     PWM3CLK         equ	1151	;# 
  5188   000480                     PWM3LDS         equ	1152	;# 
  5189   000481                     PWM3PR          equ	1153	;# 
  5190   000481                     PWM3PRL         equ	1153	;# 
  5191   000482                     PWM3PRH         equ	1154	;# 
  5192   000483                     PWM3CPRE        equ	1155	;# 
  5193   000484                     PWM3PIPOS       equ	1156	;# 
  5194   000485                     PWM3GIR         equ	1157	;# 
  5195   000486                     PWM3GIE         equ	1158	;# 
  5196   000487                     PWM3CON         equ	1159	;# 
  5197   000488                     PWM3S1CFG       equ	1160	;# 
  5198   000489                     PWM3S1P1        equ	1161	;# 
  5199   000489                     PWM3S1P1L       equ	1161	;# 
  5200   00048A                     PWM3S1P1H       equ	1162	;# 
  5201   00048B                     PWM3S1P2        equ	1163	;# 
  5202   00048B                     PWM3S1P2L       equ	1163	;# 
  5203   00048C                     PWM3S1P2H       equ	1164	;# 
  5204   00049C                     PWMLOAD         equ	1180	;# 
  5205   00049D                     PWMEN           equ	1181	;# 
  5206   00049E                     PIE0            equ	1182	;# 
  5207   00049F                     PIE1            equ	1183	;# 
  5208   0004A0                     PIE2            equ	1184	;# 
  5209   0004A1                     PIE3            equ	1185	;# 
  5210   0004A2                     PIE4            equ	1186	;# 
  5211   0004A3                     PIE5            equ	1187	;# 
  5212   0004A4                     PIE6            equ	1188	;# 
  5213   0004A5                     PIE7            equ	1189	;# 
  5214   0004A6                     PIE8            equ	1190	;# 
  5215   0004A7                     PIE9            equ	1191	;# 
  5216   0004A8                     PIE10           equ	1192	;# 
  5217   0004A9                     PIE11           equ	1193	;# 
  5218   0004AA                     PIE12           equ	1194	;# 
  5219   0004AB                     PIE13           equ	1195	;# 
  5220   0004AC                     PIE14           equ	1196	;# 
  5221   0004AD                     PIE15           equ	1197	;# 
  5222   0004AE                     PIR0            equ	1198	;# 
  5223   0004AF                     PIR1            equ	1199	;# 
  5224   0004B0                     PIR2            equ	1200	;# 
  5225   0004B1                     PIR3            equ	1201	;# 
  5226   0004B2                     PIR4            equ	1202	;# 
  5227   0004B3                     PIR5            equ	1203	;# 
  5228   0004B4                     PIR6            equ	1204	;# 
  5229   0004B5                     PIR7            equ	1205	;# 
  5230   0004B6                     PIR8            equ	1206	;# 
  5231   0004B7                     PIR9            equ	1207	;# 
  5232   0004B8                     PIR10           equ	1208	;# 
  5233   0004B9                     PIR11           equ	1209	;# 
  5234   0004BA                     PIR12           equ	1210	;# 
  5235   0004BB                     PIR13           equ	1211	;# 
  5236   0004BC                     PIR14           equ	1212	;# 
  5237   0004BD                     PIR15           equ	1213	;# 
  5238   0004BE                     LATA            equ	1214	;# 
  5239   0004BF                     LATB            equ	1215	;# 
  5240   0004C0                     LATC            equ	1216	;# 
  5241   0004C1                     LATD            equ	1217	;# 
  5242   0004C2                     LATE            equ	1218	;# 
  5243   0004C3                     LATF            equ	1219	;# 
  5244   0004C6                     TRISA           equ	1222	;# 
  5245   0004C7                     TRISB           equ	1223	;# 
  5246   0004C8                     TRISC           equ	1224	;# 
  5247   0004C9                     TRISD           equ	1225	;# 
  5248   0004CA                     TRISE           equ	1226	;# 
  5249   0004CB                     TRISF           equ	1227	;# 
  5250   0004CE                     PORTA           equ	1230	;# 
  5251   0004CF                     PORTB           equ	1231	;# 
  5252   0004D0                     PORTC           equ	1232	;# 
  5253   0004D1                     PORTD           equ	1233	;# 
  5254   0004D2                     PORTE           equ	1234	;# 
  5255   0004D3                     PORTF           equ	1235	;# 
  5256   0004D6                     INTCON0         equ	1238	;# 
  5257   0004D7                     INTCON1         equ	1239	;# 
  5258   0004D8                     STATUS          equ	1240	;# 
  5259   0004D9                     FSR2            equ	1241	;# 
  5260   0004D9                     FSR2L           equ	1241	;# 
  5261   0004DA                     FSR2H           equ	1242	;# 
  5262   0004DB                     PLUSW2          equ	1243	;# 
  5263   0004DC                     PREINC2         equ	1244	;# 
  5264   0004DD                     POSTDEC2        equ	1245	;# 
  5265   0004DE                     POSTINC2        equ	1246	;# 
  5266   0004DF                     INDF2           equ	1247	;# 
  5267   0004E0                     BSR             equ	1248	;# 
  5268   0004E1                     FSR1            equ	1249	;# 
  5269   0004E1                     FSR1L           equ	1249	;# 
  5270   0004E2                     FSR1H           equ	1250	;# 
  5271   0004E3                     PLUSW1          equ	1251	;# 
  5272   0004E4                     PREINC1         equ	1252	;# 
  5273   0004E5                     POSTDEC1        equ	1253	;# 
  5274   0004E6                     POSTINC1        equ	1254	;# 
  5275   0004E7                     INDF1           equ	1255	;# 
  5276   0004E8                     WREG            equ	1256	;# 
  5277   0004E9                     FSR0            equ	1257	;# 
  5278   0004E9                     FSR0L           equ	1257	;# 
  5279   0004EA                     FSR0H           equ	1258	;# 
  5280   0004EB                     PLUSW0          equ	1259	;# 
  5281   0004EC                     PREINC0         equ	1260	;# 
  5282   0004ED                     POSTDEC0        equ	1261	;# 
  5283   0004EE                     POSTINC0        equ	1262	;# 
  5284   0004EF                     INDF0           equ	1263	;# 
  5285   0004F0                     PCON0           equ	1264	;# 
  5286   0004F1                     PCON1           equ	1265	;# 
  5287   0004F2                     CPUDOZE         equ	1266	;# 
  5288   0004F3                     PROD            equ	1267	;# 
  5289   0004F3                     PRODL           equ	1267	;# 
  5290   0004F4                     PRODH           equ	1268	;# 
  5291   0004F5                     TABLAT          equ	1269	;# 
  5292   0004F6                     TBLPTR          equ	1270	;# 
  5293   0004F6                     TBLPTRL         equ	1270	;# 
  5294   0004F7                     TBLPTRH         equ	1271	;# 
  5295   0004F8                     TBLPTRU         equ	1272	;# 
  5296   0004F9                     PCLAT           equ	1273	;# 
  5297   0004F9                     PCL             equ	1273	;# 
  5298   0004FA                     PCLATH          equ	1274	;# 
  5299   0004FB                     PCLATU          equ	1275	;# 
  5300   0004FC                     STKPTR          equ	1276	;# 
  5301   0004FD                     TOS             equ	1277	;# 
  5302   0004FD                     TOSL            equ	1277	;# 
  5303   0004FE                     TOSH            equ	1278	;# 
  5304   0004FF                     TOSU            equ	1279	;# 
  5305                           
  5306 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  5307   000000                     _I2C1_DO_IDLE   equ	0
  5308                           
  5309 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  5310   000000                     _I2C1_DO_SEND_ADR_READ equ	0
  5311                           
  5312 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  5313   000000                     _I2C1_DO_SEND_ADR_WRITE equ	0
  5314                           
  5315 ;; Function _I2C1_DO_TX is unused but had its address taken
  5316   000000                     _I2C1_DO_TX     equ	0
  5317                           
  5318 ;; Function _I2C1_DO_RX is unused but had its address taken
  5319   000000                     _I2C1_DO_RX     equ	0
  5320                           
  5321 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  5322   000000                     _I2C1_DO_TX_EMPTY equ	0
  5323                           
  5324 ;; Function _I2C1_DO_RX_EMPTY is unused but had its address taken
  5325   000000                     _I2C1_DO_RX_EMPTY equ	0
  5326                           
  5327 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  5328   000000                     _I2C1_DO_SEND_RESTART_READ equ	0
  5329                           
  5330 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  5331   000000                     _I2C1_DO_SEND_RESTART_WRITE equ	0
  5332                           
  5333 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  5334   000000                     _I2C1_DO_SEND_RESTART equ	0
  5335                           
  5336 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  5337   000000                     _I2C1_DO_SEND_STOP equ	0
  5338                           
  5339 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  5340   000000                     _I2C1_DO_RX_ACK equ	0
  5341                           
  5342 ;; Function _I2C1_DO_TX_ACK is unused but had its address taken
  5343   000000                     _I2C1_DO_TX_ACK equ	0
  5344                           
  5345 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  5346   000000                     _I2C1_DO_RX_NACK_STOP equ	0
  5347                           
  5348 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  5349   000000                     _I2C1_DO_RX_NACK_RESTART equ	0
  5350                           
  5351 ;; Function _I2C1_DO_RESET is unused but had its address taken
  5352   000000                     _I2C1_DO_RESET  equ	0
  5353                           
  5354 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  5355   000000                     _I2C1_DO_ADDRESS_NACK equ	0
  5356                           
  5357 ;; Function _I2C1_DO_BUS_COLLISION is unused but had its address taken
  5358   000000                     _I2C1_DO_BUS_COLLISION equ	0
  5359                           
  5360 ;; Function _I2C1_DO_BUS_ERROR is unused but had its address taken
  5361   000000                     _I2C1_DO_BUS_ERROR equ	0
  5362                           
  5363 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  5364   000000                     _I2C1_CallbackReturnStop equ	0
  5365                           
  5366 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  5367   000000                     _I2C1_CallbackReturnReset equ	0
  5368                           
  5369 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  5370   000000                     _rd1RegCompleteHandler equ	0
  5371                           
  5372 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  5373   000000                     _rd2RegCompleteHandler equ	0
  5374                           
  5375 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  5376   000000                     _wr1RegCompleteHandler equ	0
  5377                           
  5378 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  5379   000000                     _wr2RegCompleteHandler equ	0
  5380                           
  5381 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  5382   000000                     _rdBlkRegCompleteHandler equ	0
  5383                           
  5384                           	psect	idataCOMRAM
  5385   01717A                     __pidataCOMRAM:
  5386                           	callstack 0
  5387                           
  5388                           ;initializer for _current_i2c_speed
  5389   01717A  01                 	db	1
  5390                           
  5391                           	psect	mediumconst
  5392   00FE6A                     __pmediumconst:
  5393                           	callstack 0
  5394   00FE6A  00                 	db	0
  5395   00FE6B                     _i2c1_fsmStateTable:
  5396                           	callstack 0
  5397   00FE6B  00                 	db	0
  5398   00FE6C  00                 	db	0
  5399   00FE6D  00                 	db	0
  5400   00FE6E  00                 	db	0
  5401   00FE6F  00                 	db	0
  5402   00FE70  00                 	db	0
  5403   00FE71  00                 	db	0
  5404   00FE72  00                 	db	0
  5405   00FE73  00                 	db	0
  5406   00FE74  00                 	db	0
  5407   00FE75  00                 	db	0
  5408   00FE76  00                 	db	0
  5409   00FE77  00                 	db	0
  5410   00FE78  00                 	db	0
  5411   00FE79  00                 	db	0
  5412   00FE7A  00                 	db	0
  5413   00FE7B  00                 	db	0
  5414   00FE7C  00                 	db	0
  5415   00FE7D  00                 	db	0
  5416   00FE7E  00                 	db	0
  5417   00FE7F  00                 	db	0
  5418   00FE80  00                 	db	0
  5419   00FE81  00                 	db	0
  5420   00FE82  00                 	db	0
  5421   00FE83  00                 	db	0
  5422   00FE84  00                 	db	0
  5423   00FE85  00                 	db	0
  5424   00FE86  00                 	db	0
  5425   00FE87  00                 	db	0
  5426   00FE88  00                 	db	0
  5427   00FE89  00                 	db	0
  5428   00FE8A  00                 	db	0
  5429   00FE8B  00                 	db	0
  5430   00FE8C  00                 	db	0
  5431   00FE8D  00                 	db	0
  5432   00FE8E  00                 	db	0
  5433   00FE8F  00                 	db	0
  5434   00FE90  00                 	db	0
  5435   00FE91  00                 	db	0
  5436   00FE92  00                 	db	0
  5437   00FE93  00                 	db	0
  5438   00FE94  00                 	db	0
  5439   00FE95  00                 	db	0
  5440   00FE96  00                 	db	0
  5441   00FE97  00                 	db	0
  5442   00FE98  00                 	db	0
  5443   00FE99  00                 	db	0
  5444   00FE9A  00                 	db	0
  5445   00FE9B  00                 	db	0
  5446   00FE9C  00                 	db	0
  5447   00FE9D  00                 	db	0
  5448   00FE9E  00                 	db	0
  5449   00FE9F  00                 	db	0
  5450   00FEA0  00                 	db	0
  5451   00FEA1  00                 	db	0
  5452   00FEA2  00                 	db	0
  5453   00FEA3  00                 	db	0
  5454   00FEA4                     __end_of_i2c1_fsmStateTable:
  5455                           	callstack 0
  5456   00FEA4                     _atanlo:
  5457                           	callstack 0
  5458   00FEA4  3769               	dw	14185
  5459   00FEA6  31AC               	dw	12716
  5460   00FEA8  2168               	dw	8552
  5461   00FEAA  3322               	dw	13090
  5462   00FEAC  0FB4               	dw	4020
  5463   00FEAE  3314               	dw	13076
  5464   00FEB0  2168               	dw	8552
  5465   00FEB2  33A2               	dw	13218
  5466   00FEB4                     __end_of_atanlo:
  5467                           	callstack 0
  5468   00FEB4                     _atanhi:
  5469                           	callstack 0
  5470   00FEB4  6338               	dw	25400
  5471   00FEB6  3EED               	dw	16109
  5472   00FEB8  0FDA               	dw	4058
  5473   00FEBA  3F49               	dw	16201
  5474   00FEBC  985E               	dw	39006
  5475   00FEBE  3F7B               	dw	16251
  5476   00FEC0  0FDA               	dw	4058
  5477   00FEC2  3FC9               	dw	16329
  5478   00FEC4                     __end_of_atanhi:
  5479                           	callstack 0
  5480   00FEC4  0FDB               	dw	4059
  5481   00FEC6  40C9               	dw	16585
  5482   00FEC8                     __end_of_s4pio2:
  5483                           	callstack 0
  5484   00FEC8  CBE4               	dw	52196
  5485   00FECA  4096               	dw	16534
  5486   00FECC                     __end_of_s3pio2:
  5487                           	callstack 0
  5488   00FECC  0FDB               	dw	4059
  5489   00FECE  4049               	dw	16457
  5490   00FED0                     __end_of_s2pio2:
  5491                           	callstack 0
  5492   00FED0  0FDB               	dw	4059
  5493   00FED2  3FC9               	dw	16329
  5494   00FED4                     __end_of_s1pio2:
  5495                           	callstack 0
  5496   00FED4  6C3C               	dw	27708
  5497   00FED6  3636               	dw	13878
  5498   00FED8                     __end_of_S4:
  5499                           	callstack 0
  5500   00FED8  07CF               	dw	1999
  5501   00FEDA  B950               	dw	47440
  5502   00FEDC                     __end_of_S3:
  5503                           	callstack 0
  5504   00FEDC  8884               	dw	34948
  5505   00FEDE  3C08               	dw	15368
  5506   00FEE0                     __end_of_S2:
  5507                           	callstack 0
  5508   00FEE0  AAAB               	dw	43691
  5509   00FEE2  BE2A               	dw	48682
  5510   00FEE4                     __end_of_S1:
  5511                           	callstack 0
  5512   00FEE4  85A3               	dw	34211
  5513   00FEE6  3288               	dw	12936
  5514   00FEE8                     __end_of_pio2_1t:
  5515                           	callstack 0
  5516   00FEE8  0FDA               	dw	4058
  5517   00FEEA  3FC9               	dw	16329
  5518   00FEEC                     __end_of_pio2_1:
  5519                           	callstack 0
  5520   00FEEC  F983               	dw	63875
  5521   00FEEE  3F22               	dw	16162
  5522   00FEF0                     __end_of_invpio2:
  5523                           	callstack 0
  5524   00FEF0  0000               	dw	0
  5525   00FEF2  3F00               	dw	16128
  5526   00FEF4                     __end_of_half:
  5527                           	callstack 0
  5528   00FEF4  9A17               	dw	39447
  5529   00FEF6  37CC               	dw	14284
  5530   00FEF8                     __end_of_C3:
  5531                           	callstack 0
  5532   00FEF8  043F               	dw	1087
  5533   00FEFA  BAB6               	dw	47798
  5534   00FEFC                     __end_of_C2:
  5535                           	callstack 0
  5536   00FEFC  AA9F               	dw	43679
  5537   00FEFE  3D2A               	dw	15658
  5538   00FF00                     __end_of_C1:
  5539                           	callstack 0
  5540   00FF00  0000               	dw	0
  5541   00FF02  BF00               	dw	48896
  5542   00FF04                     __end_of_C0:
  5543                           	callstack 0
  5544   00FF04  0FDB               	dw	4059
  5545   00FF06  40C9               	dw	16585
  5546   00FF08                     __end_of_c4pio2:
  5547                           	callstack 0
  5548   00FF08  CBE4               	dw	52196
  5549   00FF0A  4096               	dw	16534
  5550   00FF0C                     __end_of_c3pio2:
  5551                           	callstack 0
  5552   00FF0C  0FDB               	dw	4059
  5553   00FF0E  4049               	dw	16457
  5554   00FF10                     __end_of_c2pio2:
  5555                           	callstack 0
  5556   00FF10  0FDB               	dw	4059
  5557   00FF12  3FC9               	dw	16329
  5558   00FF14                     __end_of_c1pio2:
  5559                           	callstack 0
  5560   00FF14  AC25               	dw	44069
  5561   00FF16  3D7C               	dw	15740
  5562   00FF18                     __end_of_aT4:
  5563                           	callstack 0
  5564   00FF18  1247               	dw	4679
  5565   00FF1A  BDDA               	dw	48602
  5566   00FF1C                     __end_of_aT3:
  5567                           	callstack 0
  5568   00FF1C  F50D               	dw	62733
  5569   00FF1E  3E11               	dw	15889
  5570   00FF20                     __end_of_aT2:
  5571                           	callstack 0
  5572   00FF20  CA98               	dw	51864
  5573   00FF22  BE4C               	dw	48716
  5574   00FF24                     __end_of_aT1:
  5575                           	callstack 0
  5576   00FF24  AAA9               	dw	43689
  5577   00FF26  3EAA               	dw	16042
  5578   00FF28                     __end_of_aT0:
  5579                           	callstack 0
  5580   00FF28  BD2E               	dw	48430
  5581   00FF2A  B3BB               	dw	46011
  5582   00FF2C                     __end_of_pi_lo:
  5583                           	callstack 0
  5584   00FF2C  0FDB               	dw	4059
  5585   00FF2E  4049               	dw	16457
  5586   00FF30                     __end_of_pi:
  5587                           	callstack 0
  5588   0000AF                     _OSCCON3        set	175
  5589   0000B3                     _OSCEN          set	179
  5590   0000AD                     _OSCCON1        set	173
  5591   0000B1                     _OSCFRQ         set	177
  5592   000272                     _U1RXPPS        set	626
  5593   000213                     _RC2PPS         set	531
  5594   000217                     _RC6PPS         set	535
  5595   000216                     _RC5PPS         set	534
  5596   000271                     _I2C1SCLPPS     set	625
  5597   000270                     _I2C1SDAPPS     set	624
  5598   00029B                     _I2C1PIEbits    set	667
  5599   00029A                     _I2C1PIRbits    set	666
  5600   000297                     _I2C1ERRbits    set	663
  5601   000295                     _I2C1CON1bits   set	661
  5602   00028C                     _I2C1TXB        set	652
  5603   00028B                     _I2C1RXB        set	651
  5604   000299                     _I2C1STAT1bits  set	665
  5605   000294                     _I2C1CON0bits   set	660
  5606   00028D                     _I2C1CNT        set	653
  5607   000297                     _I2C1ERR        set	663
  5608   00029B                     _I2C1PIE        set	667
  5609   00029A                     _I2C1PIR        set	666
  5610   00029C                     _I2C1CLK        set	668
  5611   000296                     _I2C1CON2       set	662
  5612   000295                     _I2C1CON1       set	661
  5613   000294                     _I2C1CON0       set	660
  5614   000409                     _WPUBbits       set	1033
  5615   000412                     _ODCONCbits     set	1042
  5616   000411                     _WPUCbits       set	1041
  5617   000410                     _ANSELCbits     set	1040
  5618   000428                     _ANSELFbits     set	1064
  5619   000419                     _WPUDbits       set	1049
  5620   000419                     _WPUD           set	1049
  5621   000418                     _ANSELD         set	1048
  5622   00040A                     _ODCONBbits     set	1034
  5623   000408                     _ANSELBbits     set	1032
  5624   0004D1                     _PORTD          set	1233
  5625   0004C8                     _TRISCbits      set	1224
  5626   0004C3                     _LATFbits       set	1219
  5627   0004CB                     _TRISFbits      set	1227
  5628   0004C1                     _LATDbits       set	1217
  5629   0004C1                     _LATD           set	1217
  5630   0004C9                     _TRISDbits      set	1225
  5631   0004C9                     _TRISD          set	1225
  5632   0004CF                     _PORTBbits      set	1231
  5633   0004BF                     _LATBbits       set	1215
  5634   0004C7                     _TRISBbits      set	1223
  5635   0004B5                     _PIR7bits       set	1205
  5636   0004A5                     _PIE7bits       set	1189
  5637   00FF30  49                 	db	73	;'I'
  5638   00FF31  6E                 	db	110	;'n'
  5639   00FF32  63                 	db	99	;'c'
  5640   00FF33  6C                 	db	108	;'l'
  5641   00FF34  69                 	db	105	;'i'
  5642   00FF35  6E                 	db	110	;'n'
  5643   00FF36  61                 	db	97	;'a'
  5644   00FF37  63                 	db	99	;'c'
  5645   00FF38  69                 	db	105	;'i'
  5646   00FF39  6F                 	db	111	;'o'
  5647   00FF3A  6E                 	db	110	;'n'
  5648   00FF3B  20                 	db	32
  5649   00FF3C  69                 	db	105	;'i'
  5650   00FF3D  7A                 	db	122	;'z'
  5651   00FF3E  71                 	db	113	;'q'
  5652   00FF3F  75                 	db	117	;'u'
  5653   00FF40  69                 	db	105	;'i'
  5654   00FF41  65                 	db	101	;'e'
  5655   00FF42  72                 	db	114	;'r'
  5656   00FF43  64                 	db	100	;'d'
  5657   00FF44  61                 	db	97	;'a'
  5658   00FF45  00                 	db	0
  5659   00FF46  49                 	db	73	;'I'
  5660   00FF47  6E                 	db	110	;'n'
  5661   00FF48  63                 	db	99	;'c'
  5662   00FF49  6C                 	db	108	;'l'
  5663   00FF4A  69                 	db	105	;'i'
  5664   00FF4B  6E                 	db	110	;'n'
  5665   00FF4C  61                 	db	97	;'a'
  5666   00FF4D  63                 	db	99	;'c'
  5667   00FF4E  69                 	db	105	;'i'
  5668   00FF4F  6F                 	db	111	;'o'
  5669   00FF50  6E                 	db	110	;'n'
  5670   00FF51  20                 	db	32
  5671   00FF52  61                 	db	97	;'a'
  5672   00FF53  64                 	db	100	;'d'
  5673   00FF54  65                 	db	101	;'e'
  5674   00FF55  6C                 	db	108	;'l'
  5675   00FF56  61                 	db	97	;'a'
  5676   00FF57  6E                 	db	110	;'n'
  5677   00FF58  74                 	db	116	;'t'
  5678   00FF59  65                 	db	101	;'e'
  5679   00FF5A  00                 	db	0
  5680   00FF5B  49                 	db	73	;'I'
  5681   00FF5C  6E                 	db	110	;'n'
  5682   00FF5D  63                 	db	99	;'c'
  5683   00FF5E  6C                 	db	108	;'l'
  5684   00FF5F  69                 	db	105	;'i'
  5685   00FF60  6E                 	db	110	;'n'
  5686   00FF61  61                 	db	97	;'a'
  5687   00FF62  63                 	db	99	;'c'
  5688   00FF63  69                 	db	105	;'i'
  5689   00FF64  6F                 	db	111	;'o'
  5690   00FF65  6E                 	db	110	;'n'
  5691   00FF66  20                 	db	32
  5692   00FF67  64                 	db	100	;'d'
  5693   00FF68  65                 	db	101	;'e'
  5694   00FF69  72                 	db	114	;'r'
  5695   00FF6A  65                 	db	101	;'e'
  5696   00FF6B  63                 	db	99	;'c'
  5697   00FF6C  68                 	db	104	;'h'
  5698   00FF6D  61                 	db	97	;'a'
  5699   00FF6E  00                 	db	0
  5700   00FF6F  49                 	db	73	;'I'
  5701   00FF70  6E                 	db	110	;'n'
  5702   00FF71  63                 	db	99	;'c'
  5703   00FF72  6C                 	db	108	;'l'
  5704   00FF73  69                 	db	105	;'i'
  5705   00FF74  6E                 	db	110	;'n'
  5706   00FF75  61                 	db	97	;'a'
  5707   00FF76  63                 	db	99	;'c'
  5708   00FF77  69                 	db	105	;'i'
  5709   00FF78  6F                 	db	111	;'o'
  5710   00FF79  6E                 	db	110	;'n'
  5711   00FF7A  20                 	db	32
  5712   00FF7B  61                 	db	97	;'a'
  5713   00FF7C  74                 	db	116	;'t'
  5714   00FF7D  72                 	db	114	;'r'
  5715   00FF7E  61                 	db	97	;'a'
  5716   00FF7F  73                 	db	115	;'s'
  5717   00FF80  00                 	db	0
  5718   00FF81                     STR_14:
  5719   00FF81  50                 	db	80	;'P'
  5720   00FF82  3A                 	db	58	;':'
  5721   00FF83  20                 	db	32
  5722   00FF84  25                 	db	37
  5723   00FF85  2E                 	db	46
  5724   00FF86  31                 	db	49	;'1'
  5725   00FF87  66                 	db	102	;'f'
  5726   00FF88  20                 	db	32
  5727   00FF89  52                 	db	82	;'R'
  5728   00FF8A  3A                 	db	58	;':'
  5729   00FF8B  20                 	db	32
  5730   00FF8C  25                 	db	37
  5731   00FF8D  2E                 	db	46
  5732   00FF8E  31                 	db	49	;'1'
  5733   00FF8F  66                 	db	102	;'f'
  5734   00FF90  00                 	db	0
  5735   00FF91  53                 	db	83	;'S'
  5736   00FF92  69                 	db	105	;'i'
  5737   00FF93  6E                 	db	110	;'n'
  5738   00FF94  20                 	db	32
  5739   00FF95  6D                 	db	109	;'m'
  5740   00FF96  6F                 	db	111	;'o'
  5741   00FF97  76                 	db	118	;'v'
  5742   00FF98  69                 	db	105	;'i'
  5743   00FF99  6D                 	db	109	;'m'
  5744   00FF9A  69                 	db	105	;'i'
  5745   00FF9B  65                 	db	101	;'e'
  5746   00FF9C  6E                 	db	110	;'n'
  5747   00FF9D  74                 	db	116	;'t'
  5748   00FF9E  6F                 	db	111	;'o'
  5749   00FF9F  00                 	db	0
  5750   00FFA0  44                 	db	68	;'D'
  5751   00FFA1  65                 	db	101	;'e'
  5752   00FFA2  73                 	db	115	;'s'
  5753   00FFA3  63                 	db	99	;'c'
  5754   00FFA4  6F                 	db	111	;'o'
  5755   00FFA5  6E                 	db	110	;'n'
  5756   00FFA6  6F                 	db	111	;'o'
  5757   00FFA7  63                 	db	99	;'c'
  5758   00FFA8  69                 	db	105	;'i'
  5759   00FFA9  64                 	db	100	;'d'
  5760   00FFAA  6F                 	db	111	;'o'
  5761   00FFAB  00                 	db	0
  5762   00FFAC                     STR_4:
  5763   00FFAC  49                 	db	73	;'I'
  5764   00FFAD  7A                 	db	122	;'z'
  5765   00FFAE  71                 	db	113	;'q'
  5766   00FFAF  75                 	db	117	;'u'
  5767   00FFB0  69                 	db	105	;'i'
  5768   00FFB1  65                 	db	101	;'e'
  5769   00FFB2  72                 	db	114	;'r'
  5770   00FFB3  64                 	db	100	;'d'
  5771   00FFB4  61                 	db	97	;'a'
  5772   00FFB5  00                 	db	0
  5773   00FFB6  53                 	db	83	;'S'
  5774   00FFB7  61                 	db	97	;'a'
  5775   00FFB8  63                 	db	99	;'c'
  5776   00FFB9  75                 	db	117	;'u'
  5777   00FFBA  64                 	db	100	;'d'
  5778   00FFBB  69                 	db	105	;'i'
  5779   00FFBC  64                 	db	100	;'d'
  5780   00FFBD  61                 	db	97	;'a'
  5781   00FFBE  00                 	db	0
  5782   00FFBF  41                 	db	65	;'A'
  5783   00FFC0  64                 	db	100	;'d'
  5784   00FFC1  65                 	db	101	;'e'
  5785   00FFC2  6C                 	db	108	;'l'
  5786   00FFC3  61                 	db	97	;'a'
  5787   00FFC4  6E                 	db	110	;'n'
  5788   00FFC5  74                 	db	116	;'t'
  5789   00FFC6  65                 	db	101	;'e'
  5790   00FFC7  00                 	db	0
  5791   00FFC8                     STR_5:
  5792   00FFC8  44                 	db	68	;'D'
  5793   00FFC9  65                 	db	101	;'e'
  5794   00FFCA  72                 	db	114	;'r'
  5795   00FFCB  65                 	db	101	;'e'
  5796   00FFCC  63                 	db	99	;'c'
  5797   00FFCD  68                 	db	104	;'h'
  5798   00FFCE  61                 	db	97	;'a'
  5799   00FFCF  00                 	db	0
  5800   00FFD0                     STR_13:
  5801   00FFD0  4D                 	db	77	;'M'
  5802   00FFD1  50                 	db	80	;'P'
  5803   00FFD2  55                 	db	85	;'U'
  5804   00FFD3  20                 	db	32
  5805   00FFD4  4F                 	db	79	;'O'
  5806   00FFD5  4B                 	db	75	;'K'
  5807   00FFD6  00                 	db	0
  5808   00FFD7                     STR_17:
  5809   00FFD7  41                 	db	65	;'A'
  5810   00FFD8  72                 	db	114	;'r'
  5811   00FFD9  72                 	db	114	;'r'
  5812   00FFDA  69                 	db	105	;'i'
  5813   00FFDB  62                 	db	98	;'b'
  5814   00FFDC  61                 	db	97	;'a'
  5815   00FFDD  00                 	db	0
  5816   00FFDE                     STR_19:
  5817   00FFDE  43                 	db	67	;'C'
  5818   00FFDF  65                 	db	101	;'e'
  5819   00FFE0  6E                 	db	110	;'n'
  5820   00FFE1  74                 	db	116	;'t'
  5821   00FFE2  72                 	db	114	;'r'
  5822   00FFE3  6F                 	db	111	;'o'
  5823   00FFE4  00                 	db	0
  5824   00FFE5                     STR_18:
  5825   00FFE5  41                 	db	65	;'A'
  5826   00FFE6  62                 	db	98	;'b'
  5827   00FFE7  61                 	db	97	;'a'
  5828   00FFE8  6A                 	db	106	;'j'
  5829   00FFE9  6F                 	db	111	;'o'
  5830   00FFEA  00                 	db	0
  5831   00FFEB  47                 	db	71	;'G'
  5832   00FFEC  6F                 	db	111	;'o'
  5833   00FFED  6C                 	db	108	;'l'
  5834   00FFEE  70                 	db	112	;'p'
  5835   00FFEF  65                 	db	101	;'e'
  5836   00FFF0  00                 	db	0
  5837   00FFF1  41                 	db	65	;'A'
  5838   00FFF2  74                 	db	116	;'t'
  5839   00FFF3  72                 	db	114	;'r'
  5840   00FFF4  61                 	db	97	;'a'
  5841   00FFF5  73                 	db	115	;'s'
  5842   00FFF6  00                 	db	0
  5843   00FFF7                     STR_20:
  5844   00FFF7  69                 	db	105	;'i'
  5845   00FFF8  6E                 	db	110	;'n'
  5846   00FFF9  66                 	db	102	;'f'
  5847   00FFFA  00                 	db	0
  5848   00FFFB                     STR_23:
  5849   00FFFB  6E                 	db	110	;'n'
  5850   00FFFC  61                 	db	97	;'a'
  5851   00FFFD  6E                 	db	110	;'n'
  5852   00FFFE  00                 	db	0
  5853   00FFFB                     STR_24          equ	STR_23
  5854   00FFFB                     STR_25          equ	STR_23
  5855   00FFF7                     STR_21          equ	STR_20
  5856   00FFF7                     STR_22          equ	STR_20
  5857   00FFC8                     STR_15          equ	STR_5
  5858   00FFAC                     STR_16          equ	STR_4
  5859   00FFFF  00                 	db	0	; dummy byte at the end
  5860   000003                     __activetblptr  equ	3
  5861                           
  5862                           ; #config settings
  5863                           
  5864                           	psect	cinit
  5865   016E66                     __pcinit:
  5866                           	callstack 0
  5867   016E66                     start_initialization:
  5868                           	callstack 0
  5869   016E66                     __initialization:
  5870                           	callstack 0
  5871                           
  5872                           ; Initialize objects allocated to COMRAM (1 bytes)
  5873                           ; load TBLPTR registers with __pidataCOMRAM
  5874   016E66  0E7A               	movlw	low __pidataCOMRAM
  5875   016E68  6EF6               	movwf	tblptrl,c
  5876   016E6A  0E71               	movlw	high __pidataCOMRAM
  5877   016E6C  6EF7               	movwf	tblptrh,c
  5878   016E6E  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  5879   016E70  6EF8               	movwf	tblptru,c
  5880   016E72  0009               	tblrd		*+	;fetch initializer
  5881   016E74  C4F5 F55F          	movff	tablat,__pdataCOMRAM
  5882                           
  5883                           ; Clear objects allocated to BANK8 (80 bytes)
  5884   016E78  EE02  F000         	lfsr	0,__pbssBANK8
  5885   016E7C  0E50               	movlw	80
  5886   016E7E                     clear_0:
  5887   016E7E  6AEE               	clrf	postinc0,c
  5888   016E80  06E8               	decf	wreg,f,c
  5889   016E82  E1FD               	bnz	clear_0
  5890                           
  5891                           ; Clear objects allocated to BANK7 (231 bytes)
  5892   016E84  EE01  F300         	lfsr	0,__pbssBANK7
  5893   016E88  0EE7               	movlw	231
  5894   016E8A                     clear_1:
  5895   016E8A  6AEE               	clrf	postinc0,c
  5896   016E8C  06E8               	decf	wreg,f,c
  5897   016E8E  E1FD               	bnz	clear_1
  5898                           
  5899                           ; Clear objects allocated to BANK6 (80 bytes)
  5900   016E90  EE01  F2AF         	lfsr	0,__pbssBANK6
  5901   016E94  0E50               	movlw	80
  5902   016E96                     clear_2:
  5903   016E96  6AEE               	clrf	postinc0,c
  5904   016E98  06E8               	decf	wreg,f,c
  5905   016E9A  E1FD               	bnz	clear_2
  5906   016E9C                     end_of_initialization:
  5907                           	callstack 0
  5908   016E9C                     __end_of__initialization:
  5909                           	callstack 0
  5910   016E9C  0100               	movlb	0
  5911   016E9E  EF76  F09D         	goto	_main	;jump to C main() function
  5912                           
  5913                           	psect	dataCOMRAM
  5914   00055F                     __pdataCOMRAM:
  5915                           	callstack 0
  5916   00055F                     _current_i2c_speed:
  5917                           	callstack 0
  5918   00055F                     	ds	1
  5919                           
  5920                           	psect	bssBANK6
  5921   0006AF                     __pbssBANK6:
  5922                           	callstack 0
  5923   0006AF                     _I2C1_Status:
  5924                           	callstack 0
  5925   0006AF                     	ds	42
  5926   0006D9                     _gyro_offset:
  5927                           	callstack 0
  5928   0006D9                     	ds	12
  5929   0006E5                     _accel_offset:
  5930                           	callstack 0
  5931   0006E5                     	ds	12
  5932   0006F1                     MPU6050_DMP_GetData@yaw_integral:
  5933                           	callstack 0
  5934   0006F1                     	ds	4
  5935   0006F5                     _width:
  5936                           	callstack 0
  5937   0006F5                     	ds	2
  5938   0006F7                     _prec:
  5939                           	callstack 0
  5940   0006F7                     	ds	2
  5941   0006F9                     GetTimestamp_ms@timestamp:
  5942                           	callstack 0
  5943   0006F9                     	ds	2
  5944   0006FB                     MPU6050_DMP_GetData@last_read_time:
  5945                           	callstack 0
  5946   0006FB                     	ds	2
  5947   0006FD                     _flags:
  5948                           	callstack 0
  5949   0006FD                     	ds	1
  5950   0006FE                     _mpu6050_initialized:
  5951                           	callstack 0
  5952   0006FE                     	ds	1
  5953                           
  5954                           	psect	bssBANK7
  5955   000700                     __pbssBANK7:
  5956                           	callstack 0
  5957   000700                     floorf@F521:
  5958                           	callstack 0
  5959   000700                     	ds	4
  5960   000704                     fabsf@F465:
  5961                           	callstack 0
  5962   000704                     	ds	4
  5963   000708                     ___rem_pio2f@F526:
  5964                           	callstack 0
  5965   000708                     	ds	4
  5966   00070C                     ___fpclassifyf@F465:
  5967                           	callstack 0
  5968   00070C                     	ds	4
  5969   000710                     _errno:
  5970                           	callstack 0
  5971   000710                     	ds	2
  5972   000712                     	ds	2
  5973   000714                     _movement_detector:
  5974                           	callstack 0
  5975   000714                     	ds	211
  5976                           
  5977                           	psect	bssBANK8
  5978   000800                     __pbssBANK8:
  5979                           	callstack 0
  5980   000800                     _dbuf:
  5981                           	callstack 0
  5982   000800                     	ds	80
  5983                           
  5984                           	psect	cstackBANK6
  5985   000600                     __pcstackBANK6:
  5986                           	callstack 0
  5987   000600                     MPU6050_DMP_GetData@dt:
  5988                           	callstack 0
  5989                           
  5990                           ; 4 bytes @ 0x0
  5991   000600                     	ds	4
  5992   000604                     _MPU6050_DMP_GetData$3464:
  5993                           	callstack 0
  5994                           
  5995                           ; 4 bytes @ 0x4
  5996   000604                     	ds	4
  5997   000608                     _MPU6050_DMP_GetData$3465:
  5998                           	callstack 0
  5999                           
  6000                           ; 4 bytes @ 0x8
  6001   000608                     	ds	4
  6002   00060C                     _MPU6050_DMP_GetData$3466:
  6003                           	callstack 0
  6004                           
  6005                           ; 4 bytes @ 0xC
  6006   00060C                     	ds	4
  6007   000610                     _MPU6050_DMP_GetData$3476:
  6008                           	callstack 0
  6009                           
  6010                           ; 4 bytes @ 0x10
  6011   000610                     	ds	4
  6012   000614                     _MPU6050_DMP_GetData$3477:
  6013                           	callstack 0
  6014                           
  6015                           ; 4 bytes @ 0x14
  6016   000614                     	ds	4
  6017   000618                     _MPU6050_DMP_GetData$3478:
  6018                           	callstack 0
  6019                           
  6020                           ; 4 bytes @ 0x18
  6021   000618                     	ds	4
  6022   00061C                     _MPU6050_DMP_GetData$3479:
  6023                           	callstack 0
  6024                           
  6025                           ; 4 bytes @ 0x1C
  6026   00061C                     	ds	4
  6027   000620                     _MPU6050_DMP_GetData$3480:
  6028                           	callstack 0
  6029                           
  6030                           ; 4 bytes @ 0x20
  6031   000620                     	ds	4
  6032   000624                     _MPU6050_DMP_GetData$3481:
  6033                           	callstack 0
  6034                           
  6035                           ; 4 bytes @ 0x24
  6036   000624                     	ds	4
  6037   000628                     _MPU6050_DMP_GetData$3463:
  6038                           	callstack 0
  6039                           
  6040                           ; 4 bytes @ 0x28
  6041   000628                     	ds	4
  6042   00062C                     MPU6050_DMP_GetData@current_time:
  6043                           	callstack 0
  6044                           
  6045                           ; 2 bytes @ 0x2C
  6046   00062C                     	ds	2
  6047   00062E                     _MPU6050_DMP_GetData$3467:
  6048                           	callstack 0
  6049                           
  6050                           ; 4 bytes @ 0x2E
  6051   00062E                     	ds	4
  6052   000632                     _MPU6050_DMP_GetData$3468:
  6053                           	callstack 0
  6054                           
  6055                           ; 4 bytes @ 0x32
  6056   000632                     	ds	4
  6057   000636                     _MPU6050_DMP_GetData$3469:
  6058                           	callstack 0
  6059                           
  6060                           ; 4 bytes @ 0x36
  6061   000636                     	ds	4
  6062   00063A                     _MPU6050_DMP_GetData$3470:
  6063                           	callstack 0
  6064                           
  6065                           ; 4 bytes @ 0x3A
  6066   00063A                     	ds	4
  6067   00063E                     _MPU6050_DMP_GetData$3472:
  6068                           	callstack 0
  6069                           
  6070                           ; 4 bytes @ 0x3E
  6071   00063E                     	ds	4
  6072   000642                     _MPU6050_DMP_GetData$3473:
  6073                           	callstack 0
  6074                           
  6075                           ; 4 bytes @ 0x42
  6076   000642                     	ds	4
  6077   000646                     _MPU6050_DMP_GetData$3474:
  6078                           	callstack 0
  6079                           
  6080                           ; 4 bytes @ 0x46
  6081   000646                     	ds	4
  6082   00064A                     _MPU6050_DMP_GetData$3471:
  6083                           	callstack 0
  6084                           
  6085                           ; 4 bytes @ 0x4A
  6086   00064A                     	ds	4
  6087   00064E                     _MPU6050_DMP_GetData$3475:
  6088                           	callstack 0
  6089                           
  6090                           ; 4 bytes @ 0x4E
  6091   00064E                     	ds	4
  6092   000652                     MPU6050_DMP_GetData@roll_rad:
  6093                           	callstack 0
  6094                           
  6095                           ; 4 bytes @ 0x52
  6096   000652                     	ds	4
  6097   000656                     MPU6050_DMP_GetData@pitch_rad:
  6098                           	callstack 0
  6099                           
  6100                           ; 4 bytes @ 0x56
  6101   000656                     	ds	4
  6102   00065A                     MPU6050_DMP_GetData@yaw_rad:
  6103                           	callstack 0
  6104                           
  6105                           ; 4 bytes @ 0x5A
  6106   00065A                     	ds	4
  6107   00065E                     MPU6050_DMP_GetData@sensor_data:
  6108                           	callstack 0
  6109                           
  6110                           ; 43 bytes @ 0x5E
  6111   00065E                     	ds	43
  6112   000689                     ??_main:
  6113                           
  6114                           ; 1 bytes @ 0x89
  6115   000689                     	ds	2
  6116   00068B                     main@buffer1:
  6117                           	callstack 0
  6118                           
  6119                           ; 16 bytes @ 0x8B
  6120   00068B                     	ds	16
  6121   00069B                     main@ypr:
  6122                           	callstack 0
  6123                           
  6124                           ; 12 bytes @ 0x9B
  6125   00069B                     	ds	12
  6126   0006A7                     main@pitch:
  6127                           	callstack 0
  6128                           
  6129                           ; 4 bytes @ 0xA7
  6130   0006A7                     	ds	4
  6131   0006AB                     main@roll:
  6132                           	callstack 0
  6133                           
  6134                           ; 4 bytes @ 0xAB
  6135   0006AB                     	ds	4
  6136                           
  6137                           	psect	cstackBANK5
  6138   000560                     __pcstackBANK5:
  6139                           	callstack 0
  6140   000560                     ___fldiv@rem:
  6141                           	callstack 0
  6142                           
  6143                           ; 4 bytes @ 0x0
  6144   000560                     	ds	4
  6145   000564                     ___fldiv@sign:
  6146                           	callstack 0
  6147                           
  6148                           ; 1 bytes @ 0x4
  6149   000564                     	ds	1
  6150   000565                     ___fldiv@new_exp:
  6151                           	callstack 0
  6152                           
  6153                           ; 2 bytes @ 0x5
  6154   000565                     	ds	2
  6155   000567                     ___fldiv@grs:
  6156                           	callstack 0
  6157                           
  6158                           ; 4 bytes @ 0x7
  6159   000567                     	ds	4
  6160   00056B                     ___fldiv@bexp:
  6161                           	callstack 0
  6162                           
  6163                           ; 1 bytes @ 0xB
  6164   00056B                     	ds	1
  6165   00056C                     ___fldiv@aexp:
  6166                           	callstack 0
  6167                           
  6168                           ; 1 bytes @ 0xC
  6169   00056C                     	ds	1
  6170   00056D                     ?___flsub:
  6171                           	callstack 0
  6172   00056D                     ?_fabsf:
  6173                           	callstack 0
  6174   00056D                     ?_floorf:
  6175                           	callstack 0
  6176   00056D                     ___flsub@b:
  6177                           	callstack 0
  6178   00056D                     fabsf@x:
  6179                           	callstack 0
  6180   00056D                     floorf@x:
  6181                           	callstack 0
  6182                           
  6183                           ; 4 bytes @ 0xD
  6184   00056D                     	ds	4
  6185   000571                     ___flsub@a:
  6186                           	callstack 0
  6187   000571                     fabsf@u:
  6188                           	callstack 0
  6189   000571                     ??_floorf:
  6190                           
  6191                           ; 1 bytes @ 0x11
  6192   000571                     	ds	4
  6193   000575                     ?___rem_pio2f:
  6194                           	callstack 0
  6195   000575                     ?_atanf:
  6196                           	callstack 0
  6197   000575                     ?___sindf:
  6198                           	callstack 0
  6199   000575                     atanf@x:
  6200                           	callstack 0
  6201   000575                     ___rem_pio2f@x:
  6202                           	callstack 0
  6203   000575                     ___sindf@x:
  6204                           	callstack 0
  6205                           
  6206                           ; 4 bytes @ 0x15
  6207   000575                     	ds	2
  6208   000577                     floorf@m:
  6209                           	callstack 0
  6210                           
  6211                           ; 4 bytes @ 0x17
  6212   000577                     	ds	2
  6213   000579                     ___rem_pio2f@y:
  6214                           	callstack 0
  6215   000579                     ___sindf@r:
  6216                           	callstack 0
  6217   000579                     _atanf$3491:
  6218                           	callstack 0
  6219                           
  6220                           ; 4 bytes @ 0x19
  6221   000579                     	ds	2
  6222   00057B                     floorf@e:
  6223                           	callstack 0
  6224   00057B                     ??___rem_pio2f:
  6225                           
  6226                           ; 1 bytes @ 0x1B
  6227   00057B                     	ds	2
  6228   00057D                     ___rem_pio2f@ty:
  6229                           	callstack 0
  6230   00057D                     ___sindf@w:
  6231                           	callstack 0
  6232   00057D                     floorf@u:
  6233                           	callstack 0
  6234   00057D                     _atanf$3493:
  6235                           	callstack 0
  6236                           
  6237                           ; 4 bytes @ 0x1D
  6238   00057D                     	ds	4
  6239   000581                     efgtoa@fp:
  6240                           	callstack 0
  6241   000581                     _atanf$3494:
  6242                           	callstack 0
  6243   000581                     ___rem_pio2f$3499:
  6244                           	callstack 0
  6245   000581                     ___sindf$3500:
  6246                           	callstack 0
  6247                           
  6248                           ; 4 bytes @ 0x21
  6249   000581                     	ds	2
  6250   000583                     efgtoa@f:
  6251                           	callstack 0
  6252                           
  6253                           ; 4 bytes @ 0x23
  6254   000583                     	ds	2
  6255   000585                     ___rem_pio2f@sign:
  6256                           	callstack 0
  6257   000585                     atanf@s1:
  6258                           	callstack 0
  6259   000585                     ___sindf$3501:
  6260                           	callstack 0
  6261                           
  6262                           ; 4 bytes @ 0x25
  6263   000585                     	ds	1
  6264   000586                     ___rem_pio2f@ux:
  6265                           	callstack 0
  6266                           
  6267                           ; 4 bytes @ 0x26
  6268   000586                     	ds	1
  6269   000587                     efgtoa@c:
  6270                           	callstack 0
  6271                           
  6272                           ; 1 bytes @ 0x27
  6273   000587                     	ds	1
  6274   000588                     ??_efgtoa:
  6275                           
  6276                           ; 1 bytes @ 0x28
  6277   000588                     	ds	1
  6278   000589                     atanf@s2:
  6279                           	callstack 0
  6280   000589                     ___sindf$3502:
  6281                           	callstack 0
  6282                           
  6283                           ; 4 bytes @ 0x29
  6284   000589                     	ds	1
  6285   00058A                     efgtoa@ne:
  6286                           	callstack 0
  6287   00058A                     ___rem_pio2f@fn:
  6288                           	callstack 0
  6289                           
  6290                           ; 4 bytes @ 0x2A
  6291   00058A                     	ds	2
  6292   00058C                     efgtoa@p:
  6293                           	callstack 0
  6294                           
  6295                           ; 2 bytes @ 0x2C
  6296   00058C                     	ds	1
  6297   00058D                     ___sindf@s:
  6298                           	callstack 0
  6299   00058D                     _atanf$3490:
  6300                           	callstack 0
  6301                           
  6302                           ; 4 bytes @ 0x2D
  6303   00058D                     	ds	1
  6304   00058E                     efgtoa@t:
  6305                           	callstack 0
  6306   00058E                     ___rem_pio2f@t:
  6307                           	callstack 0
  6308                           
  6309                           ; 4 bytes @ 0x2E
  6310   00058E                     	ds	2
  6311   000590                     _efgtoa$2953:
  6312                           	callstack 0
  6313                           
  6314                           ; 2 bytes @ 0x30
  6315   000590                     	ds	1
  6316   000591                     ___sindf@z:
  6317                           	callstack 0
  6318   000591                     _atanf$3492:
  6319                           	callstack 0
  6320                           
  6321                           ; 4 bytes @ 0x31
  6322   000591                     	ds	1
  6323   000592                     efgtoa@pp:
  6324                           	callstack 0
  6325   000592                     ___rem_pio2f@n:
  6326                           	callstack 0
  6327                           
  6328                           ; 4 bytes @ 0x32
  6329   000592                     	ds	1
  6330   000593                     efgtoa@mode:
  6331                           	callstack 0
  6332                           
  6333                           ; 1 bytes @ 0x33
  6334   000593                     	ds	1
  6335   000594                     efgtoa@nmode:
  6336                           	callstack 0
  6337                           
  6338                           ; 1 bytes @ 0x34
  6339   000594                     	ds	1
  6340   000595                     atanf@sign:
  6341                           	callstack 0
  6342   000595                     efgtoa@d:
  6343                           	callstack 0
  6344                           
  6345                           ; 2 bytes @ 0x35
  6346   000595                     	ds	1
  6347   000596                     ?_cosf:
  6348                           	callstack 0
  6349   000596                     ?_sinf:
  6350                           	callstack 0
  6351   000596                     atanf@w:
  6352                           	callstack 0
  6353   000596                     cosf@x:
  6354                           	callstack 0
  6355   000596                     sinf@x:
  6356                           	callstack 0
  6357                           
  6358                           ; 4 bytes @ 0x36
  6359   000596                     	ds	1
  6360   000597                     efgtoa@m:
  6361                           	callstack 0
  6362                           
  6363                           ; 2 bytes @ 0x37
  6364   000597                     	ds	2
  6365   000599                     efgtoa@e:
  6366                           	callstack 0
  6367                           
  6368                           ; 2 bytes @ 0x39
  6369   000599                     	ds	1
  6370   00059A                     atanf@id:
  6371                           	callstack 0
  6372   00059A                     _cosf$2778:
  6373                           	callstack 0
  6374   00059A                     _sinf$3066:
  6375                           	callstack 0
  6376                           
  6377                           ; 4 bytes @ 0x3A
  6378   00059A                     	ds	1
  6379   00059B                     efgtoa@w:
  6380                           	callstack 0
  6381   00059B                     atanf@z:
  6382                           	callstack 0
  6383                           
  6384                           ; 4 bytes @ 0x3B
  6385   00059B                     	ds	2
  6386   00059D                     efgtoa@ou:
  6387                           	callstack 0
  6388                           
  6389                           ; 4 bytes @ 0x3D
  6390   00059D                     	ds	1
  6391   00059E                     _cosf$2779:
  6392                           	callstack 0
  6393   00059E                     _sinf$3067:
  6394                           	callstack 0
  6395                           
  6396                           ; 4 bytes @ 0x3E
  6397   00059E                     	ds	1
  6398   00059F                     atanf@ix:
  6399                           	callstack 0
  6400                           
  6401                           ; 4 bytes @ 0x3F
  6402   00059F                     	ds	2
  6403   0005A1                     efgtoa@i:
  6404                           	callstack 0
  6405                           
  6406                           ; 2 bytes @ 0x41
  6407   0005A1                     	ds	1
  6408   0005A2                     cosf@n:
  6409                           	callstack 0
  6410   0005A2                     sinf@n:
  6411                           	callstack 0
  6412                           
  6413                           ; 1 bytes @ 0x42
  6414   0005A2                     	ds	1
  6415   0005A3                     ?_atan2f:
  6416                           	callstack 0
  6417   0005A3                     sinf@sign:
  6418                           	callstack 0
  6419   0005A3                     atan2f@y:
  6420                           	callstack 0
  6421   0005A3                     efgtoa@h:
  6422                           	callstack 0
  6423   0005A3                     _cosf$3495:
  6424                           	callstack 0
  6425                           
  6426                           ; 4 bytes @ 0x43
  6427   0005A3                     	ds	1
  6428   0005A4                     _sinf$3503:
  6429                           	callstack 0
  6430                           
  6431                           ; 4 bytes @ 0x44
  6432   0005A4                     	ds	3
  6433   0005A7                     cosf@sign:
  6434                           	callstack 0
  6435   0005A7                     atan2f@x:
  6436                           	callstack 0
  6437   0005A7                     efgtoa@l:
  6438                           	callstack 0
  6439                           
  6440                           ; 4 bytes @ 0x47
  6441   0005A7                     	ds	1
  6442   0005A8                     cosf@y:
  6443                           	callstack 0
  6444   0005A8                     sinf@y:
  6445                           	callstack 0
  6446                           
  6447                           ; 4 bytes @ 0x48
  6448   0005A8                     	ds	3
  6449   0005AB                     efgtoa@sign:
  6450                           	callstack 0
  6451   0005AB                     ??_atan2f:
  6452                           
  6453                           ; 1 bytes @ 0x4B
  6454   0005AB                     	ds	1
  6455   0005AC                     efgtoa@n:
  6456                           	callstack 0
  6457   0005AC                     cosf@ix:
  6458                           	callstack 0
  6459   0005AC                     sinf@ux:
  6460                           	callstack 0
  6461                           
  6462                           ; 4 bytes @ 0x4C
  6463   0005AC                     	ds	2
  6464   0005AE                     efgtoa@g:
  6465                           	callstack 0
  6466                           
  6467                           ; 4 bytes @ 0x4E
  6468   0005AE                     	ds	4
  6469   0005B2                     efgtoa@u:
  6470                           	callstack 0
  6471                           
  6472                           ; 4 bytes @ 0x52
  6473   0005B2                     	ds	1
  6474   0005B3                     _atan2f$3487:
  6475                           	callstack 0
  6476                           
  6477                           ; 4 bytes @ 0x53
  6478   0005B3                     	ds	3
  6479   0005B6                     vfpfcnvrt@fp:
  6480                           	callstack 0
  6481                           
  6482                           ; 2 bytes @ 0x56
  6483   0005B6                     	ds	1
  6484   0005B7                     _atan2f$3488:
  6485                           	callstack 0
  6486                           
  6487                           ; 4 bytes @ 0x57
  6488   0005B7                     	ds	1
  6489   0005B8                     vfpfcnvrt@fmt:
  6490                           	callstack 0
  6491                           
  6492                           ; 2 bytes @ 0x58
  6493   0005B8                     	ds	2
  6494   0005BA                     vfpfcnvrt@ap:
  6495                           	callstack 0
  6496                           
  6497                           ; 2 bytes @ 0x5A
  6498   0005BA                     	ds	1
  6499   0005BB                     _atan2f$3489:
  6500                           	callstack 0
  6501                           
  6502                           ; 4 bytes @ 0x5B
  6503   0005BB                     	ds	1
  6504   0005BC                     ??_vfpfcnvrt:
  6505                           
  6506                           ; 1 bytes @ 0x5C
  6507   0005BC                     	ds	2
  6508   0005BE                     vfpfcnvrt@convarg:
  6509                           	callstack 0
  6510                           
  6511                           ; 4 bytes @ 0x5E
  6512   0005BE                     	ds	1
  6513   0005BF                     atan2f@z:
  6514                           	callstack 0
  6515                           
  6516                           ; 4 bytes @ 0x5F
  6517   0005BF                     	ds	3
  6518   0005C2                     vfpfcnvrt@c:
  6519                           	callstack 0
  6520                           
  6521                           ; 1 bytes @ 0x62
  6522   0005C2                     	ds	1
  6523   0005C3                     vfpfcnvrt@cp:
  6524                           	callstack 0
  6525   0005C3                     atan2f@ix:
  6526                           	callstack 0
  6527                           
  6528                           ; 4 bytes @ 0x63
  6529   0005C3                     	ds	2
  6530   0005C5                     ?_vfprintf:
  6531                           	callstack 0
  6532   0005C5                     vfprintf@fp:
  6533                           	callstack 0
  6534                           
  6535                           ; 2 bytes @ 0x65
  6536   0005C5                     	ds	2
  6537   0005C7                     vfprintf@fmt:
  6538                           	callstack 0
  6539   0005C7                     atan2f@iy:
  6540                           	callstack 0
  6541                           
  6542                           ; 4 bytes @ 0x67
  6543   0005C7                     	ds	2
  6544   0005C9                     vfprintf@ap:
  6545                           	callstack 0
  6546                           
  6547                           ; 2 bytes @ 0x69
  6548   0005C9                     	ds	2
  6549   0005CB                     atan2f@m:
  6550                           	callstack 0
  6551   0005CB                     vfprintf@cfmt:
  6552                           	callstack 0
  6553                           
  6554                           ; 2 bytes @ 0x6B
  6555   0005CB                     	ds	1
  6556   0005CC                     MPU6050_ReadAll@data:
  6557                           	callstack 0
  6558                           
  6559                           ; 2 bytes @ 0x6C
  6560   0005CC                     	ds	1
  6561   0005CD                     ?_sprintf:
  6562                           	callstack 0
  6563   0005CD                     sprintf@s:
  6564                           	callstack 0
  6565                           
  6566                           ; 2 bytes @ 0x6D
  6567   0005CD                     	ds	1
  6568   0005CE                     _MPU6050_ReadAll$3483:
  6569                           	callstack 0
  6570                           
  6571                           ; 4 bytes @ 0x6E
  6572   0005CE                     	ds	1
  6573   0005CF                     sprintf@fmt:
  6574                           	callstack 0
  6575                           
  6576                           ; 2 bytes @ 0x6F
  6577   0005CF                     	ds	3
  6578   0005D2                     _MPU6050_ReadAll$3484:
  6579                           	callstack 0
  6580                           
  6581                           ; 4 bytes @ 0x72
  6582   0005D2                     	ds	4
  6583   0005D6                     _MPU6050_ReadAll$3485:
  6584                           	callstack 0
  6585                           
  6586                           ; 4 bytes @ 0x76
  6587   0005D6                     	ds	3
  6588   0005D9                     sprintf@ap:
  6589                           	callstack 0
  6590                           
  6591                           ; 2 bytes @ 0x79
  6592   0005D9                     	ds	1
  6593   0005DA                     MPU6050_ReadAll@raw_data:
  6594                           	callstack 0
  6595                           
  6596                           ; 14 bytes @ 0x7A
  6597   0005DA                     	ds	1
  6598   0005DB                     sprintf@f:
  6599                           	callstack 0
  6600                           
  6601                           ; 11 bytes @ 0x7B
  6602   0005DB                     	ds	13
  6603   0005E8                     MPU6050_ReadAll@raw_ax:
  6604                           	callstack 0
  6605                           
  6606                           ; 2 bytes @ 0x88
  6607   0005E8                     	ds	2
  6608   0005EA                     MPU6050_ReadAll@raw_ay:
  6609                           	callstack 0
  6610                           
  6611                           ; 2 bytes @ 0x8A
  6612   0005EA                     	ds	2
  6613   0005EC                     MPU6050_ReadAll@raw_az:
  6614                           	callstack 0
  6615                           
  6616                           ; 2 bytes @ 0x8C
  6617   0005EC                     	ds	2
  6618   0005EE                     MPU6050_ReadAll@raw_temp:
  6619                           	callstack 0
  6620                           
  6621                           ; 2 bytes @ 0x8E
  6622   0005EE                     	ds	2
  6623   0005F0                     MPU6050_ReadAll@raw_gx:
  6624                           	callstack 0
  6625                           
  6626                           ; 2 bytes @ 0x90
  6627   0005F0                     	ds	2
  6628   0005F2                     MPU6050_ReadAll@raw_gy:
  6629                           	callstack 0
  6630                           
  6631                           ; 2 bytes @ 0x92
  6632   0005F2                     	ds	2
  6633   0005F4                     MPU6050_ReadAll@raw_gz:
  6634                           	callstack 0
  6635                           
  6636                           ; 2 bytes @ 0x94
  6637   0005F4                     	ds	2
  6638   0005F6                     _MPU6050_ReadAll$3482:
  6639                           	callstack 0
  6640                           
  6641                           ; 4 bytes @ 0x96
  6642   0005F6                     	ds	4
  6643   0005FA                     MPU6050_DMP_GetData@ypr:
  6644                           	callstack 0
  6645                           
  6646                           ; 2 bytes @ 0x9A
  6647   0005FA                     	ds	2
  6648   0005FC                     MPU6050_DMP_GetData@quat:
  6649                           	callstack 0
  6650                           
  6651                           ; 2 bytes @ 0x9C
  6652   0005FC                     	ds	2
  6653   0005FE                     ??_MPU6050_DMP_GetData:
  6654                           
  6655                           ; 1 bytes @ 0x9E
  6656   0005FE                     	ds	2
  6657                           
  6658                           	psect	cstackCOMRAM
  6659   000501                     __pcstackCOMRAM:
  6660                           	callstack 0
  6661   000501                     ?_GetTimestamp_ms:
  6662                           	callstack 0
  6663   000501                     ?_MPU6050_CombineBytes:
  6664                           	callstack 0
  6665   000501                     ?___fpclassifyf:
  6666                           	callstack 0
  6667   000501                     ?_read_prec_or_width:
  6668                           	callstack 0
  6669   000501                     ?_labs:
  6670                           	callstack 0
  6671   000501                     ?___flneg:
  6672                           	callstack 0
  6673   000501                     ?___xxtofl:
  6674                           	callstack 0
  6675   000501                     MPU6050_CombineBytes@low:
  6676                           	callstack 0
  6677   000501                     _SW_I2C_IsBusFree$1645:
  6678                           	callstack 0
  6679   000501                     ENVIA_NIBBLE@dato:
  6680                           	callstack 0
  6681   000501                     LEER_LCD@aux:
  6682                           	callstack 0
  6683   000501                     MovingAverage_Reset@filter:
  6684                           	callstack 0
  6685   000501                     read_prec_or_width@fmt:
  6686                           	callstack 0
  6687   000501                     memcpy@d1:
  6688                           	callstack 0
  6689   000501                     fputc@c:
  6690                           	callstack 0
  6691   000501                     strcpy@dest:
  6692                           	callstack 0
  6693   000501                     ___fleq@ff1:
  6694                           	callstack 0
  6695   000501                     ___flneg@f1:
  6696                           	callstack 0
  6697   000501                     ___xxtofl@val:
  6698                           	callstack 0
  6699   000501                     ___fpclassifyf@x:
  6700                           	callstack 0
  6701   000501                     labs@a:
  6702                           	callstack 0
  6703   000501                     ??_SW_I2C_SendAck:
  6704   000501                     ??_SW_I2C_SendNack:
  6705   000501                     ??_SW_I2C_Stop:
  6706   000501                     ??_SW_I2C_WriteByte:
  6707                           
  6708                           ; 1 bytes @ 0x0
  6709   000501                     	ds	1
  6710   000502                     ENVIA_CHAR@dato:
  6711                           	callstack 0
  6712   000502                     ENVIA_LCD_CMD@dato:
  6713                           	callstack 0
  6714   000502                     ??_SW_I2C_Start:
  6715                           
  6716                           ; 1 bytes @ 0x1
  6717   000502                     	ds	1
  6718   000503                     SW_I2C_WriteByte@data:
  6719                           	callstack 0
  6720   000503                     ENVIA_CHAR@aux:
  6721                           	callstack 0
  6722   000503                     ENVIA_LCD_CMD@aux:
  6723                           	callstack 0
  6724   000503                     read_prec_or_width@ap:
  6725                           	callstack 0
  6726   000503                     memcpy@s1:
  6727                           	callstack 0
  6728   000503                     fputc@fp:
  6729                           	callstack 0
  6730   000503                     strcpy@src:
  6731                           	callstack 0
  6732   000503                     ??_MPU6050_CombineBytes:
  6733   000503                     ??_MovingAverage_Reset:
  6734   000503                     ??_SW_I2C_ReadByte:
  6735                           
  6736                           ; 1 bytes @ 0x2
  6737   000503                     	ds	1
  6738   000504                     SW_I2C_WriteByte@ack:
  6739                           	callstack 0
  6740   000504                     POS_CURSOR@columna:
  6741                           	callstack 0
  6742   000504                     CURSOR_ONOFF@estado:
  6743                           	callstack 0
  6744   000504                     ESCRIBE_MENSAJE@cadena:
  6745                           	callstack 0
  6746   000504                     ??_LCD_CONFIG:
  6747                           
  6748                           ; 1 bytes @ 0x3
  6749   000504                     	ds	1
  6750   000505                     ?___flmul:
  6751                           	callstack 0
  6752   000505                     MPU6050_CombineBytes@high:
  6753                           	callstack 0
  6754   000505                     MovingAverage_Reset@i:
  6755                           	callstack 0
  6756   000505                     SW_I2C_WriteByte@i:
  6757                           	callstack 0
  6758   000505                     SW_I2C_ReadByte@ack:
  6759                           	callstack 0
  6760   000505                     POS_CURSOR@fila:
  6761                           	callstack 0
  6762   000505                     memcpy@n:
  6763                           	callstack 0
  6764   000505                     strcpy@d:
  6765                           	callstack 0
  6766   000505                     ___fleq@ff2:
  6767                           	callstack 0
  6768   000505                     ___flmul@b:
  6769                           	callstack 0
  6770   000505                     ??_LCD_init:
  6771   000505                     ??___fpclassifyf:
  6772   000505                     ??_fputc:
  6773   000505                     ??_labs:
  6774   000505                     ??___xxtofl:
  6775   000505                     ??_read_prec_or_width:
  6776                           
  6777                           ; 1 bytes @ 0x4
  6778   000505                     	ds	1
  6779   000506                     SW_I2C_ReadByte@data:
  6780                           	callstack 0
  6781   000506                     SW_I2C_WriteRegister@reg_addr:
  6782                           	callstack 0
  6783   000506                     ESCRIBE_MENSAJE@tam:
  6784                           	callstack 0
  6785   000506                     
  6786                           ; 1 bytes @ 0x5
  6787   000506                     	ds	1
  6788   000507                     SW_I2C_ReadByte@i:
  6789                           	callstack 0
  6790   000507                     SW_I2C_WriteRegister@data:
  6791                           	callstack 0
  6792   000507                     read_prec_or_width@c:
  6793                           	callstack 0
  6794   000507                     memcpy@d:
  6795                           	callstack 0
  6796   000507                     ??_ESCRIBE_MENSAJE:
  6797                           
  6798                           ; 1 bytes @ 0x6
  6799   000507                     	ds	1
  6800   000508                     SW_I2C_WriteRegister@device_addr:
  6801                           	callstack 0
  6802   000508                     SW_I2C_ReadRegister@reg_addr:
  6803                           	callstack 0
  6804   000508                     SW_I2C_ReadBlock@reg_addr:
  6805                           	callstack 0
  6806   000508                     read_prec_or_width@n:
  6807                           	callstack 0
  6808   000508                     
  6809                           ; 1 bytes @ 0x7
  6810   000508                     	ds	1
  6811   000509                     SW_I2C_WriteRegister@result:
  6812                           	callstack 0
  6813   000509                     SW_I2C_ReadRegister@data:
  6814                           	callstack 0
  6815   000509                     ESCRIBE_MENSAJE@i:
  6816                           	callstack 0
  6817   000509                     ___xxtofl@sign:
  6818                           	callstack 0
  6819   000509                     SW_I2C_ReadBlock@data:
  6820                           	callstack 0
  6821   000509                     ___fpclassifyf@e:
  6822                           	callstack 0
  6823   000509                     memcpy@s:
  6824                           	callstack 0
  6825   000509                     ___flmul@a:
  6826                           	callstack 0
  6827   000509                     ??___fleq:
  6828                           
  6829                           ; 1 bytes @ 0x8
  6830   000509                     	ds	1
  6831   00050A                     MPU6050_WriteRegister@data:
  6832                           	callstack 0
  6833   00050A                     SW_I2C_ReadRegister@device_addr:
  6834                           	callstack 0
  6835   00050A                     ___xxtofl@exp:
  6836                           	callstack 0
  6837   00050A                     fputs@s:
  6838                           	callstack 0
  6839                           
  6840                           ; 2 bytes @ 0x9
  6841   00050A                     	ds	1
  6842   00050B                     MPU6050_WriteRegister@reg:
  6843                           	callstack 0
  6844   00050B                     SW_I2C_ReadRegister@result:
  6845                           	callstack 0
  6846   00050B                     SW_I2C_ReadBlock@length:
  6847                           	callstack 0
  6848   00050B                     memcpy@tmp:
  6849                           	callstack 0
  6850   00050B                     ___xxtofl@arg:
  6851                           	callstack 0
  6852   00050B                     ___fpclassifyf@u:
  6853                           	callstack 0
  6854   00050B                     
  6855                           ; 1 bytes @ 0xA
  6856   00050B                     	ds	1
  6857   00050C                     MPU6050_ReadRegister@reg:
  6858                           	callstack 0
  6859   00050C                     fputs@fp:
  6860                           	callstack 0
  6861   00050C                     ??_SW_I2C_ReadBlock:
  6862                           
  6863                           ; 1 bytes @ 0xB
  6864   00050C                     	ds	1
  6865   00050D                     MPU6050_TestConnection@who_am_i:
  6866                           	callstack 0
  6867   00050D                     ??___flmul:
  6868                           
  6869                           ; 1 bytes @ 0xC
  6870   00050D                     	ds	1
  6871   00050E                     fputs@c:
  6872                           	callstack 0
  6873   00050E                     ??_MPU6050_Init:
  6874                           
  6875                           ; 1 bytes @ 0xD
  6876   00050E                     	ds	1
  6877   00050F                     fputs@i:
  6878                           	callstack 0
  6879                           
  6880                           ; 2 bytes @ 0xE
  6881   00050F                     	ds	1
  6882   000510                     SW_I2C_ReadBlock@device_addr:
  6883                           	callstack 0
  6884   000510                     
  6885                           ; 1 bytes @ 0xF
  6886   000510                     	ds	1
  6887   000511                     SW_I2C_ReadBlock@i:
  6888                           	callstack 0
  6889   000511                     ___flmul@sign:
  6890                           	callstack 0
  6891   000511                     pad@fp:
  6892                           	callstack 0
  6893                           
  6894                           ; 2 bytes @ 0x10
  6895   000511                     	ds	1
  6896   000512                     SW_I2C_ReadBlock@result:
  6897                           	callstack 0
  6898   000512                     ___flmul@grs:
  6899                           	callstack 0
  6900                           
  6901                           ; 4 bytes @ 0x11
  6902   000512                     	ds	1
  6903   000513                     MPU6050_ReadRegisters@data:
  6904                           	callstack 0
  6905   000513                     pad@buf:
  6906                           	callstack 0
  6907                           
  6908                           ; 2 bytes @ 0x12
  6909   000513                     	ds	2
  6910   000515                     MPU6050_ReadRegisters@length:
  6911                           	callstack 0
  6912   000515                     pad@p:
  6913                           	callstack 0
  6914                           
  6915                           ; 2 bytes @ 0x14
  6916   000515                     	ds	1
  6917   000516                     MPU6050_ReadRegisters@reg:
  6918                           	callstack 0
  6919   000516                     ___flmul@aexp:
  6920                           	callstack 0
  6921   000516                     
  6922                           ; 1 bytes @ 0x15
  6923   000516                     	ds	1
  6924   000517                     ___flmul@bexp:
  6925                           	callstack 0
  6926   000517                     ??_pad:
  6927                           
  6928                           ; 1 bytes @ 0x16
  6929   000517                     	ds	1
  6930   000518                     pad@i:
  6931                           	callstack 0
  6932   000518                     ___flmul@prod:
  6933                           	callstack 0
  6934                           
  6935                           ; 4 bytes @ 0x17
  6936   000518                     	ds	4
  6937   00051C                     ___flmul@temp:
  6938                           	callstack 0
  6939                           
  6940                           ; 2 bytes @ 0x1B
  6941   00051C                     	ds	2
  6942   00051E                     ?___fladd:
  6943                           	callstack 0
  6944   00051E                     ___flge@ff1:
  6945                           	callstack 0
  6946   00051E                     ___fladd@b:
  6947                           	callstack 0
  6948                           
  6949                           ; 4 bytes @ 0x1D
  6950   00051E                     	ds	4
  6951   000522                     ___flge@ff2:
  6952                           	callstack 0
  6953   000522                     ___fladd@a:
  6954                           	callstack 0
  6955                           
  6956                           ; 4 bytes @ 0x21
  6957   000522                     	ds	4
  6958   000526                     ??___fladd:
  6959   000526                     ??___flge:
  6960                           
  6961                           ; 1 bytes @ 0x25
  6962   000526                     	ds	4
  6963   00052A                     ___fladd@signs:
  6964                           	callstack 0
  6965                           
  6966                           ; 1 bytes @ 0x29
  6967   00052A                     	ds	1
  6968   00052B                     ___fladd@aexp:
  6969                           	callstack 0
  6970                           
  6971                           ; 1 bytes @ 0x2A
  6972   00052B                     	ds	1
  6973   00052C                     ___fladd@bexp:
  6974                           	callstack 0
  6975                           
  6976                           ; 1 bytes @ 0x2B
  6977   00052C                     	ds	1
  6978   00052D                     ___fladd@grs:
  6979                           	callstack 0
  6980                           
  6981                           ; 1 bytes @ 0x2C
  6982   00052D                     	ds	1
  6983   00052E                     ?_sqrtf:
  6984                           	callstack 0
  6985   00052E                     ?___cosdf:
  6986                           	callstack 0
  6987   00052E                     ?___fltol:
  6988                           	callstack 0
  6989   00052E                     ___fltol@f1:
  6990                           	callstack 0
  6991   00052E                     ___cosdf@x:
  6992                           	callstack 0
  6993   00052E                     sqrtf@x:
  6994                           	callstack 0
  6995                           
  6996                           ; 4 bytes @ 0x2D
  6997   00052E                     	ds	4
  6998   000532                     ___cosdf@r:
  6999                           	callstack 0
  7000   000532                     ??_sqrtf:
  7001   000532                     ??___fltol:
  7002                           
  7003                           ; 1 bytes @ 0x31
  7004   000532                     	ds	4
  7005   000536                     ___fltol@sign1:
  7006                           	callstack 0
  7007   000536                     ___cosdf$3496:
  7008                           	callstack 0
  7009                           
  7010                           ; 4 bytes @ 0x35
  7011   000536                     	ds	1
  7012   000537                     ___fltol@exp1:
  7013                           	callstack 0
  7014   000537                     sqrtf@s:
  7015                           	callstack 0
  7016                           
  7017                           ; 4 bytes @ 0x36
  7018   000537                     	ds	3
  7019   00053A                     ___cosdf$3497:
  7020                           	callstack 0
  7021                           
  7022                           ; 4 bytes @ 0x39
  7023   00053A                     	ds	1
  7024   00053B                     sqrtf@i:
  7025                           	callstack 0
  7026                           
  7027                           ; 4 bytes @ 0x3A
  7028   00053B                     	ds	3
  7029   00053E                     ___cosdf$3498:
  7030                           	callstack 0
  7031                           
  7032                           ; 4 bytes @ 0x3D
  7033   00053E                     	ds	1
  7034   00053F                     sqrtf@q:
  7035                           	callstack 0
  7036                           
  7037                           ; 4 bytes @ 0x3E
  7038   00053F                     	ds	3
  7039   000542                     ___cosdf@w:
  7040                           	callstack 0
  7041                           
  7042                           ; 4 bytes @ 0x41
  7043   000542                     	ds	1
  7044   000543                     sqrtf@t:
  7045                           	callstack 0
  7046                           
  7047                           ; 4 bytes @ 0x42
  7048   000543                     	ds	3
  7049   000546                     ___cosdf@z:
  7050                           	callstack 0
  7051                           
  7052                           ; 4 bytes @ 0x45
  7053   000546                     	ds	1
  7054   000547                     sqrtf@m:
  7055                           	callstack 0
  7056                           
  7057                           ; 4 bytes @ 0x46
  7058   000547                     	ds	4
  7059   00054B                     sqrtf@r:
  7060                           	callstack 0
  7061                           
  7062                           ; 4 bytes @ 0x4A
  7063   00054B                     	ds	4
  7064   00054F                     sqrtf@ix:
  7065                           	callstack 0
  7066                           
  7067                           ; 4 bytes @ 0x4E
  7068   00054F                     	ds	4
  7069   000553                     ?___fldiv:
  7070                           	callstack 0
  7071   000553                     ___fldiv@b:
  7072                           	callstack 0
  7073                           
  7074                           ; 4 bytes @ 0x52
  7075   000553                     	ds	4
  7076   000557                     ___fldiv@a:
  7077                           	callstack 0
  7078                           
  7079                           ; 4 bytes @ 0x56
  7080   000557                     	ds	4
  7081   00055B                     ??___fldiv:
  7082                           
  7083                           ; 1 bytes @ 0x5A
  7084   00055B                     	ds	4
  7085   00055F                     
  7086                           ; 1 bytes @ 0x5E
  7087 ;;
  7088 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7089 ;;
  7090 ;; *************** function _main *****************
  7091 ;; Defined at:
  7092 ;;		line 14 in file "p_final.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;		None
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;  buffer1        16  139[BANK6 ] unsigned char [16]
  7097 ;;  buffer2        16    0        unsigned char [16]
  7098 ;;  roll            4  171[BANK6 ] float 
  7099 ;;  pitch           4  167[BANK6 ] float 
  7100 ;;  ypr            12  155[BANK6 ] struct .
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  1    wreg      void 
  7103 ;; Registers used:
  7104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7111 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7112 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7113 ;;      Totals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7114 ;;Total ram usage:       38 bytes
  7115 ;; Hardware stack levels required when called: 8
  7116 ;; This function calls:
  7117 ;;		_BORRAR_LCD
  7118 ;;		_ESCRIBE_MENSAJE
  7119 ;;		_I2C1_Initialize
  7120 ;;		_LCD_init
  7121 ;;		_MPU6050_DMP_GetData
  7122 ;;		_MPU6050_DMP_Init
  7123 ;;		_POS_CURSOR
  7124 ;;		___flge
  7125 ;;		___flneg
  7126 ;;		_configuro
  7127 ;;		_sprintf
  7128 ;; This function is called by:
  7129 ;;		Startup code after reset
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133                           	psect	text0
  7134   013AEC                     __ptext0:
  7135                           	callstack 0
  7136   013AEC                     _main:
  7137                           	callstack 119
  7138   013AEC                     
  7139                           ;p_final.c: 15:     VectorFloat_t ypr;;p_final.c: 17:     configuro();
  7140   013AEC  EC59  F0B8         	call	_configuro	;wreg free
  7141   013AF0                     
  7142                           ;p_final.c: 18:     LCD_init();
  7143   013AF0  EC20  F0B8         	call	_LCD_init	;wreg free
  7144   013AF4                     
  7145                           ;p_final.c: 20:     I2C1_Initialize();
  7146   013AF4  EC67  F0B8         	call	_I2C1_Initialize	;wreg free
  7147   013AF8                     
  7148                           ;p_final.c: 21:     MPU6050_DMP_Init();
  7149   013AF8  EC90  F0B8         	call	_MPU6050_DMP_Init	;wreg free
  7150   013AFC                     
  7151                           ;p_final.c: 23:     ESCRIBE_MENSAJE("MPU OK", 6);
  7152   013AFC  0ED0               	movlw	low STR_13
  7153   013AFE  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  7154   013B00  0EFF               	movlw	high STR_13
  7155   013B02  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
  7156   013B04  0E06               	movlw	6
  7157   013B06  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  7158   013B08  ECC5  F0B6         	call	_ESCRIBE_MENSAJE	;wreg free
  7159   013B0C                     
  7160                           ;p_final.c: 24:     _delay((unsigned long)((1000)*(64000000UL/4000.0)));
  7161   013B0C  0E52               	movlw	82
  7162   013B0E  0106               	movlb	6	; () banked
  7163   013B10  6F8A               	movwf	(??_main+1)& (0+255),b
  7164   013B12  0E2B               	movlw	43
  7165   013B14  6F89               	movwf	??_main& (0+255),b
  7166   013B16  0E00               	movlw	0
  7167   013B18                     u9127:
  7168   013B18  2EE8               	decfsz	wreg,f,c
  7169   013B1A  D7FE               	bra	u9127
  7170   013B1C  2F89               	decfsz	??_main& (0+255),f,b
  7171   013B1E  D7FC               	bra	u9127
  7172   013B20  2F8A               	decfsz	(??_main+1)& (0+255),f,b
  7173   013B22  D7FA               	bra	u9127
  7174   013B24  0000               	nop	
  7175   013B26                     
  7176                           ;p_final.c: 25:     BORRAR_LCD();
  7177   013B26  ECB8  F0B8         	call	_BORRAR_LCD	;wreg free
  7178   013B2A                     l10763:
  7179                           
  7180                           ;p_final.c: 28:         MPU6050_DMP_GetData(&ypr, ((void*)0));
  7181   013B2A  0E9B               	movlw	low main@ypr
  7182   013B2C  0105               	movlb	5	; () banked
  7183   013B2E  6FFA               	movwf	MPU6050_DMP_GetData@ypr& (0+255),b
  7184   013B30  0E06               	movlw	high main@ypr
  7185   013B32  6FFB               	movwf	(MPU6050_DMP_GetData@ypr+1)& (0+255),b
  7186   013B34  0E00               	movlw	0
  7187   013B36  6FFC               	movwf	MPU6050_DMP_GetData@quat& (0+255),b
  7188   013B38  0E00               	movlw	0
  7189   013B3A  6FFD               	movwf	(MPU6050_DMP_GetData@quat+1)& (0+255),b
  7190   013B3C  EC00  F080         	call	_MPU6050_DMP_GetData	;wreg free
  7191   013B40                     
  7192                           ;p_final.c: 31:         float pitch = -ypr.pitch;
  7193   013B40  C69F  F501         	movff	main@ypr+4,___flneg@f1
  7194   013B44  C6A0  F502         	movff	main@ypr+5,___flneg@f1+1
  7195   013B48  C6A1  F503         	movff	main@ypr+6,___flneg@f1+2
  7196   013B4C  C6A2  F504         	movff	main@ypr+7,___flneg@f1+3
  7197   013B50  EC6F  F0B7         	call	___flneg	;wreg free
  7198   013B54  C501  F6A7         	movff	?___flneg,main@pitch
  7199   013B58  C502  F6A8         	movff	?___flneg+1,main@pitch+1
  7200   013B5C  C503  F6A9         	movff	?___flneg+2,main@pitch+2
  7201   013B60  C504  F6AA         	movff	?___flneg+3,main@pitch+3
  7202   013B64                     
  7203                           ;p_final.c: 32:         float roll = ypr.roll;
  7204   013B64  C6A3  F6AB         	movff	main@ypr+8,main@roll
  7205   013B68  C6A4  F6AC         	movff	main@ypr+9,main@roll+1
  7206   013B6C  C6A5  F6AD         	movff	main@ypr+10,main@roll+2
  7207   013B70  C6A6  F6AE         	movff	main@ypr+11,main@roll+3
  7208   013B74                     
  7209                           ;p_final.c: 35:         char buffer1[16], buffer2[16];;p_final.c: 36:         sprintf(bu
      +                          ffer1, "P: %.1f R: %.1f", pitch, roll);
  7210   013B74  0E8B               	movlw	low main@buffer1
  7211   013B76  0105               	movlb	5	; () banked
  7212   013B78  6FCD               	movwf	sprintf@s& (0+255),b
  7213   013B7A  0E06               	movlw	high main@buffer1
  7214   013B7C  6FCE               	movwf	(sprintf@s+1)& (0+255),b
  7215   013B7E  0E81               	movlw	low STR_14
  7216   013B80  6FCF               	movwf	sprintf@fmt& (0+255),b
  7217   013B82  0EFF               	movlw	high STR_14
  7218   013B84  6FD0               	movwf	(sprintf@fmt+1)& (0+255),b
  7219   013B86  C6A7  F5D1         	movff	main@pitch,?_sprintf+4
  7220   013B8A  C6A8  F5D2         	movff	main@pitch+1,?_sprintf+5
  7221   013B8E  C6A9  F5D3         	movff	main@pitch+2,?_sprintf+6
  7222   013B92  C6AA  F5D4         	movff	main@pitch+3,?_sprintf+7
  7223   013B96  C6AB  F5D5         	movff	main@roll,?_sprintf+8
  7224   013B9A  C6AC  F5D6         	movff	main@roll+1,?_sprintf+9
  7225   013B9E  C6AD  F5D7         	movff	main@roll+2,?_sprintf+10
  7226   013BA2  C6AE  F5D8         	movff	main@roll+3,?_sprintf+11
  7227   013BA6  EC75  F0B6         	call	_sprintf	;wreg free
  7228   013BAA                     
  7229                           ;p_final.c: 37:         POS_CURSOR(1, 1);
  7230   013BAA  0E01               	movlw	1
  7231   013BAC  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  7232   013BAE  0E01               	movlw	1
  7233   013BB0  ECEB  F0B4         	call	_POS_CURSOR
  7234   013BB4                     
  7235                           ;p_final.c: 38:         ESCRIBE_MENSAJE(buffer1, 16);
  7236   013BB4  0E8B               	movlw	low main@buffer1
  7237   013BB6  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  7238   013BB8  0E06               	movlw	high main@buffer1
  7239   013BBA  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
  7240   013BBC  0E10               	movlw	16
  7241   013BBE  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  7242   013BC0  ECC5  F0B6         	call	_ESCRIBE_MENSAJE	;wreg free
  7243   013BC4                     
  7244                           ;p_final.c: 40:         POS_CURSOR(2, 1);
  7245   013BC4  0E01               	movlw	1
  7246   013BC6  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
  7247   013BC8  0E02               	movlw	2
  7248   013BCA  ECEB  F0B4         	call	_POS_CURSOR
  7249   013BCE                     
  7250                           ;p_final.c: 41:         if (roll > 3 && roll <10 && 6 < pitch && pitch <10 ) {
  7251   013BCE  0E00               	movlw	0
  7252   013BD0  6E1E               	movwf	___flge@ff1^(0+1280),c
  7253   013BD2  0E00               	movlw	0
  7254   013BD4  6E1F               	movwf	(___flge@ff1+1)^(0+1280),c
  7255   013BD6  0E40               	movlw	64
  7256   013BD8  6E20               	movwf	(___flge@ff1+2)^(0+1280),c
  7257   013BDA  0E40               	movlw	64
  7258   013BDC  6E21               	movwf	(___flge@ff1+3)^(0+1280),c
  7259   013BDE  C6AB  F522         	movff	main@roll,___flge@ff2
  7260   013BE2  C6AC  F523         	movff	main@roll+1,___flge@ff2+1
  7261   013BE6  C6AD  F524         	movff	main@roll+2,___flge@ff2+2
  7262   013BEA  C6AE  F525         	movff	main@roll+3,___flge@ff2+3
  7263   013BEE  EC3F  F0B1         	call	___flge	;wreg free
  7264   013BF2  B0D8               	btfsc	status,0,c
  7265   013BF4  EFFE  F09D         	goto	u8961
  7266   013BF8  EF00  F09E         	goto	u8960
  7267   013BFC                     u8961:
  7268   013BFC  EF55  F09E         	goto	l10787
  7269   013C00                     u8960:
  7270   013C00  C6AB  F51E         	movff	main@roll,___flge@ff1
  7271   013C04  C6AC  F51F         	movff	main@roll+1,___flge@ff1+1
  7272   013C08  C6AD  F520         	movff	main@roll+2,___flge@ff1+2
  7273   013C0C  C6AE  F521         	movff	main@roll+3,___flge@ff1+3
  7274   013C10  0E00               	movlw	0
  7275   013C12  6E22               	movwf	___flge@ff2^(0+1280),c
  7276   013C14  0E00               	movlw	0
  7277   013C16  6E23               	movwf	(___flge@ff2+1)^(0+1280),c
  7278   013C18  0E20               	movlw	32
  7279   013C1A  6E24               	movwf	(___flge@ff2+2)^(0+1280),c
  7280   013C1C  0E41               	movlw	65
  7281   013C1E  6E25               	movwf	(___flge@ff2+3)^(0+1280),c
  7282   013C20  EC3F  F0B1         	call	___flge	;wreg free
  7283   013C24  B0D8               	btfsc	status,0,c
  7284   013C26  EF17  F09E         	goto	u8971
  7285   013C2A  EF19  F09E         	goto	u8970
  7286   013C2E                     u8971:
  7287   013C2E  EF55  F09E         	goto	l10787
  7288   013C32                     u8970:
  7289   013C32  0E00               	movlw	0
  7290   013C34  6E1E               	movwf	___flge@ff1^(0+1280),c
  7291   013C36  0E00               	movlw	0
  7292   013C38  6E1F               	movwf	(___flge@ff1+1)^(0+1280),c
  7293   013C3A  0EC0               	movlw	192
  7294   013C3C  6E20               	movwf	(___flge@ff1+2)^(0+1280),c
  7295   013C3E  0E40               	movlw	64
  7296   013C40  6E21               	movwf	(___flge@ff1+3)^(0+1280),c
  7297   013C42  C6A7  F522         	movff	main@pitch,___flge@ff2
  7298   013C46  C6A8  F523         	movff	main@pitch+1,___flge@ff2+1
  7299   013C4A  C6A9  F524         	movff	main@pitch+2,___flge@ff2+2
  7300   013C4E  C6AA  F525         	movff	main@pitch+3,___flge@ff2+3
  7301   013C52  EC3F  F0B1         	call	___flge	;wreg free
  7302   013C56  B0D8               	btfsc	status,0,c
  7303   013C58  EF30  F09E         	goto	u8981
  7304   013C5C  EF32  F09E         	goto	u8980
  7305   013C60                     u8981:
  7306   013C60  EF55  F09E         	goto	l10787
  7307   013C64                     u8980:
  7308   013C64  C6A7  F51E         	movff	main@pitch,___flge@ff1
  7309   013C68  C6A8  F51F         	movff	main@pitch+1,___flge@ff1+1
  7310   013C6C  C6A9  F520         	movff	main@pitch+2,___flge@ff1+2
  7311   013C70  C6AA  F521         	movff	main@pitch+3,___flge@ff1+3
  7312   013C74  0E00               	movlw	0
  7313   013C76  6E22               	movwf	___flge@ff2^(0+1280),c
  7314   013C78  0E00               	movlw	0
  7315   013C7A  6E23               	movwf	(___flge@ff2+1)^(0+1280),c
  7316   013C7C  0E20               	movlw	32
  7317   013C7E  6E24               	movwf	(___flge@ff2+2)^(0+1280),c
  7318   013C80  0E41               	movlw	65
  7319   013C82  6E25               	movwf	(___flge@ff2+3)^(0+1280),c
  7320   013C84  EC3F  F0B1         	call	___flge	;wreg free
  7321   013C88  B0D8               	btfsc	status,0,c
  7322   013C8A  EF49  F09E         	goto	u8991
  7323   013C8E  EF4B  F09E         	goto	u8990
  7324   013C92                     u8991:
  7325   013C92  EF55  F09E         	goto	l10787
  7326   013C96                     u8990:
  7327   013C96                     
  7328                           ;p_final.c: 42:             ESCRIBE_MENSAJE("Derecha", 10);
  7329   013C96  0EC8               	movlw	low STR_5
  7330   013C98  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  7331   013C9A  0EFF               	movlw	high STR_5
  7332   013C9C  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
  7333   013C9E  0E0A               	movlw	10
  7334   013CA0  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  7335   013CA2  ECC5  F0B6         	call	_ESCRIBE_MENSAJE	;wreg free
  7336                           
  7337                           ;p_final.c: 43:         } else if (roll > 3 && roll <10 && 6 < pitch && pitch <10) {
  7338   013CA6  EFA7  F09F         	goto	l10819
  7339   013CAA                     l10787:
  7340   013CAA  0E00               	movlw	0
  7341   013CAC  6E1E               	movwf	___flge@ff1^(0+1280),c
  7342   013CAE  0E00               	movlw	0
  7343   013CB0  6E1F               	movwf	(___flge@ff1+1)^(0+1280),c
  7344   013CB2  0E40               	movlw	64
  7345   013CB4  6E20               	movwf	(___flge@ff1+2)^(0+1280),c
  7346   013CB6  0E40               	movlw	64
  7347   013CB8  6E21               	movwf	(___flge@ff1+3)^(0+1280),c
  7348   013CBA  C6AB  F522         	movff	main@roll,___flge@ff2
  7349   013CBE  C6AC  F523         	movff	main@roll+1,___flge@ff2+1
  7350   013CC2  C6AD  F524         	movff	main@roll+2,___flge@ff2+2
  7351   013CC6  C6AE  F525         	movff	main@roll+3,___flge@ff2+3
  7352   013CCA  EC3F  F0B1         	call	___flge	;wreg free
  7353   013CCE  B0D8               	btfsc	status,0,c
  7354   013CD0  EF6C  F09E         	goto	u9001
  7355   013CD4  EF6E  F09E         	goto	u9000
  7356   013CD8                     u9001:
  7357   013CD8  EFC3  F09E         	goto	l10797
  7358   013CDC                     u9000:
  7359   013CDC  C6AB  F51E         	movff	main@roll,___flge@ff1
  7360   013CE0  C6AC  F51F         	movff	main@roll+1,___flge@ff1+1
  7361   013CE4  C6AD  F520         	movff	main@roll+2,___flge@ff1+2
  7362   013CE8  C6AE  F521         	movff	main@roll+3,___flge@ff1+3
  7363   013CEC  0E00               	movlw	0
  7364   013CEE  6E22               	movwf	___flge@ff2^(0+1280),c
  7365   013CF0  0E00               	movlw	0
  7366   013CF2  6E23               	movwf	(___flge@ff2+1)^(0+1280),c
  7367   013CF4  0E20               	movlw	32
  7368   013CF6  6E24               	movwf	(___flge@ff2+2)^(0+1280),c
  7369   013CF8  0E41               	movlw	65
  7370   013CFA  6E25               	movwf	(___flge@ff2+3)^(0+1280),c
  7371   013CFC  EC3F  F0B1         	call	___flge	;wreg free
  7372   013D00  B0D8               	btfsc	status,0,c
  7373   013D02  EF85  F09E         	goto	u9011
  7374   013D06  EF87  F09E         	goto	u9010
  7375   013D0A                     u9011:
  7376   013D0A  EFC3  F09E         	goto	l10797
  7377   013D0E                     u9010:
  7378   013D0E  0E00               	movlw	0
  7379   013D10  6E1E               	movwf	___flge@ff1^(0+1280),c
  7380   013D12  0E00               	movlw	0
  7381   013D14  6E1F               	movwf	(___flge@ff1+1)^(0+1280),c
  7382   013D16  0EC0               	movlw	192
  7383   013D18  6E20               	movwf	(___flge@ff1+2)^(0+1280),c
  7384   013D1A  0E40               	movlw	64
  7385   013D1C  6E21               	movwf	(___flge@ff1+3)^(0+1280),c
  7386   013D1E  C6A7  F522         	movff	main@pitch,___flge@ff2
  7387   013D22  C6A8  F523         	movff	main@pitch+1,___flge@ff2+1
  7388   013D26  C6A9  F524         	movff	main@pitch+2,___flge@ff2+2
  7389   013D2A  C6AA  F525         	movff	main@pitch+3,___flge@ff2+3
  7390   013D2E  EC3F  F0B1         	call	___flge	;wreg free
  7391   013D32  B0D8               	btfsc	status,0,c
  7392   013D34  EF9E  F09E         	goto	u9021
  7393   013D38  EFA0  F09E         	goto	u9020
  7394   013D3C                     u9021:
  7395   013D3C  EFC3  F09E         	goto	l10797
  7396   013D40                     u9020:
  7397   013D40  C6A7  F51E         	movff	main@pitch,___flge@ff1
  7398   013D44  C6A8  F51F         	movff	main@pitch+1,___flge@ff1+1
  7399   013D48  C6A9  F520         	movff	main@pitch+2,___flge@ff1+2
  7400   013D4C  C6AA  F521         	movff	main@pitch+3,___flge@ff1+3
  7401   013D50  0E00               	movlw	0
  7402   013D52  6E22               	movwf	___flge@ff2^(0+1280),c
  7403   013D54  0E00               	movlw	0
  7404   013D56  6E23               	movwf	(___flge@ff2+1)^(0+1280),c
  7405   013D58  0E20               	movlw	32
  7406   013D5A  6E24               	movwf	(___flge@ff2+2)^(0+1280),c
  7407   013D5C  0E41               	movlw	65
  7408   013D5E  6E25               	movwf	(___flge@ff2+3)^(0+1280),c
  7409   013D60  EC3F  F0B1         	call	___flge	;wreg free
  7410   013D64  B0D8               	btfsc	status,0,c
  7411   013D66  EFB7  F09E         	goto	u9031
  7412   013D6A  EFB9  F09E         	goto	u9030
  7413   013D6E                     u9031:
  7414   013D6E  EFC3  F09E         	goto	l10797
  7415   013D72                     u9030:
  7416   013D72                     
  7417                           ;p_final.c: 44:             ESCRIBE_MENSAJE("Izquierda", 10);
  7418   013D72  0EAC               	movlw	low STR_4
  7419   013D74  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  7420   013D76  0EFF               	movlw	high STR_4
  7421   013D78  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
  7422   013D7A  0E0A               	movlw	10
  7423   013D7C  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  7424   013D7E  ECC5  F0B6         	call	_ESCRIBE_MENSAJE	;wreg free
  7425                           
  7426                           ;p_final.c: 45:         } else if (roll > 0 && roll <4 && 13 < pitch && pitch <18) {
  7427   013D82  EFA7  F09F         	goto	l10819
  7428   013D86                     l10797:
  7429   013D86  0E00               	movlw	0
  7430   013D88  6E1E               	movwf	___flge@ff1^(0+1280),c
  7431   013D8A  0E00               	movlw	0
  7432   013D8C  6E1F               	movwf	(___flge@ff1+1)^(0+1280),c
  7433   013D8E  0E00               	movlw	0
  7434   013D90  6E20               	movwf	(___flge@ff1+2)^(0+1280),c
  7435   013D92  0E00               	movlw	0
  7436   013D94  6E21               	movwf	(___flge@ff1+3)^(0+1280),c
  7437   013D96  C6AB  F522         	movff	main@roll,___flge@ff2
  7438   013D9A  C6AC  F523         	movff	main@roll+1,___flge@ff2+1
  7439   013D9E  C6AD  F524         	movff	main@roll+2,___flge@ff2+2
  7440   013DA2  C6AE  F525         	movff	main@roll+3,___flge@ff2+3
  7441   013DA6  EC3F  F0B1         	call	___flge	;wreg free
  7442   013DAA  B0D8               	btfsc	status,0,c
  7443   013DAC  EFDA  F09E         	goto	u9041
  7444   013DB0  EFDC  F09E         	goto	u9040
  7445   013DB4                     u9041:
  7446   013DB4  EF31  F09F         	goto	l10807
  7447   013DB8                     u9040:
  7448   013DB8  C6AB  F51E         	movff	main@roll,___flge@ff1
  7449   013DBC  C6AC  F51F         	movff	main@roll+1,___flge@ff1+1
  7450   013DC0  C6AD  F520         	movff	main@roll+2,___flge@ff1+2
  7451   013DC4  C6AE  F521         	movff	main@roll+3,___flge@ff1+3
  7452   013DC8  0E00               	movlw	0
  7453   013DCA  6E22               	movwf	___flge@ff2^(0+1280),c
  7454   013DCC  0E00               	movlw	0
  7455   013DCE  6E23               	movwf	(___flge@ff2+1)^(0+1280),c
  7456   013DD0  0E80               	movlw	128
  7457   013DD2  6E24               	movwf	(___flge@ff2+2)^(0+1280),c
  7458   013DD4  0E40               	movlw	64
  7459   013DD6  6E25               	movwf	(___flge@ff2+3)^(0+1280),c
  7460   013DD8  EC3F  F0B1         	call	___flge	;wreg free
  7461   013DDC  B0D8               	btfsc	status,0,c
  7462   013DDE  EFF3  F09E         	goto	u9051
  7463   013DE2  EFF5  F09E         	goto	u9050
  7464   013DE6                     u9051:
  7465   013DE6  EF31  F09F         	goto	l10807
  7466   013DEA                     u9050:
  7467   013DEA  0E00               	movlw	0
  7468   013DEC  6E1E               	movwf	___flge@ff1^(0+1280),c
  7469   013DEE  0E00               	movlw	0
  7470   013DF0  6E1F               	movwf	(___flge@ff1+1)^(0+1280),c
  7471   013DF2  0E50               	movlw	80
  7472   013DF4  6E20               	movwf	(___flge@ff1+2)^(0+1280),c
  7473   013DF6  0E41               	movlw	65
  7474   013DF8  6E21               	movwf	(___flge@ff1+3)^(0+1280),c
  7475   013DFA  C6A7  F522         	movff	main@pitch,___flge@ff2
  7476   013DFE  C6A8  F523         	movff	main@pitch+1,___flge@ff2+1
  7477   013E02  C6A9  F524         	movff	main@pitch+2,___flge@ff2+2
  7478   013E06  C6AA  F525         	movff	main@pitch+3,___flge@ff2+3
  7479   013E0A  EC3F  F0B1         	call	___flge	;wreg free
  7480   013E0E  B0D8               	btfsc	status,0,c
  7481   013E10  EF0C  F09F         	goto	u9061
  7482   013E14  EF0E  F09F         	goto	u9060
  7483   013E18                     u9061:
  7484   013E18  EF31  F09F         	goto	l10807
  7485   013E1C                     u9060:
  7486   013E1C  C6A7  F51E         	movff	main@pitch,___flge@ff1
  7487   013E20  C6A8  F51F         	movff	main@pitch+1,___flge@ff1+1
  7488   013E24  C6A9  F520         	movff	main@pitch+2,___flge@ff1+2
  7489   013E28  C6AA  F521         	movff	main@pitch+3,___flge@ff1+3
  7490   013E2C  0E00               	movlw	0
  7491   013E2E  6E22               	movwf	___flge@ff2^(0+1280),c
  7492   013E30  0E00               	movlw	0
  7493   013E32  6E23               	movwf	(___flge@ff2+1)^(0+1280),c
  7494   013E34  0E90               	movlw	144
  7495   013E36  6E24               	movwf	(___flge@ff2+2)^(0+1280),c
  7496   013E38  0E41               	movlw	65
  7497   013E3A  6E25               	movwf	(___flge@ff2+3)^(0+1280),c
  7498   013E3C  EC3F  F0B1         	call	___flge	;wreg free
  7499   013E40  B0D8               	btfsc	status,0,c
  7500   013E42  EF25  F09F         	goto	u9071
  7501   013E46  EF27  F09F         	goto	u9070
  7502   013E4A                     u9071:
  7503   013E4A  EF31  F09F         	goto	l10807
  7504   013E4E                     u9070:
  7505   013E4E                     
  7506                           ;p_final.c: 46:             ESCRIBE_MENSAJE("Arriba", 10);
  7507   013E4E  0ED7               	movlw	low STR_17
  7508   013E50  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  7509   013E52  0EFF               	movlw	high STR_17
  7510   013E54  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
  7511   013E56  0E0A               	movlw	10
  7512   013E58  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  7513   013E5A  ECC5  F0B6         	call	_ESCRIBE_MENSAJE	;wreg free
  7514                           
  7515                           ;p_final.c: 47:         } else if (roll > -10 && roll <-9 && -8 < pitch && pitch <-2) {
  7516   013E5E  EFA7  F09F         	goto	l10819
  7517   013E62                     l10807:
  7518   013E62  0E00               	movlw	0
  7519   013E64  6E1E               	movwf	___flge@ff1^(0+1280),c
  7520   013E66  0E00               	movlw	0
  7521   013E68  6E1F               	movwf	(___flge@ff1+1)^(0+1280),c
  7522   013E6A  0E20               	movlw	32
  7523   013E6C  6E20               	movwf	(___flge@ff1+2)^(0+1280),c
  7524   013E6E  0EC1               	movlw	193
  7525   013E70  6E21               	movwf	(___flge@ff1+3)^(0+1280),c
  7526   013E72  C6AB  F522         	movff	main@roll,___flge@ff2
  7527   013E76  C6AC  F523         	movff	main@roll+1,___flge@ff2+1
  7528   013E7A  C6AD  F524         	movff	main@roll+2,___flge@ff2+2
  7529   013E7E  C6AE  F525         	movff	main@roll+3,___flge@ff2+3
  7530   013E82  EC3F  F0B1         	call	___flge	;wreg free
  7531   013E86  B0D8               	btfsc	status,0,c
  7532   013E88  EF48  F09F         	goto	u9081
  7533   013E8C  EF4A  F09F         	goto	u9080
  7534   013E90                     u9081:
  7535   013E90  EF9F  F09F         	goto	l10817
  7536   013E94                     u9080:
  7537   013E94  C6AB  F51E         	movff	main@roll,___flge@ff1
  7538   013E98  C6AC  F51F         	movff	main@roll+1,___flge@ff1+1
  7539   013E9C  C6AD  F520         	movff	main@roll+2,___flge@ff1+2
  7540   013EA0  C6AE  F521         	movff	main@roll+3,___flge@ff1+3
  7541   013EA4  0E00               	movlw	0
  7542   013EA6  6E22               	movwf	___flge@ff2^(0+1280),c
  7543   013EA8  0E00               	movlw	0
  7544   013EAA  6E23               	movwf	(___flge@ff2+1)^(0+1280),c
  7545   013EAC  0E10               	movlw	16
  7546   013EAE  6E24               	movwf	(___flge@ff2+2)^(0+1280),c
  7547   013EB0  0EC1               	movlw	193
  7548   013EB2  6E25               	movwf	(___flge@ff2+3)^(0+1280),c
  7549   013EB4  EC3F  F0B1         	call	___flge	;wreg free
  7550   013EB8  B0D8               	btfsc	status,0,c
  7551   013EBA  EF61  F09F         	goto	u9091
  7552   013EBE  EF63  F09F         	goto	u9090
  7553   013EC2                     u9091:
  7554   013EC2  EF9F  F09F         	goto	l10817
  7555   013EC6                     u9090:
  7556   013EC6  0E00               	movlw	0
  7557   013EC8  6E1E               	movwf	___flge@ff1^(0+1280),c
  7558   013ECA  0E00               	movlw	0
  7559   013ECC  6E1F               	movwf	(___flge@ff1+1)^(0+1280),c
  7560   013ECE  0E00               	movlw	0
  7561   013ED0  6E20               	movwf	(___flge@ff1+2)^(0+1280),c
  7562   013ED2  0EC1               	movlw	193
  7563   013ED4  6E21               	movwf	(___flge@ff1+3)^(0+1280),c
  7564   013ED6  C6A7  F522         	movff	main@pitch,___flge@ff2
  7565   013EDA  C6A8  F523         	movff	main@pitch+1,___flge@ff2+1
  7566   013EDE  C6A9  F524         	movff	main@pitch+2,___flge@ff2+2
  7567   013EE2  C6AA  F525         	movff	main@pitch+3,___flge@ff2+3
  7568   013EE6  EC3F  F0B1         	call	___flge	;wreg free
  7569   013EEA  B0D8               	btfsc	status,0,c
  7570   013EEC  EF7A  F09F         	goto	u9101
  7571   013EF0  EF7C  F09F         	goto	u9100
  7572   013EF4                     u9101:
  7573   013EF4  EF9F  F09F         	goto	l10817
  7574   013EF8                     u9100:
  7575   013EF8  C6A7  F51E         	movff	main@pitch,___flge@ff1
  7576   013EFC  C6A8  F51F         	movff	main@pitch+1,___flge@ff1+1
  7577   013F00  C6A9  F520         	movff	main@pitch+2,___flge@ff1+2
  7578   013F04  C6AA  F521         	movff	main@pitch+3,___flge@ff1+3
  7579   013F08  0E00               	movlw	0
  7580   013F0A  6E22               	movwf	___flge@ff2^(0+1280),c
  7581   013F0C  0E00               	movlw	0
  7582   013F0E  6E23               	movwf	(___flge@ff2+1)^(0+1280),c
  7583   013F10  0E00               	movlw	0
  7584   013F12  6E24               	movwf	(___flge@ff2+2)^(0+1280),c
  7585   013F14  0EC0               	movlw	192
  7586   013F16  6E25               	movwf	(___flge@ff2+3)^(0+1280),c
  7587   013F18  EC3F  F0B1         	call	___flge	;wreg free
  7588   013F1C  B0D8               	btfsc	status,0,c
  7589   013F1E  EF93  F09F         	goto	u9111
  7590   013F22  EF95  F09F         	goto	u9110
  7591   013F26                     u9111:
  7592   013F26  EF9F  F09F         	goto	l10817
  7593   013F2A                     u9110:
  7594   013F2A                     
  7595                           ;p_final.c: 48:             ESCRIBE_MENSAJE("Abajo", 10);
  7596   013F2A  0EE5               	movlw	low STR_18
  7597   013F2C  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  7598   013F2E  0EFF               	movlw	high STR_18
  7599   013F30  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
  7600   013F32  0E0A               	movlw	10
  7601   013F34  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  7602   013F36  ECC5  F0B6         	call	_ESCRIBE_MENSAJE	;wreg free
  7603                           
  7604                           ;p_final.c: 49:         } else {
  7605   013F3A  EFA7  F09F         	goto	l10819
  7606   013F3E                     l10817:
  7607                           
  7608                           ;p_final.c: 50:             ESCRIBE_MENSAJE("Centro", 10);
  7609   013F3E  0EDE               	movlw	low STR_19
  7610   013F40  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
  7611   013F42  0EFF               	movlw	high STR_19
  7612   013F44  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
  7613   013F46  0E0A               	movlw	10
  7614   013F48  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
  7615   013F4A  ECC5  F0B6         	call	_ESCRIBE_MENSAJE	;wreg free
  7616   013F4E                     l10819:
  7617                           
  7618                           ;p_final.c: 53:         _delay((unsigned long)((500)*(64000000UL/4000.0)));
  7619   013F4E  0E29               	movlw	41
  7620   013F50  0106               	movlb	6	; () banked
  7621   013F52  6F8A               	movwf	(??_main+1)& (0+255),b
  7622   013F54  0E96               	movlw	150
  7623   013F56  6F89               	movwf	??_main& (0+255),b
  7624   013F58  0E7F               	movlw	127
  7625   013F5A                     u9137:
  7626   013F5A  2EE8               	decfsz	wreg,f,c
  7627   013F5C  D7FE               	bra	u9137
  7628   013F5E  2F89               	decfsz	??_main& (0+255),f,b
  7629   013F60  D7FC               	bra	u9137
  7630   013F62  2F8A               	decfsz	(??_main+1)& (0+255),f,b
  7631   013F64  D7FA               	bra	u9137
  7632   013F66  EF95  F09D         	goto	l10763
  7633   013F6A  EFFE  F0FF         	goto	start
  7634   013F6E                     __end_of_main:
  7635                           	callstack 0
  7636                           
  7637 ;; *************** function _sprintf *****************
  7638 ;; Defined at:
  7639 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;  s               2  109[BANK5 ] PTR unsigned char 
  7642 ;;		 -> main@buffer1(16), 
  7643 ;;  fmt             2  111[BANK5 ] PTR const unsigned char 
  7644 ;;		 -> STR_14(16), 
  7645 ;; Auto vars:     Size  Location     Type
  7646 ;;  f              11  123[BANK5 ] struct _IO_FILE
  7647 ;;  ap              2  121[BANK5 ] PTR void [1]
  7648 ;;		 -> ?_sprintf(2), 
  7649 ;;  ret             2    0        int 
  7650 ;; Return value:  Size  Location     Type
  7651 ;;                  2  109[BANK5 ] int 
  7652 ;; Registers used:
  7653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7654 ;; Tracked objects:
  7655 ;;		On entry : 0/0
  7656 ;;		On exit  : 0/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7659 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7660 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7662 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7663 ;;Total ram usage:       25 bytes
  7664 ;; Hardware stack levels used: 1
  7665 ;; Hardware stack levels required when called: 7
  7666 ;; This function calls:
  7667 ;;		_vfprintf
  7668 ;; This function is called by:
  7669 ;;		_main
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           	psect	text1
  7674   016CEA                     __ptext1:
  7675                           	callstack 0
  7676   016CEA                     _sprintf:
  7677                           	callstack 119
  7678   016CEA  0ED1               	movlw	low (?_sprintf+4)
  7679   016CEC  0105               	movlb	5	; () banked
  7680   016CEE  6FD9               	movwf	sprintf@ap& (0+255),b
  7681   016CF0  0E05               	movlw	high (?_sprintf+4)
  7682   016CF2  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  7683   016CF4  C5CD  F5DB         	movff	sprintf@s,sprintf@f
  7684   016CF8  C5CE  F5DC         	movff	sprintf@s+1,sprintf@f+1
  7685   016CFC                     
  7686                           ; BSR set to: 5
  7687   016CFC  0E00               	movlw	0
  7688   016CFE  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  7689   016D00  0E00               	movlw	0
  7690   016D02  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  7691   016D04                     
  7692                           ; BSR set to: 5
  7693   016D04  0E00               	movlw	0
  7694   016D06  6FE5               	movwf	(sprintf@f+10)& (0+255),b
  7695   016D08  0E00               	movlw	0
  7696   016D0A  6FE4               	movwf	(sprintf@f+9)& (0+255),b
  7697   016D0C                     
  7698                           ; BSR set to: 5
  7699   016D0C  0EDB               	movlw	low sprintf@f
  7700   016D0E  6FC5               	movwf	vfprintf@fp& (0+255),b
  7701   016D10  0E05               	movlw	high sprintf@f
  7702   016D12  6FC6               	movwf	(vfprintf@fp+1)& (0+255),b
  7703   016D14  C5CF  F5C7         	movff	sprintf@fmt,vfprintf@fmt
  7704   016D18  C5D0  F5C8         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7705   016D1C  0ED9               	movlw	low sprintf@ap
  7706   016D1E  6FC9               	movwf	vfprintf@ap& (0+255),b
  7707   016D20  0E05               	movlw	high sprintf@ap
  7708   016D22  6FCA               	movwf	(vfprintf@ap+1)& (0+255),b
  7709   016D24  ECF6  F0B5         	call	_vfprintf	;wreg free
  7710   016D28  0105               	movlb	5	; () banked
  7711   016D2A  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  7712   016D2C  25CD               	addwf	sprintf@s& (0+255),w,b
  7713   016D2E  6ED9               	movwf	fsr2l,c
  7714   016D30  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  7715   016D32  21CE               	addwfc	(sprintf@s+1)& (0+255),w,b
  7716   016D34  6EDA               	movwf	fsr2h,c
  7717   016D36  6ADF               	clrf	indf2,c
  7718   016D38                     
  7719                           ; BSR set to: 5
  7720   016D38  0012               	return		;funcret
  7721   016D3A                     __end_of_sprintf:
  7722                           	callstack 0
  7723                           
  7724 ;; *************** function _vfprintf *****************
  7725 ;; Defined at:
  7726 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;  fp              2  101[BANK5 ] PTR struct _IO_FILE
  7729 ;;		 -> sprintf@f(11), 
  7730 ;;  fmt             2  103[BANK5 ] PTR const unsigned char 
  7731 ;;		 -> STR_14(16), 
  7732 ;;  ap              2  105[BANK5 ] PTR PTR void 
  7733 ;;		 -> sprintf@ap(2), 
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;  cfmt            2  107[BANK5 ] PTR unsigned char 
  7736 ;;		 -> STR_14(16), 
  7737 ;; Return value:  Size  Location     Type
  7738 ;;                  2  101[BANK5 ] int 
  7739 ;; Registers used:
  7740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7741 ;; Tracked objects:
  7742 ;;		On entry : 0/0
  7743 ;;		On exit  : 0/0
  7744 ;;		Unchanged: 0/0
  7745 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7746 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7747 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7749 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7750 ;;Total ram usage:        8 bytes
  7751 ;; Hardware stack levels used: 1
  7752 ;; Hardware stack levels required when called: 6
  7753 ;; This function calls:
  7754 ;;		_vfpfcnvrt
  7755 ;; This function is called by:
  7756 ;;		_sprintf
  7757 ;; This function uses a non-reentrant model
  7758 ;;
  7759                           
  7760                           	psect	text2
  7761   016BEC                     __ptext2:
  7762                           	callstack 0
  7763   016BEC                     _vfprintf:
  7764                           	callstack 119
  7765   016BEC                     
  7766                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7767   016BEC  C5C7  F5CB         	movff	vfprintf@fmt,vfprintf@cfmt
  7768   016BF0  C5C8  F5CC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7769                           
  7770                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7771   016BF4  EF0B  F0B6         	goto	l9805
  7772   016BF8                     l9803:
  7773                           
  7774                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  7775   016BF8  C5C5  F5B6         	movff	vfprintf@fp,vfpfcnvrt@fp
  7776   016BFC  C5C6  F5B7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7777   016C00  0ECB               	movlw	low vfprintf@cfmt
  7778   016C02  0105               	movlb	5	; () banked
  7779   016C04  6FB8               	movwf	vfpfcnvrt@fmt& (0+255),b
  7780   016C06  0E05               	movlw	high vfprintf@cfmt
  7781   016C08  6FB9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  7782   016C0A  C5C9  F5BA         	movff	vfprintf@ap,vfpfcnvrt@ap
  7783   016C0E  C5CA  F5BB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7784   016C12  EC9E  F0A8         	call	_vfpfcnvrt	;wreg free
  7785   016C16                     l9805:
  7786                           
  7787                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7788   016C16  C5CB  F4F6         	movff	vfprintf@cfmt,tblptrl
  7789   016C1A  C5CC  F4F7         	movff	vfprintf@cfmt+1,tblptrh
  7790   016C1E                     	if	0	;tblptru may be non-zero
  7791   016C1E                     	endif
  7792   016C1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7793   016C1E  0E00               	movlw	low (__mediumconst shr (0+16))
  7794   016C20  6EF8               	movwf	tblptru,c
  7795   016C22                     	endif
  7796   016C22  0008               	tblrd		*
  7797   016C24  50F5               	movf	tablat,w,c
  7798   016C26  0900               	iorlw	0
  7799   016C28  A4D8               	btfss	status,2,c
  7800   016C2A  EF19  F0B6         	goto	u7851
  7801   016C2E  EF1B  F0B6         	goto	u7850
  7802   016C32                     u7851:
  7803   016C32  EFFC  F0B5         	goto	l9803
  7804   016C36                     u7850:
  7805   016C36                     
  7806                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  7807   016C36  0E00               	movlw	0
  7808   016C38  0105               	movlb	5	; () banked
  7809   016C3A  6FC6               	movwf	(?_vfprintf+1)& (0+255),b
  7810   016C3C  0E00               	movlw	0
  7811   016C3E  6FC5               	movwf	?_vfprintf& (0+255),b
  7812   016C40                     
  7813                           ; BSR set to: 5
  7814   016C40  0012               	return		;funcret
  7815   016C42                     __end_of_vfprintf:
  7816                           	callstack 0
  7817                           
  7818 ;; *************** function _vfpfcnvrt *****************
  7819 ;; Defined at:
  7820 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;  fp              2   86[BANK5 ] PTR struct _IO_FILE
  7823 ;;		 -> sprintf@f(11), 
  7824 ;;  fmt             2   88[BANK5 ] PTR PTR unsigned char 
  7825 ;;		 -> vfprintf@cfmt(2), 
  7826 ;;  ap              2   90[BANK5 ] PTR PTR void 
  7827 ;;		 -> sprintf@ap(2), 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;  convarg         4   94[BANK5 ] struct .
  7830 ;;  cp              2   99[BANK5 ] PTR unsigned char 
  7831 ;;		 -> STR_14(16), 
  7832 ;;  c               1   98[BANK5 ] unsigned char 
  7833 ;;  done            1    0        _Bool 
  7834 ;; Return value:  Size  Location     Type
  7835 ;;                  1    wreg      void 
  7836 ;; Registers used:
  7837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7838 ;; Tracked objects:
  7839 ;;		On entry : 0/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7843 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7844 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7845 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7846 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7847 ;;Total ram usage:       15 bytes
  7848 ;; Hardware stack levels used: 1
  7849 ;; Hardware stack levels required when called: 5
  7850 ;; This function calls:
  7851 ;;		_efgtoa
  7852 ;;		_fputc
  7853 ;;		_read_prec_or_width
  7854 ;; This function is called by:
  7855 ;;		_vfprintf
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           
  7859                           	psect	text3
  7860   01513C                     __ptext3:
  7861                           	callstack 0
  7862   01513C                     _vfpfcnvrt:
  7863                           	callstack 119
  7864   01513C                     
  7865                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  7866   01513C  C5B8  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7867   015140  C5B9  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7868   015144  C4DE F4F6          	movff	postinc2,tblptrl
  7869   015148  C4DD F4F7          	movff	postdec2,tblptrh
  7870   01514C                     	if	0	;tblptru may be non-zero
  7871   01514C                     	endif
  7872   01514C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7873   01514C  0E00               	movlw	low (__mediumconst shr (0+16))
  7874   01514E  6EF8               	movwf	tblptru,c
  7875   015150                     	endif
  7876   015150  0008               	tblrd		*
  7877   015152  50F5               	movf	tablat,w,c
  7878   015154  0A25               	xorlw	37
  7879   015156  A4D8               	btfss	status,2,c
  7880   015158  EFB0  F0A8         	goto	u7431
  7881   01515C  EFB2  F0A8         	goto	u7430
  7882   015160                     u7431:
  7883   015160  EFAA  F0A9         	goto	l9393
  7884   015164                     u7430:
  7885   015164                     
  7886                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  7887   015164  C5B8  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7888   015168  C5B9  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7889   01516C  2ADE               	incf	postinc2,f,c
  7890   01516E  0E00               	movlw	0
  7891   015170  22DD               	addwfc	postdec2,f,c
  7892   015172                     
  7893                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  7894   015172  0E00               	movlw	0
  7895   015174  0106               	movlb	6	; () banked
  7896   015176  6FF6               	movwf	(_width+1)& (0+255),b
  7897   015178  0E00               	movlw	0
  7898   01517A  6FF5               	movwf	_width& (0+255),b
  7899   01517C  C6F5  F6FD         	movff	_width,_flags
  7900   015180                     
  7901                           ; BSR set to: 6
  7902                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  7903   015180  69F7               	setf	_prec& (0+255),b
  7904   015182  69F8               	setf	(_prec+1)& (0+255),b
  7905   015184                     
  7906                           ; BSR set to: 6
  7907                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  7908   015184  C5B8  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7909   015188  C5B9  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7910   01518C  C4DE F4F6          	movff	postinc2,tblptrl
  7911   015190  C4DD F4F7          	movff	postdec2,tblptrh
  7912   015194                     	if	0	;tblptru may be non-zero
  7913   015194                     	endif
  7914   015194                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7915   015194  0E00               	movlw	low (__mediumconst shr (0+16))
  7916   015196  6EF8               	movwf	tblptru,c
  7917   015198                     	endif
  7918   015198  0008               	tblrd		*
  7919   01519A  50F5               	movf	tablat,w,c
  7920   01519C  0A2E               	xorlw	46
  7921   01519E  A4D8               	btfss	status,2,c
  7922   0151A0  EFD4  F0A8         	goto	u7441
  7923   0151A4  EFD6  F0A8         	goto	u7440
  7924   0151A8                     u7441:
  7925   0151A8  EFEB  F0A8         	goto	l9357
  7926   0151AC                     u7440:
  7927   0151AC                     
  7928                           ; BSR set to: 6
  7929                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  7930   0151AC  C5B8  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7931   0151B0  C5B9  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7932   0151B4  2ADE               	incf	postinc2,f,c
  7933   0151B6  0E00               	movlw	0
  7934   0151B8  22DD               	addwfc	postdec2,f,c
  7935   0151BA                     
  7936                           ; BSR set to: 6
  7937                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  7938   0151BA  C5B8  F501         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  7939   0151BE  C5B9  F502         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  7940   0151C2  C5BA  F503         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  7941   0151C6  C5BB  F504         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  7942   0151CA  EC39  F0B3         	call	_read_prec_or_width	;wreg free
  7943   0151CE  C501  F6F7         	movff	?_read_prec_or_width,_prec
  7944   0151D2  C502  F6F8         	movff	?_read_prec_or_width+1,_prec+1
  7945   0151D6                     l9357:
  7946                           
  7947                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  7948   0151D6  C5B8  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  7949   0151DA  C5B9  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7950   0151DE  C4DE F5C3          	movff	postinc2,vfpfcnvrt@cp
  7951   0151E2  C4DD F5C4          	movff	postdec2,vfpfcnvrt@cp+1
  7952   0151E6                     
  7953                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  7954   0151E6  C5C3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  7955   0151EA  C5C4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
  7956   0151EE                     	if	0	;tblptru may be non-zero
  7957   0151EE                     	endif
  7958   0151EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7959   0151EE  0E00               	movlw	low (__mediumconst shr (0+16))
  7960   0151F0  6EF8               	movwf	tblptru,c
  7961   0151F2                     	endif
  7962   0151F2  0008               	tblrd		*
  7963   0151F4  C4F5 F5C2          	movff	tablat,vfpfcnvrt@c
  7964                           
  7965                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  7966   0151F8  EF09  F0A9         	goto	l9367
  7967   0151FC                     l9361:
  7968                           
  7969                           ; BSR set to: 5
  7970                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  7971   0151FC  4BC3               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  7972   0151FE  2BC4               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  7973                           
  7974                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1696:     break;
  7975   015200  EF19  F0A9         	goto	l9369
  7976   015204                     l9363:
  7977                           
  7978                           ; BSR set to: 5
  7979                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  7980   015204  0E6C               	movlw	108
  7981   015206  6FC2               	movwf	vfpfcnvrt@c& (0+255),b
  7982                           
  7983                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1722:     break;
  7984   015208  EF19  F0A9         	goto	l9369
  7985   01520C                     l2363:
  7986                           
  7987                           ; BSR set to: 5
  7988                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  7989   01520C  6BC2               	clrf	vfpfcnvrt@c& (0+255),b
  7990                           
  7991                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1725:     break;
  7992   01520E  EF19  F0A9         	goto	l9369
  7993   015212                     l9367:
  7994   015212  0105               	movlb	5	; () banked
  7995   015214  51C2               	movf	vfpfcnvrt@c& (0+255),w,b
  7996                           
  7997                           ; Switch size 1, requested type "simple"
  7998                           ; Number of cases is 3, Range of values is 76 to 108
  7999                           ; switch strategies available:
  8000                           ; Name         Instructions Cycles
  8001                           ; simple_byte           10     6 (average)
  8002                           ;	Chosen strategy is simple_byte
  8003   015216  0A4C               	xorlw	76	; case 76
  8004   015218  B4D8               	btfsc	status,2,c
  8005   01521A  EFFE  F0A8         	goto	l9361
  8006   01521E  0A2A               	xorlw	42	; case 102
  8007   015220  B4D8               	btfsc	status,2,c
  8008   015222  EF02  F0A9         	goto	l9363
  8009   015226  0A0A               	xorlw	10	; case 108
  8010   015228  B4D8               	btfsc	status,2,c
  8011   01522A  EFFE  F0A8         	goto	l9361
  8012   01522E  EF06  F0A9         	goto	l2363
  8013   015232                     l9369:
  8014                           
  8015                           ; BSR set to: 5
  8016   015232  C5C3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  8017   015236  C5C4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
  8018   01523A                     	if	0	;tblptru may be non-zero
  8019   01523A                     	endif
  8020   01523A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8021   01523A  0E00               	movlw	low (__mediumconst shr (0+16))
  8022   01523C  6EF8               	movwf	tblptru,c
  8023   01523E                     	endif
  8024   01523E  0008               	tblrd		*
  8025   015240  50F5               	movf	tablat,w,c
  8026   015242  0A66               	xorlw	102
  8027   015244  A4D8               	btfss	status,2,c
  8028   015246  EF27  F0A9         	goto	u7451
  8029   01524A  EF29  F0A9         	goto	u7450
  8030   01524E                     u7451:
  8031   01524E  EFA1  F0A9         	goto	l9389
  8032   015252                     u7450:
  8033   015252  EF5F  F0A9         	goto	l9377
  8034   015256                     l9371:
  8035                           
  8036                           ; BSR set to: 5
  8037                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8038   015256  C5BA  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  8039   01525A  C5BB  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  8040   01525E  C4DF F5BC          	movff	indf2,??_vfpfcnvrt
  8041   015262  0E04               	movlw	4
  8042   015264  26DE               	addwf	postinc2,f,c
  8043   015266  C4DF F5BD          	movff	indf2,??_vfpfcnvrt+1
  8044   01526A  0E00               	movlw	0
  8045   01526C  22DD               	addwfc	postdec2,f,c
  8046   01526E  C5BC  F4D9         	movff	??_vfpfcnvrt,fsr2l
  8047   015272  C5BD  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  8048   015276  C4DE F5BE          	movff	postinc2,vfpfcnvrt@convarg
  8049   01527A  C4DE F5BF          	movff	postinc2,vfpfcnvrt@convarg+1
  8050   01527E  C4DE F5C0          	movff	postinc2,vfpfcnvrt@convarg+2
  8051   015282  C4DE F5C1          	movff	postinc2,vfpfcnvrt@convarg+3
  8052                           
  8053                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1757:      break;
  8054   015286  EF6A  F0A9         	goto	l9379
  8055   01528A                     l9373:
  8056                           
  8057                           ; BSR set to: 5
  8058                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  8059   01528A  C5BA  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  8060   01528E  C5BB  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  8061   015292  C4DF F5BC          	movff	indf2,??_vfpfcnvrt
  8062   015296  0E04               	movlw	4
  8063   015298  26DE               	addwf	postinc2,f,c
  8064   01529A  C4DF F5BD          	movff	indf2,??_vfpfcnvrt+1
  8065   01529E  0E00               	movlw	0
  8066   0152A0  22DD               	addwfc	postdec2,f,c
  8067   0152A2  C5BC  F4D9         	movff	??_vfpfcnvrt,fsr2l
  8068   0152A6  C5BD  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  8069   0152AA  C4DE F5BE          	movff	postinc2,vfpfcnvrt@convarg
  8070   0152AE  C4DE F5BF          	movff	postinc2,vfpfcnvrt@convarg+1
  8071   0152B2  C4DE F5C0          	movff	postinc2,vfpfcnvrt@convarg+2
  8072   0152B6  C4DE F5C1          	movff	postinc2,vfpfcnvrt@convarg+3
  8073                           
  8074                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1760:      break;
  8075   0152BA  EF6A  F0A9         	goto	l9379
  8076   0152BE                     l9377:
  8077                           
  8078                           ; BSR set to: 5
  8079   0152BE  51C2               	movf	vfpfcnvrt@c& (0+255),w,b
  8080                           
  8081                           ; Switch size 1, requested type "simple"
  8082                           ; Number of cases is 2, Range of values is 76 to 108
  8083                           ; switch strategies available:
  8084                           ; Name         Instructions Cycles
  8085                           ; simple_byte            7     4 (average)
  8086                           ;	Chosen strategy is simple_byte
  8087   0152C0  0A4C               	xorlw	76	; case 76
  8088   0152C2  B4D8               	btfsc	status,2,c
  8089   0152C4  EF45  F0A9         	goto	l9373
  8090   0152C8  0A20               	xorlw	32	; case 108
  8091   0152CA  B4D8               	btfsc	status,2,c
  8092   0152CC  EF2B  F0A9         	goto	l9371
  8093   0152D0  EF6A  F0A9         	goto	l9379
  8094   0152D4                     l9379:
  8095                           
  8096                           ; BSR set to: 5
  8097                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  8098   0152D4  0E01               	movlw	1
  8099   0152D6  25C3               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8100   0152D8  6FBC               	movwf	??_vfpfcnvrt& (0+255),b
  8101   0152DA  0E00               	movlw	0
  8102   0152DC  21C4               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8103   0152DE  6FBD               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8104   0152E0  C5B8  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  8105   0152E4  C5B9  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8106   0152E8  C5BC  F4DE         	movff	??_vfpfcnvrt,postinc2
  8107   0152EC  C5BD  F4DD         	movff	??_vfpfcnvrt+1,postdec2
  8108                           
  8109                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  8110   0152F0  EF93  F0A9         	goto	l9387
  8111   0152F4                     l9381:
  8112                           
  8113                           ; BSR set to: 5
  8114                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  8115   0152F4  C5B6  F581         	movff	vfpfcnvrt@fp,efgtoa@fp
  8116   0152F8  C5B7  F582         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  8117   0152FC  C5BE  F583         	movff	vfpfcnvrt@convarg,efgtoa@f
  8118   015300  C5BF  F584         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  8119   015304  C5C0  F585         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  8120   015308  C5C1  F586         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  8121   01530C  C5C3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  8122   015310  C5C4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
  8123   015314                     	if	0	;tblptru may be non-zero
  8124   015314                     	endif
  8125   015314                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8126   015314  0E00               	movlw	low (__mediumconst shr (0+16))
  8127   015316  6EF8               	movwf	tblptru,c
  8128   015318                     	endif
  8129   015318  0008               	tblrd		*
  8130   01531A  C4F5 F587          	movff	tablat,efgtoa@c
  8131   01531E  ECDF  F086         	call	_efgtoa	;wreg free
  8132   015322  EFC0  F0A9         	goto	l2373
  8133   015326                     l9387:
  8134                           
  8135                           ; BSR set to: 5
  8136   015326  C5C3  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  8137   01532A  C5C4  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
  8138   01532E                     	if	0	;tblptru may be non-zero
  8139   01532E                     	endif
  8140   01532E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8141   01532E  0E00               	movlw	low (__mediumconst shr (0+16))
  8142   015330  6EF8               	movwf	tblptru,c
  8143   015332                     	endif
  8144   015332  0008               	tblrd		*
  8145   015334  50F5               	movf	tablat,w,c
  8146                           
  8147                           ; Switch size 1, requested type "simple"
  8148                           ; Number of cases is 1, Range of values is 102 to 102
  8149                           ; switch strategies available:
  8150                           ; Name         Instructions Cycles
  8151                           ; simple_byte            4     3 (average)
  8152                           ;	Chosen strategy is simple_byte
  8153   015336  0A66               	xorlw	102	; case 102
  8154   015338  B4D8               	btfsc	status,2,c
  8155   01533A  EF7A  F0A9         	goto	l9381
  8156   01533E  EFA1  F0A9         	goto	l9389
  8157   015342                     l9389:
  8158                           
  8159                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  8160   015342  C5B8  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  8161   015346  C5B9  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8162   01534A  2ADE               	incf	postinc2,f,c
  8163   01534C  0E00               	movlw	0
  8164   01534E  22DD               	addwfc	postdec2,f,c
  8165   015350  EFC0  F0A9         	goto	l2373
  8166   015354                     l9393:
  8167                           
  8168                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  8169   015354  C5B8  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  8170   015358  C5B9  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8171   01535C  C4DE F4F6          	movff	postinc2,tblptrl
  8172   015360  C4DD F4F7          	movff	postdec2,tblptrh
  8173   015364                     	if	0	;tblptru may be non-zero
  8174   015364                     	endif
  8175   015364                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8176   015364  0E00               	movlw	low (__mediumconst shr (0+16))
  8177   015366  6EF8               	movwf	tblptru,c
  8178   015368                     	endif
  8179   015368  0008               	tblrd		*
  8180   01536A  50F5               	movf	tablat,w,c
  8181   01536C  6E01               	movwf	fputc@c^(0+1280),c
  8182   01536E  6A02               	clrf	(fputc@c+1)^(0+1280),c
  8183   015370  C5B6  F503         	movff	vfpfcnvrt@fp,fputc@fp
  8184   015374  C5B7  F504         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8185   015378  EC9F  F0B3         	call	_fputc	;wreg free
  8186   01537C  EFA1  F0A9         	goto	l9389
  8187   015380                     l2373:
  8188   015380  0012               	return		;funcret
  8189   015382                     __end_of_vfpfcnvrt:
  8190                           	callstack 0
  8191                           
  8192 ;; *************** function _read_prec_or_width *****************
  8193 ;; Defined at:
  8194 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  8195 ;; Parameters:    Size  Location     Type
  8196 ;;  fmt             2    0[COMRAM] PTR PTR const unsigned c
  8197 ;;		 -> vfprintf@cfmt(2), 
  8198 ;;  ap              2    2[COMRAM] PTR PTR void [1]
  8199 ;;		 -> sprintf@ap(2), 
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;  c               1    6[COMRAM] unsigned char 
  8202 ;;  n               2    7[COMRAM] int 
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  2    0[COMRAM] int 
  8205 ;; Registers used:
  8206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8213 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8214 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8215 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8216 ;;Total ram usage:        9 bytes
  8217 ;; Hardware stack levels used: 1
  8218 ;; This function calls:
  8219 ;;		Nothing
  8220 ;; This function is called by:
  8221 ;;		_vfpfcnvrt
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225                           	psect	text4
  8226   016672                     __ptext4:
  8227                           	callstack 0
  8228   016672                     _read_prec_or_width:
  8229                           	callstack 123
  8230   016672                     
  8231                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  8232   016672  0E00               	movlw	0
  8233   016674  6E09               	movwf	(read_prec_or_width@n+1)^(0+1280),c
  8234   016676  0E00               	movlw	0
  8235   016678  6E08               	movwf	read_prec_or_width@n^(0+1280),c
  8236   01667A                     
  8237                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  8238   01667A  C501  F4D9         	movff	read_prec_or_width@fmt,fsr2l
  8239   01667E  C502  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
  8240   016682  C4DE F4F6          	movff	postinc2,tblptrl
  8241   016686  C4DD F4F7          	movff	postdec2,tblptrh
  8242   01668A                     	if	0	;tblptru may be non-zero
  8243   01668A                     	endif
  8244   01668A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8245   01668A  0E00               	movlw	low (__mediumconst shr (0+16))
  8246   01668C  6EF8               	movwf	tblptru,c
  8247   01668E                     	endif
  8248   01668E  0008               	tblrd		*
  8249   016690  50F5               	movf	tablat,w,c
  8250   016692  0A2A               	xorlw	42
  8251   016694  A4D8               	btfss	status,2,c
  8252   016696  EF4F  F0B3         	goto	u7001
  8253   01669A  EF51  F0B3         	goto	u7000
  8254   01669E                     u7001:
  8255   01669E  EF84  F0B3         	goto	l9025
  8256   0166A2                     u7000:
  8257   0166A2                     
  8258                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  8259   0166A2  C501  F4D9         	movff	read_prec_or_width@fmt,fsr2l
  8260   0166A6  C502  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
  8261   0166AA  2ADE               	incf	postinc2,f,c
  8262   0166AC  0E00               	movlw	0
  8263   0166AE  22DD               	addwfc	postdec2,f,c
  8264                           
  8265                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  8266   0166B0  C503  F4D9         	movff	read_prec_or_width@ap,fsr2l
  8267   0166B4  C504  F4DA         	movff	read_prec_or_width@ap+1,fsr2h
  8268   0166B8  C4DF F505          	movff	indf2,??_read_prec_or_width
  8269   0166BC  0E02               	movlw	2
  8270   0166BE  26DE               	addwf	postinc2,f,c
  8271   0166C0  C4DF F506          	movff	indf2,??_read_prec_or_width+1
  8272   0166C4  0E00               	movlw	0
  8273   0166C6  22DD               	addwfc	postdec2,f,c
  8274   0166C8  C505  F4D9         	movff	??_read_prec_or_width,fsr2l
  8275   0166CC  C506  F4DA         	movff	??_read_prec_or_width+1,fsr2h
  8276   0166D0  C4DE F508          	movff	postinc2,read_prec_or_width@n
  8277   0166D4  C4DD F509          	movff	postdec2,read_prec_or_width@n+1
  8278                           
  8279                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  8280   0166D8  EF9A  F0B3         	goto	l2349
  8281   0166DC                     l9021:
  8282                           
  8283                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  8284   0166DC  0E0A               	movlw	10
  8285   0166DE  0208               	mulwf	read_prec_or_width@n^(0+1280),c
  8286   0166E0  C4F3 F505          	movff	prodl,??_read_prec_or_width
  8287   0166E4  C4F4 F506          	movff	prodh,??_read_prec_or_width+1
  8288   0166E8  0209               	mulwf	(read_prec_or_width@n+1)^(0+1280),c
  8289   0166EA  50F3               	movf	prodl,w,c
  8290   0166EC  2606               	addwf	(??_read_prec_or_width+1)^(0+1280),f,c
  8291   0166EE  5007               	movf	read_prec_or_width@c^(0+1280),w,c
  8292   0166F0  2405               	addwf	??_read_prec_or_width^(0+1280),w,c
  8293   0166F2  6E08               	movwf	read_prec_or_width@n^(0+1280),c
  8294   0166F4  0E00               	movlw	0
  8295   0166F6  2006               	addwfc	(??_read_prec_or_width+1)^(0+1280),w,c
  8296   0166F8  6E09               	movwf	(read_prec_or_width@n+1)^(0+1280),c
  8297   0166FA                     
  8298                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  8299   0166FA  C501  F4D9         	movff	read_prec_or_width@fmt,fsr2l
  8300   0166FE  C502  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
  8301   016702  2ADE               	incf	postinc2,f,c
  8302   016704  0E00               	movlw	0
  8303   016706  22DD               	addwfc	postdec2,f,c
  8304   016708                     l9025:
  8305                           
  8306                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  8307   016708  C501  F4D9         	movff	read_prec_or_width@fmt,fsr2l
  8308   01670C  C502  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
  8309   016710  C4DE F4F6          	movff	postinc2,tblptrl
  8310   016714  C4DD F4F7          	movff	postdec2,tblptrh
  8311   016718                     	if	0	;tblptru may be non-zero
  8312   016718                     	endif
  8313   016718                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8314   016718  0E00               	movlw	low (__mediumconst shr (0+16))
  8315   01671A  6EF8               	movwf	tblptru,c
  8316   01671C                     	endif
  8317   01671C  0008               	tblrd		*
  8318   01671E  50F5               	movf	tablat,w,c
  8319   016720  0FD0               	addlw	208
  8320   016722  6E07               	movwf	read_prec_or_width@c^(0+1280),c
  8321   016724  0E09               	movlw	9
  8322   016726  6407               	cpfsgt	read_prec_or_width@c^(0+1280),c
  8323   016728  EF98  F0B3         	goto	u7011
  8324   01672C  EF9A  F0B3         	goto	u7010
  8325   016730                     u7011:
  8326   016730  EF6E  F0B3         	goto	l9021
  8327   016734                     u7010:
  8328   016734                     l2349:
  8329                           
  8330                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  8331   016734  C508  F501         	movff	read_prec_or_width@n,?_read_prec_or_width
  8332   016738  C509  F502         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  8333   01673C  0012               	return		;funcret
  8334   01673E                     __end_of_read_prec_or_width:
  8335                           	callstack 0
  8336                           
  8337 ;; *************** function _efgtoa *****************
  8338 ;; Defined at:
  8339 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;  fp              2   33[BANK5 ] PTR struct _IO_FILE
  8342 ;;		 -> sprintf@f(11), 
  8343 ;;  f               4   35[BANK5 ] PTR struct _IO_FILE
  8344 ;;  c               1   39[BANK5 ] unsigned char 
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;  u               4   82[BANK5 ] struct flui
  8347 ;;  g               4   78[BANK5 ] struct flui
  8348 ;;  l               4   71[BANK5 ] struct flui
  8349 ;;  h               4   67[BANK5 ] struct flui
  8350 ;;  ou              4   61[BANK5 ] struct flui
  8351 ;;  n               2   76[BANK5 ] int 
  8352 ;;  i               2   65[BANK5 ] int 
  8353 ;;  w               2   59[BANK5 ] int 
  8354 ;;  e               2   57[BANK5 ] int 
  8355 ;;  m               2   55[BANK5 ] int 
  8356 ;;  d               2   53[BANK5 ] int 
  8357 ;;  t               2   46[BANK5 ] int 
  8358 ;;  p               2   44[BANK5 ] int 
  8359 ;;  ne              2   42[BANK5 ] int 
  8360 ;;  sign            1   75[BANK5 ] unsigned char 
  8361 ;;  nmode           1   52[BANK5 ] unsigned char 
  8362 ;;  mode            1   51[BANK5 ] unsigned char 
  8363 ;;  pp              1   50[BANK5 ] unsigned char 
  8364 ;;  esign           1    0        unsigned char 
  8365 ;; Return value:  Size  Location     Type
  8366 ;;                  1    wreg      void 
  8367 ;; Registers used:
  8368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8369 ;; Tracked objects:
  8370 ;;		On entry : 0/0
  8371 ;;		On exit  : 0/0
  8372 ;;		Unchanged: 0/0
  8373 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8374 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8375 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8376 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8377 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8378 ;;Total ram usage:       53 bytes
  8379 ;; Hardware stack levels used: 1
  8380 ;; Hardware stack levels required when called: 4
  8381 ;; This function calls:
  8382 ;;		___fladd
  8383 ;;		___fldiv
  8384 ;;		___fleq
  8385 ;;		___flge
  8386 ;;		___flmul
  8387 ;;		___flneg
  8388 ;;		___flsub
  8389 ;;		___fltol
  8390 ;;		___fpclassifyf
  8391 ;;		_floorf
  8392 ;;		_labs
  8393 ;;		_memcpy
  8394 ;;		_pad
  8395 ;;		_strcpy
  8396 ;; This function is called by:
  8397 ;;		_vfpfcnvrt
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           
  8401                           	psect	text5
  8402   010DBE                     __ptext5:
  8403                           	callstack 0
  8404   010DBE                     _efgtoa:
  8405                           	callstack 119
  8406   010DBE                     
  8407                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.50\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .50\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  8408   010DBE  0105               	movlb	5	; () banked
  8409   010DC0  6BAB               	clrf	efgtoa@sign& (0+255),b
  8410                           
  8411                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  8412   010DC2  C583  F5AE         	movff	efgtoa@f,efgtoa@g
  8413   010DC6  C584  F5AF         	movff	efgtoa@f+1,efgtoa@g+1
  8414   010DCA  C585  F5B0         	movff	efgtoa@f+2,efgtoa@g+2
  8415   010DCE  C586  F5B1         	movff	efgtoa@f+3,efgtoa@g+3
  8416   010DD2                     
  8417                           ; BSR set to: 5
  8418                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  8419   010DD2  BFB1               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8420   010DD4  EFF0  F086         	goto	u6680
  8421   010DD8  EFEE  F086         	goto	u6681
  8422   010DDC                     u6681:
  8423   010DDC  EF04  F087         	goto	l8803
  8424   010DE0                     u6680:
  8425   010DE0                     
  8426                           ; BSR set to: 5
  8427                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  8428   010DE0  0E01               	movlw	1
  8429   010DE2  6FAB               	movwf	efgtoa@sign& (0+255),b
  8430   010DE4                     
  8431                           ; BSR set to: 5
  8432                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  8433   010DE4  C5AE  F501         	movff	efgtoa@g,___flneg@f1
  8434   010DE8  C5AF  F502         	movff	efgtoa@g+1,___flneg@f1+1
  8435   010DEC  C5B0  F503         	movff	efgtoa@g+2,___flneg@f1+2
  8436   010DF0  C5B1  F504         	movff	efgtoa@g+3,___flneg@f1+3
  8437   010DF4  EC6F  F0B7         	call	___flneg	;wreg free
  8438   010DF8  C501  F5AE         	movff	?___flneg,efgtoa@g
  8439   010DFC  C502  F5AF         	movff	?___flneg+1,efgtoa@g+1
  8440   010E00  C503  F5B0         	movff	?___flneg+2,efgtoa@g+2
  8441   010E04  C504  F5B1         	movff	?___flneg+3,efgtoa@g+3
  8442   010E08                     l8803:
  8443                           
  8444                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  8445   010E08  0E00               	movlw	0
  8446   010E0A  0105               	movlb	5	; () banked
  8447   010E0C  6FAD               	movwf	(efgtoa@n+1)& (0+255),b
  8448   010E0E  0E00               	movlw	0
  8449   010E10  6FAC               	movwf	efgtoa@n& (0+255),b
  8450   010E12                     
  8451                           ; BSR set to: 5
  8452                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  8453   010E12  C6F5  F59B         	movff	_width,efgtoa@w
  8454   010E16  C6F6  F59C         	movff	_width+1,efgtoa@w+1
  8455   010E1A                     
  8456                           ; BSR set to: 5
  8457                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 605:     if (sign
  8458   010E1A  51AB               	movf	efgtoa@sign& (0+255),w,b
  8459   010E1C  B4D8               	btfsc	status,2,c
  8460   010E1E  EF13  F087         	goto	u6691
  8461   010E22  EF15  F087         	goto	u6690
  8462   010E26                     u6691:
  8463   010E26  EF29  F087         	goto	l8817
  8464   010E2A                     u6690:
  8465   010E2A                     
  8466                           ; BSR set to: 5
  8467                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  8468   010E2A  51AB               	movf	efgtoa@sign& (0+255),w,b
  8469   010E2C  A4D8               	btfss	status,2,c
  8470   010E2E  EF1B  F087         	goto	u6701
  8471   010E32  EF1D  F087         	goto	u6700
  8472   010E36                     u6701:
  8473   010E36  EF23  F087         	goto	l8813
  8474   010E3A                     u6700:
  8475   010E3A                     
  8476                           ; BSR set to: 5
  8477   010E3A  0E00               	movlw	0
  8478   010E3C  6F91               	movwf	(_efgtoa$2953+1)& (0+255),b
  8479   010E3E  0E2B               	movlw	43
  8480   010E40  6F90               	movwf	_efgtoa$2953& (0+255),b
  8481   010E42  EF27  F087         	goto	l8815
  8482   010E46                     l8813:
  8483                           
  8484                           ; BSR set to: 5
  8485   010E46  0E00               	movlw	0
  8486   010E48  6F91               	movwf	(_efgtoa$2953+1)& (0+255),b
  8487   010E4A  0E2D               	movlw	45
  8488   010E4C  6F90               	movwf	_efgtoa$2953& (0+255),b
  8489   010E4E                     l8815:
  8490                           
  8491                           ; BSR set to: 5
  8492   010E4E  C590  F5AB         	movff	_efgtoa$2953,efgtoa@sign
  8493   010E52                     l8817:
  8494                           
  8495                           ; BSR set to: 5
  8496                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  8497   010E52  C5AE  F501         	movff	efgtoa@g,___fpclassifyf@x
  8498   010E56  C5AF  F502         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8499   010E5A  C5B0  F503         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8500   010E5E  C5B1  F504         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8501   010E62  EC43  F0B2         	call	___fpclassifyf	;wreg free
  8502   010E66  0401               	decf	?___fpclassifyf^(0+1280),w,c
  8503   010E68  1002               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
  8504   010E6A  A4D8               	btfss	status,2,c
  8505   010E6C  EF3A  F087         	goto	u6711
  8506   010E70  EF3C  F087         	goto	u6710
  8507   010E74                     u6711:
  8508   010E74  EF6F  F087         	goto	l8835
  8509   010E78                     u6710:
  8510   010E78                     
  8511                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  8512   010E78  0105               	movlb	5	; () banked
  8513   010E7A  51AB               	movf	efgtoa@sign& (0+255),w,b
  8514   010E7C  B4D8               	btfsc	status,2,c
  8515   010E7E  EF43  F087         	goto	u6721
  8516   010E82  EF45  F087         	goto	u6720
  8517   010E86                     u6721:
  8518   010E86  EF4E  F087         	goto	l8827
  8519   010E8A                     u6720:
  8520   010E8A                     
  8521                           ; BSR set to: 5
  8522                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  8523   010E8A  C5AB  F800         	movff	efgtoa@sign,_dbuf
  8524   010E8E                     
  8525                           ; BSR set to: 5
  8526                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 622:    w--;
  8527   010E8E  079B               	decf	efgtoa@w& (0+255),f,b
  8528   010E90  A0D8               	btfss	status,0,c
  8529   010E92  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  8530   010E94                     
  8531                           ; BSR set to: 5
  8532                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  8533   010E94  0E00               	movlw	0
  8534   010E96  6FAD               	movwf	(efgtoa@n+1)& (0+255),b
  8535   010E98  0E01               	movlw	1
  8536   010E9A  6FAC               	movwf	efgtoa@n& (0+255),b
  8537   010E9C                     l8827:
  8538                           
  8539                           ; BSR set to: 5
  8540                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  8541   010E9C  0E00               	movlw	low _dbuf
  8542   010E9E  25AC               	addwf	efgtoa@n& (0+255),w,b
  8543   010EA0  6E01               	movwf	strcpy@dest^(0+1280),c
  8544   010EA2  0E08               	movlw	high _dbuf
  8545   010EA4  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8546   010EA6  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
  8547   010EA8  0EF7               	movlw	low STR_20
  8548   010EAA  6E03               	movwf	strcpy@src^(0+1280),c
  8549   010EAC  0EFF               	movlw	high STR_20
  8550   010EAE  6E04               	movwf	(strcpy@src+1)^(0+1280),c
  8551   010EB0  EC51  F0B7         	call	_strcpy	;wreg free
  8552   010EB4                     l8829:
  8553                           
  8554                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  8555   010EB4  0105               	movlb	5	; () banked
  8556   010EB6  0EFD               	movlw	253
  8557   010EB8  279B               	addwf	efgtoa@w& (0+255),f,b
  8558   010EBA  0EFF               	movlw	255
  8559   010EBC  239C               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8560   010EBE                     
  8561                           ; BSR set to: 5
  8562                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  8563   010EBE  C581  F511         	movff	efgtoa@fp,pad@fp
  8564   010EC2  C582  F512         	movff	efgtoa@fp+1,pad@fp+1
  8565   010EC6  0E00               	movlw	low _dbuf
  8566   010EC8  6E13               	movwf	pad@buf^(0+1280),c
  8567   010ECA  0E08               	movlw	high _dbuf
  8568   010ECC  6E14               	movwf	(pad@buf+1)^(0+1280),c
  8569   010ECE  C59B  F515         	movff	efgtoa@w,pad@p
  8570   010ED2  C59C  F516         	movff	efgtoa@w+1,pad@p+1
  8571   010ED6  EC61  F0B5         	call	_pad	;wreg free
  8572   010EDA  EFDA  F08B         	goto	l2304
  8573   010EDE                     l8835:
  8574                           
  8575                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  8576   010EDE  C5AE  F501         	movff	efgtoa@g,___fpclassifyf@x
  8577   010EE2  C5AF  F502         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8578   010EE6  C5B0  F503         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8579   010EEA  C5B1  F504         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8580   010EEE  EC43  F0B2         	call	___fpclassifyf	;wreg free
  8581   010EF2  5001               	movf	?___fpclassifyf^(0+1280),w,c
  8582   010EF4  1002               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
  8583   010EF6  A4D8               	btfss	status,2,c
  8584   010EF8  EF80  F087         	goto	u6731
  8585   010EFC  EF82  F087         	goto	u6730
  8586   010F00                     u6731:
  8587   010F00  EFA2  F087         	goto	l8853
  8588   010F04                     u6730:
  8589   010F04                     
  8590                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  8591   010F04  0105               	movlb	5	; () banked
  8592   010F06  51AB               	movf	efgtoa@sign& (0+255),w,b
  8593   010F08  B4D8               	btfsc	status,2,c
  8594   010F0A  EF89  F087         	goto	u6741
  8595   010F0E  EF8B  F087         	goto	u6740
  8596   010F12                     u6741:
  8597   010F12  EF94  F087         	goto	l8845
  8598   010F16                     u6740:
  8599   010F16                     
  8600                           ; BSR set to: 5
  8601                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  8602   010F16  C5AB  F800         	movff	efgtoa@sign,_dbuf
  8603   010F1A                     
  8604                           ; BSR set to: 5
  8605                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 640:    w--;
  8606   010F1A  079B               	decf	efgtoa@w& (0+255),f,b
  8607   010F1C  A0D8               	btfss	status,0,c
  8608   010F1E  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  8609   010F20                     
  8610                           ; BSR set to: 5
  8611                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  8612   010F20  0E00               	movlw	0
  8613   010F22  6FAD               	movwf	(efgtoa@n+1)& (0+255),b
  8614   010F24  0E01               	movlw	1
  8615   010F26  6FAC               	movwf	efgtoa@n& (0+255),b
  8616   010F28                     l8845:
  8617                           
  8618                           ; BSR set to: 5
  8619                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  8620   010F28  0E00               	movlw	low _dbuf
  8621   010F2A  25AC               	addwf	efgtoa@n& (0+255),w,b
  8622   010F2C  6E01               	movwf	strcpy@dest^(0+1280),c
  8623   010F2E  0E08               	movlw	high _dbuf
  8624   010F30  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8625   010F32  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
  8626   010F34  0EFB               	movlw	low STR_23
  8627   010F36  6E03               	movwf	strcpy@src^(0+1280),c
  8628   010F38  0EFF               	movlw	high STR_23
  8629   010F3A  6E04               	movwf	(strcpy@src+1)^(0+1280),c
  8630   010F3C  EC51  F0B7         	call	_strcpy	;wreg free
  8631   010F40  EF5A  F087         	goto	l8829
  8632   010F44                     l8853:
  8633                           
  8634                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  8635   010F44  0E00               	movlw	0
  8636   010F46  0105               	movlb	5	; () banked
  8637   010F48  6FB2               	movwf	efgtoa@u& (0+255),b
  8638   010F4A  0E00               	movlw	0
  8639   010F4C  6FB3               	movwf	(efgtoa@u+1)& (0+255),b
  8640   010F4E  0E80               	movlw	128
  8641   010F50  6FB4               	movwf	(efgtoa@u+2)& (0+255),b
  8642   010F52  0E3F               	movlw	63
  8643   010F54  6FB5               	movwf	(efgtoa@u+3)& (0+255),b
  8644                           
  8645                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  8646   010F56  0E00               	movlw	0
  8647   010F58  6F9A               	movwf	(efgtoa@e+1)& (0+255),b
  8648   010F5A  0E00               	movlw	0
  8649   010F5C  6F99               	movwf	efgtoa@e& (0+255),b
  8650   010F5E                     
  8651                           ; BSR set to: 5
  8652                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  8653   010F5E  C5AE  F501         	movff	efgtoa@g,___fleq@ff1
  8654   010F62  C5AF  F502         	movff	efgtoa@g+1,___fleq@ff1+1
  8655   010F66  C5B0  F503         	movff	efgtoa@g+2,___fleq@ff1+2
  8656   010F6A  C5B1  F504         	movff	efgtoa@g+3,___fleq@ff1+3
  8657   010F6E  0E00               	movlw	0
  8658   010F70  6E05               	movwf	___fleq@ff2^(0+1280),c
  8659   010F72  0E00               	movlw	0
  8660   010F74  6E06               	movwf	(___fleq@ff2+1)^(0+1280),c
  8661   010F76  0E00               	movlw	0
  8662   010F78  6E07               	movwf	(___fleq@ff2+2)^(0+1280),c
  8663   010F7A  0E00               	movlw	0
  8664   010F7C  6E08               	movwf	(___fleq@ff2+3)^(0+1280),c
  8665   010F7E  EC04  F0B4         	call	___fleq	;wreg free
  8666   010F82  B0D8               	btfsc	status,0,c
  8667   010F84  EFC6  F087         	goto	u6751
  8668   010F88  EFC8  F087         	goto	u6750
  8669   010F8C                     u6751:
  8670   010F8C  EFA7  F088         	goto	l2307
  8671   010F90                     u6750:
  8672   010F90  EFD5  F087         	goto	l8861
  8673   010F94                     l2309:
  8674                           
  8675                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  8676   010F94  C59D  F5B2         	movff	efgtoa@ou,efgtoa@u
  8677   010F98  C59E  F5B3         	movff	efgtoa@ou+1,efgtoa@u+1
  8678   010F9C  C59F  F5B4         	movff	efgtoa@ou+2,efgtoa@u+2
  8679   010FA0  C5A0  F5B5         	movff	efgtoa@ou+3,efgtoa@u+3
  8680   010FA4                     
  8681                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 662:    ++e;
  8682   010FA4  0105               	movlb	5	; () banked
  8683   010FA6  4B99               	infsnz	efgtoa@e& (0+255),f,b
  8684   010FA8  2B9A               	incf	(efgtoa@e+1)& (0+255),f,b
  8685   010FAA                     l8861:
  8686                           
  8687                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  8688   010FAA  C5B2  F505         	movff	efgtoa@u,___flmul@b
  8689   010FAE  C5B3  F506         	movff	efgtoa@u+1,___flmul@b+1
  8690   010FB2  C5B4  F507         	movff	efgtoa@u+2,___flmul@b+2
  8691   010FB6  C5B5  F508         	movff	efgtoa@u+3,___flmul@b+3
  8692   010FBA  0E00               	movlw	0
  8693   010FBC  6E09               	movwf	___flmul@a^(0+1280),c
  8694   010FBE  0E00               	movlw	0
  8695   010FC0  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
  8696   010FC2  0E20               	movlw	32
  8697   010FC4  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
  8698   010FC6  0E41               	movlw	65
  8699   010FC8  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
  8700   010FCA  ECB7  F09F         	call	___flmul	;wreg free
  8701   010FCE  C505  F59D         	movff	?___flmul,efgtoa@ou
  8702   010FD2  C506  F59E         	movff	?___flmul+1,efgtoa@ou+1
  8703   010FD6  C507  F59F         	movff	?___flmul+2,efgtoa@ou+2
  8704   010FDA  C508  F5A0         	movff	?___flmul+3,efgtoa@ou+3
  8705   010FDE  0105               	movlb	5	; () banked
  8706   010FE0  519D               	movf	efgtoa@ou& (0+255),w,b
  8707   010FE2  5DAE               	subwf	efgtoa@g& (0+255),w,b
  8708   010FE4  6E01               	movwf	labs@a^(0+1280),c
  8709   010FE6  519E               	movf	(efgtoa@ou+1)& (0+255),w,b
  8710   010FE8  59AF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8711   010FEA  6E02               	movwf	(labs@a+1)^(0+1280),c
  8712   010FEC  519F               	movf	(efgtoa@ou+2)& (0+255),w,b
  8713   010FEE  59B0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8714   010FF0  6E03               	movwf	(labs@a+2)^(0+1280),c
  8715   010FF2  51A0               	movf	(efgtoa@ou+3)& (0+255),w,b
  8716   010FF4  59B1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8717   010FF6  6E04               	movwf	(labs@a+3)^(0+1280),c
  8718   010FF8  EC21  F0B6         	call	_labs	;wreg free
  8719   010FFC  BE04               	btfsc	(?_labs+3)^(0+1280),7,c
  8720   010FFE  EF0C  F088         	goto	u6761
  8721   011002  5004               	movf	(?_labs+3)^(0+1280),w,c
  8722   011004  1003               	iorwf	(?_labs+2)^(0+1280),w,c
  8723   011006  1002               	iorwf	(?_labs+1)^(0+1280),w,c
  8724   011008  E109               	bnz	u6760
  8725   01100A  0E02               	movlw	2
  8726   01100C  5C01               	subwf	?_labs^(0+1280),w,c
  8727   01100E  A0D8               	btfss	status,0,c
  8728   011010  EF0C  F088         	goto	u6761
  8729   011014  EF0E  F088         	goto	u6760
  8730   011018                     u6761:
  8731   011018  EFCA  F087         	goto	l2309
  8732   01101C                     u6760:
  8733   01101C  C59D  F51E         	movff	efgtoa@ou,___flge@ff1
  8734   011020  C59E  F51F         	movff	efgtoa@ou+1,___flge@ff1+1
  8735   011024  C59F  F520         	movff	efgtoa@ou+2,___flge@ff1+2
  8736   011028  C5A0  F521         	movff	efgtoa@ou+3,___flge@ff1+3
  8737   01102C  C5AE  F522         	movff	efgtoa@g,___flge@ff2
  8738   011030  C5AF  F523         	movff	efgtoa@g+1,___flge@ff2+1
  8739   011034  C5B0  F524         	movff	efgtoa@g+2,___flge@ff2+2
  8740   011038  C5B1  F525         	movff	efgtoa@g+3,___flge@ff2+3
  8741   01103C  EC3F  F0B1         	call	___flge	;wreg free
  8742   011040  A0D8               	btfss	status,0,c
  8743   011042  EF25  F088         	goto	u6771
  8744   011046  EF27  F088         	goto	u6770
  8745   01104A                     u6771:
  8746   01104A  EFCA  F087         	goto	l2309
  8747   01104E                     u6770:
  8748   01104E                     
  8749                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  8750   01104E  0105               	movlb	5	; () banked
  8751   011050  51B2               	movf	efgtoa@u& (0+255),w,b
  8752   011052  5DAE               	subwf	efgtoa@g& (0+255),w,b
  8753   011054  6E01               	movwf	labs@a^(0+1280),c
  8754   011056  51B3               	movf	(efgtoa@u+1)& (0+255),w,b
  8755   011058  59AF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8756   01105A  6E02               	movwf	(labs@a+1)^(0+1280),c
  8757   01105C  51B4               	movf	(efgtoa@u+2)& (0+255),w,b
  8758   01105E  59B0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8759   011060  6E03               	movwf	(labs@a+2)^(0+1280),c
  8760   011062  51B5               	movf	(efgtoa@u+3)& (0+255),w,b
  8761   011064  59B1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8762   011066  6E04               	movwf	(labs@a+3)^(0+1280),c
  8763   011068  EC21  F0B6         	call	_labs	;wreg free
  8764   01106C  BE04               	btfsc	(?_labs+3)^(0+1280),7,c
  8765   01106E  EF46  F088         	goto	u6780
  8766   011072  5004               	movf	(?_labs+3)^(0+1280),w,c
  8767   011074  1003               	iorwf	(?_labs+2)^(0+1280),w,c
  8768   011076  1002               	iorwf	(?_labs+1)^(0+1280),w,c
  8769   011078  E107               	bnz	u6781
  8770   01107A  0E02               	movlw	2
  8771   01107C  5C01               	subwf	?_labs^(0+1280),w,c
  8772   01107E  B0D8               	btfsc	status,0,c
  8773   011080  EF44  F088         	goto	u6781
  8774   011084  EF46  F088         	goto	u6780
  8775   011088                     u6781:
  8776   011088  EF8E  F088         	goto	l8879
  8777   01108C                     u6780:
  8778   01108C                     l8869:
  8779                           
  8780                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 665:    g = u;
  8781   01108C  C5B2  F5AE         	movff	efgtoa@u,efgtoa@g
  8782   011090  C5B3  F5AF         	movff	efgtoa@u+1,efgtoa@g+1
  8783   011094  C5B4  F5B0         	movff	efgtoa@u+2,efgtoa@g+2
  8784   011098  C5B5  F5B1         	movff	efgtoa@u+3,efgtoa@g+3
  8785                           
  8786                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 666:   }
  8787   01109C  EFA7  F088         	goto	l2307
  8788   0110A0                     l8871:
  8789                           
  8790                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  8791   0110A0  C5B2  F553         	movff	efgtoa@u,___fldiv@b
  8792   0110A4  C5B3  F554         	movff	efgtoa@u+1,___fldiv@b+1
  8793   0110A8  C5B4  F555         	movff	efgtoa@u+2,___fldiv@b+2
  8794   0110AC  C5B5  F556         	movff	efgtoa@u+3,___fldiv@b+3
  8795   0110B0  0E00               	movlw	0
  8796   0110B2  6E57               	movwf	___fldiv@a^(0+1280),c
  8797   0110B4  0E00               	movlw	0
  8798   0110B6  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
  8799   0110B8  0E20               	movlw	32
  8800   0110BA  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
  8801   0110BC  0E41               	movlw	65
  8802   0110BE  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
  8803   0110C0  EC9E  F0A5         	call	___fldiv	;wreg free
  8804   0110C4  C553  F5B2         	movff	?___fldiv,efgtoa@u
  8805   0110C8  C554  F5B3         	movff	?___fldiv+1,efgtoa@u+1
  8806   0110CC  C555  F5B4         	movff	?___fldiv+2,efgtoa@u+2
  8807   0110D0  C556  F5B5         	movff	?___fldiv+3,efgtoa@u+3
  8808   0110D4                     
  8809                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 670:     --e;
  8810   0110D4  0105               	movlb	5	; () banked
  8811   0110D6  0799               	decf	efgtoa@e& (0+255),f,b
  8812   0110D8  A0D8               	btfss	status,0,c
  8813   0110DA  079A               	decf	(efgtoa@e+1)& (0+255),f,b
  8814   0110DC                     
  8815                           ; BSR set to: 5
  8816                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  8817   0110DC  51B2               	movf	efgtoa@u& (0+255),w,b
  8818   0110DE  5DAE               	subwf	efgtoa@g& (0+255),w,b
  8819   0110E0  6E01               	movwf	labs@a^(0+1280),c
  8820   0110E2  51B3               	movf	(efgtoa@u+1)& (0+255),w,b
  8821   0110E4  59AF               	subwfb	(efgtoa@g+1)& (0+255),w,b
  8822   0110E6  6E02               	movwf	(labs@a+1)^(0+1280),c
  8823   0110E8  51B4               	movf	(efgtoa@u+2)& (0+255),w,b
  8824   0110EA  59B0               	subwfb	(efgtoa@g+2)& (0+255),w,b
  8825   0110EC  6E03               	movwf	(labs@a+2)^(0+1280),c
  8826   0110EE  51B5               	movf	(efgtoa@u+3)& (0+255),w,b
  8827   0110F0  59B1               	subwfb	(efgtoa@g+3)& (0+255),w,b
  8828   0110F2  6E04               	movwf	(labs@a+3)^(0+1280),c
  8829   0110F4  EC21  F0B6         	call	_labs	;wreg free
  8830   0110F8  BE04               	btfsc	(?_labs+3)^(0+1280),7,c
  8831   0110FA  EF8C  F088         	goto	u6790
  8832   0110FE  5004               	movf	(?_labs+3)^(0+1280),w,c
  8833   011100  1003               	iorwf	(?_labs+2)^(0+1280),w,c
  8834   011102  1002               	iorwf	(?_labs+1)^(0+1280),w,c
  8835   011104  E107               	bnz	u6791
  8836   011106  0E02               	movlw	2
  8837   011108  5C01               	subwf	?_labs^(0+1280),w,c
  8838   01110A  B0D8               	btfsc	status,0,c
  8839   01110C  EF8A  F088         	goto	u6791
  8840   011110  EF8C  F088         	goto	u6790
  8841   011114                     u6791:
  8842   011114  EF8E  F088         	goto	l8879
  8843   011118                     u6790:
  8844   011118  EF46  F088         	goto	l8869
  8845   01111C                     l8879:
  8846                           
  8847                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  8848   01111C  C5AE  F51E         	movff	efgtoa@g,___flge@ff1
  8849   011120  C5AF  F51F         	movff	efgtoa@g+1,___flge@ff1+1
  8850   011124  C5B0  F520         	movff	efgtoa@g+2,___flge@ff1+2
  8851   011128  C5B1  F521         	movff	efgtoa@g+3,___flge@ff1+3
  8852   01112C  C5B2  F522         	movff	efgtoa@u,___flge@ff2
  8853   011130  C5B3  F523         	movff	efgtoa@u+1,___flge@ff2+1
  8854   011134  C5B4  F524         	movff	efgtoa@u+2,___flge@ff2+2
  8855   011138  C5B5  F525         	movff	efgtoa@u+3,___flge@ff2+3
  8856   01113C  EC3F  F0B1         	call	___flge	;wreg free
  8857   011140  A0D8               	btfss	status,0,c
  8858   011142  EFA5  F088         	goto	u6801
  8859   011146  EFA7  F088         	goto	u6800
  8860   01114A                     u6801:
  8861   01114A  EF50  F088         	goto	l8871
  8862   01114E                     u6800:
  8863   01114E                     l2307:
  8864                           
  8865                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  8866   01114E  C587  F593         	movff	efgtoa@c,efgtoa@mode
  8867                           
  8868                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  8869   011152  C593  F594         	movff	efgtoa@mode,efgtoa@nmode
  8870   011156                     
  8871                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  8872   011156  0106               	movlb	6	; () banked
  8873   011158  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  8874   01115A  EFB1  F088         	goto	u6811
  8875   01115E  EFB3  F088         	goto	u6810
  8876   011162                     u6811:
  8877   011162  EFB9  F088         	goto	l8885
  8878   011166                     u6810:
  8879   011166                     
  8880                           ; BSR set to: 6
  8881   011166  C6F7  F58C         	movff	_prec,efgtoa@p
  8882   01116A  C6F8  F58D         	movff	_prec+1,efgtoa@p+1
  8883   01116E  EFBE  F088         	goto	l8887
  8884   011172                     l8885:
  8885                           
  8886                           ; BSR set to: 6
  8887   011172  0E00               	movlw	0
  8888   011174  0105               	movlb	5	; () banked
  8889   011176  6F8D               	movwf	(efgtoa@p+1)& (0+255),b
  8890   011178  0E06               	movlw	6
  8891   01117A  6F8C               	movwf	efgtoa@p& (0+255),b
  8892   01117C                     l8887:
  8893                           
  8894                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 711:     m = p;
  8895   01117C  C58C  F597         	movff	efgtoa@p,efgtoa@m
  8896   011180  C58D  F598         	movff	efgtoa@p+1,efgtoa@m+1
  8897   011184                     
  8898                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 716:         ++m;
  8899   011184  0105               	movlb	5	; () banked
  8900   011186  4B97               	infsnz	efgtoa@m& (0+255),f,b
  8901   011188  2B98               	incf	(efgtoa@m+1)& (0+255),f,b
  8902   01118A                     
  8903                           ; BSR set to: 5
  8904                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  8905   01118A  0E66               	movlw	102
  8906   01118C  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  8907   01118E  A4D8               	btfss	status,2,c
  8908   011190  EFCC  F088         	goto	u6821
  8909   011194  EFCE  F088         	goto	u6820
  8910   011198                     u6821:
  8911   011198  EFEE  F088         	goto	l8901
  8912   01119C                     u6820:
  8913   01119C                     
  8914                           ; BSR set to: 5
  8915                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  8916   01119C  BF9A               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8917   01119E  EFD5  F088         	goto	u6830
  8918   0111A2  EFD3  F088         	goto	u6831
  8919   0111A6                     u6831:
  8920   0111A6  EFE1  F088         	goto	l8897
  8921   0111AA                     u6830:
  8922   0111AA                     
  8923                           ; BSR set to: 5
  8924                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  8925   0111AA  0E00               	movlw	0
  8926   0111AC  6FB2               	movwf	efgtoa@u& (0+255),b
  8927   0111AE  0E00               	movlw	0
  8928   0111B0  6FB3               	movwf	(efgtoa@u+1)& (0+255),b
  8929   0111B2  0E80               	movlw	128
  8930   0111B4  6FB4               	movwf	(efgtoa@u+2)& (0+255),b
  8931   0111B6  0E3F               	movlw	63
  8932   0111B8  6FB5               	movwf	(efgtoa@u+3)& (0+255),b
  8933                           
  8934                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  8935   0111BA  0E00               	movlw	0
  8936   0111BC  6F9A               	movwf	(efgtoa@e+1)& (0+255),b
  8937   0111BE  0E00               	movlw	0
  8938   0111C0  6F99               	movwf	efgtoa@e& (0+255),b
  8939   0111C2                     l8897:
  8940                           
  8941                           ; BSR set to: 5
  8942                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  8943   0111C2  0E67               	movlw	103
  8944   0111C4  1993               	xorwf	efgtoa@mode& (0+255),w,b
  8945   0111C6  B4D8               	btfsc	status,2,c
  8946   0111C8  EFE8  F088         	goto	u6841
  8947   0111CC  EFEA  F088         	goto	u6840
  8948   0111D0                     u6841:
  8949   0111D0  EFEE  F088         	goto	l8901
  8950   0111D4                     u6840:
  8951   0111D4                     
  8952                           ; BSR set to: 5
  8953                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  8954   0111D4  5199               	movf	efgtoa@e& (0+255),w,b
  8955   0111D6  2797               	addwf	efgtoa@m& (0+255),f,b
  8956   0111D8  519A               	movf	(efgtoa@e+1)& (0+255),w,b
  8957   0111DA  2398               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8958   0111DC                     l8901:
  8959                           
  8960                           ; BSR set to: 5
  8961                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  8962   0111DC  0E00               	movlw	0
  8963   0111DE  6FA2               	movwf	(efgtoa@i+1)& (0+255),b
  8964   0111E0  0E00               	movlw	0
  8965   0111E2  6FA1               	movwf	efgtoa@i& (0+255),b
  8966   0111E4                     
  8967                           ; BSR set to: 5
  8968                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  8969   0111E4  C5AE  F5A3         	movff	efgtoa@g,efgtoa@h
  8970   0111E8  C5AF  F5A4         	movff	efgtoa@g+1,efgtoa@h+1
  8971   0111EC  C5B0  F5A5         	movff	efgtoa@g+2,efgtoa@h+2
  8972   0111F0  C5B1  F5A6         	movff	efgtoa@g+3,efgtoa@h+3
  8973   0111F4                     
  8974                           ; BSR set to: 5
  8975                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  8976   0111F4  C5B2  F59D         	movff	efgtoa@u,efgtoa@ou
  8977   0111F8  C5B3  F59E         	movff	efgtoa@u+1,efgtoa@ou+1
  8978   0111FC  C5B4  F59F         	movff	efgtoa@u+2,efgtoa@ou+2
  8979   011200  C5B5  F5A0         	movff	efgtoa@u+3,efgtoa@ou+3
  8980                           
  8981                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  8982   011204  EF7F  F089         	goto	l8915
  8983   011208                     l8907:
  8984                           
  8985                           ; BSR set to: 5
  8986                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  8987   011208  C5A3  F553         	movff	efgtoa@h,___fldiv@b
  8988   01120C  C5A4  F554         	movff	efgtoa@h+1,___fldiv@b+1
  8989   011210  C5A5  F555         	movff	efgtoa@h+2,___fldiv@b+2
  8990   011214  C5A6  F556         	movff	efgtoa@h+3,___fldiv@b+3
  8991   011218  C5B2  F557         	movff	efgtoa@u,___fldiv@a
  8992   01121C  C5B3  F558         	movff	efgtoa@u+1,___fldiv@a+1
  8993   011220  C5B4  F559         	movff	efgtoa@u+2,___fldiv@a+2
  8994   011224  C5B5  F55A         	movff	efgtoa@u+3,___fldiv@a+3
  8995   011228  EC9E  F0A5         	call	___fldiv	;wreg free
  8996   01122C  C553  F56D         	movff	?___fldiv,floorf@x
  8997   011230  C554  F56E         	movff	?___fldiv+1,floorf@x+1
  8998   011234  C555  F56F         	movff	?___fldiv+2,floorf@x+2
  8999   011238  C556  F570         	movff	?___fldiv+3,floorf@x+3
  9000   01123C  ECDA  F0AA         	call	_floorf	;wreg free
  9001   011240  C56D  F5A7         	movff	?_floorf,efgtoa@l
  9002   011244  C56E  F5A8         	movff	?_floorf+1,efgtoa@l+1
  9003   011248  C56F  F5A9         	movff	?_floorf+2,efgtoa@l+2
  9004   01124C  C570  F5AA         	movff	?_floorf+3,efgtoa@l+3
  9005                           
  9006                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  9007   011250  C5A7  F52E         	movff	efgtoa@l,___fltol@f1
  9008   011254  C5A8  F52F         	movff	efgtoa@l+1,___fltol@f1+1
  9009   011258  C5A9  F530         	movff	efgtoa@l+2,___fltol@f1+2
  9010   01125C  C5AA  F531         	movff	efgtoa@l+3,___fltol@f1+3
  9011   011260  ECBC  F0B0         	call	___fltol	;wreg free
  9012   011264  C52E  F595         	movff	?___fltol,efgtoa@d
  9013   011268  C52F  F596         	movff	?___fltol+1,efgtoa@d+1
  9014   01126C                     
  9015                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  9016   01126C  C5A3  F56D         	movff	efgtoa@h,___flsub@b
  9017   011270  C5A4  F56E         	movff	efgtoa@h+1,___flsub@b+1
  9018   011274  C5A5  F56F         	movff	efgtoa@h+2,___flsub@b+2
  9019   011278  C5A6  F570         	movff	efgtoa@h+3,___flsub@b+3
  9020   01127C  C5A7  F509         	movff	efgtoa@l,___flmul@a
  9021   011280  C5A8  F50A         	movff	efgtoa@l+1,___flmul@a+1
  9022   011284  C5A9  F50B         	movff	efgtoa@l+2,___flmul@a+2
  9023   011288  C5AA  F50C         	movff	efgtoa@l+3,___flmul@a+3
  9024   01128C  C5B2  F505         	movff	efgtoa@u,___flmul@b
  9025   011290  C5B3  F506         	movff	efgtoa@u+1,___flmul@b+1
  9026   011294  C5B4  F507         	movff	efgtoa@u+2,___flmul@b+2
  9027   011298  C5B5  F508         	movff	efgtoa@u+3,___flmul@b+3
  9028   01129C  ECB7  F09F         	call	___flmul	;wreg free
  9029   0112A0  C505  F571         	movff	?___flmul,___flsub@a
  9030   0112A4  C506  F572         	movff	?___flmul+1,___flsub@a+1
  9031   0112A8  C507  F573         	movff	?___flmul+2,___flsub@a+2
  9032   0112AC  C508  F574         	movff	?___flmul+3,___flsub@a+3
  9033   0112B0  ECED  F0B6         	call	___flsub	;wreg free
  9034   0112B4  C56D  F5A3         	movff	?___flsub,efgtoa@h
  9035   0112B8  C56E  F5A4         	movff	?___flsub+1,efgtoa@h+1
  9036   0112BC  C56F  F5A5         	movff	?___flsub+2,efgtoa@h+2
  9037   0112C0  C570  F5A6         	movff	?___flsub+3,efgtoa@h+3
  9038   0112C4                     
  9039                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  9040   0112C4  C5B2  F553         	movff	efgtoa@u,___fldiv@b
  9041   0112C8  C5B3  F554         	movff	efgtoa@u+1,___fldiv@b+1
  9042   0112CC  C5B4  F555         	movff	efgtoa@u+2,___fldiv@b+2
  9043   0112D0  C5B5  F556         	movff	efgtoa@u+3,___fldiv@b+3
  9044   0112D4  0E00               	movlw	0
  9045   0112D6  6E57               	movwf	___fldiv@a^(0+1280),c
  9046   0112D8  0E00               	movlw	0
  9047   0112DA  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
  9048   0112DC  0E20               	movlw	32
  9049   0112DE  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
  9050   0112E0  0E41               	movlw	65
  9051   0112E2  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
  9052   0112E4  EC9E  F0A5         	call	___fldiv	;wreg free
  9053   0112E8  C553  F5B2         	movff	?___fldiv,efgtoa@u
  9054   0112EC  C554  F5B3         	movff	?___fldiv+1,efgtoa@u+1
  9055   0112F0  C555  F5B4         	movff	?___fldiv+2,efgtoa@u+2
  9056   0112F4  C556  F5B5         	movff	?___fldiv+3,efgtoa@u+3
  9057   0112F8                     
  9058                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 741:         ++i;
  9059   0112F8  0105               	movlb	5	; () banked
  9060   0112FA  4BA1               	infsnz	efgtoa@i& (0+255),f,b
  9061   0112FC  2BA2               	incf	(efgtoa@i+1)& (0+255),f,b
  9062   0112FE                     l8915:
  9063                           
  9064                           ; BSR set to: 5
  9065                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  9066   0112FE  5197               	movf	efgtoa@m& (0+255),w,b
  9067   011300  5DA1               	subwf	efgtoa@i& (0+255),w,b
  9068   011302  51A2               	movf	(efgtoa@i+1)& (0+255),w,b
  9069   011304  0A80               	xorlw	128
  9070   011306  6F88               	movwf	??_efgtoa& (0+255),b
  9071   011308  5198               	movf	(efgtoa@m+1)& (0+255),w,b
  9072   01130A  0A80               	xorlw	128
  9073   01130C  5988               	subwfb	??_efgtoa& (0+255),w,b
  9074   01130E  A0D8               	btfss	status,0,c
  9075   011310  EF8C  F089         	goto	u6851
  9076   011314  EF8E  F089         	goto	u6850
  9077   011318                     u6851:
  9078   011318  EF04  F089         	goto	l8907
  9079   01131C                     u6850:
  9080   01131C                     
  9081                           ; BSR set to: 5
  9082                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  9083   01131C  C5B2  F505         	movff	efgtoa@u,___flmul@b
  9084   011320  C5B3  F506         	movff	efgtoa@u+1,___flmul@b+1
  9085   011324  C5B4  F507         	movff	efgtoa@u+2,___flmul@b+2
  9086   011328  C5B5  F508         	movff	efgtoa@u+3,___flmul@b+3
  9087   01132C  0E00               	movlw	0
  9088   01132E  6E09               	movwf	___flmul@a^(0+1280),c
  9089   011330  0E00               	movlw	0
  9090   011332  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
  9091   011334  0EA0               	movlw	160
  9092   011336  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
  9093   011338  0E40               	movlw	64
  9094   01133A  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
  9095   01133C  ECB7  F09F         	call	___flmul	;wreg free
  9096   011340  C505  F5A7         	movff	?___flmul,efgtoa@l
  9097   011344  C506  F5A8         	movff	?___flmul+1,efgtoa@l+1
  9098   011348  C507  F5A9         	movff	?___flmul+2,efgtoa@l+2
  9099   01134C  C508  F5AA         	movff	?___flmul+3,efgtoa@l+3
  9100   011350                     
  9101                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  9102   011350  C5A3  F51E         	movff	efgtoa@h,___flge@ff1
  9103   011354  C5A4  F51F         	movff	efgtoa@h+1,___flge@ff1+1
  9104   011358  C5A5  F520         	movff	efgtoa@h+2,___flge@ff1+2
  9105   01135C  C5A6  F521         	movff	efgtoa@h+3,___flge@ff1+3
  9106   011360  C5A7  F522         	movff	efgtoa@l,___flge@ff2
  9107   011364  C5A8  F523         	movff	efgtoa@l+1,___flge@ff2+1
  9108   011368  C5A9  F524         	movff	efgtoa@l+2,___flge@ff2+2
  9109   01136C  C5AA  F525         	movff	efgtoa@l+3,___flge@ff2+3
  9110   011370  EC3F  F0B1         	call	___flge	;wreg free
  9111   011374  B0D8               	btfsc	status,0,c
  9112   011376  EFBF  F089         	goto	u6861
  9113   01137A  EFC1  F089         	goto	u6860
  9114   01137E                     u6861:
  9115   01137E  EFCC  F089         	goto	l8923
  9116   011382                     u6860:
  9117   011382                     
  9118                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  9119   011382  0E00               	movlw	0
  9120   011384  0105               	movlb	5	; () banked
  9121   011386  6FA7               	movwf	efgtoa@l& (0+255),b
  9122   011388  0E00               	movlw	0
  9123   01138A  6FA8               	movwf	(efgtoa@l+1)& (0+255),b
  9124   01138C  0E00               	movlw	0
  9125   01138E  6FA9               	movwf	(efgtoa@l+2)& (0+255),b
  9126   011390  0E00               	movlw	0
  9127   011392  6FAA               	movwf	(efgtoa@l+3)& (0+255),b
  9128                           
  9129                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 748:     } else {
  9130   011394  EFF5  F089         	goto	l8929
  9131   011398                     l8923:
  9132                           
  9133                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  9134   011398  C5A3  F501         	movff	efgtoa@h,___fleq@ff1
  9135   01139C  C5A4  F502         	movff	efgtoa@h+1,___fleq@ff1+1
  9136   0113A0  C5A5  F503         	movff	efgtoa@h+2,___fleq@ff1+2
  9137   0113A4  C5A6  F504         	movff	efgtoa@h+3,___fleq@ff1+3
  9138   0113A8  C5A7  F505         	movff	efgtoa@l,___fleq@ff2
  9139   0113AC  C5A8  F506         	movff	efgtoa@l+1,___fleq@ff2+1
  9140   0113B0  C5A9  F507         	movff	efgtoa@l+2,___fleq@ff2+2
  9141   0113B4  C5AA  F508         	movff	efgtoa@l+3,___fleq@ff2+3
  9142   0113B8  EC04  F0B4         	call	___fleq	;wreg free
  9143   0113BC  A0D8               	btfss	status,0,c
  9144   0113BE  EFE3  F089         	goto	u6871
  9145   0113C2  EFE5  F089         	goto	u6870
  9146   0113C6                     u6871:
  9147   0113C6  EFF5  F089         	goto	l8929
  9148   0113CA                     u6870:
  9149   0113CA  0105               	movlb	5	; () banked
  9150   0113CC  B195               	btfsc	efgtoa@d& (0+255),0,b
  9151   0113CE  EFEB  F089         	goto	u6881
  9152   0113D2  EFED  F089         	goto	u6880
  9153   0113D6                     u6881:
  9154   0113D6  EFF5  F089         	goto	l8929
  9155   0113DA                     u6880:
  9156   0113DA                     
  9157                           ; BSR set to: 5
  9158                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  9159   0113DA  0E00               	movlw	0
  9160   0113DC  6FA7               	movwf	efgtoa@l& (0+255),b
  9161   0113DE  0E00               	movlw	0
  9162   0113E0  6FA8               	movwf	(efgtoa@l+1)& (0+255),b
  9163   0113E2  0E00               	movlw	0
  9164   0113E4  6FA9               	movwf	(efgtoa@l+2)& (0+255),b
  9165   0113E6  0E00               	movlw	0
  9166   0113E8  6FAA               	movwf	(efgtoa@l+3)& (0+255),b
  9167   0113EA                     l8929:
  9168                           
  9169                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  9170   0113EA  C5AE  F51E         	movff	efgtoa@g,___fladd@b
  9171   0113EE  C5AF  F51F         	movff	efgtoa@g+1,___fladd@b+1
  9172   0113F2  C5B0  F520         	movff	efgtoa@g+2,___fladd@b+2
  9173   0113F6  C5B1  F521         	movff	efgtoa@g+3,___fladd@b+3
  9174   0113FA  C5A7  F522         	movff	efgtoa@l,___fladd@a
  9175   0113FE  C5A8  F523         	movff	efgtoa@l+1,___fladd@a+1
  9176   011402  C5A9  F524         	movff	efgtoa@l+2,___fladd@a+2
  9177   011406  C5AA  F525         	movff	efgtoa@l+3,___fladd@a+3
  9178   01140A  EC1B  F09B         	call	___fladd	;wreg free
  9179   01140E  C51E  F5A3         	movff	?___fladd,efgtoa@h
  9180   011412  C51F  F5A4         	movff	?___fladd+1,efgtoa@h+1
  9181   011416  C520  F5A5         	movff	?___fladd+2,efgtoa@h+2
  9182   01141A  C521  F5A6         	movff	?___fladd+3,efgtoa@h+3
  9183   01141E                     
  9184                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  9185   01141E  C5A3  F51E         	movff	efgtoa@h,___flge@ff1
  9186   011422  C5A4  F51F         	movff	efgtoa@h+1,___flge@ff1+1
  9187   011426  C5A5  F520         	movff	efgtoa@h+2,___flge@ff1+2
  9188   01142A  C5A6  F521         	movff	efgtoa@h+3,___flge@ff1+3
  9189   01142E  0E00               	movlw	0
  9190   011430  6E09               	movwf	___flmul@a^(0+1280),c
  9191   011432  0E00               	movlw	0
  9192   011434  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
  9193   011436  0E20               	movlw	32
  9194   011438  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
  9195   01143A  0E41               	movlw	65
  9196   01143C  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
  9197   01143E  C59D  F505         	movff	efgtoa@ou,___flmul@b
  9198   011442  C59E  F506         	movff	efgtoa@ou+1,___flmul@b+1
  9199   011446  C59F  F507         	movff	efgtoa@ou+2,___flmul@b+2
  9200   01144A  C5A0  F508         	movff	efgtoa@ou+3,___flmul@b+3
  9201   01144E  ECB7  F09F         	call	___flmul	;wreg free
  9202   011452  C505  F522         	movff	?___flmul,___flge@ff2
  9203   011456  C506  F523         	movff	?___flmul+1,___flge@ff2+1
  9204   01145A  C507  F524         	movff	?___flmul+2,___flge@ff2+2
  9205   01145E  C508  F525         	movff	?___flmul+3,___flge@ff2+3
  9206   011462  EC3F  F0B1         	call	___flge	;wreg free
  9207   011466  A0D8               	btfss	status,0,c
  9208   011468  EF38  F08A         	goto	u6891
  9209   01146C  EF3A  F08A         	goto	u6890
  9210   011470                     u6891:
  9211   011470  EF63  F08A         	goto	l8941
  9212   011474                     u6890:
  9213   011474                     
  9214                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 759:   e++;
  9215   011474  0105               	movlb	5	; () banked
  9216   011476  4B99               	infsnz	efgtoa@e& (0+255),f,b
  9217   011478  2B9A               	incf	(efgtoa@e+1)& (0+255),f,b
  9218   01147A                     
  9219                           ; BSR set to: 5
  9220                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  9221   01147A  C59D  F505         	movff	efgtoa@ou,___flmul@b
  9222   01147E  C59E  F506         	movff	efgtoa@ou+1,___flmul@b+1
  9223   011482  C59F  F507         	movff	efgtoa@ou+2,___flmul@b+2
  9224   011486  C5A0  F508         	movff	efgtoa@ou+3,___flmul@b+3
  9225   01148A  0E00               	movlw	0
  9226   01148C  6E09               	movwf	___flmul@a^(0+1280),c
  9227   01148E  0E00               	movlw	0
  9228   011490  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
  9229   011492  0E20               	movlw	32
  9230   011494  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
  9231   011496  0E41               	movlw	65
  9232   011498  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
  9233   01149A  ECB7  F09F         	call	___flmul	;wreg free
  9234   01149E  C505  F59D         	movff	?___flmul,efgtoa@ou
  9235   0114A2  C506  F59E         	movff	?___flmul+1,efgtoa@ou+1
  9236   0114A6  C507  F59F         	movff	?___flmul+2,efgtoa@ou+2
  9237   0114AA  C508  F5A0         	movff	?___flmul+3,efgtoa@ou+3
  9238   0114AE                     
  9239                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  9240   0114AE  0E66               	movlw	102
  9241   0114B0  0105               	movlb	5	; () banked
  9242   0114B2  1994               	xorwf	efgtoa@nmode& (0+255),w,b
  9243   0114B4  A4D8               	btfss	status,2,c
  9244   0114B6  EF5F  F08A         	goto	u6901
  9245   0114BA  EF61  F08A         	goto	u6900
  9246   0114BE                     u6901:
  9247   0114BE  EF63  F08A         	goto	l8941
  9248   0114C2                     u6900:
  9249   0114C2                     
  9250                           ; BSR set to: 5
  9251                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 764:    m++;
  9252   0114C2  4B97               	infsnz	efgtoa@m& (0+255),f,b
  9253   0114C4  2B98               	incf	(efgtoa@m+1)& (0+255),f,b
  9254   0114C6                     l8941:
  9255                           
  9256                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  9257   0114C6  C59D  F5B2         	movff	efgtoa@ou,efgtoa@u
  9258   0114CA  C59E  F5B3         	movff	efgtoa@ou+1,efgtoa@u+1
  9259   0114CE  C59F  F5B4         	movff	efgtoa@ou+2,efgtoa@u+2
  9260   0114D2  C5A0  F5B5         	movff	efgtoa@ou+3,efgtoa@u+3
  9261   0114D6                     
  9262                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  9263   0114D6  C599  F58A         	movff	efgtoa@e,efgtoa@ne
  9264   0114DA  C59A  F58B         	movff	efgtoa@e+1,efgtoa@ne+1
  9265   0114DE                     
  9266                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  9267   0114DE  0105               	movlb	5	; () banked
  9268   0114E0  6B92               	clrf	efgtoa@pp& (0+255),b
  9269   0114E2                     
  9270                           ; BSR set to: 5
  9271                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  9272   0114E2  0E00               	movlw	0
  9273   0114E4  6F8F               	movwf	(efgtoa@t+1)& (0+255),b
  9274   0114E6  0E00               	movlw	0
  9275   0114E8  6F8E               	movwf	efgtoa@t& (0+255),b
  9276   0114EA                     
  9277                           ; BSR set to: 5
  9278                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  9279   0114EA  0E00               	movlw	0
  9280   0114EC  6FA2               	movwf	(efgtoa@i+1)& (0+255),b
  9281   0114EE  0E00               	movlw	0
  9282   0114F0  6FA1               	movwf	efgtoa@i& (0+255),b
  9283                           
  9284                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9285   0114F2  EF60  F08B         	goto	l8991
  9286   0114F6                     l8951:
  9287                           
  9288                           ; BSR set to: 5
  9289                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  9290   0114F6  C5A3  F553         	movff	efgtoa@h,___fldiv@b
  9291   0114FA  C5A4  F554         	movff	efgtoa@h+1,___fldiv@b+1
  9292   0114FE  C5A5  F555         	movff	efgtoa@h+2,___fldiv@b+2
  9293   011502  C5A6  F556         	movff	efgtoa@h+3,___fldiv@b+3
  9294   011506  C5B2  F557         	movff	efgtoa@u,___fldiv@a
  9295   01150A  C5B3  F558         	movff	efgtoa@u+1,___fldiv@a+1
  9296   01150E  C5B4  F559         	movff	efgtoa@u+2,___fldiv@a+2
  9297   011512  C5B5  F55A         	movff	efgtoa@u+3,___fldiv@a+3
  9298   011516  EC9E  F0A5         	call	___fldiv	;wreg free
  9299   01151A  C553  F56D         	movff	?___fldiv,floorf@x
  9300   01151E  C554  F56E         	movff	?___fldiv+1,floorf@x+1
  9301   011522  C555  F56F         	movff	?___fldiv+2,floorf@x+2
  9302   011526  C556  F570         	movff	?___fldiv+3,floorf@x+3
  9303   01152A  ECDA  F0AA         	call	_floorf	;wreg free
  9304   01152E  C56D  F5A7         	movff	?_floorf,efgtoa@l
  9305   011532  C56E  F5A8         	movff	?_floorf+1,efgtoa@l+1
  9306   011536  C56F  F5A9         	movff	?_floorf+2,efgtoa@l+2
  9307   01153A  C570  F5AA         	movff	?_floorf+3,efgtoa@l+3
  9308                           
  9309                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  9310   01153E  C5A7  F52E         	movff	efgtoa@l,___fltol@f1
  9311   011542  C5A8  F52F         	movff	efgtoa@l+1,___fltol@f1+1
  9312   011546  C5A9  F530         	movff	efgtoa@l+2,___fltol@f1+2
  9313   01154A  C5AA  F531         	movff	efgtoa@l+3,___fltol@f1+3
  9314   01154E  ECBC  F0B0         	call	___fltol	;wreg free
  9315   011552  BE2F               	btfsc	(?___fltol+1)^(0+1280),7,c
  9316   011554  EFB7  F08A         	goto	u6910
  9317   011558  502F               	movf	(?___fltol+1)^(0+1280),w,c
  9318   01155A  E107               	bnz	u6911
  9319   01155C  0E0A               	movlw	10
  9320   01155E  5C2E               	subwf	?___fltol^(0+1280),w,c
  9321   011560  B0D8               	btfsc	status,0,c
  9322   011562  EFB5  F08A         	goto	u6911
  9323   011566  EFB7  F08A         	goto	u6910
  9324   01156A                     u6911:
  9325   01156A  EFC7  F08A         	goto	l8955
  9326   01156E                     u6910:
  9327   01156E  C5A7  F52E         	movff	efgtoa@l,___fltol@f1
  9328   011572  C5A8  F52F         	movff	efgtoa@l+1,___fltol@f1+1
  9329   011576  C5A9  F530         	movff	efgtoa@l+2,___fltol@f1+2
  9330   01157A  C5AA  F531         	movff	efgtoa@l+3,___fltol@f1+3
  9331   01157E  ECBC  F0B0         	call	___fltol	;wreg free
  9332   011582  C52E  F595         	movff	?___fltol,efgtoa@d
  9333   011586  C52F  F596         	movff	?___fltol+1,efgtoa@d+1
  9334   01158A  EFCC  F08A         	goto	l2337
  9335   01158E                     l8955:
  9336   01158E  0E00               	movlw	0
  9337   011590  0105               	movlb	5	; () banked
  9338   011592  6F96               	movwf	(efgtoa@d+1)& (0+255),b
  9339   011594  0E09               	movlw	9
  9340   011596  6F95               	movwf	efgtoa@d& (0+255),b
  9341   011598                     l2337:
  9342                           
  9343                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  9344   011598  0105               	movlb	5	; () banked
  9345   01159A  5192               	movf	efgtoa@pp& (0+255),w,b
  9346   01159C  A4D8               	btfss	status,2,c
  9347   01159E  EFD3  F08A         	goto	u6921
  9348   0115A2  EFD5  F08A         	goto	u6920
  9349   0115A6                     u6921:
  9350   0115A6  EFFD  F08A         	goto	l8975
  9351   0115AA                     u6920:
  9352   0115AA                     
  9353                           ; BSR set to: 5
  9354   0115AA  BF8B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9355   0115AC  EFDC  F08A         	goto	u6930
  9356   0115B0  EFDA  F08A         	goto	u6931
  9357   0115B4                     u6931:
  9358   0115B4  EFFD  F08A         	goto	l8975
  9359   0115B8                     u6930:
  9360   0115B8                     
  9361                           ; BSR set to: 5
  9362                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  9363   0115B8  0E00               	movlw	low _dbuf
  9364   0115BA  25AC               	addwf	efgtoa@n& (0+255),w,b
  9365   0115BC  6ED9               	movwf	fsr2l,c
  9366   0115BE  0E08               	movlw	high _dbuf
  9367   0115C0  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9368   0115C2  6EDA               	movwf	fsr2h,c
  9369   0115C4  0E2E               	movlw	46
  9370   0115C6  6EDF               	movwf	indf2,c
  9371   0115C8                     
  9372                           ; BSR set to: 5
  9373   0115C8  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  9374   0115CA  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  9375   0115CC                     
  9376                           ; BSR set to: 5
  9377                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  9378   0115CC  079B               	decf	efgtoa@w& (0+255),f,b
  9379   0115CE  A0D8               	btfss	status,0,c
  9380   0115D0  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  9381   0115D2                     
  9382                           ; BSR set to: 5
  9383                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  9384   0115D2  0E01               	movlw	1
  9385   0115D4  6F92               	movwf	efgtoa@pp& (0+255),b
  9386   0115D6  EFFD  F08A         	goto	l8975
  9387   0115DA                     l8967:
  9388                           
  9389                           ; BSR set to: 5
  9390                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  9391   0115DA  0E00               	movlw	low _dbuf
  9392   0115DC  25AC               	addwf	efgtoa@n& (0+255),w,b
  9393   0115DE  6ED9               	movwf	fsr2l,c
  9394   0115E0  0E08               	movlw	high _dbuf
  9395   0115E2  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9396   0115E4  6EDA               	movwf	fsr2h,c
  9397   0115E6  0E30               	movlw	48
  9398   0115E8  6EDF               	movwf	indf2,c
  9399   0115EA                     
  9400                           ; BSR set to: 5
  9401   0115EA  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  9402   0115EC  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  9403   0115EE                     
  9404                           ; BSR set to: 5
  9405                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  9406   0115EE  079B               	decf	efgtoa@w& (0+255),f,b
  9407   0115F0  A0D8               	btfss	status,0,c
  9408   0115F2  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  9409   0115F4                     
  9410                           ; BSR set to: 5
  9411                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  9412   0115F4  078E               	decf	efgtoa@t& (0+255),f,b
  9413   0115F6  A0D8               	btfss	status,0,c
  9414   0115F8  078F               	decf	(efgtoa@t+1)& (0+255),f,b
  9415   0115FA                     l8975:
  9416                           
  9417                           ; BSR set to: 5
  9418                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  9419   0115FA  518E               	movf	efgtoa@t& (0+255),w,b
  9420   0115FC  118F               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9421   0115FE  A4D8               	btfss	status,2,c
  9422   011600  EF04  F08B         	goto	u6941
  9423   011604  EF06  F08B         	goto	u6940
  9424   011608                     u6941:
  9425   011608  EFED  F08A         	goto	l8967
  9426   01160C                     u6940:
  9427   01160C                     
  9428                           ; BSR set to: 5
  9429                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  9430   01160C  0E00               	movlw	low _dbuf
  9431   01160E  25AC               	addwf	efgtoa@n& (0+255),w,b
  9432   011610  6ED9               	movwf	fsr2l,c
  9433   011612  0E08               	movlw	high _dbuf
  9434   011614  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9435   011616  6EDA               	movwf	fsr2h,c
  9436   011618  5195               	movf	efgtoa@d& (0+255),w,b
  9437   01161A  0F30               	addlw	48
  9438   01161C  6EDF               	movwf	indf2,c
  9439   01161E                     
  9440                           ; BSR set to: 5
  9441   01161E  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  9442   011620  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  9443   011622                     
  9444                           ; BSR set to: 5
  9445                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  9446   011622  079B               	decf	efgtoa@w& (0+255),f,b
  9447   011624  A0D8               	btfss	status,0,c
  9448   011626  079C               	decf	(efgtoa@w+1)& (0+255),f,b
  9449   011628                     
  9450                           ; BSR set to: 5
  9451                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  9452   011628  C5A3  F56D         	movff	efgtoa@h,___flsub@b
  9453   01162C  C5A4  F56E         	movff	efgtoa@h+1,___flsub@b+1
  9454   011630  C5A5  F56F         	movff	efgtoa@h+2,___flsub@b+2
  9455   011634  C5A6  F570         	movff	efgtoa@h+3,___flsub@b+3
  9456   011638  C5A7  F509         	movff	efgtoa@l,___flmul@a
  9457   01163C  C5A8  F50A         	movff	efgtoa@l+1,___flmul@a+1
  9458   011640  C5A9  F50B         	movff	efgtoa@l+2,___flmul@a+2
  9459   011644  C5AA  F50C         	movff	efgtoa@l+3,___flmul@a+3
  9460   011648  C5B2  F505         	movff	efgtoa@u,___flmul@b
  9461   01164C  C5B3  F506         	movff	efgtoa@u+1,___flmul@b+1
  9462   011650  C5B4  F507         	movff	efgtoa@u+2,___flmul@b+2
  9463   011654  C5B5  F508         	movff	efgtoa@u+3,___flmul@b+3
  9464   011658  ECB7  F09F         	call	___flmul	;wreg free
  9465   01165C  C505  F571         	movff	?___flmul,___flsub@a
  9466   011660  C506  F572         	movff	?___flmul+1,___flsub@a+1
  9467   011664  C507  F573         	movff	?___flmul+2,___flsub@a+2
  9468   011668  C508  F574         	movff	?___flmul+3,___flsub@a+3
  9469   01166C  ECED  F0B6         	call	___flsub	;wreg free
  9470   011670  C56D  F5A3         	movff	?___flsub,efgtoa@h
  9471   011674  C56E  F5A4         	movff	?___flsub+1,efgtoa@h+1
  9472   011678  C56F  F5A5         	movff	?___flsub+2,efgtoa@h+2
  9473   01167C  C570  F5A6         	movff	?___flsub+3,efgtoa@h+3
  9474   011680                     
  9475                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  9476   011680  C5B2  F553         	movff	efgtoa@u,___fldiv@b
  9477   011684  C5B3  F554         	movff	efgtoa@u+1,___fldiv@b+1
  9478   011688  C5B4  F555         	movff	efgtoa@u+2,___fldiv@b+2
  9479   01168C  C5B5  F556         	movff	efgtoa@u+3,___fldiv@b+3
  9480   011690  0E00               	movlw	0
  9481   011692  6E57               	movwf	___fldiv@a^(0+1280),c
  9482   011694  0E00               	movlw	0
  9483   011696  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
  9484   011698  0E20               	movlw	32
  9485   01169A  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
  9486   01169C  0E41               	movlw	65
  9487   01169E  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
  9488   0116A0  EC9E  F0A5         	call	___fldiv	;wreg free
  9489   0116A4  C553  F5B2         	movff	?___fldiv,efgtoa@u
  9490   0116A8  C554  F5B3         	movff	?___fldiv+1,efgtoa@u+1
  9491   0116AC  C555  F5B4         	movff	?___fldiv+2,efgtoa@u+2
  9492   0116B0  C556  F5B5         	movff	?___fldiv+3,efgtoa@u+3
  9493   0116B4                     
  9494                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  9495   0116B4  0105               	movlb	5	; () banked
  9496   0116B6  078A               	decf	efgtoa@ne& (0+255),f,b
  9497   0116B8  A0D8               	btfss	status,0,c
  9498   0116BA  078B               	decf	(efgtoa@ne+1)& (0+255),f,b
  9499   0116BC                     
  9500                           ; BSR set to: 5
  9501                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 809:         ++i;
  9502   0116BC  4BA1               	infsnz	efgtoa@i& (0+255),f,b
  9503   0116BE  2BA2               	incf	(efgtoa@i+1)& (0+255),f,b
  9504   0116C0                     l8991:
  9505                           
  9506                           ; BSR set to: 5
  9507                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9508   0116C0  5197               	movf	efgtoa@m& (0+255),w,b
  9509   0116C2  5DA1               	subwf	efgtoa@i& (0+255),w,b
  9510   0116C4  51A2               	movf	(efgtoa@i+1)& (0+255),w,b
  9511   0116C6  0A80               	xorlw	128
  9512   0116C8  6F88               	movwf	??_efgtoa& (0+255),b
  9513   0116CA  5198               	movf	(efgtoa@m+1)& (0+255),w,b
  9514   0116CC  0A80               	xorlw	128
  9515   0116CE  5988               	subwfb	??_efgtoa& (0+255),w,b
  9516   0116D0  B0D8               	btfsc	status,0,c
  9517   0116D2  EF6D  F08B         	goto	u6951
  9518   0116D6  EF6F  F08B         	goto	u6950
  9519   0116DA                     u6951:
  9520   0116DA  EF7D  F08B         	goto	l8995
  9521   0116DE                     u6950:
  9522   0116DE                     
  9523                           ; BSR set to: 5
  9524   0116DE  BFAD               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9525   0116E0  EF7B  F08B         	goto	u6961
  9526   0116E4  51AD               	movf	(efgtoa@n+1)& (0+255),w,b
  9527   0116E6  E109               	bnz	u6960
  9528   0116E8  0E4B               	movlw	75
  9529   0116EA  5DAC               	subwf	efgtoa@n& (0+255),w,b
  9530   0116EC  A0D8               	btfss	status,0,c
  9531   0116EE  EF7B  F08B         	goto	u6961
  9532   0116F2  EF7D  F08B         	goto	u6960
  9533   0116F6                     u6961:
  9534   0116F6  EF7B  F08A         	goto	l8951
  9535   0116FA                     u6960:
  9536   0116FA                     l8995:
  9537                           
  9538                           ; BSR set to: 5
  9539                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  9540   0116FA  0E00               	movlw	0
  9541   0116FC  6FA2               	movwf	(efgtoa@i+1)& (0+255),b
  9542   0116FE  0E4F               	movlw	79
  9543   011700  6FA1               	movwf	efgtoa@i& (0+255),b
  9544   011702                     
  9545                           ; BSR set to: 5
  9546                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  9547   011702  0E00               	movlw	low _dbuf
  9548   011704  25A1               	addwf	efgtoa@i& (0+255),w,b
  9549   011706  6ED9               	movwf	fsr2l,c
  9550   011708  0E08               	movlw	high _dbuf
  9551   01170A  21A2               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9552   01170C  6EDA               	movwf	fsr2h,c
  9553   01170E  6ADF               	clrf	indf2,c
  9554   011710                     
  9555                           ; BSR set to: 5
  9556                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  9557   011710  0E00               	movlw	low _dbuf
  9558   011712  6F88               	movwf	??_efgtoa& (0+255),b
  9559   011714  0E08               	movlw	high _dbuf
  9560   011716  6F89               	movwf	(??_efgtoa+1)& (0+255),b
  9561   011718  51AC               	movf	efgtoa@n& (0+255),w,b
  9562   01171A  5F88               	subwf	??_efgtoa& (0+255),f,b
  9563   01171C  51AD               	movf	(efgtoa@n+1)& (0+255),w,b
  9564   01171E  5B89               	subwfb	(??_efgtoa+1)& (0+255),f,b
  9565   011720  51A1               	movf	efgtoa@i& (0+255),w,b
  9566   011722  2588               	addwf	??_efgtoa& (0+255),w,b
  9567   011724  6E01               	movwf	memcpy@d1^(0+1280),c
  9568   011726  51A2               	movf	(efgtoa@i+1)& (0+255),w,b
  9569   011728  2189               	addwfc	(??_efgtoa+1)& (0+255),w,b
  9570   01172A  6E02               	movwf	(memcpy@d1+1)^(0+1280),c
  9571   01172C  0E00               	movlw	low _dbuf
  9572   01172E  6E03               	movwf	memcpy@s1^(0+1280),c
  9573   011730  0E08               	movlw	high _dbuf
  9574   011732  6E04               	movwf	(memcpy@s1+1)^(0+1280),c
  9575   011734  C5AC  F505         	movff	efgtoa@n,memcpy@n
  9576   011738  C5AD  F506         	movff	efgtoa@n+1,memcpy@n+1
  9577   01173C  EC9D  F0B6         	call	_memcpy	;wreg free
  9578   011740                     
  9579                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  9580   011740  0105               	movlb	5	; () banked
  9581   011742  51AC               	movf	efgtoa@n& (0+255),w,b
  9582   011744  5DA1               	subwf	efgtoa@i& (0+255),w,b
  9583   011746  6FAC               	movwf	efgtoa@n& (0+255),b
  9584   011748  51AD               	movf	(efgtoa@n+1)& (0+255),w,b
  9585   01174A  59A2               	subwfb	(efgtoa@i+1)& (0+255),w,b
  9586   01174C  6FAD               	movwf	(efgtoa@n+1)& (0+255),b
  9587   01174E                     
  9588                           ; BSR set to: 5
  9589                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  9590   01174E  51AB               	movf	efgtoa@sign& (0+255),w,b
  9591   011750  A4D8               	btfss	status,2,c
  9592   011752  EFAD  F08B         	goto	u6971
  9593   011756  EFB0  F08B         	goto	u6970
  9594   01175A                     u6971:
  9595   01175A  0E01               	movlw	1
  9596   01175C  EFB1  F08B         	goto	u6980
  9597   011760                     u6970:
  9598   011760  0E00               	movlw	0
  9599   011762                     u6980:
  9600   011762  6FA1               	movwf	efgtoa@i& (0+255),b
  9601   011764  6BA2               	clrf	(efgtoa@i+1)& (0+255),b
  9602   011766                     
  9603                           ; BSR set to: 5
  9604                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  9605   011766  51AB               	movf	efgtoa@sign& (0+255),w,b
  9606   011768  B4D8               	btfsc	status,2,c
  9607   01176A  EFB9  F08B         	goto	u6991
  9608   01176E  EFBB  F08B         	goto	u6990
  9609   011772                     u6991:
  9610   011772  EFC6  F08B         	goto	l9009
  9611   011776                     u6990:
  9612   011776                     
  9613                           ; BSR set to: 5
  9614                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  9615   011776  07AC               	decf	efgtoa@n& (0+255),f,b
  9616   011778  A0D8               	btfss	status,0,c
  9617   01177A  07AD               	decf	(efgtoa@n+1)& (0+255),f,b
  9618   01177C  0E00               	movlw	low _dbuf
  9619   01177E  25AC               	addwf	efgtoa@n& (0+255),w,b
  9620   011780  6ED9               	movwf	fsr2l,c
  9621   011782  0E08               	movlw	high _dbuf
  9622   011784  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9623   011786  6EDA               	movwf	fsr2h,c
  9624   011788  C5AB  F4DF         	movff	efgtoa@sign,indf2
  9625   01178C                     l9009:
  9626                           
  9627                           ; BSR set to: 5
  9628                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  9629   01178C  51A1               	movf	efgtoa@i& (0+255),w,b
  9630   01178E  5F9B               	subwf	efgtoa@w& (0+255),f,b
  9631   011790  51A2               	movf	(efgtoa@i+1)& (0+255),w,b
  9632   011792  5B9C               	subwfb	(efgtoa@w+1)& (0+255),f,b
  9633   011794                     
  9634                           ; BSR set to: 5
  9635                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  9636   011794  C581  F511         	movff	efgtoa@fp,pad@fp
  9637   011798  C582  F512         	movff	efgtoa@fp+1,pad@fp+1
  9638   01179C  0E00               	movlw	low _dbuf
  9639   01179E  25AC               	addwf	efgtoa@n& (0+255),w,b
  9640   0117A0  6E13               	movwf	pad@buf^(0+1280),c
  9641   0117A2  0E08               	movlw	high _dbuf
  9642   0117A4  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9643   0117A6  6E14               	movwf	(pad@buf+1)^(0+1280),c
  9644   0117A8  C59B  F515         	movff	efgtoa@w,pad@p
  9645   0117AC  C59C  F516         	movff	efgtoa@w+1,pad@p+1
  9646   0117B0  EC61  F0B5         	call	_pad	;wreg free
  9647   0117B4                     l2304:
  9648   0117B4  0012               	return		;funcret
  9649   0117B6                     __end_of_efgtoa:
  9650                           	callstack 0
  9651                           
  9652 ;; *************** function _strcpy *****************
  9653 ;; Defined at:
  9654 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;  dest            2    0[COMRAM] PTR unsigned char 
  9657 ;;		 -> dbuf(80), 
  9658 ;;  src             2    2[COMRAM] PTR const unsigned char 
  9659 ;;		 -> STR_23(4), STR_20(4), 
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;  d               2    4[COMRAM] PTR unsigned char 
  9662 ;;		 -> dbuf(80), 
  9663 ;; Return value:  Size  Location     Type
  9664 ;;                  2    0[COMRAM] PTR unsigned char 
  9665 ;; Registers used:
  9666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9667 ;; Tracked objects:
  9668 ;;		On entry : 0/0
  9669 ;;		On exit  : 0/0
  9670 ;;		Unchanged: 0/0
  9671 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9672 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9673 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9675 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9676 ;;Total ram usage:        6 bytes
  9677 ;; Hardware stack levels used: 1
  9678 ;; This function calls:
  9679 ;;		Nothing
  9680 ;; This function is called by:
  9681 ;;		_efgtoa
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           	psect	text6
  9686   016EA2                     __ptext6:
  9687                           	callstack 0
  9688   016EA2                     _strcpy:
  9689                           	callstack 122
  9690   016EA2  C501  F505         	movff	strcpy@dest,strcpy@d
  9691   016EA6  C502  F506         	movff	strcpy@dest+1,strcpy@d+1
  9692   016EAA                     l8409:
  9693   016EAA  C503  F4F6         	movff	strcpy@src,tblptrl
  9694   016EAE  C504  F4F7         	movff	strcpy@src+1,tblptrh
  9695   016EB2  4A03               	infsnz	strcpy@src^(0+1280),f,c
  9696   016EB4  2A04               	incf	(strcpy@src+1)^(0+1280),f,c
  9697   016EB6                     	if	0	;tblptru may be non-zero
  9698   016EB6                     	endif
  9699   016EB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9700   016EB6  0E00               	movlw	low (__mediumconst shr (0+16))
  9701   016EB8  6EF8               	movwf	tblptru,c
  9702   016EBA                     	endif
  9703   016EBA  C505  F4D9         	movff	strcpy@d,fsr2l
  9704   016EBE  C506  F4DA         	movff	strcpy@d+1,fsr2h
  9705   016EC2  4A05               	infsnz	strcpy@d^(0+1280),f,c
  9706   016EC4  2A06               	incf	(strcpy@d+1)^(0+1280),f,c
  9707   016EC6  0008               	tblrd		*
  9708   016EC8  C4F5 F4DF          	movff	tablat,indf2
  9709   016ECC  50DF               	movf	indf2,w,c
  9710   016ECE  A4D8               	btfss	status,2,c
  9711   016ED0  EF6C  F0B7         	goto	u6101
  9712   016ED4  EF6E  F0B7         	goto	u6100
  9713   016ED8                     u6101:
  9714   016ED8  EF55  F0B7         	goto	l8409
  9715   016EDC                     u6100:
  9716   016EDC  0012               	return		;funcret
  9717   016EDE                     __end_of_strcpy:
  9718                           	callstack 0
  9719                           
  9720 ;; *************** function _pad *****************
  9721 ;; Defined at:
  9722 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  9723 ;; Parameters:    Size  Location     Type
  9724 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9725 ;;		 -> sprintf@f(11), 
  9726 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9727 ;;		 -> dbuf(80), 
  9728 ;;  p               2   20[COMRAM] int 
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;  i               2   23[COMRAM] int 
  9731 ;; Return value:  Size  Location     Type
  9732 ;;                  1    wreg      void 
  9733 ;; Registers used:
  9734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9735 ;; Tracked objects:
  9736 ;;		On entry : 0/0
  9737 ;;		On exit  : 0/0
  9738 ;;		Unchanged: 0/0
  9739 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9740 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9741 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9743 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9744 ;;Total ram usage:        9 bytes
  9745 ;; Hardware stack levels used: 1
  9746 ;; Hardware stack levels required when called: 3
  9747 ;; This function calls:
  9748 ;;		_fputc
  9749 ;;		_fputs
  9750 ;; This function is called by:
  9751 ;;		_efgtoa
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755                           	psect	text7
  9756   016AC2                     __ptext7:
  9757                           	callstack 0
  9758   016AC2                     _pad:
  9759                           	callstack 119
  9760   016AC2                     
  9761                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  9762   016AC2  BE16               	btfsc	(pad@p+1)^(0+1280),7,c
  9763   016AC4  EF68  F0B5         	goto	u6080
  9764   016AC8  EF66  F0B5         	goto	u6081
  9765   016ACC                     u6081:
  9766   016ACC  EF6C  F0B5         	goto	l2289
  9767   016AD0                     u6080:
  9768   016AD0                     
  9769                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  9770   016AD0  0E00               	movlw	0
  9771   016AD2  6E16               	movwf	(pad@p+1)^(0+1280),c
  9772   016AD4  0E00               	movlw	0
  9773   016AD6  6E15               	movwf	pad@p^(0+1280),c
  9774   016AD8                     l2289:
  9775                           
  9776                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  9777   016AD8  0E00               	movlw	0
  9778   016ADA  6E19               	movwf	(pad@i+1)^(0+1280),c
  9779   016ADC  0E00               	movlw	0
  9780   016ADE  6E18               	movwf	pad@i^(0+1280),c
  9781                           
  9782                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9783   016AE0  EF7E  F0B5         	goto	l8403
  9784   016AE4                     l8399:
  9785                           
  9786                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  9787   016AE4  0E00               	movlw	0
  9788   016AE6  6E02               	movwf	(fputc@c+1)^(0+1280),c
  9789   016AE8  0E20               	movlw	32
  9790   016AEA  6E01               	movwf	fputc@c^(0+1280),c
  9791   016AEC  C511  F503         	movff	pad@fp,fputc@fp
  9792   016AF0  C512  F504         	movff	pad@fp+1,fputc@fp+1
  9793   016AF4  EC9F  F0B3         	call	_fputc	;wreg free
  9794   016AF8                     
  9795                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  9796   016AF8  4A18               	infsnz	pad@i^(0+1280),f,c
  9797   016AFA  2A19               	incf	(pad@i+1)^(0+1280),f,c
  9798   016AFC                     l8403:
  9799                           
  9800                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  9801   016AFC  5015               	movf	pad@p^(0+1280),w,c
  9802   016AFE  5C18               	subwf	pad@i^(0+1280),w,c
  9803   016B00  5019               	movf	(pad@i+1)^(0+1280),w,c
  9804   016B02  0A80               	xorlw	128
  9805   016B04  6E17               	movwf	??_pad^(0+1280),c
  9806   016B06  5016               	movf	(pad@p+1)^(0+1280),w,c
  9807   016B08  0A80               	xorlw	128
  9808   016B0A  5817               	subwfb	??_pad^(0+1280),w,c
  9809   016B0C  A0D8               	btfss	status,0,c
  9810   016B0E  EF8B  F0B5         	goto	u6091
  9811   016B12  EF8D  F0B5         	goto	u6090
  9812   016B16                     u6091:
  9813   016B16  EF72  F0B5         	goto	l8399
  9814   016B1A                     u6090:
  9815   016B1A                     
  9816                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  9817   016B1A  C513  F50A         	movff	pad@buf,fputs@s
  9818   016B1E  C514  F50B         	movff	pad@buf+1,fputs@s+1
  9819   016B22  C511  F50C         	movff	pad@fp,fputs@fp
  9820   016B26  C512  F50D         	movff	pad@fp+1,fputs@fp+1
  9821   016B2A  EC11  F0B7         	call	_fputs	;wreg free
  9822   016B2E  0012               	return		;funcret
  9823   016B30                     __end_of_pad:
  9824                           	callstack 0
  9825                           
  9826 ;; *************** function _fputs *****************
  9827 ;; Defined at:
  9828 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9831 ;;		 -> dbuf(80), 
  9832 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9833 ;;		 -> sprintf@f(11), 
  9834 ;; Auto vars:     Size  Location     Type
  9835 ;;  i               2   14[COMRAM] int 
  9836 ;;  c               1   13[COMRAM] unsigned char 
  9837 ;; Return value:  Size  Location     Type
  9838 ;;                  2    9[COMRAM] int 
  9839 ;; Registers used:
  9840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9841 ;; Tracked objects:
  9842 ;;		On entry : 0/0
  9843 ;;		On exit  : 0/0
  9844 ;;		Unchanged: 0/0
  9845 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9846 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9847 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9849 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9850 ;;Total ram usage:        7 bytes
  9851 ;; Hardware stack levels used: 1
  9852 ;; Hardware stack levels required when called: 2
  9853 ;; This function calls:
  9854 ;;		_fputc
  9855 ;; This function is called by:
  9856 ;;		_pad
  9857 ;; This function uses a non-reentrant model
  9858 ;;
  9859                           
  9860                           	psect	text8
  9861   016E22                     __ptext8:
  9862                           	callstack 0
  9863   016E22                     _fputs:
  9864                           	callstack 119
  9865   016E22  0E00               	movlw	0
  9866   016E24  6E10               	movwf	(fputs@i+1)^(0+1280),c
  9867   016E26  0E00               	movlw	0
  9868   016E28  6E0F               	movwf	fputs@i^(0+1280),c
  9869   016E2A  EF22  F0B7         	goto	l7755
  9870   016E2E                     l7751:
  9871   016E2E  C50E  F501         	movff	fputs@c,fputc@c
  9872   016E32  6A02               	clrf	(fputc@c+1)^(0+1280),c
  9873   016E34  C50C  F503         	movff	fputs@fp,fputc@fp
  9874   016E38  C50D  F504         	movff	fputs@fp+1,fputc@fp+1
  9875   016E3C  EC9F  F0B3         	call	_fputc	;wreg free
  9876   016E40  4A0F               	infsnz	fputs@i^(0+1280),f,c
  9877   016E42  2A10               	incf	(fputs@i+1)^(0+1280),f,c
  9878   016E44                     l7755:
  9879   016E44  500F               	movf	fputs@i^(0+1280),w,c
  9880   016E46  240A               	addwf	fputs@s^(0+1280),w,c
  9881   016E48  6ED9               	movwf	fsr2l,c
  9882   016E4A  5010               	movf	(fputs@i+1)^(0+1280),w,c
  9883   016E4C  200B               	addwfc	(fputs@s+1)^(0+1280),w,c
  9884   016E4E  6EDA               	movwf	fsr2h,c
  9885   016E50  50DF               	movf	indf2,w,c
  9886   016E52  6E0E               	movwf	fputs@c^(0+1280),c
  9887   016E54  500E               	movf	fputs@c^(0+1280),w,c
  9888   016E56  A4D8               	btfss	status,2,c
  9889   016E58  EF30  F0B7         	goto	u5231
  9890   016E5C  EF32  F0B7         	goto	u5230
  9891   016E60                     u5231:
  9892   016E60  EF17  F0B7         	goto	l7751
  9893   016E64                     u5230:
  9894   016E64  0012               	return		;funcret
  9895   016E66                     __end_of_fputs:
  9896                           	callstack 0
  9897                           
  9898 ;; *************** function _fputc *****************
  9899 ;; Defined at:
  9900 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;  c               2    0[COMRAM] int 
  9903 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9904 ;;		 -> sprintf@f(11), 
  9905 ;; Auto vars:     Size  Location     Type
  9906 ;;		None
  9907 ;; Return value:  Size  Location     Type
  9908 ;;                  2    0[COMRAM] int 
  9909 ;; Registers used:
  9910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9911 ;; Tracked objects:
  9912 ;;		On entry : 0/0
  9913 ;;		On exit  : 0/0
  9914 ;;		Unchanged: 0/0
  9915 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9916 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9918 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9919 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9920 ;;Total ram usage:        9 bytes
  9921 ;; Hardware stack levels used: 1
  9922 ;; Hardware stack levels required when called: 1
  9923 ;; This function calls:
  9924 ;;		_putch
  9925 ;; This function is called by:
  9926 ;;		_pad
  9927 ;;		_vfpfcnvrt
  9928 ;;		_fputs
  9929 ;; This function uses a non-reentrant model
  9930 ;;
  9931                           
  9932                           	psect	text9
  9933   01673E                     __ptext9:
  9934                           	callstack 0
  9935   01673E                     _fputc:
  9936                           	callstack 122
  9937   01673E  5003               	movf	fputc@fp^(0+1280),w,c
  9938   016740  1004               	iorwf	(fputc@fp+1)^(0+1280),w,c
  9939   016742  B4D8               	btfsc	status,2,c
  9940   016744  EFA6  F0B3         	goto	u4661
  9941   016748  EFA8  F0B3         	goto	u4660
  9942   01674C                     u4661:
  9943   01674C  EFB1  F0B3         	goto	l7249
  9944   016750                     u4660:
  9945   016750  5003               	movf	fputc@fp^(0+1280),w,c
  9946   016752  1004               	iorwf	(fputc@fp+1)^(0+1280),w,c
  9947   016754  A4D8               	btfss	status,2,c
  9948   016756  EFAF  F0B3         	goto	u4671
  9949   01675A  EFB1  F0B3         	goto	u4670
  9950   01675E                     u4671:
  9951   01675E  EFB6  F0B3         	goto	l7251
  9952   016762                     u4670:
  9953   016762                     l7249:
  9954   016762  5001               	movf	fputc@c^(0+1280),w,c
  9955   016764  ECBC  F0B8         	call	_putch
  9956   016768  EF03  F0B4         	goto	l2418
  9957   01676C                     l7251:
  9958   01676C  EE20 F009          	lfsr	2,9
  9959   016770  5003               	movf	fputc@fp^(0+1280),w,c
  9960   016772  26D9               	addwf	fsr2l,f,c
  9961   016774  5004               	movf	(fputc@fp+1)^(0+1280),w,c
  9962   016776  22DA               	addwfc	fsr2h,f,c
  9963   016778  50DE               	movf	postinc2,w,c
  9964   01677A  10DE               	iorwf	postinc2,w,c
  9965   01677C  B4D8               	btfsc	status,2,c
  9966   01677E  EFC3  F0B3         	goto	u4681
  9967   016782  EFC5  F0B3         	goto	u4680
  9968   016786                     u4681:
  9969   016786  EFE0  F0B3         	goto	l7255
  9970   01678A                     u4680:
  9971   01678A  EE20 F009          	lfsr	2,9
  9972   01678E  5003               	movf	fputc@fp^(0+1280),w,c
  9973   016790  26D9               	addwf	fsr2l,f,c
  9974   016792  5004               	movf	(fputc@fp+1)^(0+1280),w,c
  9975   016794  22DA               	addwfc	fsr2h,f,c
  9976   016796  EE10 F002          	lfsr	1,2
  9977   01679A  5003               	movf	fputc@fp^(0+1280),w,c
  9978   01679C  26E1               	addwf	fsr1l,f,c
  9979   01679E  5004               	movf	(fputc@fp+1)^(0+1280),w,c
  9980   0167A0  22E2               	addwfc	fsr1h,f,c
  9981   0167A2  50DE               	movf	postinc2,w,c
  9982   0167A4  5CE6               	subwf	postinc1,w,c
  9983   0167A6  50E6               	movf	postinc1,w,c
  9984   0167A8  0A80               	xorlw	128
  9985   0167AA  6E09               	movwf	(??_fputc+4)^(0+1280),c
  9986   0167AC  50DE               	movf	postinc2,w,c
  9987   0167AE  0A80               	xorlw	128
  9988   0167B0  5809               	subwfb	(??_fputc+4)^(0+1280),w,c
  9989   0167B2  B0D8               	btfsc	status,0,c
  9990   0167B4  EFDE  F0B3         	goto	u4691
  9991   0167B8  EFE0  F0B3         	goto	u4690
  9992   0167BC                     u4691:
  9993   0167BC  EF03  F0B4         	goto	l2418
  9994   0167C0                     u4690:
  9995   0167C0                     l7255:
  9996   0167C0  EE20 F002          	lfsr	2,2
  9997   0167C4  5003               	movf	fputc@fp^(0+1280),w,c
  9998   0167C6  26D9               	addwf	fsr2l,f,c
  9999   0167C8  5004               	movf	(fputc@fp+1)^(0+1280),w,c
 10000   0167CA  22DA               	addwfc	fsr2h,f,c
 10001   0167CC  C4DE F505          	movff	postinc2,??_fputc
 10002   0167D0  C4DD F506          	movff	postdec2,??_fputc+1
 10003   0167D4  C503  F4D9         	movff	fputc@fp,fsr2l
 10004   0167D8  C504  F4DA         	movff	fputc@fp+1,fsr2h
 10005   0167DC  C4DE F507          	movff	postinc2,??_fputc+2
 10006   0167E0  C4DD F508          	movff	postdec2,??_fputc+3
 10007   0167E4  5005               	movf	??_fputc^(0+1280),w,c
 10008   0167E6  2407               	addwf	(??_fputc+2)^(0+1280),w,c
 10009   0167E8  6ED9               	movwf	fsr2l,c
 10010   0167EA  5006               	movf	(??_fputc+1)^(0+1280),w,c
 10011   0167EC  2008               	addwfc	(??_fputc+3)^(0+1280),w,c
 10012   0167EE  6EDA               	movwf	fsr2h,c
 10013   0167F0  C501  F4DF         	movff	fputc@c,indf2
 10014   0167F4  EE20 F002          	lfsr	2,2
 10015   0167F8  5003               	movf	fputc@fp^(0+1280),w,c
 10016   0167FA  26D9               	addwf	fsr2l,f,c
 10017   0167FC  5004               	movf	(fputc@fp+1)^(0+1280),w,c
 10018   0167FE  22DA               	addwfc	fsr2h,f,c
 10019   016800  2ADE               	incf	postinc2,f,c
 10020   016802  0E00               	movlw	0
 10021   016804  22DD               	addwfc	postdec2,f,c
 10022   016806                     l2418:
 10023   016806  0012               	return		;funcret
 10024   016808                     __end_of_fputc:
 10025                           	callstack 0
 10026                           
 10027 ;; *************** function _putch *****************
 10028 ;; Defined at:
 10029 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
 10030 ;; Parameters:    Size  Location     Type
 10031 ;;  c               1    wreg     unsigned char 
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;  c               1    0[COMRAM] unsigned char 
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  1    wreg      void 
 10036 ;; Registers used:
 10037 ;;		wreg
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/0
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10047 ;;Total ram usage:        0 bytes
 10048 ;; Hardware stack levels used: 1
 10049 ;; This function calls:
 10050 ;;		Nothing
 10051 ;; This function is called by:
 10052 ;;		_fputc
 10053 ;; This function uses a non-reentrant model
 10054 ;;
 10055                           
 10056                           	psect	text10
 10057   017178                     __ptext10:
 10058                           	callstack 0
 10059   017178                     _putch:
 10060                           	callstack 122
 10061   017178  0012               	return		;funcret
 10062   01717A                     __end_of_putch:
 10063                           	callstack 0
 10064                           
 10065 ;; *************** function _memcpy *****************
 10066 ;; Defined at:
 10067 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memcpy.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  d1              2    0[COMRAM] PTR void 
 10070 ;;		 -> dbuf(80), 
 10071 ;;  s1              2    2[COMRAM] PTR const void 
 10072 ;;		 -> dbuf(80), 
 10073 ;;  n               2    4[COMRAM] unsigned int 
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;  s               2    8[COMRAM] PTR const unsigned char 
 10076 ;;		 -> dbuf(80), 
 10077 ;;  d               2    6[COMRAM] PTR unsigned char 
 10078 ;;		 -> dbuf(80), 
 10079 ;;  tmp             1   10[COMRAM] unsigned char 
 10080 ;; Return value:  Size  Location     Type
 10081 ;;                  2    0[COMRAM] PTR void 
 10082 ;; Registers used:
 10083 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10084 ;; Tracked objects:
 10085 ;;		On entry : 0/0
 10086 ;;		On exit  : 0/0
 10087 ;;		Unchanged: 0/0
 10088 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10089 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10090 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10092 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10093 ;;Total ram usage:       11 bytes
 10094 ;; Hardware stack levels used: 1
 10095 ;; This function calls:
 10096 ;;		Nothing
 10097 ;; This function is called by:
 10098 ;;		_efgtoa
 10099 ;; This function uses a non-reentrant model
 10100 ;;
 10101                           
 10102                           	psect	text11
 10103   016D3A                     __ptext11:
 10104                           	callstack 0
 10105   016D3A                     _memcpy:
 10106                           	callstack 122
 10107   016D3A  C503  F509         	movff	memcpy@s1,memcpy@s
 10108   016D3E  C504  F50A         	movff	memcpy@s1+1,memcpy@s+1
 10109   016D42  C501  F507         	movff	memcpy@d1,memcpy@d
 10110   016D46  C502  F508         	movff	memcpy@d1+1,memcpy@d+1
 10111   016D4A  EFB7  F0B6         	goto	l8457
 10112   016D4E                     l8449:
 10113   016D4E  C509  F4D9         	movff	memcpy@s,fsr2l
 10114   016D52  C50A  F4DA         	movff	memcpy@s+1,fsr2h
 10115   016D56  50DF               	movf	indf2,w,c
 10116   016D58  6E0B               	movwf	memcpy@tmp^(0+1280),c
 10117   016D5A  4A09               	infsnz	memcpy@s^(0+1280),f,c
 10118   016D5C  2A0A               	incf	(memcpy@s+1)^(0+1280),f,c
 10119   016D5E  C507  F4D9         	movff	memcpy@d,fsr2l
 10120   016D62  C508  F4DA         	movff	memcpy@d+1,fsr2h
 10121   016D66  C50B  F4DF         	movff	memcpy@tmp,indf2
 10122   016D6A  4A07               	infsnz	memcpy@d^(0+1280),f,c
 10123   016D6C  2A08               	incf	(memcpy@d+1)^(0+1280),f,c
 10124   016D6E                     l8457:
 10125   016D6E  0605               	decf	memcpy@n^(0+1280),f,c
 10126   016D70  A0D8               	btfss	status,0,c
 10127   016D72  0606               	decf	(memcpy@n+1)^(0+1280),f,c
 10128   016D74  2805               	incf	memcpy@n^(0+1280),w,c
 10129   016D76  E106               	bnz	u6221
 10130   016D78  2806               	incf	(memcpy@n+1)^(0+1280),w,c
 10131   016D7A  A4D8               	btfss	status,2,c
 10132   016D7C  EFC2  F0B6         	goto	u6221
 10133   016D80  EFC4  F0B6         	goto	u6220
 10134   016D84                     u6221:
 10135   016D84  EFA7  F0B6         	goto	l8449
 10136   016D88                     u6220:
 10137   016D88  0012               	return		;funcret
 10138   016D8A                     __end_of_memcpy:
 10139                           	callstack 0
 10140                           
 10141 ;; *************** function _labs *****************
 10142 ;; Defined at:
 10143 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\labs.c"
 10144 ;; Parameters:    Size  Location     Type
 10145 ;;  a               4    0[COMRAM] long 
 10146 ;; Auto vars:     Size  Location     Type
 10147 ;;		None
 10148 ;; Return value:  Size  Location     Type
 10149 ;;                  4    0[COMRAM] long 
 10150 ;; Registers used:
 10151 ;;		wreg, status,2, status,0
 10152 ;; Tracked objects:
 10153 ;;		On entry : 0/0
 10154 ;;		On exit  : 0/0
 10155 ;;		Unchanged: 0/0
 10156 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10157 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10159 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10160 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10161 ;;Total ram usage:        8 bytes
 10162 ;; Hardware stack levels used: 1
 10163 ;; This function calls:
 10164 ;;		Nothing
 10165 ;; This function is called by:
 10166 ;;		_efgtoa
 10167 ;; This function uses a non-reentrant model
 10168 ;;
 10169                           
 10170                           	psect	text12
 10171   016C42                     __ptext12:
 10172                           	callstack 0
 10173   016C42                     _labs:
 10174                           	callstack 122
 10175   016C42  BE04               	btfsc	(labs@a+3)^(0+1280),7,c
 10176   016C44  EF26  F0B6         	goto	u6111
 10177   016C48  EF28  F0B6         	goto	u6110
 10178   016C4C                     u6111:
 10179   016C4C  EF32  F0B6         	goto	l8415
 10180   016C50                     u6110:
 10181   016C50  C501  F501         	movff	labs@a,?_labs
 10182   016C54  C502  F502         	movff	labs@a+1,?_labs+1
 10183   016C58  C503  F503         	movff	labs@a+2,?_labs+2
 10184   016C5C  C504  F504         	movff	labs@a+3,?_labs+3
 10185   016C60  EF4B  F0B6         	goto	l2400
 10186   016C64                     l8415:
 10187   016C64  C501  F505         	movff	labs@a,??_labs
 10188   016C68  C502  F506         	movff	labs@a+1,??_labs+1
 10189   016C6C  C503  F507         	movff	labs@a+2,??_labs+2
 10190   016C70  C504  F508         	movff	labs@a+3,??_labs+3
 10191   016C74  1E05               	comf	??_labs^(0+1280),f,c
 10192   016C76  1E06               	comf	(??_labs+1)^(0+1280),f,c
 10193   016C78  1E07               	comf	(??_labs+2)^(0+1280),f,c
 10194   016C7A  1E08               	comf	(??_labs+3)^(0+1280),f,c
 10195   016C7C  2A05               	incf	??_labs^(0+1280),f,c
 10196   016C7E  0E00               	movlw	0
 10197   016C80  2206               	addwfc	(??_labs+1)^(0+1280),f,c
 10198   016C82  2207               	addwfc	(??_labs+2)^(0+1280),f,c
 10199   016C84  2208               	addwfc	(??_labs+3)^(0+1280),f,c
 10200   016C86  C505  F501         	movff	??_labs,?_labs
 10201   016C8A  C506  F502         	movff	??_labs+1,?_labs+1
 10202   016C8E  C507  F503         	movff	??_labs+2,?_labs+2
 10203   016C92  C508  F504         	movff	??_labs+3,?_labs+3
 10204   016C96                     l2400:
 10205   016C96  0012               	return		;funcret
 10206   016C98                     __end_of_labs:
 10207                           	callstack 0
 10208                           
 10209 ;; *************** function _floorf *****************
 10210 ;; Defined at:
 10211 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\floorf.c"
 10212 ;; Parameters:    Size  Location     Type
 10213 ;;  x               4   13[BANK5 ] float 
 10214 ;; Auto vars:     Size  Location     Type
 10215 ;;  u               4   29[BANK5 ] struct .
 10216 ;;  m               4   23[BANK5 ] unsigned long 
 10217 ;;  e               2   27[BANK5 ] int 
 10218 ;; Return value:  Size  Location     Type
 10219 ;;                  4   13[BANK5 ] float 
 10220 ;; Registers used:
 10221 ;;		wreg, status,2, status,0
 10222 ;; Tracked objects:
 10223 ;;		On entry : 0/0
 10224 ;;		On exit  : 0/0
 10225 ;;		Unchanged: 0/0
 10226 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10227 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10228 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10229 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10230 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10231 ;;Total ram usage:       20 bytes
 10232 ;; Hardware stack levels used: 1
 10233 ;; This function calls:
 10234 ;;		Nothing
 10235 ;; This function is called by:
 10236 ;;		_efgtoa
 10237 ;; This function uses a non-reentrant model
 10238 ;;
 10239                           
 10240                           	psect	text13
 10241   0155B4                     __ptext13:
 10242                           	callstack 0
 10243   0155B4                     _floorf:
 10244                           	callstack 122
 10245   0155B4  C700  F57D         	movff	floorf@F521,floorf@u
 10246   0155B8  C701  F57E         	movff	floorf@F521+1,floorf@u+1
 10247   0155BC  C702  F57F         	movff	floorf@F521+2,floorf@u+2
 10248   0155C0  C703  F580         	movff	floorf@F521+3,floorf@u+3
 10249   0155C4  C56D  F57D         	movff	floorf@x,floorf@u
 10250   0155C8  C56E  F57E         	movff	floorf@x+1,floorf@u+1
 10251   0155CC  C56F  F57F         	movff	floorf@x+2,floorf@u+2
 10252   0155D0  C570  F580         	movff	floorf@x+3,floorf@u+3
 10253   0155D4  0E81               	movlw	129
 10254   0155D6  0105               	movlb	5	; () banked
 10255   0155D8  6F71               	movwf	??_floorf& (0+255),b
 10256   0155DA  0EFF               	movlw	255
 10257   0155DC  6F72               	movwf	(??_floorf+1)& (0+255),b
 10258   0155DE  C57D  F573         	movff	floorf@u,??_floorf+2
 10259   0155E2  C57E  F574         	movff	floorf@u+1,??_floorf+3
 10260   0155E6  C57F  F575         	movff	floorf@u+2,??_floorf+4
 10261   0155EA  C580  F576         	movff	floorf@u+3,??_floorf+5
 10262   0155EE  0E18               	movlw	24
 10263   0155F0  EFFF  F0AA         	goto	u6120
 10264   0155F4                     u6125:
 10265   0155F4  90D8               	bcf	status,0,c
 10266   0155F6  3376               	rrcf	(??_floorf+5)& (0+255),f,b
 10267   0155F8  3375               	rrcf	(??_floorf+4)& (0+255),f,b
 10268   0155FA  3374               	rrcf	(??_floorf+3)& (0+255),f,b
 10269   0155FC  3373               	rrcf	(??_floorf+2)& (0+255),f,b
 10270   0155FE                     u6120:
 10271   0155FE  2EE8               	decfsz	wreg,f,c
 10272   015600  EFFA  F0AA         	goto	u6125
 10273   015604  5173               	movf	(??_floorf+2)& (0+255),w,b
 10274   015606  2571               	addwf	??_floorf& (0+255),w,b
 10275   015608  6F7B               	movwf	floorf@e& (0+255),b
 10276   01560A  0E00               	movlw	0
 10277   01560C  2172               	addwfc	(??_floorf+1)& (0+255),w,b
 10278   01560E  6F7C               	movwf	(floorf@e+1)& (0+255),b
 10279   015610  BF7C               	btfsc	(floorf@e+1)& (0+255),7,b
 10280   015612  EF14  F0AB         	goto	u6131
 10281   015616  517C               	movf	(floorf@e+1)& (0+255),w,b
 10282   015618  E109               	bnz	u6130
 10283   01561A  0E17               	movlw	23
 10284   01561C  5D7B               	subwf	floorf@e& (0+255),w,b
 10285   01561E  A0D8               	btfss	status,0,c
 10286   015620  EF14  F0AB         	goto	u6131
 10287   015624  EF16  F0AB         	goto	u6130
 10288   015628                     u6131:
 10289   015628  EF20  F0AB         	goto	l8425
 10290   01562C                     u6130:
 10291   01562C                     l8423:
 10292                           
 10293                           ; BSR set to: 5
 10294   01562C  C56D  F56D         	movff	floorf@x,?_floorf
 10295   015630  C56E  F56E         	movff	floorf@x+1,?_floorf+1
 10296   015634  C56F  F56F         	movff	floorf@x+2,?_floorf+2
 10297   015638  C570  F570         	movff	floorf@x+3,?_floorf+3
 10298   01563C  EFE4  F0AB         	goto	l2386
 10299   015640                     l8425:
 10300                           
 10301                           ; BSR set to: 5
 10302   015640  BF7C               	btfsc	(floorf@e+1)& (0+255),7,b
 10303   015642  EF25  F0AB         	goto	u6141
 10304   015646  EF27  F0AB         	goto	u6140
 10305   01564A                     u6141:
 10306   01564A  EF98  F0AB         	goto	l8435
 10307   01564E                     u6140:
 10308   01564E                     
 10309                           ; BSR set to: 5
 10310   01564E  C57B  F571         	movff	floorf@e,??_floorf
 10311   015652  0EFF               	movlw	255
 10312   015654  6F72               	movwf	(??_floorf+1)& (0+255),b
 10313   015656  0EFF               	movlw	255
 10314   015658  6F73               	movwf	(??_floorf+2)& (0+255),b
 10315   01565A  0E7F               	movlw	127
 10316   01565C  6F74               	movwf	(??_floorf+3)& (0+255),b
 10317   01565E  0E00               	movlw	0
 10318   015660  6F75               	movwf	(??_floorf+4)& (0+255),b
 10319   015662                     u6155:
 10320   015662  6771               	tstfsz	??_floorf& (0+255),b
 10321   015664  EF36  F0AB         	goto	u6156
 10322   015668  EF3E  F0AB         	goto	u6157
 10323   01566C                     u6156:
 10324   01566C  3575               	rlcf	(??_floorf+4)& (0+255),w,b
 10325   01566E  3375               	rrcf	(??_floorf+4)& (0+255),f,b
 10326   015670  3374               	rrcf	(??_floorf+3)& (0+255),f,b
 10327   015672  3373               	rrcf	(??_floorf+2)& (0+255),f,b
 10328   015674  3372               	rrcf	(??_floorf+1)& (0+255),f,b
 10329   015676  2F71               	decfsz	??_floorf& (0+255),f,b
 10330   015678  EF31  F0AB         	goto	u6155
 10331   01567C                     u6157:
 10332   01567C  C572  F577         	movff	??_floorf+1,floorf@m
 10333   015680  C573  F578         	movff	??_floorf+2,floorf@m+1
 10334   015684  C574  F579         	movff	??_floorf+3,floorf@m+2
 10335   015688  C575  F57A         	movff	??_floorf+4,floorf@m+3
 10336   01568C  0105               	movlb	5	; () banked
 10337   01568E  5177               	movf	floorf@m& (0+255),w,b
 10338   015690  157D               	andwf	floorf@u& (0+255),w,b
 10339   015692  6F71               	movwf	??_floorf& (0+255),b
 10340   015694  5178               	movf	(floorf@m+1)& (0+255),w,b
 10341   015696  157E               	andwf	(floorf@u+1)& (0+255),w,b
 10342   015698  6F72               	movwf	(??_floorf+1)& (0+255),b
 10343   01569A  5179               	movf	(floorf@m+2)& (0+255),w,b
 10344   01569C  157F               	andwf	(floorf@u+2)& (0+255),w,b
 10345   01569E  6F73               	movwf	(??_floorf+2)& (0+255),b
 10346   0156A0  517A               	movf	(floorf@m+3)& (0+255),w,b
 10347   0156A2  1580               	andwf	(floorf@u+3)& (0+255),w,b
 10348   0156A4  6F74               	movwf	(??_floorf+3)& (0+255),b
 10349   0156A6  5171               	movf	??_floorf& (0+255),w,b
 10350   0156A8  1172               	iorwf	(??_floorf+1)& (0+255),w,b
 10351   0156AA  1173               	iorwf	(??_floorf+2)& (0+255),w,b
 10352   0156AC  1174               	iorwf	(??_floorf+3)& (0+255),w,b
 10353   0156AE  A4D8               	btfss	status,2,c
 10354   0156B0  EF5C  F0AB         	goto	u6161
 10355   0156B4  EF5E  F0AB         	goto	u6160
 10356   0156B8                     u6161:
 10357   0156B8  EF60  F0AB         	goto	l8431
 10358   0156BC                     u6160:
 10359   0156BC  EF16  F0AB         	goto	l8423
 10360   0156C0                     l8431:
 10361                           
 10362                           ; BSR set to: 5
 10363   0156C0  C57D  F571         	movff	floorf@u,??_floorf
 10364   0156C4  C57E  F572         	movff	floorf@u+1,??_floorf+1
 10365   0156C8  C57F  F573         	movff	floorf@u+2,??_floorf+2
 10366   0156CC  C580  F574         	movff	floorf@u+3,??_floorf+3
 10367   0156D0  0E20               	movlw	32
 10368   0156D2  EF70  F0AB         	goto	u6170
 10369   0156D6                     u6175:
 10370   0156D6  90D8               	bcf	status,0,c
 10371   0156D8  3374               	rrcf	(??_floorf+3)& (0+255),f,b
 10372   0156DA  3373               	rrcf	(??_floorf+2)& (0+255),f,b
 10373   0156DC  3372               	rrcf	(??_floorf+1)& (0+255),f,b
 10374   0156DE  3371               	rrcf	??_floorf& (0+255),f,b
 10375   0156E0                     u6170:
 10376   0156E0  2EE8               	decfsz	wreg,f,c
 10377   0156E2  EF6B  F0AB         	goto	u6175
 10378   0156E6  5171               	movf	??_floorf& (0+255),w,b
 10379   0156E8  1172               	iorwf	(??_floorf+1)& (0+255),w,b
 10380   0156EA  1173               	iorwf	(??_floorf+2)& (0+255),w,b
 10381   0156EC  1174               	iorwf	(??_floorf+3)& (0+255),w,b
 10382   0156EE  B4D8               	btfsc	status,2,c
 10383   0156F0  EF7C  F0AB         	goto	u6181
 10384   0156F4  EF7E  F0AB         	goto	u6180
 10385   0156F8                     u6181:
 10386   0156F8  EF86  F0AB         	goto	l2389
 10387   0156FC                     u6180:
 10388   0156FC                     
 10389                           ; BSR set to: 5
 10390   0156FC  5177               	movf	floorf@m& (0+255),w,b
 10391   0156FE  277D               	addwf	floorf@u& (0+255),f,b
 10392   015700  5178               	movf	(floorf@m+1)& (0+255),w,b
 10393   015702  237E               	addwfc	(floorf@u+1)& (0+255),f,b
 10394   015704  5179               	movf	(floorf@m+2)& (0+255),w,b
 10395   015706  237F               	addwfc	(floorf@u+2)& (0+255),f,b
 10396   015708  517A               	movf	(floorf@m+3)& (0+255),w,b
 10397   01570A  2380               	addwfc	(floorf@u+3)& (0+255),f,b
 10398   01570C                     l2389:
 10399                           
 10400                           ; BSR set to: 5
 10401   01570C  1D77               	comf	floorf@m& (0+255),w,b
 10402   01570E  6F71               	movwf	??_floorf& (0+255),b
 10403   015710  1D78               	comf	(floorf@m+1)& (0+255),w,b
 10404   015712  6F72               	movwf	(??_floorf+1)& (0+255),b
 10405   015714  1D79               	comf	(floorf@m+2)& (0+255),w,b
 10406   015716  6F73               	movwf	(??_floorf+2)& (0+255),b
 10407   015718  1D7A               	comf	(floorf@m+3)& (0+255),w,b
 10408   01571A  6F74               	movwf	(??_floorf+3)& (0+255),b
 10409   01571C  5171               	movf	??_floorf& (0+255),w,b
 10410   01571E  177D               	andwf	floorf@u& (0+255),f,b
 10411   015720  5172               	movf	(??_floorf+1)& (0+255),w,b
 10412   015722  177E               	andwf	(floorf@u+1)& (0+255),f,b
 10413   015724  5173               	movf	(??_floorf+2)& (0+255),w,b
 10414   015726  177F               	andwf	(floorf@u+2)& (0+255),f,b
 10415   015728  5174               	movf	(??_floorf+3)& (0+255),w,b
 10416   01572A  1780               	andwf	(floorf@u+3)& (0+255),f,b
 10417   01572C  EFDC  F0AB         	goto	l8443
 10418   015730                     l8435:
 10419                           
 10420                           ; BSR set to: 5
 10421   015730  C57D  F571         	movff	floorf@u,??_floorf
 10422   015734  C57E  F572         	movff	floorf@u+1,??_floorf+1
 10423   015738  C57F  F573         	movff	floorf@u+2,??_floorf+2
 10424   01573C  C580  F574         	movff	floorf@u+3,??_floorf+3
 10425   015740  0E20               	movlw	32
 10426   015742  EFA8  F0AB         	goto	u6190
 10427   015746                     u6195:
 10428   015746  90D8               	bcf	status,0,c
 10429   015748  3374               	rrcf	(??_floorf+3)& (0+255),f,b
 10430   01574A  3373               	rrcf	(??_floorf+2)& (0+255),f,b
 10431   01574C  3372               	rrcf	(??_floorf+1)& (0+255),f,b
 10432   01574E  3371               	rrcf	??_floorf& (0+255),f,b
 10433   015750                     u6190:
 10434   015750  2EE8               	decfsz	wreg,f,c
 10435   015752  EFA3  F0AB         	goto	u6195
 10436   015756  5171               	movf	??_floorf& (0+255),w,b
 10437   015758  1172               	iorwf	(??_floorf+1)& (0+255),w,b
 10438   01575A  1173               	iorwf	(??_floorf+2)& (0+255),w,b
 10439   01575C  1174               	iorwf	(??_floorf+3)& (0+255),w,b
 10440   01575E  A4D8               	btfss	status,2,c
 10441   015760  EFB4  F0AB         	goto	u6201
 10442   015764  EFB6  F0AB         	goto	u6200
 10443   015768                     u6201:
 10444   015768  EFC0  F0AB         	goto	l8439
 10445   01576C                     u6200:
 10446   01576C                     
 10447                           ; BSR set to: 5
 10448   01576C  0E00               	movlw	0
 10449   01576E  6F7D               	movwf	floorf@u& (0+255),b
 10450   015770  0E00               	movlw	0
 10451   015772  6F7E               	movwf	(floorf@u+1)& (0+255),b
 10452   015774  0E00               	movlw	0
 10453   015776  6F7F               	movwf	(floorf@u+2)& (0+255),b
 10454   015778  0E00               	movlw	0
 10455   01577A  6F80               	movwf	(floorf@u+3)& (0+255),b
 10456   01577C  EFDC  F0AB         	goto	l8443
 10457   015780                     l8439:
 10458                           
 10459                           ; BSR set to: 5
 10460   015780  90D8               	bcf	status,0,c
 10461   015782  357D               	rlcf	floorf@u& (0+255),w,b
 10462   015784  6F71               	movwf	??_floorf& (0+255),b
 10463   015786  357E               	rlcf	(floorf@u+1)& (0+255),w,b
 10464   015788  6F72               	movwf	(??_floorf+1)& (0+255),b
 10465   01578A  357F               	rlcf	(floorf@u+2)& (0+255),w,b
 10466   01578C  6F73               	movwf	(??_floorf+2)& (0+255),b
 10467   01578E  3580               	rlcf	(floorf@u+3)& (0+255),w,b
 10468   015790  6F74               	movwf	(??_floorf+3)& (0+255),b
 10469   015792  5171               	movf	??_floorf& (0+255),w,b
 10470   015794  1172               	iorwf	(??_floorf+1)& (0+255),w,b
 10471   015796  1173               	iorwf	(??_floorf+2)& (0+255),w,b
 10472   015798  1174               	iorwf	(??_floorf+3)& (0+255),w,b
 10473   01579A  B4D8               	btfsc	status,2,c
 10474   01579C  EFD2  F0AB         	goto	u6211
 10475   0157A0  EFD4  F0AB         	goto	u6210
 10476   0157A4                     u6211:
 10477   0157A4  EFDC  F0AB         	goto	l8443
 10478   0157A8                     u6210:
 10479   0157A8                     
 10480                           ; BSR set to: 5
 10481   0157A8  0E00               	movlw	0
 10482   0157AA  6F7D               	movwf	floorf@u& (0+255),b
 10483   0157AC  0E00               	movlw	0
 10484   0157AE  6F7E               	movwf	(floorf@u+1)& (0+255),b
 10485   0157B0  0E80               	movlw	128
 10486   0157B2  6F7F               	movwf	(floorf@u+2)& (0+255),b
 10487   0157B4  0EBF               	movlw	191
 10488   0157B6  6F80               	movwf	(floorf@u+3)& (0+255),b
 10489   0157B8                     l8443:
 10490                           
 10491                           ; BSR set to: 5
 10492   0157B8  C57D  F56D         	movff	floorf@u,?_floorf
 10493   0157BC  C57E  F56E         	movff	floorf@u+1,?_floorf+1
 10494   0157C0  C57F  F56F         	movff	floorf@u+2,?_floorf+2
 10495   0157C4  C580  F570         	movff	floorf@u+3,?_floorf+3
 10496   0157C8                     l2386:
 10497                           
 10498                           ; BSR set to: 5
 10499   0157C8  0012               	return		;funcret
 10500   0157CA                     __end_of_floorf:
 10501                           	callstack 0
 10502                           
 10503 ;; *************** function ___fleq *****************
 10504 ;; Defined at:
 10505 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fleq.c"
 10506 ;; Parameters:    Size  Location     Type
 10507 ;;  ff1             4    0[COMRAM] float 
 10508 ;;  ff2             4    4[COMRAM] float 
 10509 ;; Auto vars:     Size  Location     Type
 10510 ;;		None
 10511 ;; Return value:  Size  Location     Type
 10512 ;;		None               void
 10513 ;; Registers used:
 10514 ;;		wreg, status,2, status,0
 10515 ;; Tracked objects:
 10516 ;;		On entry : 0/0
 10517 ;;		On exit  : 0/0
 10518 ;;		Unchanged: 0/0
 10519 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10520 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10522 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10523 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10524 ;;Total ram usage:       12 bytes
 10525 ;; Hardware stack levels used: 1
 10526 ;; This function calls:
 10527 ;;		Nothing
 10528 ;; This function is called by:
 10529 ;;		_efgtoa
 10530 ;; This function uses a non-reentrant model
 10531 ;;
 10532                           
 10533                           	psect	text14
 10534   016808                     __ptext14:
 10535                           	callstack 0
 10536   016808                     ___fleq:
 10537                           	callstack 122
 10538   016808  0E00               	movlw	0
 10539   01680A  1401               	andwf	___fleq@ff1^(0+1280),w,c
 10540   01680C  6E09               	movwf	??___fleq^(0+1280),c
 10541   01680E  0E00               	movlw	0
 10542   016810  1402               	andwf	(___fleq@ff1+1)^(0+1280),w,c
 10543   016812  6E0A               	movwf	(??___fleq+1)^(0+1280),c
 10544   016814  0E80               	movlw	128
 10545   016816  1403               	andwf	(___fleq@ff1+2)^(0+1280),w,c
 10546   016818  6E0B               	movwf	(??___fleq+2)^(0+1280),c
 10547   01681A  0E7F               	movlw	127
 10548   01681C  1404               	andwf	(___fleq@ff1+3)^(0+1280),w,c
 10549   01681E  6E0C               	movwf	(??___fleq+3)^(0+1280),c
 10550   016820  5009               	movf	??___fleq^(0+1280),w,c
 10551   016822  100A               	iorwf	(??___fleq+1)^(0+1280),w,c
 10552   016824  100B               	iorwf	(??___fleq+2)^(0+1280),w,c
 10553   016826  100C               	iorwf	(??___fleq+3)^(0+1280),w,c
 10554   016828  A4D8               	btfss	status,2,c
 10555   01682A  EF19  F0B4         	goto	u5851
 10556   01682E  EF1B  F0B4         	goto	u5850
 10557   016832                     u5851:
 10558   016832  EF23  F0B4         	goto	l8279
 10559   016836                     u5850:
 10560   016836  0E00               	movlw	0
 10561   016838  6E01               	movwf	___fleq@ff1^(0+1280),c
 10562   01683A  0E00               	movlw	0
 10563   01683C  6E02               	movwf	(___fleq@ff1+1)^(0+1280),c
 10564   01683E  0E00               	movlw	0
 10565   016840  6E03               	movwf	(___fleq@ff1+2)^(0+1280),c
 10566   016842  0E00               	movlw	0
 10567   016844  6E04               	movwf	(___fleq@ff1+3)^(0+1280),c
 10568   016846                     l8279:
 10569   016846  0E00               	movlw	0
 10570   016848  1405               	andwf	___fleq@ff2^(0+1280),w,c
 10571   01684A  6E09               	movwf	??___fleq^(0+1280),c
 10572   01684C  0E00               	movlw	0
 10573   01684E  1406               	andwf	(___fleq@ff2+1)^(0+1280),w,c
 10574   016850  6E0A               	movwf	(??___fleq+1)^(0+1280),c
 10575   016852  0E80               	movlw	128
 10576   016854  1407               	andwf	(___fleq@ff2+2)^(0+1280),w,c
 10577   016856  6E0B               	movwf	(??___fleq+2)^(0+1280),c
 10578   016858  0E7F               	movlw	127
 10579   01685A  1408               	andwf	(___fleq@ff2+3)^(0+1280),w,c
 10580   01685C  6E0C               	movwf	(??___fleq+3)^(0+1280),c
 10581   01685E  5009               	movf	??___fleq^(0+1280),w,c
 10582   016860  100A               	iorwf	(??___fleq+1)^(0+1280),w,c
 10583   016862  100B               	iorwf	(??___fleq+2)^(0+1280),w,c
 10584   016864  100C               	iorwf	(??___fleq+3)^(0+1280),w,c
 10585   016866  A4D8               	btfss	status,2,c
 10586   016868  EF38  F0B4         	goto	u5861
 10587   01686C  EF3A  F0B4         	goto	u5860
 10588   016870                     u5861:
 10589   016870  EF42  F0B4         	goto	l8283
 10590   016874                     u5860:
 10591   016874  0E00               	movlw	0
 10592   016876  6E05               	movwf	___fleq@ff2^(0+1280),c
 10593   016878  0E00               	movlw	0
 10594   01687A  6E06               	movwf	(___fleq@ff2+1)^(0+1280),c
 10595   01687C  0E00               	movlw	0
 10596   01687E  6E07               	movwf	(___fleq@ff2+2)^(0+1280),c
 10597   016880  0E00               	movlw	0
 10598   016882  6E08               	movwf	(___fleq@ff2+3)^(0+1280),c
 10599   016884                     l8283:
 10600   016884  5005               	movf	___fleq@ff2^(0+1280),w,c
 10601   016886  1801               	xorwf	___fleq@ff1^(0+1280),w,c
 10602   016888  E10F               	bnz	u5870
 10603   01688A  5006               	movf	(___fleq@ff2+1)^(0+1280),w,c
 10604   01688C  1802               	xorwf	(___fleq@ff1+1)^(0+1280),w,c
 10605   01688E  E10C               	bnz	u5870
 10606   016890  5007               	movf	(___fleq@ff2+2)^(0+1280),w,c
 10607   016892  1803               	xorwf	(___fleq@ff1+2)^(0+1280),w,c
 10608   016894  E109               	bnz	u5870
 10609   016896  5008               	movf	(___fleq@ff2+3)^(0+1280),w,c
 10610   016898  1804               	xorwf	(___fleq@ff1+3)^(0+1280),w,c
 10611   01689A  B4D8               	btfsc	status,2,c
 10612   01689C  EF52  F0B4         	goto	u5871
 10613   0168A0  EF54  F0B4         	goto	u5870
 10614   0168A4                     u5871:
 10615   0168A4  EF57  F0B4         	goto	l8287
 10616   0168A8                     u5870:
 10617   0168A8  90D8               	bcf	status,0,c
 10618   0168AA  EF58  F0B4         	goto	l1642
 10619   0168AE                     l8287:
 10620   0168AE  80D8               	bsf	status,0,c
 10621   0168B0                     l1642:
 10622   0168B0  0012               	return		;funcret
 10623   0168B2                     __end_of___fleq:
 10624                           	callstack 0
 10625                           
 10626 ;; *************** function _configuro *****************
 10627 ;; Defined at:
 10628 ;;		line 60 in file "p_final.c"
 10629 ;; Parameters:    Size  Location     Type
 10630 ;;		None
 10631 ;; Auto vars:     Size  Location     Type
 10632 ;;		None
 10633 ;; Return value:  Size  Location     Type
 10634 ;;                  1    wreg      void 
 10635 ;; Registers used:
 10636 ;;		wreg, status,2
 10637 ;; Tracked objects:
 10638 ;;		On entry : 0/0
 10639 ;;		On exit  : 0/0
 10640 ;;		Unchanged: 0/0
 10641 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10646 ;;Total ram usage:        0 bytes
 10647 ;; Hardware stack levels used: 1
 10648 ;; This function calls:
 10649 ;;		Nothing
 10650 ;; This function is called by:
 10651 ;;		_main
 10652 ;; This function uses a non-reentrant model
 10653 ;;
 10654                           
 10655                           	psect	text15
 10656   0170B2                     __ptext15:
 10657                           	callstack 0
 10658   0170B2                     _configuro:
 10659                           	callstack 126
 10660   0170B2                     
 10661                           ;p_final.c: 61:     OSCCON1 = 0X60;
 10662   0170B2  0E60               	movlw	96
 10663   0170B4  0100               	movlb	0	; () banked
 10664   0170B6  6FAD               	movwf	173,b	;volatile
 10665                           
 10666                           ;p_final.c: 62:     OSCFRQ = 0X06;
 10667   0170B8  0E06               	movlw	6
 10668   0170BA  6FB1               	movwf	177,b	;volatile
 10669                           
 10670                           ;p_final.c: 63:     OSCEN = 0X40;
 10671   0170BC  0E40               	movlw	64
 10672   0170BE  6FB3               	movwf	179,b	;volatile
 10673   0170C0                     
 10674                           ; BSR set to: 0
 10675                           ;p_final.c: 66:     TRISD = 0x00;
 10676   0170C0  6AC9               	clrf	201,c	;volatile
 10677   0170C2                     
 10678                           ; BSR set to: 0
 10679                           ;p_final.c: 67:     LATD = 0x00;
 10680   0170C2  6AC1               	clrf	193,c	;volatile
 10681   0170C4                     
 10682                           ; BSR set to: 0
 10683                           ;p_final.c: 68:     ANSELD = 0x00;
 10684   0170C4  0104               	movlb	4	; () banked
 10685   0170C6  6B18               	clrf	24,b	;volatile
 10686   0170C8                     
 10687                           ; BSR set to: 4
 10688                           ;p_final.c: 70:     ANSELBbits.ANSELB1 = 0;
 10689   0170C8  9308               	bcf	8,1,b	;volatile
 10690   0170CA                     
 10691                           ; BSR set to: 4
 10692                           ;p_final.c: 71:     ANSELBbits.ANSELB2 = 0;
 10693   0170CA  9508               	bcf	8,2,b	;volatile
 10694   0170CC                     
 10695                           ; BSR set to: 4
 10696   0170CC  0012               	return		;funcret
 10697   0170CE                     __end_of_configuro:
 10698                           	callstack 0
 10699                           
 10700 ;; *************** function _POS_CURSOR *****************
 10701 ;; Defined at:
 10702 ;;		line 5 in file "LCD.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;  fila            1    wreg     unsigned char 
 10705 ;;  columna         1    3[COMRAM] unsigned char 
 10706 ;; Auto vars:     Size  Location     Type
 10707 ;;  fila            1    4[COMRAM] unsigned char 
 10708 ;; Return value:  Size  Location     Type
 10709 ;;                  1    wreg      void 
 10710 ;; Registers used:
 10711 ;;		wreg, status,2, status,0, cstack
 10712 ;; Tracked objects:
 10713 ;;		On entry : 0/0
 10714 ;;		On exit  : 0/0
 10715 ;;		Unchanged: 0/0
 10716 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10717 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10720 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10721 ;;Total ram usage:        2 bytes
 10722 ;; Hardware stack levels used: 1
 10723 ;; Hardware stack levels required when called: 2
 10724 ;; This function calls:
 10725 ;;		_ENVIA_LCD_CMD
 10726 ;; This function is called by:
 10727 ;;		_main
 10728 ;; This function uses a non-reentrant model
 10729 ;;
 10730                           
 10731                           	psect	text16
 10732   0169D6                     __ptext16:
 10733                           	callstack 0
 10734   0169D6                     _POS_CURSOR:
 10735                           	callstack 124
 10736                           
 10737                           ; BSR set to: 4
 10738                           ;incstack = 0
 10739                           ;POS_CURSOR@fila stored from wreg
 10740   0169D6  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
 10741   0169D8                     
 10742                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
 10743   0169D8  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
 10744   0169DA  A4D8               	btfss	status,2,c
 10745   0169DC  EFF2  F0B4         	goto	u7961
 10746   0169E0  EFF4  F0B4         	goto	u7960
 10747   0169E4                     u7961:
 10748   0169E4  EFFA  F0B4         	goto	l10013
 10749   0169E8                     u7960:
 10750   0169E8                     
 10751                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
 10752   0169E8  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
 10753   0169EA  0F80               	addlw	128
 10754   0169EC  ECBF  F0B7         	call	_ENVIA_LCD_CMD
 10755                           
 10756                           ;LCD.c: 10:  }
 10757   0169F0  EF27  F0B5         	goto	l1219
 10758   0169F4                     l10013:
 10759   0169F4  0E02               	movlw	2
 10760   0169F6  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
 10761   0169F8  A4D8               	btfss	status,2,c
 10762   0169FA  EF01  F0B5         	goto	u7971
 10763   0169FE  EF03  F0B5         	goto	u7970
 10764   016A02                     u7971:
 10765   016A02  EF09  F0B5         	goto	l10017
 10766   016A06                     u7970:
 10767   016A06                     
 10768                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
 10769   016A06  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
 10770   016A08  0FC0               	addlw	192
 10771   016A0A  ECBF  F0B7         	call	_ENVIA_LCD_CMD
 10772                           
 10773                           ;LCD.c: 14:  }
 10774   016A0E  EF27  F0B5         	goto	l1219
 10775   016A12                     l10017:
 10776   016A12  0E03               	movlw	3
 10777   016A14  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
 10778   016A16  A4D8               	btfss	status,2,c
 10779   016A18  EF10  F0B5         	goto	u7981
 10780   016A1C  EF12  F0B5         	goto	u7980
 10781   016A20                     u7981:
 10782   016A20  EF18  F0B5         	goto	l10021
 10783   016A24                     u7980:
 10784   016A24                     
 10785                           ;LCD.c: 16:  {;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
 10786   016A24  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
 10787   016A26  0F94               	addlw	148
 10788   016A28  ECBF  F0B7         	call	_ENVIA_LCD_CMD
 10789                           
 10790                           ;LCD.c: 18:  }
 10791   016A2C  EF27  F0B5         	goto	l1219
 10792   016A30                     l10021:
 10793   016A30  0E04               	movlw	4
 10794   016A32  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
 10795   016A34  A4D8               	btfss	status,2,c
 10796   016A36  EF1F  F0B5         	goto	u7991
 10797   016A3A  EF21  F0B5         	goto	u7990
 10798   016A3E                     u7991:
 10799   016A3E  EF27  F0B5         	goto	l1215
 10800   016A42                     u7990:
 10801   016A42                     
 10802                           ;LCD.c: 20:  {;LCD.c: 21:   ENVIA_LCD_CMD(0xD4+columna);
 10803   016A42  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
 10804   016A44  0FD4               	addlw	212
 10805   016A46  ECBF  F0B7         	call	_ENVIA_LCD_CMD
 10806   016A4A  EF27  F0B5         	goto	l1219
 10807   016A4E                     l1215:
 10808   016A4E                     l1219:
 10809   016A4E  0012               	return		;funcret
 10810   016A50                     __end_of_POS_CURSOR:
 10811                           	callstack 0
 10812                           
 10813 ;; *************** function _MPU6050_DMP_Init *****************
 10814 ;; Defined at:
 10815 ;;		line 97 in file "MPU6050_DMP.c"
 10816 ;; Parameters:    Size  Location     Type
 10817 ;;		None
 10818 ;; Auto vars:     Size  Location     Type
 10819 ;;		None
 10820 ;; Return value:  Size  Location     Type
 10821 ;;                  1    wreg      unsigned char 
 10822 ;; Registers used:
 10823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10824 ;; Tracked objects:
 10825 ;;		On entry : 0/0
 10826 ;;		On exit  : 0/0
 10827 ;;		Unchanged: 0/0
 10828 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10833 ;;Total ram usage:        0 bytes
 10834 ;; Hardware stack levels used: 1
 10835 ;; Hardware stack levels required when called: 7
 10836 ;; This function calls:
 10837 ;;		_MPU6050_Init
 10838 ;; This function is called by:
 10839 ;;		_main
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           
 10843                           	psect	text17
 10844   017120                     __ptext17:
 10845                           	callstack 0
 10846   017120                     _MPU6050_DMP_Init:
 10847                           	callstack 119
 10848   017120                     
 10849                           ;MPU6050_DMP.c: 99:     if (!mpu6050_initialized) {
 10850   017120  0106               	movlb	6	; () banked
 10851   017122  51FE               	movf	_mpu6050_initialized& (0+255),w,b
 10852   017124  A4D8               	btfss	status,2,c
 10853   017126  EF97  F0B8         	goto	u7891
 10854   01712A  EF99  F0B8         	goto	u7890
 10855   01712E                     u7891:
 10856   01712E  EF9B  F0B8         	goto	l581
 10857   017132                     u7890:
 10858   017132                     
 10859                           ; BSR set to: 6
 10860                           ;MPU6050_DMP.c: 100:         if (!MPU6050_Init()) {
 10861   017132  ECC2  F0B2         	call	_MPU6050_Init	;wreg free
 10862   017136                     l581:
 10863   017136  0012               	return		;funcret
 10864   017138                     __end_of_MPU6050_DMP_Init:
 10865                           	callstack 0
 10866                           
 10867 ;; *************** function _MPU6050_Init *****************
 10868 ;; Defined at:
 10869 ;;		line 51 in file "MPU6050_DMP.c"
 10870 ;; Parameters:    Size  Location     Type
 10871 ;;		None
 10872 ;; Auto vars:     Size  Location     Type
 10873 ;;		None
 10874 ;; Return value:  Size  Location     Type
 10875 ;;                  1    wreg      _Bool 
 10876 ;; Registers used:
 10877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10878 ;; Tracked objects:
 10879 ;;		On entry : 0/0
 10880 ;;		On exit  : 0/0
 10881 ;;		Unchanged: 0/0
 10882 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10886 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10887 ;;Total ram usage:        2 bytes
 10888 ;; Hardware stack levels used: 1
 10889 ;; Hardware stack levels required when called: 6
 10890 ;; This function calls:
 10891 ;;		_MPU6050_Movement_Init
 10892 ;;		_MPU6050_TestConnection
 10893 ;;		_MPU6050_WriteRegister
 10894 ;; This function is called by:
 10895 ;;		_MPU6050_DMP_Init
 10896 ;;		_MPU6050_Reset
 10897 ;; This function uses a non-reentrant model
 10898 ;;
 10899                           
 10900                           	psect	text18
 10901   016584                     __ptext18:
 10902                           	callstack 0
 10903   016584                     _MPU6050_Init:
 10904                           	callstack 119
 10905   016584                     
 10906                           ;MPU6050_DMP.c: 54:     if (!MPU6050_TestConnection()) {
 10907   016584  EC49  F0B8         	call	_MPU6050_TestConnection	;wreg free
 10908   016588  0900               	iorlw	0
 10909   01658A  A4D8               	btfss	status,2,c
 10910   01658C  EFCA  F0B2         	goto	u7501
 10911   016590  EFCC  F0B2         	goto	u7500
 10912   016594                     u7501:
 10913   016594  EFCF  F0B2         	goto	l9443
 10914   016598                     u7500:
 10915   016598                     l9439:
 10916                           
 10917                           ;MPU6050_DMP.c: 55:         return 0;
 10918   016598  0E00               	movlw	0
 10919   01659A  EF38  F0B3         	goto	l571
 10920   01659E                     l9443:
 10921                           
 10922                           ;MPU6050_DMP.c: 59:     if (!MPU6050_WriteRegister(0x6B, 0x00)) {
 10923   01659E  0E00               	movlw	0
 10924   0165A0  6E0A               	movwf	MPU6050_WriteRegister@data^(0+1280),c
 10925   0165A2  0E6B               	movlw	107
 10926   0165A4  EC36  F0B8         	call	_MPU6050_WriteRegister
 10927   0165A8  0900               	iorlw	0
 10928   0165AA  A4D8               	btfss	status,2,c
 10929   0165AC  EFDA  F0B2         	goto	u7511
 10930   0165B0  EFDC  F0B2         	goto	u7510
 10931   0165B4                     u7511:
 10932   0165B4  EFDE  F0B2         	goto	l9449
 10933   0165B8                     u7510:
 10934   0165B8  EFCC  F0B2         	goto	l9439
 10935   0165BC                     l9449:
 10936                           
 10937                           ;MPU6050_DMP.c: 62:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 10938   0165BC  0E09               	movlw	9
 10939   0165BE  6E0F               	movwf	(??_MPU6050_Init+1)^(0+1280),c
 10940   0165C0  0E1E               	movlw	30
 10941   0165C2  6E0E               	movwf	??_MPU6050_Init^(0+1280),c
 10942   0165C4  0EE4               	movlw	228
 10943   0165C6                     u9147:
 10944   0165C6  2EE8               	decfsz	wreg,f,c
 10945   0165C8  D7FE               	bra	u9147
 10946   0165CA  2E0E               	decfsz	??_MPU6050_Init^(0+1280),f,c
 10947   0165CC  D7FC               	bra	u9147
 10948   0165CE  2E0F               	decfsz	(??_MPU6050_Init+1)^(0+1280),f,c
 10949   0165D0  D7FA               	bra	u9147
 10950   0165D2  D000               	nop2	
 10951   0165D4                     
 10952                           ;MPU6050_DMP.c: 65:     if (!MPU6050_WriteRegister(0x19, 0x07)) {
 10953   0165D4  0E07               	movlw	7
 10954   0165D6  6E0A               	movwf	MPU6050_WriteRegister@data^(0+1280),c
 10955   0165D8  0E19               	movlw	25
 10956   0165DA  EC36  F0B8         	call	_MPU6050_WriteRegister
 10957   0165DE  0900               	iorlw	0
 10958   0165E0  A4D8               	btfss	status,2,c
 10959   0165E2  EFF5  F0B2         	goto	u7521
 10960   0165E6  EFF7  F0B2         	goto	u7520
 10961   0165EA                     u7521:
 10962   0165EA  EFF9  F0B2         	goto	l9457
 10963   0165EE                     u7520:
 10964   0165EE  EFCC  F0B2         	goto	l9439
 10965   0165F2                     l9457:
 10966                           
 10967                           ;MPU6050_DMP.c: 70:     if (!MPU6050_WriteRegister(0x1A, 0x03)) {
 10968   0165F2  0E03               	movlw	3
 10969   0165F4  6E0A               	movwf	MPU6050_WriteRegister@data^(0+1280),c
 10970   0165F6  0E1A               	movlw	26
 10971   0165F8  EC36  F0B8         	call	_MPU6050_WriteRegister
 10972   0165FC  0900               	iorlw	0
 10973   0165FE  A4D8               	btfss	status,2,c
 10974   016600  EF04  F0B3         	goto	u7531
 10975   016604  EF06  F0B3         	goto	u7530
 10976   016608                     u7531:
 10977   016608  EF08  F0B3         	goto	l9463
 10978   01660C                     u7530:
 10979   01660C  EFCC  F0B2         	goto	l9439
 10980   016610                     l9463:
 10981                           
 10982                           ;MPU6050_DMP.c: 75:     if (!MPU6050_WriteRegister(0x1C, 0x08)) {
 10983   016610  0E08               	movlw	8
 10984   016612  6E0A               	movwf	MPU6050_WriteRegister@data^(0+1280),c
 10985   016614  0E1C               	movlw	28
 10986   016616  EC36  F0B8         	call	_MPU6050_WriteRegister
 10987   01661A  0900               	iorlw	0
 10988   01661C  A4D8               	btfss	status,2,c
 10989   01661E  EF13  F0B3         	goto	u7541
 10990   016622  EF15  F0B3         	goto	u7540
 10991   016626                     u7541:
 10992   016626  EF17  F0B3         	goto	l9469
 10993   01662A                     u7540:
 10994   01662A  EFCC  F0B2         	goto	l9439
 10995   01662E                     l9469:
 10996                           
 10997                           ;MPU6050_DMP.c: 80:     if (!MPU6050_WriteRegister(0x1B, 0x08)) {
 10998   01662E  0E08               	movlw	8
 10999   016630  6E0A               	movwf	MPU6050_WriteRegister@data^(0+1280),c
 11000   016632  0E1B               	movlw	27
 11001   016634  EC36  F0B8         	call	_MPU6050_WriteRegister
 11002   016638  0900               	iorlw	0
 11003   01663A  A4D8               	btfss	status,2,c
 11004   01663C  EF22  F0B3         	goto	u7551
 11005   016640  EF24  F0B3         	goto	u7550
 11006   016644                     u7551:
 11007   016644  EF26  F0B3         	goto	l9475
 11008   016648                     u7550:
 11009   016648  EFCC  F0B2         	goto	l9439
 11010   01664C                     l9475:
 11011                           
 11012                           ;MPU6050_DMP.c: 85:     MPU6050_Movement_Init();
 11013   01664C  EC98  F0B5         	call	_MPU6050_Movement_Init	;wreg free
 11014   016650                     
 11015                           ;MPU6050_DMP.c: 88:     _delay((unsigned long)((50)*(64000000UL/4000.0)));
 11016   016650  0E05               	movlw	5
 11017   016652  6E0F               	movwf	(??_MPU6050_Init+1)^(0+1280),c
 11018   016654  0E0F               	movlw	15
 11019   016656  6E0E               	movwf	??_MPU6050_Init^(0+1280),c
 11020   016658  0EF1               	movlw	241
 11021   01665A                     u9157:
 11022   01665A  2EE8               	decfsz	wreg,f,c
 11023   01665C  D7FE               	bra	u9157
 11024   01665E  2E0E               	decfsz	??_MPU6050_Init^(0+1280),f,c
 11025   016660  D7FC               	bra	u9157
 11026   016662  2E0F               	decfsz	(??_MPU6050_Init+1)^(0+1280),f,c
 11027   016664  D7FA               	bra	u9157
 11028   016666  0000               	nop	
 11029   016668                     
 11030                           ;MPU6050_DMP.c: 90:     mpu6050_initialized = 1;
 11031   016668  0E01               	movlw	1
 11032   01666A  0106               	movlb	6	; () banked
 11033   01666C  6FFE               	movwf	_mpu6050_initialized& (0+255),b
 11034   01666E                     
 11035                           ; BSR set to: 6
 11036                           ;MPU6050_DMP.c: 91:     return 1;
 11037   01666E  0E01               	movlw	1
 11038   016670                     l571:
 11039   016670  0012               	return		;funcret
 11040   016672                     __end_of_MPU6050_Init:
 11041                           	callstack 0
 11042                           
 11043 ;; *************** function _MPU6050_WriteRegister *****************
 11044 ;; Defined at:
 11045 ;;		line 564 in file "MPU6050_DMP.c"
 11046 ;; Parameters:    Size  Location     Type
 11047 ;;  reg             1    wreg     unsigned char 
 11048 ;;  data            1    9[COMRAM] unsigned char 
 11049 ;; Auto vars:     Size  Location     Type
 11050 ;;  reg             1   10[COMRAM] unsigned char 
 11051 ;; Return value:  Size  Location     Type
 11052 ;;                  1    wreg      _Bool 
 11053 ;; Registers used:
 11054 ;;		wreg, status,2, status,0, cstack
 11055 ;; Tracked objects:
 11056 ;;		On entry : 0/0
 11057 ;;		On exit  : 0/0
 11058 ;;		Unchanged: 0/0
 11059 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11060 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11061 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11063 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11064 ;;Total ram usage:        2 bytes
 11065 ;; Hardware stack levels used: 1
 11066 ;; Hardware stack levels required when called: 3
 11067 ;; This function calls:
 11068 ;;		_SW_I2C_WriteRegister
 11069 ;; This function is called by:
 11070 ;;		_MPU6050_Init
 11071 ;;		_MPU6050_Reset
 11072 ;;		_MPU6050_Sleep
 11073 ;;		_MPU6050_WakeUp
 11074 ;; This function uses a non-reentrant model
 11075 ;;
 11076                           
 11077                           	psect	text19
 11078   01706C                     __ptext19:
 11079                           	callstack 0
 11080   01706C                     _MPU6050_WriteRegister:
 11081                           	callstack 121
 11082                           
 11083                           ;incstack = 0
 11084                           ;MPU6050_WriteRegister@reg stored from wreg
 11085   01706C  6E0B               	movwf	MPU6050_WriteRegister@reg^(0+1280),c
 11086   01706E                     
 11087                           ;MPU6050_DMP.c: 565:     return (SW_I2C_WriteRegister(0x68, reg, data) == SW_I2C_SUCCESS
      +                          );
 11088   01706E  C50B  F506         	movff	MPU6050_WriteRegister@reg,SW_I2C_WriteRegister@reg_addr
 11089   017072  C50A  F507         	movff	MPU6050_WriteRegister@data,SW_I2C_WriteRegister@data
 11090   017076  0E68               	movlw	104
 11091   017078  ECAB  F0B4         	call	_SW_I2C_WriteRegister
 11092   01707C  0900               	iorlw	0
 11093   01707E  B4D8               	btfsc	status,2,c
 11094   017080  EF44  F0B8         	goto	u7051
 11095   017084  EF47  F0B8         	goto	u7050
 11096   017088                     u7051:
 11097   017088  0E01               	movlw	1
 11098   01708A  EF48  F0B8         	goto	u7060
 11099   01708E                     u7050:
 11100   01708E  0E00               	movlw	0
 11101   017090                     u7060:
 11102   017090  0012               	return		;funcret
 11103   017092                     __end_of_MPU6050_WriteRegister:
 11104                           	callstack 0
 11105                           
 11106 ;; *************** function _SW_I2C_WriteRegister *****************
 11107 ;; Defined at:
 11108 ;;		line 240 in file "Software_I2C.c"
 11109 ;; Parameters:    Size  Location     Type
 11110 ;;  device_addr     1    wreg     unsigned char 
 11111 ;;  reg_addr        1    5[COMRAM] unsigned char 
 11112 ;;  data            1    6[COMRAM] unsigned char 
 11113 ;; Auto vars:     Size  Location     Type
 11114 ;;  device_addr     1    7[COMRAM] unsigned char 
 11115 ;;  result          1    8[COMRAM] enum E17123
 11116 ;; Return value:  Size  Location     Type
 11117 ;;                  1    wreg      enum E17547
 11118 ;; Registers used:
 11119 ;;		wreg, status,2, status,0, cstack
 11120 ;; Tracked objects:
 11121 ;;		On entry : 0/0
 11122 ;;		On exit  : 0/0
 11123 ;;		Unchanged: 0/0
 11124 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11126 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11128 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11129 ;;Total ram usage:        4 bytes
 11130 ;; Hardware stack levels used: 1
 11131 ;; Hardware stack levels required when called: 2
 11132 ;; This function calls:
 11133 ;;		_SW_I2C_Start
 11134 ;;		_SW_I2C_Stop
 11135 ;;		_SW_I2C_WriteByte
 11136 ;; This function is called by:
 11137 ;;		_MPU6050_WriteRegister
 11138 ;; This function uses a non-reentrant model
 11139 ;;
 11140                           
 11141                           	psect	text20
 11142   016956                     __ptext20:
 11143                           	callstack 0
 11144   016956                     _SW_I2C_WriteRegister:
 11145                           	callstack 121
 11146                           
 11147                           ;incstack = 0
 11148                           ;SW_I2C_WriteRegister@device_addr stored from wreg
 11149   016956  6E08               	movwf	SW_I2C_WriteRegister@device_addr^(0+1280),c
 11150   016958                     
 11151                           ;Software_I2C.c: 241:     sw_i2c_error_t result;;Software_I2C.c: 244:     result = SW_I2
      +                          C_Start();
 11152   016958  EC0F  F0AF         	call	_SW_I2C_Start	;wreg free
 11153   01695C  6E09               	movwf	SW_I2C_WriteRegister@result^(0+1280),c
 11154   01695E                     
 11155                           ;Software_I2C.c: 245:     if (result != SW_I2C_SUCCESS) {
 11156   01695E  5009               	movf	SW_I2C_WriteRegister@result^(0+1280),w,c
 11157   016960  B4D8               	btfsc	status,2,c
 11158   016962  EFB5  F0B4         	goto	u6321
 11159   016966  EFB7  F0B4         	goto	u6320
 11160   01696A                     u6321:
 11161   01696A  EFBA  F0B4         	goto	l8505
 11162   01696E                     u6320:
 11163   01696E                     l8501:
 11164                           
 11165                           ;Software_I2C.c: 246:         return result;
 11166   01696E  5009               	movf	SW_I2C_WriteRegister@result^(0+1280),w,c
 11167   016970  EFEA  F0B4         	goto	l1065
 11168   016974                     l8505:
 11169                           
 11170                           ;Software_I2C.c: 251:     result = SW_I2C_WriteByte((uint8_t)((device_addr << 1) | 0));
 11171   016974  5008               	movf	SW_I2C_WriteRegister@device_addr^(0+1280),w,c
 11172   016976  2408               	addwf	SW_I2C_WriteRegister@device_addr^(0+1280),w,c
 11173   016978  EC67  F0A7         	call	_SW_I2C_WriteByte
 11174   01697C  6E09               	movwf	SW_I2C_WriteRegister@result^(0+1280),c
 11175   01697E                     
 11176                           ;Software_I2C.c: 252:     if (result != SW_I2C_SUCCESS) {
 11177   01697E  5009               	movf	SW_I2C_WriteRegister@result^(0+1280),w,c
 11178   016980  B4D8               	btfsc	status,2,c
 11179   016982  EFC5  F0B4         	goto	u6331
 11180   016986  EFC7  F0B4         	goto	u6330
 11181   01698A                     u6331:
 11182   01698A  EFCB  F0B4         	goto	l8515
 11183   01698E                     u6330:
 11184   01698E                     l8509:
 11185                           
 11186                           ;Software_I2C.c: 253:         SW_I2C_Stop();
 11187   01698E  ECBE  F0AD         	call	_SW_I2C_Stop	;wreg free
 11188   016992  EFB7  F0B4         	goto	l8501
 11189   016996                     l8515:
 11190                           
 11191                           ;Software_I2C.c: 258:     result = SW_I2C_WriteByte(reg_addr);
 11192   016996  5006               	movf	SW_I2C_WriteRegister@reg_addr^(0+1280),w,c
 11193   016998  EC67  F0A7         	call	_SW_I2C_WriteByte
 11194   01699C  6E09               	movwf	SW_I2C_WriteRegister@result^(0+1280),c
 11195   01699E                     
 11196                           ;Software_I2C.c: 259:     if (result != SW_I2C_SUCCESS) {
 11197   01699E  5009               	movf	SW_I2C_WriteRegister@result^(0+1280),w,c
 11198   0169A0  B4D8               	btfsc	status,2,c
 11199   0169A2  EFD5  F0B4         	goto	u6341
 11200   0169A6  EFD7  F0B4         	goto	u6340
 11201   0169AA                     u6341:
 11202   0169AA  EFD9  F0B4         	goto	l8525
 11203   0169AE                     u6340:
 11204   0169AE  EFC7  F0B4         	goto	l8509
 11205   0169B2                     l8525:
 11206                           
 11207                           ;Software_I2C.c: 265:     result = SW_I2C_WriteByte(data);
 11208   0169B2  5007               	movf	SW_I2C_WriteRegister@data^(0+1280),w,c
 11209   0169B4  EC67  F0A7         	call	_SW_I2C_WriteByte
 11210   0169B8  6E09               	movwf	SW_I2C_WriteRegister@result^(0+1280),c
 11211   0169BA                     
 11212                           ;Software_I2C.c: 266:     if (result != SW_I2C_SUCCESS) {
 11213   0169BA  5009               	movf	SW_I2C_WriteRegister@result^(0+1280),w,c
 11214   0169BC  B4D8               	btfsc	status,2,c
 11215   0169BE  EFE3  F0B4         	goto	u6351
 11216   0169C2  EFE5  F0B4         	goto	u6350
 11217   0169C6                     u6351:
 11218   0169C6  EFE7  F0B4         	goto	l8535
 11219   0169CA                     u6350:
 11220   0169CA  EFC7  F0B4         	goto	l8509
 11221   0169CE                     l8535:
 11222                           
 11223                           ;Software_I2C.c: 272:     SW_I2C_Stop();
 11224   0169CE  ECBE  F0AD         	call	_SW_I2C_Stop	;wreg free
 11225   0169D2                     
 11226                           ;Software_I2C.c: 274:     return SW_I2C_SUCCESS;
 11227   0169D2  0E00               	movlw	0
 11228   0169D4                     l1065:
 11229   0169D4  0012               	return		;funcret
 11230   0169D6                     __end_of_SW_I2C_WriteRegister:
 11231                           	callstack 0
 11232                           
 11233 ;; *************** function _MPU6050_TestConnection *****************
 11234 ;; Defined at:
 11235 ;;		line 519 in file "MPU6050_DMP.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;		None
 11238 ;; Auto vars:     Size  Location     Type
 11239 ;;  who_am_i        1   12[COMRAM] unsigned char 
 11240 ;; Return value:  Size  Location     Type
 11241 ;;                  1    wreg      _Bool 
 11242 ;; Registers used:
 11243 ;;		wreg, status,2, status,0, cstack
 11244 ;; Tracked objects:
 11245 ;;		On entry : 0/0
 11246 ;;		On exit  : 0/0
 11247 ;;		Unchanged: 0/0
 11248 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11253 ;;Total ram usage:        1 bytes
 11254 ;; Hardware stack levels used: 1
 11255 ;; Hardware stack levels required when called: 5
 11256 ;; This function calls:
 11257 ;;		_MPU6050_ReadRegister
 11258 ;; This function is called by:
 11259 ;;		_MPU6050_Init
 11260 ;; This function uses a non-reentrant model
 11261 ;;
 11262                           
 11263                           	psect	text21
 11264   017092                     __ptext21:
 11265                           	callstack 0
 11266   017092                     _MPU6050_TestConnection:
 11267                           	callstack 119
 11268   017092                     
 11269                           ;MPU6050_DMP.c: 521:     uint8_t who_am_i = MPU6050_ReadRegister(0x75);
 11270   017092  0E75               	movlw	117
 11271   017094  ECAD  F0B8         	call	_MPU6050_ReadRegister
 11272   017098  6E0D               	movwf	MPU6050_TestConnection@who_am_i^(0+1280),c
 11273   01709A                     
 11274                           ;MPU6050_DMP.c: 522:     return (who_am_i == 0x68);
 11275   01709A  0E68               	movlw	104
 11276   01709C  180D               	xorwf	MPU6050_TestConnection@who_am_i^(0+1280),w,c
 11277   01709E  B4D8               	btfsc	status,2,c
 11278   0170A0  EF54  F0B8         	goto	u7031
 11279   0170A4  EF57  F0B8         	goto	u7030
 11280   0170A8                     u7031:
 11281   0170A8  0E01               	movlw	1
 11282   0170AA  EF58  F0B8         	goto	u7040
 11283   0170AE                     u7030:
 11284   0170AE  0E00               	movlw	0
 11285   0170B0                     u7040:
 11286   0170B0  0012               	return		;funcret
 11287   0170B2                     __end_of_MPU6050_TestConnection:
 11288                           	callstack 0
 11289                           
 11290 ;; *************** function _MPU6050_ReadRegister *****************
 11291 ;; Defined at:
 11292 ;;		line 571 in file "MPU6050_DMP.c"
 11293 ;; Parameters:    Size  Location     Type
 11294 ;;  reg             1    wreg     unsigned char 
 11295 ;; Auto vars:     Size  Location     Type
 11296 ;;  reg             1   11[COMRAM] unsigned char 
 11297 ;; Return value:  Size  Location     Type
 11298 ;;                  1    wreg      unsigned char 
 11299 ;; Registers used:
 11300 ;;		wreg, status,2, status,0, cstack
 11301 ;; Tracked objects:
 11302 ;;		On entry : 0/0
 11303 ;;		On exit  : 0/0
 11304 ;;		Unchanged: 0/0
 11305 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11309 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11310 ;;Total ram usage:        1 bytes
 11311 ;; Hardware stack levels used: 1
 11312 ;; Hardware stack levels required when called: 4
 11313 ;; This function calls:
 11314 ;;		_SW_I2C_ReadRegister
 11315 ;; This function is called by:
 11316 ;;		_MPU6050_TestConnection
 11317 ;; This function uses a non-reentrant model
 11318 ;;
 11319                           
 11320                           	psect	text22
 11321   01715A                     __ptext22:
 11322                           	callstack 0
 11323   01715A                     _MPU6050_ReadRegister:
 11324                           	callstack 119
 11325                           
 11326                           ;incstack = 0
 11327                           ;MPU6050_ReadRegister@reg stored from wreg
 11328   01715A  6E0C               	movwf	MPU6050_ReadRegister@reg^(0+1280),c
 11329   01715C                     
 11330                           ;MPU6050_DMP.c: 572:     return SW_I2C_ReadRegister(0x68, reg);
 11331   01715C  C50C  F508         	movff	MPU6050_ReadRegister@reg,SW_I2C_ReadRegister@reg_addr
 11332   017160  0E68               	movlw	104
 11333   017162  EC59  F0B4         	call	_SW_I2C_ReadRegister
 11334   017166  0012               	return		;funcret
 11335   017168                     __end_of_MPU6050_ReadRegister:
 11336                           	callstack 0
 11337                           
 11338 ;; *************** function _SW_I2C_ReadRegister *****************
 11339 ;; Defined at:
 11340 ;;		line 280 in file "Software_I2C.c"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;  device_addr     1    wreg     unsigned char 
 11343 ;;  reg_addr        1    7[COMRAM] unsigned char 
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;  device_addr     1    9[COMRAM] unsigned char 
 11346 ;;  result          1   10[COMRAM] enum E17123
 11347 ;;  data            1    8[COMRAM] unsigned char 
 11348 ;; Return value:  Size  Location     Type
 11349 ;;                  1    wreg      unsigned char 
 11350 ;; Registers used:
 11351 ;;		wreg, status,2, status,0, cstack
 11352 ;; Tracked objects:
 11353 ;;		On entry : 0/0
 11354 ;;		On exit  : 0/0
 11355 ;;		Unchanged: 0/0
 11356 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11357 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11358 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11360 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11361 ;;Total ram usage:        4 bytes
 11362 ;; Hardware stack levels used: 1
 11363 ;; Hardware stack levels required when called: 3
 11364 ;; This function calls:
 11365 ;;		_SW_I2C_ReadByte
 11366 ;;		_SW_I2C_Restart
 11367 ;;		_SW_I2C_Start
 11368 ;;		_SW_I2C_Stop
 11369 ;;		_SW_I2C_WriteByte
 11370 ;; This function is called by:
 11371 ;;		_MPU6050_ReadRegister
 11372 ;; This function uses a non-reentrant model
 11373 ;;
 11374                           
 11375                           	psect	text23
 11376   0168B2                     __ptext23:
 11377                           	callstack 0
 11378   0168B2                     _SW_I2C_ReadRegister:
 11379                           	callstack 119
 11380                           
 11381                           ;incstack = 0
 11382                           ;SW_I2C_ReadRegister@device_addr stored from wreg
 11383   0168B2  6E0A               	movwf	SW_I2C_ReadRegister@device_addr^(0+1280),c
 11384   0168B4                     
 11385                           ;Software_I2C.c: 285:     result = SW_I2C_Start();
 11386   0168B4  EC0F  F0AF         	call	_SW_I2C_Start	;wreg free
 11387   0168B8  6E0B               	movwf	SW_I2C_ReadRegister@result^(0+1280),c
 11388   0168BA                     
 11389                           ;Software_I2C.c: 286:     if (result != SW_I2C_SUCCESS) {
 11390   0168BA  500B               	movf	SW_I2C_ReadRegister@result^(0+1280),w,c
 11391   0168BC  B4D8               	btfsc	status,2,c
 11392   0168BE  EF63  F0B4         	goto	u5381
 11393   0168C2  EF65  F0B4         	goto	u5380
 11394   0168C6                     u5381:
 11395   0168C6  EF68  F0B4         	goto	l7959
 11396   0168CA                     u5380:
 11397   0168CA                     l7955:
 11398                           
 11399                           ;Software_I2C.c: 287:         return 0x00;
 11400   0168CA  0E00               	movlw	0
 11401   0168CC  EFAA  F0B4         	goto	l1072
 11402   0168D0                     l7959:
 11403                           
 11404                           ;Software_I2C.c: 292:     result = SW_I2C_WriteByte((uint8_t)((device_addr << 1) | 0));
 11405   0168D0  500A               	movf	SW_I2C_ReadRegister@device_addr^(0+1280),w,c
 11406   0168D2  240A               	addwf	SW_I2C_ReadRegister@device_addr^(0+1280),w,c
 11407   0168D4  EC67  F0A7         	call	_SW_I2C_WriteByte
 11408   0168D8  6E0B               	movwf	SW_I2C_ReadRegister@result^(0+1280),c
 11409   0168DA                     
 11410                           ;Software_I2C.c: 293:     if (result != SW_I2C_SUCCESS) {
 11411   0168DA  500B               	movf	SW_I2C_ReadRegister@result^(0+1280),w,c
 11412   0168DC  B4D8               	btfsc	status,2,c
 11413   0168DE  EF73  F0B4         	goto	u5391
 11414   0168E2  EF75  F0B4         	goto	u5390
 11415   0168E6                     u5391:
 11416   0168E6  EF79  F0B4         	goto	l7969
 11417   0168EA                     u5390:
 11418   0168EA                     l7963:
 11419                           
 11420                           ;Software_I2C.c: 294:         SW_I2C_Stop();
 11421   0168EA  ECBE  F0AD         	call	_SW_I2C_Stop	;wreg free
 11422   0168EE  EF65  F0B4         	goto	l7955
 11423   0168F2                     l7969:
 11424                           
 11425                           ;Software_I2C.c: 299:     result = SW_I2C_WriteByte(reg_addr);
 11426   0168F2  5008               	movf	SW_I2C_ReadRegister@reg_addr^(0+1280),w,c
 11427   0168F4  EC67  F0A7         	call	_SW_I2C_WriteByte
 11428   0168F8  6E0B               	movwf	SW_I2C_ReadRegister@result^(0+1280),c
 11429   0168FA                     
 11430                           ;Software_I2C.c: 300:     if (result != SW_I2C_SUCCESS) {
 11431   0168FA  500B               	movf	SW_I2C_ReadRegister@result^(0+1280),w,c
 11432   0168FC  B4D8               	btfsc	status,2,c
 11433   0168FE  EF83  F0B4         	goto	u5401
 11434   016902  EF85  F0B4         	goto	u5400
 11435   016906                     u5401:
 11436   016906  EF87  F0B4         	goto	l7979
 11437   01690A                     u5400:
 11438   01690A  EF75  F0B4         	goto	l7963
 11439   01690E                     l7979:
 11440                           
 11441                           ;Software_I2C.c: 306:     result = SW_I2C_Restart();
 11442   01690E  EC9C  F0B8         	call	_SW_I2C_Restart	;wreg free
 11443   016912  6E0B               	movwf	SW_I2C_ReadRegister@result^(0+1280),c
 11444   016914                     
 11445                           ;Software_I2C.c: 307:     if (result != SW_I2C_SUCCESS) {
 11446   016914  500B               	movf	SW_I2C_ReadRegister@result^(0+1280),w,c
 11447   016916  B4D8               	btfsc	status,2,c
 11448   016918  EF90  F0B4         	goto	u5411
 11449   01691C  EF92  F0B4         	goto	u5410
 11450   016920                     u5411:
 11451   016920  EF94  F0B4         	goto	l7989
 11452   016924                     u5410:
 11453   016924  EF75  F0B4         	goto	l7963
 11454   016928                     l7989:
 11455                           
 11456                           ;Software_I2C.c: 314:     result = SW_I2C_WriteByte((uint8_t)((device_addr << 1) | 1));
 11457   016928  80D8               	bsf	status,0,c
 11458   01692A  340A               	rlcf	SW_I2C_ReadRegister@device_addr^(0+1280),w,c
 11459   01692C  EC67  F0A7         	call	_SW_I2C_WriteByte
 11460   016930  6E0B               	movwf	SW_I2C_ReadRegister@result^(0+1280),c
 11461   016932                     
 11462                           ;Software_I2C.c: 315:     if (result != SW_I2C_SUCCESS) {
 11463   016932  500B               	movf	SW_I2C_ReadRegister@result^(0+1280),w,c
 11464   016934  B4D8               	btfsc	status,2,c
 11465   016936  EF9F  F0B4         	goto	u5421
 11466   01693A  EFA1  F0B4         	goto	u5420
 11467   01693E                     u5421:
 11468   01693E  EFA3  F0B4         	goto	l7999
 11469   016942                     u5420:
 11470   016942  EF75  F0B4         	goto	l7963
 11471   016946                     l7999:
 11472                           
 11473                           ;Software_I2C.c: 321:     data = SW_I2C_ReadByte(0);
 11474   016946  0E00               	movlw	0
 11475   016948  ECC1  F0B1         	call	_SW_I2C_ReadByte
 11476   01694C  6E09               	movwf	SW_I2C_ReadRegister@data^(0+1280),c
 11477                           
 11478                           ;Software_I2C.c: 324:     SW_I2C_Stop();
 11479   01694E  ECBE  F0AD         	call	_SW_I2C_Stop	;wreg free
 11480   016952                     
 11481                           ;Software_I2C.c: 326:     return data;
 11482   016952  5009               	movf	SW_I2C_ReadRegister@data^(0+1280),w,c
 11483   016954                     l1072:
 11484   016954  0012               	return		;funcret
 11485   016956                     __end_of_SW_I2C_ReadRegister:
 11486                           	callstack 0
 11487                           
 11488 ;; *************** function _MPU6050_Movement_Init *****************
 11489 ;; Defined at:
 11490 ;;		line 305 in file "MPU6050_DMP.c"
 11491 ;; Parameters:    Size  Location     Type
 11492 ;;		None
 11493 ;; Auto vars:     Size  Location     Type
 11494 ;;		None
 11495 ;; Return value:  Size  Location     Type
 11496 ;;                  1    wreg      void 
 11497 ;; Registers used:
 11498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11499 ;; Tracked objects:
 11500 ;;		On entry : 0/0
 11501 ;;		On exit  : 0/0
 11502 ;;		Unchanged: 0/0
 11503 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11508 ;;Total ram usage:        0 bytes
 11509 ;; Hardware stack levels used: 1
 11510 ;; Hardware stack levels required when called: 1
 11511 ;; This function calls:
 11512 ;;		_MovingAverage_Reset
 11513 ;; This function is called by:
 11514 ;;		_MPU6050_Init
 11515 ;; This function uses a non-reentrant model
 11516 ;;
 11517                           
 11518                           	psect	text24
 11519   016B30                     __ptext24:
 11520                           	callstack 0
 11521   016B30                     _MPU6050_Movement_Init:
 11522                           	callstack 123
 11523   016B30                     
 11524                           ;MPU6050_DMP.c: 307:     movement_detector.current_movement = MOVEMENT_NONE;
 11525   016B30  0107               	movlb	7	; () banked
 11526   016B32  6B14               	clrf	_movement_detector& (0+255),b
 11527                           
 11528                           ;MPU6050_DMP.c: 308:     movement_detector.state = MPU6050_STATE_IDLE;
 11529   016B34  6B15               	clrf	(_movement_detector+1)& (0+255),b
 11530   016B36                     
 11531                           ; BSR set to: 7
 11532                           ;MPU6050_DMP.c: 309:     movement_detector.movement_start_time = 0;
 11533   016B36  0E00               	movlw	0
 11534   016B38  6F17               	movwf	(_movement_detector+3)& (0+255),b
 11535   016B3A  0E00               	movlw	0
 11536   016B3C  6F16               	movwf	(_movement_detector+2)& (0+255),b
 11537                           
 11538                           ;MPU6050_DMP.c: 310:     movement_detector.movement_duration = 0;
 11539   016B3E  0E00               	movlw	0
 11540   016B40  6F19               	movwf	(_movement_detector+5)& (0+255),b
 11541   016B42  0E00               	movlw	0
 11542   016B44  6F18               	movwf	(_movement_detector+4)& (0+255),b
 11543   016B46                     
 11544                           ; BSR set to: 7
 11545                           ;MPU6050_DMP.c: 311:     movement_detector.confidence_level = 0;
 11546   016B46  6B1A               	clrf	(_movement_detector+6)& (0+255),b
 11547   016B48                     
 11548                           ; BSR set to: 7
 11549                           ;MPU6050_DMP.c: 314:     MovingAverage_Reset(&movement_detector.accel_x_filter);
 11550   016B48  0E1B               	movlw	low (_movement_detector+7)
 11551   016B4A  6E01               	movwf	MovingAverage_Reset@filter^(0+1280),c
 11552   016B4C  0E07               	movlw	high (_movement_detector+7)
 11553   016B4E  6E02               	movwf	(MovingAverage_Reset@filter+1)^(0+1280),c
 11554   016B50  ECC9  F0B5         	call	_MovingAverage_Reset	;wreg free
 11555   016B54                     
 11556                           ;MPU6050_DMP.c: 315:     MovingAverage_Reset(&movement_detector.accel_y_filter);
 11557   016B54  0E3D               	movlw	low (_movement_detector+41)
 11558   016B56  6E01               	movwf	MovingAverage_Reset@filter^(0+1280),c
 11559   016B58  0E07               	movlw	high (_movement_detector+41)
 11560   016B5A  6E02               	movwf	(MovingAverage_Reset@filter+1)^(0+1280),c
 11561   016B5C  ECC9  F0B5         	call	_MovingAverage_Reset	;wreg free
 11562   016B60                     
 11563                           ;MPU6050_DMP.c: 316:     MovingAverage_Reset(&movement_detector.accel_z_filter);
 11564   016B60  0E5F               	movlw	low (_movement_detector+75)
 11565   016B62  6E01               	movwf	MovingAverage_Reset@filter^(0+1280),c
 11566   016B64  0E07               	movlw	high (_movement_detector+75)
 11567   016B66  6E02               	movwf	(MovingAverage_Reset@filter+1)^(0+1280),c
 11568   016B68  ECC9  F0B5         	call	_MovingAverage_Reset	;wreg free
 11569   016B6C                     
 11570                           ;MPU6050_DMP.c: 317:     MovingAverage_Reset(&movement_detector.gyro_x_filter);
 11571   016B6C  0E81               	movlw	low (_movement_detector+109)
 11572   016B6E  6E01               	movwf	MovingAverage_Reset@filter^(0+1280),c
 11573   016B70  0E07               	movlw	high (_movement_detector+109)
 11574   016B72  6E02               	movwf	(MovingAverage_Reset@filter+1)^(0+1280),c
 11575   016B74  ECC9  F0B5         	call	_MovingAverage_Reset	;wreg free
 11576   016B78                     
 11577                           ;MPU6050_DMP.c: 318:     MovingAverage_Reset(&movement_detector.gyro_y_filter);
 11578   016B78  0EA3               	movlw	low (_movement_detector+143)
 11579   016B7A  6E01               	movwf	MovingAverage_Reset@filter^(0+1280),c
 11580   016B7C  0E07               	movlw	high (_movement_detector+143)
 11581   016B7E  6E02               	movwf	(MovingAverage_Reset@filter+1)^(0+1280),c
 11582   016B80  ECC9  F0B5         	call	_MovingAverage_Reset	;wreg free
 11583   016B84                     
 11584                           ;MPU6050_DMP.c: 319:     MovingAverage_Reset(&movement_detector.gyro_z_filter);
 11585   016B84  0EC5               	movlw	low (_movement_detector+177)
 11586   016B86  6E01               	movwf	MovingAverage_Reset@filter^(0+1280),c
 11587   016B88  0E07               	movlw	high (_movement_detector+177)
 11588   016B8A  6E02               	movwf	(MovingAverage_Reset@filter+1)^(0+1280),c
 11589   016B8C  ECC9  F0B5         	call	_MovingAverage_Reset	;wreg free
 11590   016B90  0012               	return		;funcret
 11591   016B92                     __end_of_MPU6050_Movement_Init:
 11592                           	callstack 0
 11593                           
 11594 ;; *************** function _MovingAverage_Reset *****************
 11595 ;; Defined at:
 11596 ;;		line 614 in file "MPU6050_DMP.c"
 11597 ;; Parameters:    Size  Location     Type
 11598 ;;  filter          2    0[COMRAM] PTR struct .
 11599 ;;		 -> movement_detector(211), 
 11600 ;; Auto vars:     Size  Location     Type
 11601 ;;  i               1    4[COMRAM] unsigned char 
 11602 ;; Return value:  Size  Location     Type
 11603 ;;                  1    wreg      void 
 11604 ;; Registers used:
 11605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11606 ;; Tracked objects:
 11607 ;;		On entry : 0/0
 11608 ;;		On exit  : 0/0
 11609 ;;		Unchanged: 0/0
 11610 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11613 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11614 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11615 ;;Total ram usage:        5 bytes
 11616 ;; Hardware stack levels used: 1
 11617 ;; This function calls:
 11618 ;;		Nothing
 11619 ;; This function is called by:
 11620 ;;		_MPU6050_Movement_Init
 11621 ;; This function uses a non-reentrant model
 11622 ;;
 11623                           
 11624                           	psect	text25
 11625   016B92                     __ptext25:
 11626                           	callstack 0
 11627   016B92                     _MovingAverage_Reset:
 11628                           	callstack 123
 11629   016B92                     
 11630                           ;MPU6050_DMP.c: 615:     filter->index = 0;
 11631   016B92  EE20 F020          	lfsr	2,32
 11632   016B96  5001               	movf	MovingAverage_Reset@filter^(0+1280),w,c
 11633   016B98  26D9               	addwf	fsr2l,f,c
 11634   016B9A  5002               	movf	(MovingAverage_Reset@filter+1)^(0+1280),w,c
 11635   016B9C  22DA               	addwfc	fsr2h,f,c
 11636   016B9E  6ADF               	clrf	indf2,c
 11637                           
 11638                           ;MPU6050_DMP.c: 616:     filter->filled = 0;
 11639   016BA0  EE20 F021          	lfsr	2,33
 11640   016BA4  5001               	movf	MovingAverage_Reset@filter^(0+1280),w,c
 11641   016BA6  26D9               	addwf	fsr2l,f,c
 11642   016BA8  5002               	movf	(MovingAverage_Reset@filter+1)^(0+1280),w,c
 11643   016BAA  22DA               	addwfc	fsr2h,f,c
 11644   016BAC  6ADF               	clrf	indf2,c
 11645   016BAE                     
 11646                           ;MPU6050_DMP.c: 618:     for (uint8_t i = 0; i < 8; i++) {
 11647   016BAE  6A05               	clrf	MovingAverage_Reset@i^(0+1280),c
 11648   016BB0                     l8487:
 11649                           
 11650                           ;MPU6050_DMP.c: 619:         filter->buffer[i] = 0.0f;
 11651   016BB0  5005               	movf	MovingAverage_Reset@i^(0+1280),w,c
 11652   016BB2  0D04               	mullw	4
 11653   016BB4  C4F3 F503          	movff	prodl,??_MovingAverage_Reset
 11654   016BB8  C4F4 F504          	movff	prodh,??_MovingAverage_Reset+1
 11655   016BBC  5003               	movf	??_MovingAverage_Reset^(0+1280),w,c
 11656   016BBE  2401               	addwf	MovingAverage_Reset@filter^(0+1280),w,c
 11657   016BC0  6ED9               	movwf	fsr2l,c
 11658   016BC2  5004               	movf	(??_MovingAverage_Reset+1)^(0+1280),w,c
 11659   016BC4  2002               	addwfc	(MovingAverage_Reset@filter+1)^(0+1280),w,c
 11660   016BC6  6EDA               	movwf	fsr2h,c
 11661   016BC8  0E00               	movlw	0
 11662   016BCA  6EDE               	movwf	postinc2,c
 11663   016BCC  0E00               	movlw	0
 11664   016BCE  6EDE               	movwf	postinc2,c
 11665   016BD0  0E00               	movlw	0
 11666   016BD2  6EDE               	movwf	postinc2,c
 11667   016BD4  0E00               	movlw	0
 11668   016BD6  6EDD               	movwf	postdec2,c
 11669   016BD8                     
 11670                           ;MPU6050_DMP.c: 620:     }
 11671   016BD8  2A05               	incf	MovingAverage_Reset@i^(0+1280),f,c
 11672   016BDA  0E07               	movlw	7
 11673   016BDC  6405               	cpfsgt	MovingAverage_Reset@i^(0+1280),c
 11674   016BDE  EFF3  F0B5         	goto	u6311
 11675   016BE2  EFF5  F0B5         	goto	u6310
 11676   016BE6                     u6311:
 11677   016BE6  EFD8  F0B5         	goto	l8487
 11678   016BEA                     u6310:
 11679   016BEA  0012               	return		;funcret
 11680   016BEC                     __end_of_MovingAverage_Reset:
 11681                           	callstack 0
 11682                           
 11683 ;; *************** function _MPU6050_DMP_GetData *****************
 11684 ;; Defined at:
 11685 ;;		line 118 in file "MPU6050_DMP.c"
 11686 ;; Parameters:    Size  Location     Type
 11687 ;;  ypr             2  154[BANK5 ] PTR struct .
 11688 ;;		 -> main@ypr(12), 
 11689 ;;  quat            2  156[BANK5 ] PTR struct .
 11690 ;;		 -> NULL(0), 
 11691 ;; Auto vars:     Size  Location     Type
 11692 ;;  yaw_rad         4   90[BANK6 ] float 
 11693 ;;  pitch_rad       4   86[BANK6 ] float 
 11694 ;;  roll_rad        4   82[BANK6 ] float 
 11695 ;;  dt              4    0[BANK6 ] float 
 11696 ;;  sensor_data    43   94[BANK6 ] struct .
 11697 ;;  current_time    2   44[BANK6 ] unsigned short 
 11698 ;; Return value:  Size  Location     Type
 11699 ;;                  1    wreg      _Bool 
 11700 ;; Registers used:
 11701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11702 ;; Tracked objects:
 11703 ;;		On entry : 0/0
 11704 ;;		On exit  : 0/0
 11705 ;;		Unchanged: 0/0
 11706 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11707 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11708 ;;      Locals:         0       0     137       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11709 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11710 ;;      Totals:         0       6     137       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11711 ;;Total ram usage:      143 bytes
 11712 ;; Hardware stack levels used: 1
 11713 ;; Hardware stack levels required when called: 6
 11714 ;; This function calls:
 11715 ;;		_GetTimestamp_ms
 11716 ;;		_MPU6050_ReadAll
 11717 ;;		___fladd
 11718 ;;		___fldiv
 11719 ;;		___flge
 11720 ;;		___flmul
 11721 ;;		___flneg
 11722 ;;		___flsub
 11723 ;;		___xxtofl
 11724 ;;		_atan2f
 11725 ;;		_cosf
 11726 ;;		_sinf
 11727 ;;		_sqrtf
 11728 ;; This function is called by:
 11729 ;;		_main
 11730 ;; This function uses a non-reentrant model
 11731 ;;
 11732                           
 11733                           	psect	text26
 11734   010000                     __ptext26:
 11735                           	callstack 0
 11736   010000                     _MPU6050_DMP_GetData:
 11737                           	callstack 120
 11738   010000                     
 11739                           ;MPU6050_DMP.c: 120:     static uint16_t last_read_time = 0;;MPU6050_DMP.c: 121:     uin
      +                          t16_t current_time = GetTimestamp_ms();
 11740   010000  ECA5  F0B8         	call	_GetTimestamp_ms	;wreg free
 11741   010004  C501  F62C         	movff	?_GetTimestamp_ms,MPU6050_DMP_GetData@current_time
 11742   010008  C502  F62D         	movff	?_GetTimestamp_ms+1,MPU6050_DMP_GetData@current_time+1
 11743   01000C                     
 11744                           ;MPU6050_DMP.c: 124:     if ((current_time - last_read_time) < 8) {
 11745   01000C  0106               	movlb	6	; () banked
 11746   01000E  51FB               	movf	MPU6050_DMP_GetData@last_read_time& (0+255),w,b
 11747   010010  5D2C               	subwf	MPU6050_DMP_GetData@current_time& (0+255),w,b
 11748   010012  0105               	movlb	5	; () banked
 11749   010014  6FFE               	movwf	??_MPU6050_DMP_GetData& (0+255),b
 11750   010016  0106               	movlb	6	; () banked
 11751   010018  51FC               	movf	(MPU6050_DMP_GetData@last_read_time+1)& (0+255),w,b
 11752   01001A  592D               	subwfb	(MPU6050_DMP_GetData@current_time+1)& (0+255),w,b
 11753   01001C  0105               	movlb	5	; () banked
 11754   01001E  6FFF               	movwf	(??_MPU6050_DMP_GetData+1)& (0+255),b
 11755   010020  51FF               	movf	(??_MPU6050_DMP_GetData+1)& (0+255),w,b
 11756   010022  E107               	bnz	u7901
 11757   010024  0E08               	movlw	8
 11758   010026  5DFE               	subwf	??_MPU6050_DMP_GetData& (0+255),w,b
 11759   010028  B0D8               	btfsc	status,0,c
 11760   01002A  EF19  F080         	goto	u7901
 11761   01002E  EF1B  F080         	goto	u7900
 11762   010032                     u7901:
 11763   010032  EF1D  F080         	goto	l9917
 11764   010036                     u7900:
 11765   010036  EFDE  F086         	goto	l587
 11766   01003A                     l9917:
 11767                           
 11768                           ; BSR set to: 5
 11769                           ;MPU6050_DMP.c: 128:     MPU6050_Data_t sensor_data;;MPU6050_DMP.c: 131:     if (!MPU605
      +                          0_ReadAll(&sensor_data)) {
 11770   01003A  0E5E               	movlw	low MPU6050_DMP_GetData@sensor_data
 11771   01003C  6FCC               	movwf	MPU6050_ReadAll@data& (0+255),b
 11772   01003E  0E06               	movlw	high MPU6050_DMP_GetData@sensor_data
 11773   010040  6FCD               	movwf	(MPU6050_ReadAll@data+1)& (0+255),b
 11774   010042  EC98  F08F         	call	_MPU6050_ReadAll	;wreg free
 11775   010046  0900               	iorlw	0
 11776   010048  A4D8               	btfss	status,2,c
 11777   01004A  EF29  F080         	goto	u7911
 11778   01004E  EF2B  F080         	goto	u7910
 11779   010052                     u7911:
 11780   010052  EF2D  F080         	goto	l9921
 11781   010056                     u7910:
 11782   010056  EFDE  F086         	goto	l587
 11783   01005A                     l9921:
 11784                           
 11785                           ;MPU6050_DMP.c: 136:     if (ypr != ((void*)0)) {
 11786   01005A  0105               	movlb	5	; () banked
 11787   01005C  51FA               	movf	MPU6050_DMP_GetData@ypr& (0+255),w,b
 11788   01005E  11FB               	iorwf	(MPU6050_DMP_GetData@ypr+1)& (0+255),w,b
 11789   010060  B4D8               	btfsc	status,2,c
 11790   010062  EF35  F080         	goto	u7921
 11791   010066  EF37  F080         	goto	u7920
 11792   01006A                     u7921:
 11793   01006A  EF5C  F082         	goto	l9945
 11794   01006E                     u7920:
 11795   01006E                     
 11796                           ; BSR set to: 5
 11797                           ;MPU6050_DMP.c: 138:         ypr->roll = ((atan2f(sensor_data.accel.y,sqrtf(sensor_data.
      +                          accel.x * sensor_data.accel.x + sensor_data.accel.z * sensor_data.accel.z))) * 180.0f / 
      +                          3.14159265358979323846);
 11798   01006E  C666  F509         	movff	MPU6050_DMP_GetData@sensor_data+8,___flmul@a
 11799   010072  C667  F50A         	movff	MPU6050_DMP_GetData@sensor_data+9,___flmul@a+1
 11800   010076  C668  F50B         	movff	MPU6050_DMP_GetData@sensor_data+10,___flmul@a+2
 11801   01007A  C669  F50C         	movff	MPU6050_DMP_GetData@sensor_data+11,___flmul@a+3
 11802   01007E  C666  F505         	movff	MPU6050_DMP_GetData@sensor_data+8,___flmul@b
 11803   010082  C667  F506         	movff	MPU6050_DMP_GetData@sensor_data+9,___flmul@b+1
 11804   010086  C668  F507         	movff	MPU6050_DMP_GetData@sensor_data+10,___flmul@b+2
 11805   01008A  C669  F508         	movff	MPU6050_DMP_GetData@sensor_data+11,___flmul@b+3
 11806   01008E  ECB7  F09F         	call	___flmul	;wreg free
 11807   010092  C505  F522         	movff	?___flmul,___fladd@a
 11808   010096  C506  F523         	movff	?___flmul+1,___fladd@a+1
 11809   01009A  C507  F524         	movff	?___flmul+2,___fladd@a+2
 11810   01009E  C508  F525         	movff	?___flmul+3,___fladd@a+3
 11811   0100A2  C65E  F509         	movff	MPU6050_DMP_GetData@sensor_data,___flmul@a
 11812   0100A6  C65F  F50A         	movff	MPU6050_DMP_GetData@sensor_data+1,___flmul@a+1
 11813   0100AA  C660  F50B         	movff	MPU6050_DMP_GetData@sensor_data+2,___flmul@a+2
 11814   0100AE  C661  F50C         	movff	MPU6050_DMP_GetData@sensor_data+3,___flmul@a+3
 11815   0100B2  C65E  F505         	movff	MPU6050_DMP_GetData@sensor_data,___flmul@b
 11816   0100B6  C65F  F506         	movff	MPU6050_DMP_GetData@sensor_data+1,___flmul@b+1
 11817   0100BA  C660  F507         	movff	MPU6050_DMP_GetData@sensor_data+2,___flmul@b+2
 11818   0100BE  C661  F508         	movff	MPU6050_DMP_GetData@sensor_data+3,___flmul@b+3
 11819   0100C2  ECB7  F09F         	call	___flmul	;wreg free
 11820   0100C6  C505  F51E         	movff	?___flmul,___fladd@b
 11821   0100CA  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 11822   0100CE  C507  F520         	movff	?___flmul+2,___fladd@b+2
 11823   0100D2  C508  F521         	movff	?___flmul+3,___fladd@b+3
 11824   0100D6  EC1B  F09B         	call	___fladd	;wreg free
 11825   0100DA  C51E  F52E         	movff	?___fladd,sqrtf@x
 11826   0100DE  C51F  F52F         	movff	?___fladd+1,sqrtf@x+1
 11827   0100E2  C520  F530         	movff	?___fladd+2,sqrtf@x+2
 11828   0100E6  C521  F531         	movff	?___fladd+3,sqrtf@x+3
 11829   0100EA  ECCA  F0A1         	call	_sqrtf	;wreg free
 11830   0100EE  C52E  F628         	movff	?_sqrtf,_MPU6050_DMP_GetData$3463
 11831   0100F2  C52F  F629         	movff	?_sqrtf+1,_MPU6050_DMP_GetData$3463+1
 11832   0100F6  C530  F62A         	movff	?_sqrtf+2,_MPU6050_DMP_GetData$3463+2
 11833   0100FA  C531  F62B         	movff	?_sqrtf+3,_MPU6050_DMP_GetData$3463+3
 11834   0100FE                     
 11835                           ;MPU6050_DMP.c: 138:         ypr->roll = ((atan2f(sensor_data.accel.y,sqrtf(sensor_data.
      +                          accel.x * sensor_data.accel.x + sensor_data.accel.z * sensor_data.accel.z))) * 180.0f / 
      +                          3.14159265358979323846);
 11836   0100FE  C628  F5A7         	movff	_MPU6050_DMP_GetData$3463,atan2f@x
 11837   010102  C629  F5A8         	movff	_MPU6050_DMP_GetData$3463+1,atan2f@x+1
 11838   010106  C62A  F5A9         	movff	_MPU6050_DMP_GetData$3463+2,atan2f@x+2
 11839   01010A  C62B  F5AA         	movff	_MPU6050_DMP_GetData$3463+3,atan2f@x+3
 11840   01010E  C662  F5A3         	movff	MPU6050_DMP_GetData@sensor_data+4,atan2f@y
 11841   010112  C663  F5A4         	movff	MPU6050_DMP_GetData@sensor_data+5,atan2f@y+1
 11842   010116  C664  F5A5         	movff	MPU6050_DMP_GetData@sensor_data+6,atan2f@y+2
 11843   01011A  C665  F5A6         	movff	MPU6050_DMP_GetData@sensor_data+7,atan2f@y+3
 11844   01011E  EC40  F093         	call	_atan2f	;wreg free
 11845   010122  C5A3  F604         	movff	?_atan2f,_MPU6050_DMP_GetData$3464
 11846   010126  C5A4  F605         	movff	?_atan2f+1,_MPU6050_DMP_GetData$3464+1
 11847   01012A  C5A5  F606         	movff	?_atan2f+2,_MPU6050_DMP_GetData$3464+2
 11848   01012E  C5A6  F607         	movff	?_atan2f+3,_MPU6050_DMP_GetData$3464+3
 11849   010132                     
 11850                           ;MPU6050_DMP.c: 138:         ypr->roll = ((atan2f(sensor_data.accel.y,sqrtf(sensor_data.
      +                          accel.x * sensor_data.accel.x + sensor_data.accel.z * sensor_data.accel.z))) * 180.0f / 
      +                          3.14159265358979323846);
 11851   010132  0E00               	movlw	0
 11852   010134  6E09               	movwf	___flmul@a^(0+1280),c
 11853   010136  0E00               	movlw	0
 11854   010138  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 11855   01013A  0E34               	movlw	52
 11856   01013C  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 11857   01013E  0E43               	movlw	67
 11858   010140  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 11859   010142  C604  F505         	movff	_MPU6050_DMP_GetData$3464,___flmul@b
 11860   010146  C605  F506         	movff	_MPU6050_DMP_GetData$3464+1,___flmul@b+1
 11861   01014A  C606  F507         	movff	_MPU6050_DMP_GetData$3464+2,___flmul@b+2
 11862   01014E  C607  F508         	movff	_MPU6050_DMP_GetData$3464+3,___flmul@b+3
 11863   010152  ECB7  F09F         	call	___flmul	;wreg free
 11864   010156  C505  F553         	movff	?___flmul,___fldiv@b
 11865   01015A  C506  F554         	movff	?___flmul+1,___fldiv@b+1
 11866   01015E  C507  F555         	movff	?___flmul+2,___fldiv@b+2
 11867   010162  C508  F556         	movff	?___flmul+3,___fldiv@b+3
 11868   010166  0EDB               	movlw	219
 11869   010168  6E57               	movwf	___fldiv@a^(0+1280),c
 11870   01016A  0E0F               	movlw	15
 11871   01016C  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 11872   01016E  0E49               	movlw	73
 11873   010170  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 11874   010172  0E40               	movlw	64
 11875   010174  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 11876   010176  EC9E  F0A5         	call	___fldiv	;wreg free
 11877   01017A  0105               	movlb	5	; () banked
 11878   01017C  EE20 F008          	lfsr	2,8
 11879   010180  51FA               	movf	MPU6050_DMP_GetData@ypr& (0+255),w,b
 11880   010182  26D9               	addwf	fsr2l,f,c
 11881   010184  51FB               	movf	(MPU6050_DMP_GetData@ypr+1)& (0+255),w,b
 11882   010186  22DA               	addwfc	fsr2h,f,c
 11883   010188  C553  F4DE         	movff	?___fldiv,postinc2
 11884   01018C  C554  F4DE         	movff	?___fldiv+1,postinc2
 11885   010190  C555  F4DE         	movff	?___fldiv+2,postinc2
 11886   010194  C556  F4DE         	movff	?___fldiv+3,postinc2
 11887   010198                     
 11888                           ; BSR set to: 5
 11889                           ;MPU6050_DMP.c: 142:         ypr->pitch = ((atan2f(-sensor_data.accel.x,sqrtf(sensor_dat
      +                          a.accel.y * sensor_data.accel.y + sensor_data.accel.z * sensor_data.accel.z))) * 180.0f 
      +                          / 3.14159265358979323846);
 11890   010198  C666  F509         	movff	MPU6050_DMP_GetData@sensor_data+8,___flmul@a
 11891   01019C  C667  F50A         	movff	MPU6050_DMP_GetData@sensor_data+9,___flmul@a+1
 11892   0101A0  C668  F50B         	movff	MPU6050_DMP_GetData@sensor_data+10,___flmul@a+2
 11893   0101A4  C669  F50C         	movff	MPU6050_DMP_GetData@sensor_data+11,___flmul@a+3
 11894   0101A8  C666  F505         	movff	MPU6050_DMP_GetData@sensor_data+8,___flmul@b
 11895   0101AC  C667  F506         	movff	MPU6050_DMP_GetData@sensor_data+9,___flmul@b+1
 11896   0101B0  C668  F507         	movff	MPU6050_DMP_GetData@sensor_data+10,___flmul@b+2
 11897   0101B4  C669  F508         	movff	MPU6050_DMP_GetData@sensor_data+11,___flmul@b+3
 11898   0101B8  ECB7  F09F         	call	___flmul	;wreg free
 11899   0101BC  C505  F522         	movff	?___flmul,___fladd@a
 11900   0101C0  C506  F523         	movff	?___flmul+1,___fladd@a+1
 11901   0101C4  C507  F524         	movff	?___flmul+2,___fladd@a+2
 11902   0101C8  C508  F525         	movff	?___flmul+3,___fladd@a+3
 11903   0101CC  C662  F509         	movff	MPU6050_DMP_GetData@sensor_data+4,___flmul@a
 11904   0101D0  C663  F50A         	movff	MPU6050_DMP_GetData@sensor_data+5,___flmul@a+1
 11905   0101D4  C664  F50B         	movff	MPU6050_DMP_GetData@sensor_data+6,___flmul@a+2
 11906   0101D8  C665  F50C         	movff	MPU6050_DMP_GetData@sensor_data+7,___flmul@a+3
 11907   0101DC  C662  F505         	movff	MPU6050_DMP_GetData@sensor_data+4,___flmul@b
 11908   0101E0  C663  F506         	movff	MPU6050_DMP_GetData@sensor_data+5,___flmul@b+1
 11909   0101E4  C664  F507         	movff	MPU6050_DMP_GetData@sensor_data+6,___flmul@b+2
 11910   0101E8  C665  F508         	movff	MPU6050_DMP_GetData@sensor_data+7,___flmul@b+3
 11911   0101EC  ECB7  F09F         	call	___flmul	;wreg free
 11912   0101F0  C505  F51E         	movff	?___flmul,___fladd@b
 11913   0101F4  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 11914   0101F8  C507  F520         	movff	?___flmul+2,___fladd@b+2
 11915   0101FC  C508  F521         	movff	?___flmul+3,___fladd@b+3
 11916   010200  EC1B  F09B         	call	___fladd	;wreg free
 11917   010204  C51E  F52E         	movff	?___fladd,sqrtf@x
 11918   010208  C51F  F52F         	movff	?___fladd+1,sqrtf@x+1
 11919   01020C  C520  F530         	movff	?___fladd+2,sqrtf@x+2
 11920   010210  C521  F531         	movff	?___fladd+3,sqrtf@x+3
 11921   010214  ECCA  F0A1         	call	_sqrtf	;wreg free
 11922   010218  C52E  F628         	movff	?_sqrtf,_MPU6050_DMP_GetData$3463
 11923   01021C  C52F  F629         	movff	?_sqrtf+1,_MPU6050_DMP_GetData$3463+1
 11924   010220  C530  F62A         	movff	?_sqrtf+2,_MPU6050_DMP_GetData$3463+2
 11925   010224  C531  F62B         	movff	?_sqrtf+3,_MPU6050_DMP_GetData$3463+3
 11926   010228                     
 11927                           ;MPU6050_DMP.c: 142:         ypr->pitch = ((atan2f(-sensor_data.accel.x,sqrtf(sensor_dat
      +                          a.accel.y * sensor_data.accel.y + sensor_data.accel.z * sensor_data.accel.z))) * 180.0f 
      +                          / 3.14159265358979323846);
 11928   010228  C65E  F501         	movff	MPU6050_DMP_GetData@sensor_data,___flneg@f1
 11929   01022C  C65F  F502         	movff	MPU6050_DMP_GetData@sensor_data+1,___flneg@f1+1
 11930   010230  C660  F503         	movff	MPU6050_DMP_GetData@sensor_data+2,___flneg@f1+2
 11931   010234  C661  F504         	movff	MPU6050_DMP_GetData@sensor_data+3,___flneg@f1+3
 11932   010238  EC6F  F0B7         	call	___flneg	;wreg free
 11933   01023C  C501  F608         	movff	?___flneg,_MPU6050_DMP_GetData$3465
 11934   010240  C502  F609         	movff	?___flneg+1,_MPU6050_DMP_GetData$3465+1
 11935   010244  C503  F60A         	movff	?___flneg+2,_MPU6050_DMP_GetData$3465+2
 11936   010248  C504  F60B         	movff	?___flneg+3,_MPU6050_DMP_GetData$3465+3
 11937   01024C                     
 11938                           ;MPU6050_DMP.c: 142:         ypr->pitch = ((atan2f(-sensor_data.accel.x,sqrtf(sensor_dat
      +                          a.accel.y * sensor_data.accel.y + sensor_data.accel.z * sensor_data.accel.z))) * 180.0f 
      +                          / 3.14159265358979323846);
 11939   01024C  C628  F5A7         	movff	_MPU6050_DMP_GetData$3463,atan2f@x
 11940   010250  C629  F5A8         	movff	_MPU6050_DMP_GetData$3463+1,atan2f@x+1
 11941   010254  C62A  F5A9         	movff	_MPU6050_DMP_GetData$3463+2,atan2f@x+2
 11942   010258  C62B  F5AA         	movff	_MPU6050_DMP_GetData$3463+3,atan2f@x+3
 11943   01025C  C608  F5A3         	movff	_MPU6050_DMP_GetData$3465,atan2f@y
 11944   010260  C609  F5A4         	movff	_MPU6050_DMP_GetData$3465+1,atan2f@y+1
 11945   010264  C60A  F5A5         	movff	_MPU6050_DMP_GetData$3465+2,atan2f@y+2
 11946   010268  C60B  F5A6         	movff	_MPU6050_DMP_GetData$3465+3,atan2f@y+3
 11947   01026C  EC40  F093         	call	_atan2f	;wreg free
 11948   010270  C5A3  F60C         	movff	?_atan2f,_MPU6050_DMP_GetData$3466
 11949   010274  C5A4  F60D         	movff	?_atan2f+1,_MPU6050_DMP_GetData$3466+1
 11950   010278  C5A5  F60E         	movff	?_atan2f+2,_MPU6050_DMP_GetData$3466+2
 11951   01027C  C5A6  F60F         	movff	?_atan2f+3,_MPU6050_DMP_GetData$3466+3
 11952   010280                     
 11953                           ;MPU6050_DMP.c: 142:         ypr->pitch = ((atan2f(-sensor_data.accel.x,sqrtf(sensor_dat
      +                          a.accel.y * sensor_data.accel.y + sensor_data.accel.z * sensor_data.accel.z))) * 180.0f 
      +                          / 3.14159265358979323846);
 11954   010280  0E00               	movlw	0
 11955   010282  6E09               	movwf	___flmul@a^(0+1280),c
 11956   010284  0E00               	movlw	0
 11957   010286  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 11958   010288  0E34               	movlw	52
 11959   01028A  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 11960   01028C  0E43               	movlw	67
 11961   01028E  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 11962   010290  C60C  F505         	movff	_MPU6050_DMP_GetData$3466,___flmul@b
 11963   010294  C60D  F506         	movff	_MPU6050_DMP_GetData$3466+1,___flmul@b+1
 11964   010298  C60E  F507         	movff	_MPU6050_DMP_GetData$3466+2,___flmul@b+2
 11965   01029C  C60F  F508         	movff	_MPU6050_DMP_GetData$3466+3,___flmul@b+3
 11966   0102A0  ECB7  F09F         	call	___flmul	;wreg free
 11967   0102A4  C505  F553         	movff	?___flmul,___fldiv@b
 11968   0102A8  C506  F554         	movff	?___flmul+1,___fldiv@b+1
 11969   0102AC  C507  F555         	movff	?___flmul+2,___fldiv@b+2
 11970   0102B0  C508  F556         	movff	?___flmul+3,___fldiv@b+3
 11971   0102B4  0EDB               	movlw	219
 11972   0102B6  6E57               	movwf	___fldiv@a^(0+1280),c
 11973   0102B8  0E0F               	movlw	15
 11974   0102BA  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 11975   0102BC  0E49               	movlw	73
 11976   0102BE  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 11977   0102C0  0E40               	movlw	64
 11978   0102C2  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 11979   0102C4  EC9E  F0A5         	call	___fldiv	;wreg free
 11980   0102C8  0105               	movlb	5	; () banked
 11981   0102CA  EE20 F004          	lfsr	2,4
 11982   0102CE  51FA               	movf	MPU6050_DMP_GetData@ypr& (0+255),w,b
 11983   0102D0  26D9               	addwf	fsr2l,f,c
 11984   0102D2  51FB               	movf	(MPU6050_DMP_GetData@ypr+1)& (0+255),w,b
 11985   0102D4  22DA               	addwfc	fsr2h,f,c
 11986   0102D6  C553  F4DE         	movff	?___fldiv,postinc2
 11987   0102DA  C554  F4DE         	movff	?___fldiv+1,postinc2
 11988   0102DE  C555  F4DE         	movff	?___fldiv+2,postinc2
 11989   0102E2  C556  F4DE         	movff	?___fldiv+3,postinc2
 11990                           
 11991                           ;MPU6050_DMP.c: 147:         static float yaw_integral = 0.0f;;MPU6050_DMP.c: 148:      
      +                             float dt = (current_time - last_read_time) / 1000.0f;
 11992   0102E6  0106               	movlb	6	; () banked
 11993   0102E8  51FB               	movf	MPU6050_DMP_GetData@last_read_time& (0+255),w,b
 11994   0102EA  5D2C               	subwf	MPU6050_DMP_GetData@current_time& (0+255),w,b
 11995   0102EC  0105               	movlb	5	; () banked
 11996   0102EE  6FFE               	movwf	??_MPU6050_DMP_GetData& (0+255),b
 11997   0102F0  0106               	movlb	6	; () banked
 11998   0102F2  51FC               	movf	(MPU6050_DMP_GetData@last_read_time+1)& (0+255),w,b
 11999   0102F4  592D               	subwfb	(MPU6050_DMP_GetData@current_time+1)& (0+255),w,b
 12000   0102F6  0105               	movlb	5	; () banked
 12001   0102F8  6FFF               	movwf	(??_MPU6050_DMP_GetData+1)& (0+255),b
 12002   0102FA  C5FE  F501         	movff	??_MPU6050_DMP_GetData,___xxtofl@val
 12003   0102FE  C5FF  F502         	movff	??_MPU6050_DMP_GetData+1,___xxtofl@val+1
 12004   010302  6A03               	clrf	(___xxtofl@val+2)^(0+1280),c
 12005   010304  6A04               	clrf	(___xxtofl@val+3)^(0+1280),c
 12006   010306  0E00               	movlw	0
 12007   010308  ECE4  F0AC         	call	___xxtofl
 12008   01030C  C501  F553         	movff	?___xxtofl,___fldiv@b
 12009   010310  C502  F554         	movff	?___xxtofl+1,___fldiv@b+1
 12010   010314  C503  F555         	movff	?___xxtofl+2,___fldiv@b+2
 12011   010318  C504  F556         	movff	?___xxtofl+3,___fldiv@b+3
 12012   01031C  0E00               	movlw	0
 12013   01031E  6E57               	movwf	___fldiv@a^(0+1280),c
 12014   010320  0E00               	movlw	0
 12015   010322  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 12016   010324  0E7A               	movlw	122
 12017   010326  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 12018   010328  0E44               	movlw	68
 12019   01032A  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 12020   01032C  EC9E  F0A5         	call	___fldiv	;wreg free
 12021   010330  C553  F600         	movff	?___fldiv,MPU6050_DMP_GetData@dt
 12022   010334  C554  F601         	movff	?___fldiv+1,MPU6050_DMP_GetData@dt+1
 12023   010338  C555  F602         	movff	?___fldiv+2,MPU6050_DMP_GetData@dt+2
 12024   01033C  C556  F603         	movff	?___fldiv+3,MPU6050_DMP_GetData@dt+3
 12025   010340                     
 12026                           ;MPU6050_DMP.c: 149:         yaw_integral += sensor_data.gyro.z * dt;
 12027   010340  C6F1  F51E         	movff	MPU6050_DMP_GetData@yaw_integral,___fladd@b
 12028   010344  C6F2  F51F         	movff	MPU6050_DMP_GetData@yaw_integral+1,___fladd@b+1
 12029   010348  C6F3  F520         	movff	MPU6050_DMP_GetData@yaw_integral+2,___fladd@b+2
 12030   01034C  C6F4  F521         	movff	MPU6050_DMP_GetData@yaw_integral+3,___fladd@b+3
 12031   010350  C600  F509         	movff	MPU6050_DMP_GetData@dt,___flmul@a
 12032   010354  C601  F50A         	movff	MPU6050_DMP_GetData@dt+1,___flmul@a+1
 12033   010358  C602  F50B         	movff	MPU6050_DMP_GetData@dt+2,___flmul@a+2
 12034   01035C  C603  F50C         	movff	MPU6050_DMP_GetData@dt+3,___flmul@a+3
 12035   010360  C672  F505         	movff	MPU6050_DMP_GetData@sensor_data+20,___flmul@b
 12036   010364  C673  F506         	movff	MPU6050_DMP_GetData@sensor_data+21,___flmul@b+1
 12037   010368  C674  F507         	movff	MPU6050_DMP_GetData@sensor_data+22,___flmul@b+2
 12038   01036C  C675  F508         	movff	MPU6050_DMP_GetData@sensor_data+23,___flmul@b+3
 12039   010370  ECB7  F09F         	call	___flmul	;wreg free
 12040   010374  C505  F522         	movff	?___flmul,___fladd@a
 12041   010378  C506  F523         	movff	?___flmul+1,___fladd@a+1
 12042   01037C  C507  F524         	movff	?___flmul+2,___fladd@a+2
 12043   010380  C508  F525         	movff	?___flmul+3,___fladd@a+3
 12044   010384  EC1B  F09B         	call	___fladd	;wreg free
 12045   010388  C51E  F6F1         	movff	?___fladd,MPU6050_DMP_GetData@yaw_integral
 12046   01038C  C51F  F6F2         	movff	?___fladd+1,MPU6050_DMP_GetData@yaw_integral+1
 12047   010390  C520  F6F3         	movff	?___fladd+2,MPU6050_DMP_GetData@yaw_integral+2
 12048   010394  C521  F6F4         	movff	?___fladd+3,MPU6050_DMP_GetData@yaw_integral+3
 12049   010398                     
 12050                           ;MPU6050_DMP.c: 150:         ypr->yaw = yaw_integral;
 12051   010398  C5FA  F4D9         	movff	MPU6050_DMP_GetData@ypr,fsr2l
 12052   01039C  C5FB  F4DA         	movff	MPU6050_DMP_GetData@ypr+1,fsr2h
 12053   0103A0  C6F1  F4DE         	movff	MPU6050_DMP_GetData@yaw_integral,postinc2
 12054   0103A4  C6F2  F4DE         	movff	MPU6050_DMP_GetData@yaw_integral+1,postinc2
 12055   0103A8  C6F3  F4DE         	movff	MPU6050_DMP_GetData@yaw_integral+2,postinc2
 12056   0103AC  C6F4  F4DE         	movff	MPU6050_DMP_GetData@yaw_integral+3,postinc2
 12057                           
 12058                           ;MPU6050_DMP.c: 153:         while (ypr->yaw > 180.0f) ypr->yaw -= 360.0f;
 12059   0103B0  EFFE  F081         	goto	l592
 12060   0103B4                     l9941:
 12061   0103B4  C5FA  F4D9         	movff	MPU6050_DMP_GetData@ypr,fsr2l
 12062   0103B8  C5FB  F4DA         	movff	MPU6050_DMP_GetData@ypr+1,fsr2h
 12063   0103BC  C4DE F56D          	movff	postinc2,___flsub@b
 12064   0103C0  C4DE F56E          	movff	postinc2,___flsub@b+1
 12065   0103C4  C4DE F56F          	movff	postinc2,___flsub@b+2
 12066   0103C8  C4DE F570          	movff	postinc2,___flsub@b+3
 12067   0103CC  0E00               	movlw	0
 12068   0103CE  0105               	movlb	5	; () banked
 12069   0103D0  6F71               	movwf	___flsub@a& (0+255),b
 12070   0103D2  0E00               	movlw	0
 12071   0103D4  6F72               	movwf	(___flsub@a+1)& (0+255),b
 12072   0103D6  0EB4               	movlw	180
 12073   0103D8  6F73               	movwf	(___flsub@a+2)& (0+255),b
 12074   0103DA  0E43               	movlw	67
 12075   0103DC  6F74               	movwf	(___flsub@a+3)& (0+255),b
 12076   0103DE  ECED  F0B6         	call	___flsub	;wreg free
 12077   0103E2  C5FA  F4D9         	movff	MPU6050_DMP_GetData@ypr,fsr2l
 12078   0103E6  C5FB  F4DA         	movff	MPU6050_DMP_GetData@ypr+1,fsr2h
 12079   0103EA  0105               	movlb	5	; () banked
 12080   0103EC  C56D  F4DE         	movff	?___flsub,postinc2
 12081   0103F0  C56E  F4DE         	movff	?___flsub+1,postinc2
 12082   0103F4  C56F  F4DE         	movff	?___flsub+2,postinc2
 12083   0103F8  C570  F4DE         	movff	?___flsub+3,postinc2
 12084   0103FC                     l592:
 12085   0103FC  0E00               	movlw	0
 12086   0103FE  6E1E               	movwf	___flge@ff1^(0+1280),c
 12087   010400  0E00               	movlw	0
 12088   010402  6E1F               	movwf	(___flge@ff1+1)^(0+1280),c
 12089   010404  0E34               	movlw	52
 12090   010406  6E20               	movwf	(___flge@ff1+2)^(0+1280),c
 12091   010408  0E43               	movlw	67
 12092   01040A  6E21               	movwf	(___flge@ff1+3)^(0+1280),c
 12093   01040C  C5FA  F4D9         	movff	MPU6050_DMP_GetData@ypr,fsr2l
 12094   010410  C5FB  F4DA         	movff	MPU6050_DMP_GetData@ypr+1,fsr2h
 12095   010414  C4DE F522          	movff	postinc2,___flge@ff2
 12096   010418  C4DE F523          	movff	postinc2,___flge@ff2+1
 12097   01041C  C4DE F524          	movff	postinc2,___flge@ff2+2
 12098   010420  C4DE F525          	movff	postinc2,___flge@ff2+3
 12099   010424  EC3F  F0B1         	call	___flge	;wreg free
 12100   010428  A0D8               	btfss	status,0,c
 12101   01042A  EF19  F082         	goto	u7931
 12102   01042E  EF1B  F082         	goto	u7930
 12103   010432                     u7931:
 12104   010432  EFDA  F081         	goto	l9941
 12105   010436                     u7930:
 12106   010436  EF3F  F082         	goto	l595
 12107   01043A                     l9943:
 12108   01043A  C5FA  F4D9         	movff	MPU6050_DMP_GetData@ypr,fsr2l
 12109   01043E  C5FB  F4DA         	movff	MPU6050_DMP_GetData@ypr+1,fsr2h
 12110   010442  C4DE F51E          	movff	postinc2,___fladd@b
 12111   010446  C4DE F51F          	movff	postinc2,___fladd@b+1
 12112   01044A  C4DE F520          	movff	postinc2,___fladd@b+2
 12113   01044E  C4DE F521          	movff	postinc2,___fladd@b+3
 12114   010452  0E00               	movlw	0
 12115   010454  6E22               	movwf	___fladd@a^(0+1280),c
 12116   010456  0E00               	movlw	0
 12117   010458  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 12118   01045A  0EB4               	movlw	180
 12119   01045C  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 12120   01045E  0E43               	movlw	67
 12121   010460  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 12122   010462  EC1B  F09B         	call	___fladd	;wreg free
 12123   010466  C5FA  F4D9         	movff	MPU6050_DMP_GetData@ypr,fsr2l
 12124   01046A  C5FB  F4DA         	movff	MPU6050_DMP_GetData@ypr+1,fsr2h
 12125   01046E  C51E  F4DE         	movff	?___fladd,postinc2
 12126   010472  C51F  F4DE         	movff	?___fladd+1,postinc2
 12127   010476  C520  F4DE         	movff	?___fladd+2,postinc2
 12128   01047A  C521  F4DE         	movff	?___fladd+3,postinc2
 12129   01047E                     l595:
 12130   01047E  C5FA  F4D9         	movff	MPU6050_DMP_GetData@ypr,fsr2l
 12131   010482  C5FB  F4DA         	movff	MPU6050_DMP_GetData@ypr+1,fsr2h
 12132   010486  C4DE F51E          	movff	postinc2,___flge@ff1
 12133   01048A  C4DE F51F          	movff	postinc2,___flge@ff1+1
 12134   01048E  C4DE F520          	movff	postinc2,___flge@ff1+2
 12135   010492  C4DE F521          	movff	postinc2,___flge@ff1+3
 12136   010496  0E00               	movlw	0
 12137   010498  6E22               	movwf	___flge@ff2^(0+1280),c
 12138   01049A  0E00               	movlw	0
 12139   01049C  6E23               	movwf	(___flge@ff2+1)^(0+1280),c
 12140   01049E  0E34               	movlw	52
 12141   0104A0  6E24               	movwf	(___flge@ff2+2)^(0+1280),c
 12142   0104A2  0EC3               	movlw	195
 12143   0104A4  6E25               	movwf	(___flge@ff2+3)^(0+1280),c
 12144   0104A6  EC3F  F0B1         	call	___flge	;wreg free
 12145   0104AA  A0D8               	btfss	status,0,c
 12146   0104AC  EF5A  F082         	goto	u7941
 12147   0104B0  EF5C  F082         	goto	u7940
 12148   0104B4                     u7941:
 12149   0104B4  EF1D  F082         	goto	l9943
 12150   0104B8                     u7940:
 12151   0104B8                     l9945:
 12152                           
 12153                           ;MPU6050_DMP.c: 158:     if (quat != ((void*)0)) {
 12154   0104B8  0105               	movlb	5	; () banked
 12155   0104BA  51FC               	movf	MPU6050_DMP_GetData@quat& (0+255),w,b
 12156   0104BC  11FD               	iorwf	(MPU6050_DMP_GetData@quat+1)& (0+255),w,b
 12157   0104BE  B4D8               	btfsc	status,2,c
 12158   0104C0  EF64  F082         	goto	u7951
 12159   0104C4  EF66  F082         	goto	u7950
 12160   0104C8                     u7951:
 12161   0104C8  EFDA  F086         	goto	l10005
 12162   0104CC                     u7950:
 12163   0104CC                     
 12164                           ; BSR set to: 5
 12165                           ;MPU6050_DMP.c: 159:         float roll_rad = ((ypr->roll * 0.5f) * 3.141592653589793238
      +                          46 / 180.0f);
 12166   0104CC  0E00               	movlw	0
 12167   0104CE  6E09               	movwf	___flmul@a^(0+1280),c
 12168   0104D0  0E00               	movlw	0
 12169   0104D2  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 12170   0104D4  0E00               	movlw	0
 12171   0104D6  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 12172   0104D8  0E3F               	movlw	63
 12173   0104DA  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 12174   0104DC  EE20 F008          	lfsr	2,8
 12175   0104E0  51FA               	movf	MPU6050_DMP_GetData@ypr& (0+255),w,b
 12176   0104E2  26D9               	addwf	fsr2l,f,c
 12177   0104E4  51FB               	movf	(MPU6050_DMP_GetData@ypr+1)& (0+255),w,b
 12178   0104E6  22DA               	addwfc	fsr2h,f,c
 12179   0104E8  C4DE F505          	movff	postinc2,___flmul@b
 12180   0104EC  C4DE F506          	movff	postinc2,___flmul@b+1
 12181   0104F0  C4DE F507          	movff	postinc2,___flmul@b+2
 12182   0104F4  C4DE F508          	movff	postinc2,___flmul@b+3
 12183   0104F8  ECB7  F09F         	call	___flmul	;wreg free
 12184   0104FC  C505  F62E         	movff	?___flmul,_MPU6050_DMP_GetData$3467
 12185   010500  C506  F62F         	movff	?___flmul+1,_MPU6050_DMP_GetData$3467+1
 12186   010504  C507  F630         	movff	?___flmul+2,_MPU6050_DMP_GetData$3467+2
 12187   010508  C508  F631         	movff	?___flmul+3,_MPU6050_DMP_GetData$3467+3
 12188   01050C                     
 12189                           ;MPU6050_DMP.c: 159:         float roll_rad = ((ypr->roll * 0.5f) * 3.141592653589793238
      +                          46 / 180.0f);
 12190   01050C  0EDB               	movlw	219
 12191   01050E  6E09               	movwf	___flmul@a^(0+1280),c
 12192   010510  0E0F               	movlw	15
 12193   010512  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 12194   010514  0E49               	movlw	73
 12195   010516  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 12196   010518  0E40               	movlw	64
 12197   01051A  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 12198   01051C  C62E  F505         	movff	_MPU6050_DMP_GetData$3467,___flmul@b
 12199   010520  C62F  F506         	movff	_MPU6050_DMP_GetData$3467+1,___flmul@b+1
 12200   010524  C630  F507         	movff	_MPU6050_DMP_GetData$3467+2,___flmul@b+2
 12201   010528  C631  F508         	movff	_MPU6050_DMP_GetData$3467+3,___flmul@b+3
 12202   01052C  ECB7  F09F         	call	___flmul	;wreg free
 12203   010530  C505  F553         	movff	?___flmul,___fldiv@b
 12204   010534  C506  F554         	movff	?___flmul+1,___fldiv@b+1
 12205   010538  C507  F555         	movff	?___flmul+2,___fldiv@b+2
 12206   01053C  C508  F556         	movff	?___flmul+3,___fldiv@b+3
 12207   010540  0E00               	movlw	0
 12208   010542  6E57               	movwf	___fldiv@a^(0+1280),c
 12209   010544  0E00               	movlw	0
 12210   010546  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 12211   010548  0E34               	movlw	52
 12212   01054A  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 12213   01054C  0E43               	movlw	67
 12214   01054E  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 12215   010550  EC9E  F0A5         	call	___fldiv	;wreg free
 12216   010554  C553  F652         	movff	?___fldiv,MPU6050_DMP_GetData@roll_rad
 12217   010558  C554  F653         	movff	?___fldiv+1,MPU6050_DMP_GetData@roll_rad+1
 12218   01055C  C555  F654         	movff	?___fldiv+2,MPU6050_DMP_GetData@roll_rad+2
 12219   010560  C556  F655         	movff	?___fldiv+3,MPU6050_DMP_GetData@roll_rad+3
 12220   010564                     
 12221                           ;MPU6050_DMP.c: 160:         float pitch_rad = ((ypr->pitch * 0.5f) * 3.1415926535897932
      +                          3846 / 180.0f);
 12222   010564  0E00               	movlw	0
 12223   010566  6E09               	movwf	___flmul@a^(0+1280),c
 12224   010568  0E00               	movlw	0
 12225   01056A  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 12226   01056C  0E00               	movlw	0
 12227   01056E  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 12228   010570  0E3F               	movlw	63
 12229   010572  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 12230   010574  0105               	movlb	5	; () banked
 12231   010576  EE20 F004          	lfsr	2,4
 12232   01057A  51FA               	movf	MPU6050_DMP_GetData@ypr& (0+255),w,b
 12233   01057C  26D9               	addwf	fsr2l,f,c
 12234   01057E  51FB               	movf	(MPU6050_DMP_GetData@ypr+1)& (0+255),w,b
 12235   010580  22DA               	addwfc	fsr2h,f,c
 12236   010582  C4DE F505          	movff	postinc2,___flmul@b
 12237   010586  C4DE F506          	movff	postinc2,___flmul@b+1
 12238   01058A  C4DE F507          	movff	postinc2,___flmul@b+2
 12239   01058E  C4DE F508          	movff	postinc2,___flmul@b+3
 12240   010592  ECB7  F09F         	call	___flmul	;wreg free
 12241   010596  C505  F62E         	movff	?___flmul,_MPU6050_DMP_GetData$3467
 12242   01059A  C506  F62F         	movff	?___flmul+1,_MPU6050_DMP_GetData$3467+1
 12243   01059E  C507  F630         	movff	?___flmul+2,_MPU6050_DMP_GetData$3467+2
 12244   0105A2  C508  F631         	movff	?___flmul+3,_MPU6050_DMP_GetData$3467+3
 12245                           
 12246                           ;MPU6050_DMP.c: 160:         float pitch_rad = ((ypr->pitch * 0.5f) * 3.1415926535897932
      +                          3846 / 180.0f);
 12247   0105A6  0EDB               	movlw	219
 12248   0105A8  6E09               	movwf	___flmul@a^(0+1280),c
 12249   0105AA  0E0F               	movlw	15
 12250   0105AC  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 12251   0105AE  0E49               	movlw	73
 12252   0105B0  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 12253   0105B2  0E40               	movlw	64
 12254   0105B4  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 12255   0105B6  C62E  F505         	movff	_MPU6050_DMP_GetData$3467,___flmul@b
 12256   0105BA  C62F  F506         	movff	_MPU6050_DMP_GetData$3467+1,___flmul@b+1
 12257   0105BE  C630  F507         	movff	_MPU6050_DMP_GetData$3467+2,___flmul@b+2
 12258   0105C2  C631  F508         	movff	_MPU6050_DMP_GetData$3467+3,___flmul@b+3
 12259   0105C6  ECB7  F09F         	call	___flmul	;wreg free
 12260   0105CA  C505  F553         	movff	?___flmul,___fldiv@b
 12261   0105CE  C506  F554         	movff	?___flmul+1,___fldiv@b+1
 12262   0105D2  C507  F555         	movff	?___flmul+2,___fldiv@b+2
 12263   0105D6  C508  F556         	movff	?___flmul+3,___fldiv@b+3
 12264   0105DA  0E00               	movlw	0
 12265   0105DC  6E57               	movwf	___fldiv@a^(0+1280),c
 12266   0105DE  0E00               	movlw	0
 12267   0105E0  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 12268   0105E2  0E34               	movlw	52
 12269   0105E4  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 12270   0105E6  0E43               	movlw	67
 12271   0105E8  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 12272   0105EA  EC9E  F0A5         	call	___fldiv	;wreg free
 12273   0105EE  C553  F656         	movff	?___fldiv,MPU6050_DMP_GetData@pitch_rad
 12274   0105F2  C554  F657         	movff	?___fldiv+1,MPU6050_DMP_GetData@pitch_rad+1
 12275   0105F6  C555  F658         	movff	?___fldiv+2,MPU6050_DMP_GetData@pitch_rad+2
 12276   0105FA  C556  F659         	movff	?___fldiv+3,MPU6050_DMP_GetData@pitch_rad+3
 12277   0105FE                     
 12278                           ;MPU6050_DMP.c: 161:         float yaw_rad = ((ypr->yaw * 0.5f) * 3.14159265358979323846
      +                           / 180.0f);
 12279   0105FE  0E00               	movlw	0
 12280   010600  6E09               	movwf	___flmul@a^(0+1280),c
 12281   010602  0E00               	movlw	0
 12282   010604  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 12283   010606  0E00               	movlw	0
 12284   010608  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 12285   01060A  0E3F               	movlw	63
 12286   01060C  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 12287   01060E  C5FA  F4D9         	movff	MPU6050_DMP_GetData@ypr,fsr2l
 12288   010612  C5FB  F4DA         	movff	MPU6050_DMP_GetData@ypr+1,fsr2h
 12289   010616  C4DE F505          	movff	postinc2,___flmul@b
 12290   01061A  C4DE F506          	movff	postinc2,___flmul@b+1
 12291   01061E  C4DE F507          	movff	postinc2,___flmul@b+2
 12292   010622  C4DE F508          	movff	postinc2,___flmul@b+3
 12293   010626  ECB7  F09F         	call	___flmul	;wreg free
 12294   01062A  C505  F62E         	movff	?___flmul,_MPU6050_DMP_GetData$3467
 12295   01062E  C506  F62F         	movff	?___flmul+1,_MPU6050_DMP_GetData$3467+1
 12296   010632  C507  F630         	movff	?___flmul+2,_MPU6050_DMP_GetData$3467+2
 12297   010636  C508  F631         	movff	?___flmul+3,_MPU6050_DMP_GetData$3467+3
 12298   01063A                     
 12299                           ;MPU6050_DMP.c: 161:         float yaw_rad = ((ypr->yaw * 0.5f) * 3.14159265358979323846
      +                           / 180.0f);
 12300   01063A  0EDB               	movlw	219
 12301   01063C  6E09               	movwf	___flmul@a^(0+1280),c
 12302   01063E  0E0F               	movlw	15
 12303   010640  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 12304   010642  0E49               	movlw	73
 12305   010644  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 12306   010646  0E40               	movlw	64
 12307   010648  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 12308   01064A  C62E  F505         	movff	_MPU6050_DMP_GetData$3467,___flmul@b
 12309   01064E  C62F  F506         	movff	_MPU6050_DMP_GetData$3467+1,___flmul@b+1
 12310   010652  C630  F507         	movff	_MPU6050_DMP_GetData$3467+2,___flmul@b+2
 12311   010656  C631  F508         	movff	_MPU6050_DMP_GetData$3467+3,___flmul@b+3
 12312   01065A  ECB7  F09F         	call	___flmul	;wreg free
 12313   01065E  C505  F553         	movff	?___flmul,___fldiv@b
 12314   010662  C506  F554         	movff	?___flmul+1,___fldiv@b+1
 12315   010666  C507  F555         	movff	?___flmul+2,___fldiv@b+2
 12316   01066A  C508  F556         	movff	?___flmul+3,___fldiv@b+3
 12317   01066E  0E00               	movlw	0
 12318   010670  6E57               	movwf	___fldiv@a^(0+1280),c
 12319   010672  0E00               	movlw	0
 12320   010674  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 12321   010676  0E34               	movlw	52
 12322   010678  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 12323   01067A  0E43               	movlw	67
 12324   01067C  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 12325   01067E  EC9E  F0A5         	call	___fldiv	;wreg free
 12326   010682  C553  F65A         	movff	?___fldiv,MPU6050_DMP_GetData@yaw_rad
 12327   010686  C554  F65B         	movff	?___fldiv+1,MPU6050_DMP_GetData@yaw_rad+1
 12328   01068A  C555  F65C         	movff	?___fldiv+2,MPU6050_DMP_GetData@yaw_rad+2
 12329   01068E  C556  F65D         	movff	?___fldiv+3,MPU6050_DMP_GetData@yaw_rad+3
 12330                           
 12331                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12332   010692  C656  F596         	movff	MPU6050_DMP_GetData@pitch_rad,cosf@x
 12333   010696  C657  F597         	movff	MPU6050_DMP_GetData@pitch_rad+1,cosf@x+1
 12334   01069A  C658  F598         	movff	MPU6050_DMP_GetData@pitch_rad+2,cosf@x+2
 12335   01069E  C659  F599         	movff	MPU6050_DMP_GetData@pitch_rad+3,cosf@x+3
 12336   0106A2  ECA6  F098         	call	_cosf	;wreg free
 12337   0106A6  C596  F632         	movff	?_cosf,_MPU6050_DMP_GetData$3468
 12338   0106AA  C597  F633         	movff	?_cosf+1,_MPU6050_DMP_GetData$3468+1
 12339   0106AE  C598  F634         	movff	?_cosf+2,_MPU6050_DMP_GetData$3468+2
 12340   0106B2  C599  F635         	movff	?_cosf+3,_MPU6050_DMP_GetData$3468+3
 12341                           
 12342                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12343   0106B6  C652  F596         	movff	MPU6050_DMP_GetData@roll_rad,cosf@x
 12344   0106BA  C653  F597         	movff	MPU6050_DMP_GetData@roll_rad+1,cosf@x+1
 12345   0106BE  C654  F598         	movff	MPU6050_DMP_GetData@roll_rad+2,cosf@x+2
 12346   0106C2  C655  F599         	movff	MPU6050_DMP_GetData@roll_rad+3,cosf@x+3
 12347   0106C6  ECA6  F098         	call	_cosf	;wreg free
 12348   0106CA  C596  F636         	movff	?_cosf,_MPU6050_DMP_GetData$3469
 12349   0106CE  C597  F637         	movff	?_cosf+1,_MPU6050_DMP_GetData$3469+1
 12350   0106D2  C598  F638         	movff	?_cosf+2,_MPU6050_DMP_GetData$3469+2
 12351   0106D6  C599  F639         	movff	?_cosf+3,_MPU6050_DMP_GetData$3469+3
 12352                           
 12353                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12354   0106DA  C65A  F596         	movff	MPU6050_DMP_GetData@yaw_rad,cosf@x
 12355   0106DE  C65B  F597         	movff	MPU6050_DMP_GetData@yaw_rad+1,cosf@x+1
 12356   0106E2  C65C  F598         	movff	MPU6050_DMP_GetData@yaw_rad+2,cosf@x+2
 12357   0106E6  C65D  F599         	movff	MPU6050_DMP_GetData@yaw_rad+3,cosf@x+3
 12358   0106EA  ECA6  F098         	call	_cosf	;wreg free
 12359   0106EE  C596  F63A         	movff	?_cosf,_MPU6050_DMP_GetData$3470
 12360   0106F2  C597  F63B         	movff	?_cosf+1,_MPU6050_DMP_GetData$3470+1
 12361   0106F6  C598  F63C         	movff	?_cosf+2,_MPU6050_DMP_GetData$3470+2
 12362   0106FA  C599  F63D         	movff	?_cosf+3,_MPU6050_DMP_GetData$3470+3
 12363   0106FE                     
 12364                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12365   0106FE  C632  F509         	movff	_MPU6050_DMP_GetData$3468,___flmul@a
 12366   010702  C633  F50A         	movff	_MPU6050_DMP_GetData$3468+1,___flmul@a+1
 12367   010706  C634  F50B         	movff	_MPU6050_DMP_GetData$3468+2,___flmul@a+2
 12368   01070A  C635  F50C         	movff	_MPU6050_DMP_GetData$3468+3,___flmul@a+3
 12369   01070E  C636  F505         	movff	_MPU6050_DMP_GetData$3469,___flmul@b
 12370   010712  C637  F506         	movff	_MPU6050_DMP_GetData$3469+1,___flmul@b+1
 12371   010716  C638  F507         	movff	_MPU6050_DMP_GetData$3469+2,___flmul@b+2
 12372   01071A  C639  F508         	movff	_MPU6050_DMP_GetData$3469+3,___flmul@b+3
 12373   01071E  ECB7  F09F         	call	___flmul	;wreg free
 12374   010722  C505  F64A         	movff	?___flmul,_MPU6050_DMP_GetData$3471
 12375   010726  C506  F64B         	movff	?___flmul+1,_MPU6050_DMP_GetData$3471+1
 12376   01072A  C507  F64C         	movff	?___flmul+2,_MPU6050_DMP_GetData$3471+2
 12377   01072E  C508  F64D         	movff	?___flmul+3,_MPU6050_DMP_GetData$3471+3
 12378   010732                     
 12379                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12380   010732  C656  F596         	movff	MPU6050_DMP_GetData@pitch_rad,sinf@x
 12381   010736  C657  F597         	movff	MPU6050_DMP_GetData@pitch_rad+1,sinf@x+1
 12382   01073A  C658  F598         	movff	MPU6050_DMP_GetData@pitch_rad+2,sinf@x+2
 12383   01073E  C659  F599         	movff	MPU6050_DMP_GetData@pitch_rad+3,sinf@x+3
 12384   010742  EC1F  F096         	call	_sinf	;wreg free
 12385   010746  C596  F63E         	movff	?_sinf,_MPU6050_DMP_GetData$3472
 12386   01074A  C597  F63F         	movff	?_sinf+1,_MPU6050_DMP_GetData$3472+1
 12387   01074E  C598  F640         	movff	?_sinf+2,_MPU6050_DMP_GetData$3472+2
 12388   010752  C599  F641         	movff	?_sinf+3,_MPU6050_DMP_GetData$3472+3
 12389   010756                     
 12390                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12391   010756  C652  F596         	movff	MPU6050_DMP_GetData@roll_rad,sinf@x
 12392   01075A  C653  F597         	movff	MPU6050_DMP_GetData@roll_rad+1,sinf@x+1
 12393   01075E  C654  F598         	movff	MPU6050_DMP_GetData@roll_rad+2,sinf@x+2
 12394   010762  C655  F599         	movff	MPU6050_DMP_GetData@roll_rad+3,sinf@x+3
 12395   010766  EC1F  F096         	call	_sinf	;wreg free
 12396   01076A  C596  F642         	movff	?_sinf,_MPU6050_DMP_GetData$3473
 12397   01076E  C597  F643         	movff	?_sinf+1,_MPU6050_DMP_GetData$3473+1
 12398   010772  C598  F644         	movff	?_sinf+2,_MPU6050_DMP_GetData$3473+2
 12399   010776  C599  F645         	movff	?_sinf+3,_MPU6050_DMP_GetData$3473+3
 12400   01077A                     
 12401                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12402   01077A  C65A  F596         	movff	MPU6050_DMP_GetData@yaw_rad,sinf@x
 12403   01077E  C65B  F597         	movff	MPU6050_DMP_GetData@yaw_rad+1,sinf@x+1
 12404   010782  C65C  F598         	movff	MPU6050_DMP_GetData@yaw_rad+2,sinf@x+2
 12405   010786  C65D  F599         	movff	MPU6050_DMP_GetData@yaw_rad+3,sinf@x+3
 12406   01078A  EC1F  F096         	call	_sinf	;wreg free
 12407   01078E  C596  F646         	movff	?_sinf,_MPU6050_DMP_GetData$3474
 12408   010792  C597  F647         	movff	?_sinf+1,_MPU6050_DMP_GetData$3474+1
 12409   010796  C598  F648         	movff	?_sinf+2,_MPU6050_DMP_GetData$3474+2
 12410   01079A  C599  F649         	movff	?_sinf+3,_MPU6050_DMP_GetData$3474+3
 12411                           
 12412                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12413   01079E  C63E  F509         	movff	_MPU6050_DMP_GetData$3472,___flmul@a
 12414   0107A2  C63F  F50A         	movff	_MPU6050_DMP_GetData$3472+1,___flmul@a+1
 12415   0107A6  C640  F50B         	movff	_MPU6050_DMP_GetData$3472+2,___flmul@a+2
 12416   0107AA  C641  F50C         	movff	_MPU6050_DMP_GetData$3472+3,___flmul@a+3
 12417   0107AE  C642  F505         	movff	_MPU6050_DMP_GetData$3473,___flmul@b
 12418   0107B2  C643  F506         	movff	_MPU6050_DMP_GetData$3473+1,___flmul@b+1
 12419   0107B6  C644  F507         	movff	_MPU6050_DMP_GetData$3473+2,___flmul@b+2
 12420   0107BA  C645  F508         	movff	_MPU6050_DMP_GetData$3473+3,___flmul@b+3
 12421   0107BE  ECB7  F09F         	call	___flmul	;wreg free
 12422   0107C2  C505  F64E         	movff	?___flmul,_MPU6050_DMP_GetData$3475
 12423   0107C6  C506  F64F         	movff	?___flmul+1,_MPU6050_DMP_GetData$3475+1
 12424   0107CA  C507  F650         	movff	?___flmul+2,_MPU6050_DMP_GetData$3475+2
 12425   0107CE  C508  F651         	movff	?___flmul+3,_MPU6050_DMP_GetData$3475+3
 12426   0107D2                     
 12427                           ;MPU6050_DMP.c: 163:         quat->w = cosf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12428   0107D2  C63A  F509         	movff	_MPU6050_DMP_GetData$3470,___flmul@a
 12429   0107D6  C63B  F50A         	movff	_MPU6050_DMP_GetData$3470+1,___flmul@a+1
 12430   0107DA  C63C  F50B         	movff	_MPU6050_DMP_GetData$3470+2,___flmul@a+2
 12431   0107DE  C63D  F50C         	movff	_MPU6050_DMP_GetData$3470+3,___flmul@a+3
 12432   0107E2  C64A  F505         	movff	_MPU6050_DMP_GetData$3471,___flmul@b
 12433   0107E6  C64B  F506         	movff	_MPU6050_DMP_GetData$3471+1,___flmul@b+1
 12434   0107EA  C64C  F507         	movff	_MPU6050_DMP_GetData$3471+2,___flmul@b+2
 12435   0107EE  C64D  F508         	movff	_MPU6050_DMP_GetData$3471+3,___flmul@b+3
 12436   0107F2  ECB7  F09F         	call	___flmul	;wreg free
 12437   0107F6  C505  F51E         	movff	?___flmul,___fladd@b
 12438   0107FA  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 12439   0107FE  C507  F520         	movff	?___flmul+2,___fladd@b+2
 12440   010802  C508  F521         	movff	?___flmul+3,___fladd@b+3
 12441   010806  C646  F509         	movff	_MPU6050_DMP_GetData$3474,___flmul@a
 12442   01080A  C647  F50A         	movff	_MPU6050_DMP_GetData$3474+1,___flmul@a+1
 12443   01080E  C648  F50B         	movff	_MPU6050_DMP_GetData$3474+2,___flmul@a+2
 12444   010812  C649  F50C         	movff	_MPU6050_DMP_GetData$3474+3,___flmul@a+3
 12445   010816  C64E  F505         	movff	_MPU6050_DMP_GetData$3475,___flmul@b
 12446   01081A  C64F  F506         	movff	_MPU6050_DMP_GetData$3475+1,___flmul@b+1
 12447   01081E  C650  F507         	movff	_MPU6050_DMP_GetData$3475+2,___flmul@b+2
 12448   010822  C651  F508         	movff	_MPU6050_DMP_GetData$3475+3,___flmul@b+3
 12449   010826  ECB7  F09F         	call	___flmul	;wreg free
 12450   01082A  C505  F522         	movff	?___flmul,___fladd@a
 12451   01082E  C506  F523         	movff	?___flmul+1,___fladd@a+1
 12452   010832  C507  F524         	movff	?___flmul+2,___fladd@a+2
 12453   010836  C508  F525         	movff	?___flmul+3,___fladd@a+3
 12454   01083A  EC1B  F09B         	call	___fladd	;wreg free
 12455   01083E  C5FC  F4D9         	movff	MPU6050_DMP_GetData@quat,fsr2l
 12456   010842  C5FD  F4DA         	movff	MPU6050_DMP_GetData@quat+1,fsr2h
 12457   010846  C51E  F4DE         	movff	?___fladd,postinc2
 12458   01084A  C51F  F4DE         	movff	?___fladd+1,postinc2
 12459   01084E  C520  F4DE         	movff	?___fladd+2,postinc2
 12460   010852  C521  F4DE         	movff	?___fladd+3,postinc2
 12461   010856                     
 12462                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12463   010856  C656  F596         	movff	MPU6050_DMP_GetData@pitch_rad,cosf@x
 12464   01085A  C657  F597         	movff	MPU6050_DMP_GetData@pitch_rad+1,cosf@x+1
 12465   01085E  C658  F598         	movff	MPU6050_DMP_GetData@pitch_rad+2,cosf@x+2
 12466   010862  C659  F599         	movff	MPU6050_DMP_GetData@pitch_rad+3,cosf@x+3
 12467   010866  ECA6  F098         	call	_cosf	;wreg free
 12468   01086A  C596  F632         	movff	?_cosf,_MPU6050_DMP_GetData$3468
 12469   01086E  C597  F633         	movff	?_cosf+1,_MPU6050_DMP_GetData$3468+1
 12470   010872  C598  F634         	movff	?_cosf+2,_MPU6050_DMP_GetData$3468+2
 12471   010876  C599  F635         	movff	?_cosf+3,_MPU6050_DMP_GetData$3468+3
 12472   01087A                     
 12473                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12474   01087A  C652  F596         	movff	MPU6050_DMP_GetData@roll_rad,sinf@x
 12475   01087E  C653  F597         	movff	MPU6050_DMP_GetData@roll_rad+1,sinf@x+1
 12476   010882  C654  F598         	movff	MPU6050_DMP_GetData@roll_rad+2,sinf@x+2
 12477   010886  C655  F599         	movff	MPU6050_DMP_GetData@roll_rad+3,sinf@x+3
 12478   01088A  EC1F  F096         	call	_sinf	;wreg free
 12479   01088E  C596  F610         	movff	?_sinf,_MPU6050_DMP_GetData$3476
 12480   010892  C597  F611         	movff	?_sinf+1,_MPU6050_DMP_GetData$3476+1
 12481   010896  C598  F612         	movff	?_sinf+2,_MPU6050_DMP_GetData$3476+2
 12482   01089A  C599  F613         	movff	?_sinf+3,_MPU6050_DMP_GetData$3476+3
 12483   01089E                     
 12484                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12485   01089E  C65A  F596         	movff	MPU6050_DMP_GetData@yaw_rad,cosf@x
 12486   0108A2  C65B  F597         	movff	MPU6050_DMP_GetData@yaw_rad+1,cosf@x+1
 12487   0108A6  C65C  F598         	movff	MPU6050_DMP_GetData@yaw_rad+2,cosf@x+2
 12488   0108AA  C65D  F599         	movff	MPU6050_DMP_GetData@yaw_rad+3,cosf@x+3
 12489   0108AE  ECA6  F098         	call	_cosf	;wreg free
 12490   0108B2  C596  F63A         	movff	?_cosf,_MPU6050_DMP_GetData$3470
 12491   0108B6  C597  F63B         	movff	?_cosf+1,_MPU6050_DMP_GetData$3470+1
 12492   0108BA  C598  F63C         	movff	?_cosf+2,_MPU6050_DMP_GetData$3470+2
 12493   0108BE  C599  F63D         	movff	?_cosf+3,_MPU6050_DMP_GetData$3470+3
 12494                           
 12495                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12496   0108C2  C632  F509         	movff	_MPU6050_DMP_GetData$3468,___flmul@a
 12497   0108C6  C633  F50A         	movff	_MPU6050_DMP_GetData$3468+1,___flmul@a+1
 12498   0108CA  C634  F50B         	movff	_MPU6050_DMP_GetData$3468+2,___flmul@a+2
 12499   0108CE  C635  F50C         	movff	_MPU6050_DMP_GetData$3468+3,___flmul@a+3
 12500   0108D2  C610  F505         	movff	_MPU6050_DMP_GetData$3476,___flmul@b
 12501   0108D6  C611  F506         	movff	_MPU6050_DMP_GetData$3476+1,___flmul@b+1
 12502   0108DA  C612  F507         	movff	_MPU6050_DMP_GetData$3476+2,___flmul@b+2
 12503   0108DE  C613  F508         	movff	_MPU6050_DMP_GetData$3476+3,___flmul@b+3
 12504   0108E2  ECB7  F09F         	call	___flmul	;wreg free
 12505   0108E6  C505  F64A         	movff	?___flmul,_MPU6050_DMP_GetData$3471
 12506   0108EA  C506  F64B         	movff	?___flmul+1,_MPU6050_DMP_GetData$3471+1
 12507   0108EE  C507  F64C         	movff	?___flmul+2,_MPU6050_DMP_GetData$3471+2
 12508   0108F2  C508  F64D         	movff	?___flmul+3,_MPU6050_DMP_GetData$3471+3
 12509   0108F6                     
 12510                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12511   0108F6  C656  F596         	movff	MPU6050_DMP_GetData@pitch_rad,sinf@x
 12512   0108FA  C657  F597         	movff	MPU6050_DMP_GetData@pitch_rad+1,sinf@x+1
 12513   0108FE  C658  F598         	movff	MPU6050_DMP_GetData@pitch_rad+2,sinf@x+2
 12514   010902  C659  F599         	movff	MPU6050_DMP_GetData@pitch_rad+3,sinf@x+3
 12515   010906  EC1F  F096         	call	_sinf	;wreg free
 12516   01090A  C596  F63E         	movff	?_sinf,_MPU6050_DMP_GetData$3472
 12517   01090E  C597  F63F         	movff	?_sinf+1,_MPU6050_DMP_GetData$3472+1
 12518   010912  C598  F640         	movff	?_sinf+2,_MPU6050_DMP_GetData$3472+2
 12519   010916  C599  F641         	movff	?_sinf+3,_MPU6050_DMP_GetData$3472+3
 12520   01091A                     
 12521                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12522   01091A  C652  F596         	movff	MPU6050_DMP_GetData@roll_rad,cosf@x
 12523   01091E  C653  F597         	movff	MPU6050_DMP_GetData@roll_rad+1,cosf@x+1
 12524   010922  C654  F598         	movff	MPU6050_DMP_GetData@roll_rad+2,cosf@x+2
 12525   010926  C655  F599         	movff	MPU6050_DMP_GetData@roll_rad+3,cosf@x+3
 12526   01092A  ECA6  F098         	call	_cosf	;wreg free
 12527   01092E  C596  F614         	movff	?_cosf,_MPU6050_DMP_GetData$3477
 12528   010932  C597  F615         	movff	?_cosf+1,_MPU6050_DMP_GetData$3477+1
 12529   010936  C598  F616         	movff	?_cosf+2,_MPU6050_DMP_GetData$3477+2
 12530   01093A  C599  F617         	movff	?_cosf+3,_MPU6050_DMP_GetData$3477+3
 12531   01093E                     
 12532                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12533   01093E  C65A  F596         	movff	MPU6050_DMP_GetData@yaw_rad,sinf@x
 12534   010942  C65B  F597         	movff	MPU6050_DMP_GetData@yaw_rad+1,sinf@x+1
 12535   010946  C65C  F598         	movff	MPU6050_DMP_GetData@yaw_rad+2,sinf@x+2
 12536   01094A  C65D  F599         	movff	MPU6050_DMP_GetData@yaw_rad+3,sinf@x+3
 12537   01094E  EC1F  F096         	call	_sinf	;wreg free
 12538   010952  C596  F646         	movff	?_sinf,_MPU6050_DMP_GetData$3474
 12539   010956  C597  F647         	movff	?_sinf+1,_MPU6050_DMP_GetData$3474+1
 12540   01095A  C598  F648         	movff	?_sinf+2,_MPU6050_DMP_GetData$3474+2
 12541   01095E  C599  F649         	movff	?_sinf+3,_MPU6050_DMP_GetData$3474+3
 12542   010962                     
 12543                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12544   010962  C63E  F509         	movff	_MPU6050_DMP_GetData$3472,___flmul@a
 12545   010966  C63F  F50A         	movff	_MPU6050_DMP_GetData$3472+1,___flmul@a+1
 12546   01096A  C640  F50B         	movff	_MPU6050_DMP_GetData$3472+2,___flmul@a+2
 12547   01096E  C641  F50C         	movff	_MPU6050_DMP_GetData$3472+3,___flmul@a+3
 12548   010972  C614  F505         	movff	_MPU6050_DMP_GetData$3477,___flmul@b
 12549   010976  C615  F506         	movff	_MPU6050_DMP_GetData$3477+1,___flmul@b+1
 12550   01097A  C616  F507         	movff	_MPU6050_DMP_GetData$3477+2,___flmul@b+2
 12551   01097E  C617  F508         	movff	_MPU6050_DMP_GetData$3477+3,___flmul@b+3
 12552   010982  ECB7  F09F         	call	___flmul	;wreg free
 12553   010986  C505  F64E         	movff	?___flmul,_MPU6050_DMP_GetData$3475
 12554   01098A  C506  F64F         	movff	?___flmul+1,_MPU6050_DMP_GetData$3475+1
 12555   01098E  C507  F650         	movff	?___flmul+2,_MPU6050_DMP_GetData$3475+2
 12556   010992  C508  F651         	movff	?___flmul+3,_MPU6050_DMP_GetData$3475+3
 12557                           
 12558                           ;MPU6050_DMP.c: 165:         quat->x = sinf(roll_rad) * cosf(pitch_rad) * cosf(yaw_rad) 
      +                          -
 12559   010996  C63A  F509         	movff	_MPU6050_DMP_GetData$3470,___flmul@a
 12560   01099A  C63B  F50A         	movff	_MPU6050_DMP_GetData$3470+1,___flmul@a+1
 12561   01099E  C63C  F50B         	movff	_MPU6050_DMP_GetData$3470+2,___flmul@a+2
 12562   0109A2  C63D  F50C         	movff	_MPU6050_DMP_GetData$3470+3,___flmul@a+3
 12563   0109A6  C64A  F505         	movff	_MPU6050_DMP_GetData$3471,___flmul@b
 12564   0109AA  C64B  F506         	movff	_MPU6050_DMP_GetData$3471+1,___flmul@b+1
 12565   0109AE  C64C  F507         	movff	_MPU6050_DMP_GetData$3471+2,___flmul@b+2
 12566   0109B2  C64D  F508         	movff	_MPU6050_DMP_GetData$3471+3,___flmul@b+3
 12567   0109B6  ECB7  F09F         	call	___flmul	;wreg free
 12568   0109BA  C505  F56D         	movff	?___flmul,___flsub@b
 12569   0109BE  C506  F56E         	movff	?___flmul+1,___flsub@b+1
 12570   0109C2  C507  F56F         	movff	?___flmul+2,___flsub@b+2
 12571   0109C6  C508  F570         	movff	?___flmul+3,___flsub@b+3
 12572   0109CA  C646  F509         	movff	_MPU6050_DMP_GetData$3474,___flmul@a
 12573   0109CE  C647  F50A         	movff	_MPU6050_DMP_GetData$3474+1,___flmul@a+1
 12574   0109D2  C648  F50B         	movff	_MPU6050_DMP_GetData$3474+2,___flmul@a+2
 12575   0109D6  C649  F50C         	movff	_MPU6050_DMP_GetData$3474+3,___flmul@a+3
 12576   0109DA  C64E  F505         	movff	_MPU6050_DMP_GetData$3475,___flmul@b
 12577   0109DE  C64F  F506         	movff	_MPU6050_DMP_GetData$3475+1,___flmul@b+1
 12578   0109E2  C650  F507         	movff	_MPU6050_DMP_GetData$3475+2,___flmul@b+2
 12579   0109E6  C651  F508         	movff	_MPU6050_DMP_GetData$3475+3,___flmul@b+3
 12580   0109EA  ECB7  F09F         	call	___flmul	;wreg free
 12581   0109EE  C505  F571         	movff	?___flmul,___flsub@a
 12582   0109F2  C506  F572         	movff	?___flmul+1,___flsub@a+1
 12583   0109F6  C507  F573         	movff	?___flmul+2,___flsub@a+2
 12584   0109FA  C508  F574         	movff	?___flmul+3,___flsub@a+3
 12585   0109FE  ECED  F0B6         	call	___flsub	;wreg free
 12586   010A02  0105               	movlb	5	; () banked
 12587   010A04  EE20 F004          	lfsr	2,4
 12588   010A08  51FC               	movf	MPU6050_DMP_GetData@quat& (0+255),w,b
 12589   010A0A  26D9               	addwf	fsr2l,f,c
 12590   010A0C  51FD               	movf	(MPU6050_DMP_GetData@quat+1)& (0+255),w,b
 12591   010A0E  22DA               	addwfc	fsr2h,f,c
 12592   010A10  C56D  F4DE         	movff	?___flsub,postinc2
 12593   010A14  C56E  F4DE         	movff	?___flsub+1,postinc2
 12594   010A18  C56F  F4DE         	movff	?___flsub+2,postinc2
 12595   010A1C  C570  F4DE         	movff	?___flsub+3,postinc2
 12596                           
 12597                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12598   010A20  C656  F596         	movff	MPU6050_DMP_GetData@pitch_rad,sinf@x
 12599   010A24  C657  F597         	movff	MPU6050_DMP_GetData@pitch_rad+1,sinf@x+1
 12600   010A28  C658  F598         	movff	MPU6050_DMP_GetData@pitch_rad+2,sinf@x+2
 12601   010A2C  C659  F599         	movff	MPU6050_DMP_GetData@pitch_rad+3,sinf@x+3
 12602   010A30  EC1F  F096         	call	_sinf	;wreg free
 12603   010A34  C596  F618         	movff	?_sinf,_MPU6050_DMP_GetData$3478
 12604   010A38  C597  F619         	movff	?_sinf+1,_MPU6050_DMP_GetData$3478+1
 12605   010A3C  C598  F61A         	movff	?_sinf+2,_MPU6050_DMP_GetData$3478+2
 12606   010A40  C599  F61B         	movff	?_sinf+3,_MPU6050_DMP_GetData$3478+3
 12607                           
 12608                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12609   010A44  C652  F596         	movff	MPU6050_DMP_GetData@roll_rad,cosf@x
 12610   010A48  C653  F597         	movff	MPU6050_DMP_GetData@roll_rad+1,cosf@x+1
 12611   010A4C  C654  F598         	movff	MPU6050_DMP_GetData@roll_rad+2,cosf@x+2
 12612   010A50  C655  F599         	movff	MPU6050_DMP_GetData@roll_rad+3,cosf@x+3
 12613   010A54  ECA6  F098         	call	_cosf	;wreg free
 12614   010A58  C596  F636         	movff	?_cosf,_MPU6050_DMP_GetData$3469
 12615   010A5C  C597  F637         	movff	?_cosf+1,_MPU6050_DMP_GetData$3469+1
 12616   010A60  C598  F638         	movff	?_cosf+2,_MPU6050_DMP_GetData$3469+2
 12617   010A64  C599  F639         	movff	?_cosf+3,_MPU6050_DMP_GetData$3469+3
 12618                           
 12619                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12620   010A68  C65A  F596         	movff	MPU6050_DMP_GetData@yaw_rad,cosf@x
 12621   010A6C  C65B  F597         	movff	MPU6050_DMP_GetData@yaw_rad+1,cosf@x+1
 12622   010A70  C65C  F598         	movff	MPU6050_DMP_GetData@yaw_rad+2,cosf@x+2
 12623   010A74  C65D  F599         	movff	MPU6050_DMP_GetData@yaw_rad+3,cosf@x+3
 12624   010A78  ECA6  F098         	call	_cosf	;wreg free
 12625   010A7C  C596  F63A         	movff	?_cosf,_MPU6050_DMP_GetData$3470
 12626   010A80  C597  F63B         	movff	?_cosf+1,_MPU6050_DMP_GetData$3470+1
 12627   010A84  C598  F63C         	movff	?_cosf+2,_MPU6050_DMP_GetData$3470+2
 12628   010A88  C599  F63D         	movff	?_cosf+3,_MPU6050_DMP_GetData$3470+3
 12629   010A8C                     
 12630                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12631   010A8C  C618  F509         	movff	_MPU6050_DMP_GetData$3478,___flmul@a
 12632   010A90  C619  F50A         	movff	_MPU6050_DMP_GetData$3478+1,___flmul@a+1
 12633   010A94  C61A  F50B         	movff	_MPU6050_DMP_GetData$3478+2,___flmul@a+2
 12634   010A98  C61B  F50C         	movff	_MPU6050_DMP_GetData$3478+3,___flmul@a+3
 12635   010A9C  C636  F505         	movff	_MPU6050_DMP_GetData$3469,___flmul@b
 12636   010AA0  C637  F506         	movff	_MPU6050_DMP_GetData$3469+1,___flmul@b+1
 12637   010AA4  C638  F507         	movff	_MPU6050_DMP_GetData$3469+2,___flmul@b+2
 12638   010AA8  C639  F508         	movff	_MPU6050_DMP_GetData$3469+3,___flmul@b+3
 12639   010AAC  ECB7  F09F         	call	___flmul	;wreg free
 12640   010AB0  C505  F64A         	movff	?___flmul,_MPU6050_DMP_GetData$3471
 12641   010AB4  C506  F64B         	movff	?___flmul+1,_MPU6050_DMP_GetData$3471+1
 12642   010AB8  C507  F64C         	movff	?___flmul+2,_MPU6050_DMP_GetData$3471+2
 12643   010ABC  C508  F64D         	movff	?___flmul+3,_MPU6050_DMP_GetData$3471+3
 12644   010AC0                     
 12645                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12646   010AC0  C656  F596         	movff	MPU6050_DMP_GetData@pitch_rad,cosf@x
 12647   010AC4  C657  F597         	movff	MPU6050_DMP_GetData@pitch_rad+1,cosf@x+1
 12648   010AC8  C658  F598         	movff	MPU6050_DMP_GetData@pitch_rad+2,cosf@x+2
 12649   010ACC  C659  F599         	movff	MPU6050_DMP_GetData@pitch_rad+3,cosf@x+3
 12650   010AD0  ECA6  F098         	call	_cosf	;wreg free
 12651   010AD4  C596  F61C         	movff	?_cosf,_MPU6050_DMP_GetData$3479
 12652   010AD8  C597  F61D         	movff	?_cosf+1,_MPU6050_DMP_GetData$3479+1
 12653   010ADC  C598  F61E         	movff	?_cosf+2,_MPU6050_DMP_GetData$3479+2
 12654   010AE0  C599  F61F         	movff	?_cosf+3,_MPU6050_DMP_GetData$3479+3
 12655   010AE4                     
 12656                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12657   010AE4  C652  F596         	movff	MPU6050_DMP_GetData@roll_rad,sinf@x
 12658   010AE8  C653  F597         	movff	MPU6050_DMP_GetData@roll_rad+1,sinf@x+1
 12659   010AEC  C654  F598         	movff	MPU6050_DMP_GetData@roll_rad+2,sinf@x+2
 12660   010AF0  C655  F599         	movff	MPU6050_DMP_GetData@roll_rad+3,sinf@x+3
 12661   010AF4  EC1F  F096         	call	_sinf	;wreg free
 12662   010AF8  C596  F642         	movff	?_sinf,_MPU6050_DMP_GetData$3473
 12663   010AFC  C597  F643         	movff	?_sinf+1,_MPU6050_DMP_GetData$3473+1
 12664   010B00  C598  F644         	movff	?_sinf+2,_MPU6050_DMP_GetData$3473+2
 12665   010B04  C599  F645         	movff	?_sinf+3,_MPU6050_DMP_GetData$3473+3
 12666   010B08                     
 12667                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12668   010B08  C65A  F596         	movff	MPU6050_DMP_GetData@yaw_rad,sinf@x
 12669   010B0C  C65B  F597         	movff	MPU6050_DMP_GetData@yaw_rad+1,sinf@x+1
 12670   010B10  C65C  F598         	movff	MPU6050_DMP_GetData@yaw_rad+2,sinf@x+2
 12671   010B14  C65D  F599         	movff	MPU6050_DMP_GetData@yaw_rad+3,sinf@x+3
 12672   010B18  EC1F  F096         	call	_sinf	;wreg free
 12673   010B1C  C596  F646         	movff	?_sinf,_MPU6050_DMP_GetData$3474
 12674   010B20  C597  F647         	movff	?_sinf+1,_MPU6050_DMP_GetData$3474+1
 12675   010B24  C598  F648         	movff	?_sinf+2,_MPU6050_DMP_GetData$3474+2
 12676   010B28  C599  F649         	movff	?_sinf+3,_MPU6050_DMP_GetData$3474+3
 12677                           
 12678                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12679   010B2C  C61C  F509         	movff	_MPU6050_DMP_GetData$3479,___flmul@a
 12680   010B30  C61D  F50A         	movff	_MPU6050_DMP_GetData$3479+1,___flmul@a+1
 12681   010B34  C61E  F50B         	movff	_MPU6050_DMP_GetData$3479+2,___flmul@a+2
 12682   010B38  C61F  F50C         	movff	_MPU6050_DMP_GetData$3479+3,___flmul@a+3
 12683   010B3C  C642  F505         	movff	_MPU6050_DMP_GetData$3473,___flmul@b
 12684   010B40  C643  F506         	movff	_MPU6050_DMP_GetData$3473+1,___flmul@b+1
 12685   010B44  C644  F507         	movff	_MPU6050_DMP_GetData$3473+2,___flmul@b+2
 12686   010B48  C645  F508         	movff	_MPU6050_DMP_GetData$3473+3,___flmul@b+3
 12687   010B4C  ECB7  F09F         	call	___flmul	;wreg free
 12688   010B50  C505  F64E         	movff	?___flmul,_MPU6050_DMP_GetData$3475
 12689   010B54  C506  F64F         	movff	?___flmul+1,_MPU6050_DMP_GetData$3475+1
 12690   010B58  C507  F650         	movff	?___flmul+2,_MPU6050_DMP_GetData$3475+2
 12691   010B5C  C508  F651         	movff	?___flmul+3,_MPU6050_DMP_GetData$3475+3
 12692   010B60                     
 12693                           ;MPU6050_DMP.c: 167:         quat->y = cosf(roll_rad) * sinf(pitch_rad) * cosf(yaw_rad) 
      +                          +
 12694   010B60  C63A  F509         	movff	_MPU6050_DMP_GetData$3470,___flmul@a
 12695   010B64  C63B  F50A         	movff	_MPU6050_DMP_GetData$3470+1,___flmul@a+1
 12696   010B68  C63C  F50B         	movff	_MPU6050_DMP_GetData$3470+2,___flmul@a+2
 12697   010B6C  C63D  F50C         	movff	_MPU6050_DMP_GetData$3470+3,___flmul@a+3
 12698   010B70  C64A  F505         	movff	_MPU6050_DMP_GetData$3471,___flmul@b
 12699   010B74  C64B  F506         	movff	_MPU6050_DMP_GetData$3471+1,___flmul@b+1
 12700   010B78  C64C  F507         	movff	_MPU6050_DMP_GetData$3471+2,___flmul@b+2
 12701   010B7C  C64D  F508         	movff	_MPU6050_DMP_GetData$3471+3,___flmul@b+3
 12702   010B80  ECB7  F09F         	call	___flmul	;wreg free
 12703   010B84  C505  F51E         	movff	?___flmul,___fladd@b
 12704   010B88  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 12705   010B8C  C507  F520         	movff	?___flmul+2,___fladd@b+2
 12706   010B90  C508  F521         	movff	?___flmul+3,___fladd@b+3
 12707   010B94  C646  F509         	movff	_MPU6050_DMP_GetData$3474,___flmul@a
 12708   010B98  C647  F50A         	movff	_MPU6050_DMP_GetData$3474+1,___flmul@a+1
 12709   010B9C  C648  F50B         	movff	_MPU6050_DMP_GetData$3474+2,___flmul@a+2
 12710   010BA0  C649  F50C         	movff	_MPU6050_DMP_GetData$3474+3,___flmul@a+3
 12711   010BA4  C64E  F505         	movff	_MPU6050_DMP_GetData$3475,___flmul@b
 12712   010BA8  C64F  F506         	movff	_MPU6050_DMP_GetData$3475+1,___flmul@b+1
 12713   010BAC  C650  F507         	movff	_MPU6050_DMP_GetData$3475+2,___flmul@b+2
 12714   010BB0  C651  F508         	movff	_MPU6050_DMP_GetData$3475+3,___flmul@b+3
 12715   010BB4  ECB7  F09F         	call	___flmul	;wreg free
 12716   010BB8  C505  F522         	movff	?___flmul,___fladd@a
 12717   010BBC  C506  F523         	movff	?___flmul+1,___fladd@a+1
 12718   010BC0  C507  F524         	movff	?___flmul+2,___fladd@a+2
 12719   010BC4  C508  F525         	movff	?___flmul+3,___fladd@a+3
 12720   010BC8  EC1B  F09B         	call	___fladd	;wreg free
 12721   010BCC  0105               	movlb	5	; () banked
 12722   010BCE  EE20 F008          	lfsr	2,8
 12723   010BD2  51FC               	movf	MPU6050_DMP_GetData@quat& (0+255),w,b
 12724   010BD4  26D9               	addwf	fsr2l,f,c
 12725   010BD6  51FD               	movf	(MPU6050_DMP_GetData@quat+1)& (0+255),w,b
 12726   010BD8  22DA               	addwfc	fsr2h,f,c
 12727   010BDA  C51E  F4DE         	movff	?___fladd,postinc2
 12728   010BDE  C51F  F4DE         	movff	?___fladd+1,postinc2
 12729   010BE2  C520  F4DE         	movff	?___fladd+2,postinc2
 12730   010BE6  C521  F4DE         	movff	?___fladd+3,postinc2
 12731   010BEA                     
 12732                           ; BSR set to: 5
 12733                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12734   010BEA  C656  F596         	movff	MPU6050_DMP_GetData@pitch_rad,cosf@x
 12735   010BEE  C657  F597         	movff	MPU6050_DMP_GetData@pitch_rad+1,cosf@x+1
 12736   010BF2  C658  F598         	movff	MPU6050_DMP_GetData@pitch_rad+2,cosf@x+2
 12737   010BF6  C659  F599         	movff	MPU6050_DMP_GetData@pitch_rad+3,cosf@x+3
 12738   010BFA  ECA6  F098         	call	_cosf	;wreg free
 12739   010BFE  C596  F632         	movff	?_cosf,_MPU6050_DMP_GetData$3468
 12740   010C02  C597  F633         	movff	?_cosf+1,_MPU6050_DMP_GetData$3468+1
 12741   010C06  C598  F634         	movff	?_cosf+2,_MPU6050_DMP_GetData$3468+2
 12742   010C0A  C599  F635         	movff	?_cosf+3,_MPU6050_DMP_GetData$3468+3
 12743   010C0E                     
 12744                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12745   010C0E  C652  F596         	movff	MPU6050_DMP_GetData@roll_rad,cosf@x
 12746   010C12  C653  F597         	movff	MPU6050_DMP_GetData@roll_rad+1,cosf@x+1
 12747   010C16  C654  F598         	movff	MPU6050_DMP_GetData@roll_rad+2,cosf@x+2
 12748   010C1A  C655  F599         	movff	MPU6050_DMP_GetData@roll_rad+3,cosf@x+3
 12749   010C1E  ECA6  F098         	call	_cosf	;wreg free
 12750   010C22  C596  F636         	movff	?_cosf,_MPU6050_DMP_GetData$3469
 12751   010C26  C597  F637         	movff	?_cosf+1,_MPU6050_DMP_GetData$3469+1
 12752   010C2A  C598  F638         	movff	?_cosf+2,_MPU6050_DMP_GetData$3469+2
 12753   010C2E  C599  F639         	movff	?_cosf+3,_MPU6050_DMP_GetData$3469+3
 12754   010C32                     
 12755                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12756   010C32  C65A  F596         	movff	MPU6050_DMP_GetData@yaw_rad,sinf@x
 12757   010C36  C65B  F597         	movff	MPU6050_DMP_GetData@yaw_rad+1,sinf@x+1
 12758   010C3A  C65C  F598         	movff	MPU6050_DMP_GetData@yaw_rad+2,sinf@x+2
 12759   010C3E  C65D  F599         	movff	MPU6050_DMP_GetData@yaw_rad+3,sinf@x+3
 12760   010C42  EC1F  F096         	call	_sinf	;wreg free
 12761   010C46  C596  F620         	movff	?_sinf,_MPU6050_DMP_GetData$3480
 12762   010C4A  C597  F621         	movff	?_sinf+1,_MPU6050_DMP_GetData$3480+1
 12763   010C4E  C598  F622         	movff	?_sinf+2,_MPU6050_DMP_GetData$3480+2
 12764   010C52  C599  F623         	movff	?_sinf+3,_MPU6050_DMP_GetData$3480+3
 12765                           
 12766                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12767   010C56  C632  F509         	movff	_MPU6050_DMP_GetData$3468,___flmul@a
 12768   010C5A  C633  F50A         	movff	_MPU6050_DMP_GetData$3468+1,___flmul@a+1
 12769   010C5E  C634  F50B         	movff	_MPU6050_DMP_GetData$3468+2,___flmul@a+2
 12770   010C62  C635  F50C         	movff	_MPU6050_DMP_GetData$3468+3,___flmul@a+3
 12771   010C66  C636  F505         	movff	_MPU6050_DMP_GetData$3469,___flmul@b
 12772   010C6A  C637  F506         	movff	_MPU6050_DMP_GetData$3469+1,___flmul@b+1
 12773   010C6E  C638  F507         	movff	_MPU6050_DMP_GetData$3469+2,___flmul@b+2
 12774   010C72  C639  F508         	movff	_MPU6050_DMP_GetData$3469+3,___flmul@b+3
 12775   010C76  ECB7  F09F         	call	___flmul	;wreg free
 12776   010C7A  C505  F64A         	movff	?___flmul,_MPU6050_DMP_GetData$3471
 12777   010C7E  C506  F64B         	movff	?___flmul+1,_MPU6050_DMP_GetData$3471+1
 12778   010C82  C507  F64C         	movff	?___flmul+2,_MPU6050_DMP_GetData$3471+2
 12779   010C86  C508  F64D         	movff	?___flmul+3,_MPU6050_DMP_GetData$3471+3
 12780   010C8A                     
 12781                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12782   010C8A  C656  F596         	movff	MPU6050_DMP_GetData@pitch_rad,sinf@x
 12783   010C8E  C657  F597         	movff	MPU6050_DMP_GetData@pitch_rad+1,sinf@x+1
 12784   010C92  C658  F598         	movff	MPU6050_DMP_GetData@pitch_rad+2,sinf@x+2
 12785   010C96  C659  F599         	movff	MPU6050_DMP_GetData@pitch_rad+3,sinf@x+3
 12786   010C9A  EC1F  F096         	call	_sinf	;wreg free
 12787   010C9E  C596  F63E         	movff	?_sinf,_MPU6050_DMP_GetData$3472
 12788   010CA2  C597  F63F         	movff	?_sinf+1,_MPU6050_DMP_GetData$3472+1
 12789   010CA6  C598  F640         	movff	?_sinf+2,_MPU6050_DMP_GetData$3472+2
 12790   010CAA  C599  F641         	movff	?_sinf+3,_MPU6050_DMP_GetData$3472+3
 12791   010CAE                     
 12792                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12793   010CAE  C652  F596         	movff	MPU6050_DMP_GetData@roll_rad,sinf@x
 12794   010CB2  C653  F597         	movff	MPU6050_DMP_GetData@roll_rad+1,sinf@x+1
 12795   010CB6  C654  F598         	movff	MPU6050_DMP_GetData@roll_rad+2,sinf@x+2
 12796   010CBA  C655  F599         	movff	MPU6050_DMP_GetData@roll_rad+3,sinf@x+3
 12797   010CBE  EC1F  F096         	call	_sinf	;wreg free
 12798   010CC2  C596  F642         	movff	?_sinf,_MPU6050_DMP_GetData$3473
 12799   010CC6  C597  F643         	movff	?_sinf+1,_MPU6050_DMP_GetData$3473+1
 12800   010CCA  C598  F644         	movff	?_sinf+2,_MPU6050_DMP_GetData$3473+2
 12801   010CCE  C599  F645         	movff	?_sinf+3,_MPU6050_DMP_GetData$3473+3
 12802   010CD2                     
 12803                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12804   010CD2  C65A  F596         	movff	MPU6050_DMP_GetData@yaw_rad,cosf@x
 12805   010CD6  C65B  F597         	movff	MPU6050_DMP_GetData@yaw_rad+1,cosf@x+1
 12806   010CDA  C65C  F598         	movff	MPU6050_DMP_GetData@yaw_rad+2,cosf@x+2
 12807   010CDE  C65D  F599         	movff	MPU6050_DMP_GetData@yaw_rad+3,cosf@x+3
 12808   010CE2  ECA6  F098         	call	_cosf	;wreg free
 12809   010CE6  C596  F624         	movff	?_cosf,_MPU6050_DMP_GetData$3481
 12810   010CEA  C597  F625         	movff	?_cosf+1,_MPU6050_DMP_GetData$3481+1
 12811   010CEE  C598  F626         	movff	?_cosf+2,_MPU6050_DMP_GetData$3481+2
 12812   010CF2  C599  F627         	movff	?_cosf+3,_MPU6050_DMP_GetData$3481+3
 12813   010CF6                     
 12814                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12815   010CF6  C63E  F509         	movff	_MPU6050_DMP_GetData$3472,___flmul@a
 12816   010CFA  C63F  F50A         	movff	_MPU6050_DMP_GetData$3472+1,___flmul@a+1
 12817   010CFE  C640  F50B         	movff	_MPU6050_DMP_GetData$3472+2,___flmul@a+2
 12818   010D02  C641  F50C         	movff	_MPU6050_DMP_GetData$3472+3,___flmul@a+3
 12819   010D06  C642  F505         	movff	_MPU6050_DMP_GetData$3473,___flmul@b
 12820   010D0A  C643  F506         	movff	_MPU6050_DMP_GetData$3473+1,___flmul@b+1
 12821   010D0E  C644  F507         	movff	_MPU6050_DMP_GetData$3473+2,___flmul@b+2
 12822   010D12  C645  F508         	movff	_MPU6050_DMP_GetData$3473+3,___flmul@b+3
 12823   010D16  ECB7  F09F         	call	___flmul	;wreg free
 12824   010D1A  C505  F64E         	movff	?___flmul,_MPU6050_DMP_GetData$3475
 12825   010D1E  C506  F64F         	movff	?___flmul+1,_MPU6050_DMP_GetData$3475+1
 12826   010D22  C507  F650         	movff	?___flmul+2,_MPU6050_DMP_GetData$3475+2
 12827   010D26  C508  F651         	movff	?___flmul+3,_MPU6050_DMP_GetData$3475+3
 12828                           
 12829                           ;MPU6050_DMP.c: 169:         quat->z = cosf(roll_rad) * cosf(pitch_rad) * sinf(yaw_rad) 
      +                          -
 12830   010D2A  C620  F509         	movff	_MPU6050_DMP_GetData$3480,___flmul@a
 12831   010D2E  C621  F50A         	movff	_MPU6050_DMP_GetData$3480+1,___flmul@a+1
 12832   010D32  C622  F50B         	movff	_MPU6050_DMP_GetData$3480+2,___flmul@a+2
 12833   010D36  C623  F50C         	movff	_MPU6050_DMP_GetData$3480+3,___flmul@a+3
 12834   010D3A  C64A  F505         	movff	_MPU6050_DMP_GetData$3471,___flmul@b
 12835   010D3E  C64B  F506         	movff	_MPU6050_DMP_GetData$3471+1,___flmul@b+1
 12836   010D42  C64C  F507         	movff	_MPU6050_DMP_GetData$3471+2,___flmul@b+2
 12837   010D46  C64D  F508         	movff	_MPU6050_DMP_GetData$3471+3,___flmul@b+3
 12838   010D4A  ECB7  F09F         	call	___flmul	;wreg free
 12839   010D4E  C505  F56D         	movff	?___flmul,___flsub@b
 12840   010D52  C506  F56E         	movff	?___flmul+1,___flsub@b+1
 12841   010D56  C507  F56F         	movff	?___flmul+2,___flsub@b+2
 12842   010D5A  C508  F570         	movff	?___flmul+3,___flsub@b+3
 12843   010D5E  C624  F509         	movff	_MPU6050_DMP_GetData$3481,___flmul@a
 12844   010D62  C625  F50A         	movff	_MPU6050_DMP_GetData$3481+1,___flmul@a+1
 12845   010D66  C626  F50B         	movff	_MPU6050_DMP_GetData$3481+2,___flmul@a+2
 12846   010D6A  C627  F50C         	movff	_MPU6050_DMP_GetData$3481+3,___flmul@a+3
 12847   010D6E  C64E  F505         	movff	_MPU6050_DMP_GetData$3475,___flmul@b
 12848   010D72  C64F  F506         	movff	_MPU6050_DMP_GetData$3475+1,___flmul@b+1
 12849   010D76  C650  F507         	movff	_MPU6050_DMP_GetData$3475+2,___flmul@b+2
 12850   010D7A  C651  F508         	movff	_MPU6050_DMP_GetData$3475+3,___flmul@b+3
 12851   010D7E  ECB7  F09F         	call	___flmul	;wreg free
 12852   010D82  C505  F571         	movff	?___flmul,___flsub@a
 12853   010D86  C506  F572         	movff	?___flmul+1,___flsub@a+1
 12854   010D8A  C507  F573         	movff	?___flmul+2,___flsub@a+2
 12855   010D8E  C508  F574         	movff	?___flmul+3,___flsub@a+3
 12856   010D92  ECED  F0B6         	call	___flsub	;wreg free
 12857   010D96  0105               	movlb	5	; () banked
 12858   010D98  EE20 F00C          	lfsr	2,12
 12859   010D9C  51FC               	movf	MPU6050_DMP_GetData@quat& (0+255),w,b
 12860   010D9E  26D9               	addwf	fsr2l,f,c
 12861   010DA0  51FD               	movf	(MPU6050_DMP_GetData@quat+1)& (0+255),w,b
 12862   010DA2  22DA               	addwfc	fsr2h,f,c
 12863   010DA4  C56D  F4DE         	movff	?___flsub,postinc2
 12864   010DA8  C56E  F4DE         	movff	?___flsub+1,postinc2
 12865   010DAC  C56F  F4DE         	movff	?___flsub+2,postinc2
 12866   010DB0  C570  F4DE         	movff	?___flsub+3,postinc2
 12867   010DB4                     l10005:
 12868                           
 12869                           ; BSR set to: 5
 12870                           ;MPU6050_DMP.c: 173:     last_read_time = current_time;
 12871   010DB4  C62C  F6FB         	movff	MPU6050_DMP_GetData@current_time,MPU6050_DMP_GetData@last_read_time
 12872   010DB8  C62D  F6FC         	movff	MPU6050_DMP_GetData@current_time+1,MPU6050_DMP_GetData@last_read_time+1
 12873   010DBC                     l587:
 12874   010DBC  0012               	return		;funcret
 12875   010DBE                     __end_of_MPU6050_DMP_GetData:
 12876                           	callstack 0
 12877                           
 12878 ;; *************** function _sinf *****************
 12879 ;; Defined at:
 12880 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sinf.c"
 12881 ;; Parameters:    Size  Location     Type
 12882 ;;  x               4   54[BANK5 ] float 
 12883 ;; Auto vars:     Size  Location     Type
 12884 ;;  ux              4   76[BANK5 ] struct .
 12885 ;;  y               4   72[BANK5 ] struct .
 12886 ;;  sign            1   67[BANK5 ] _Bool 
 12887 ;;  n               1   66[BANK5 ] unsigned char 
 12888 ;; Return value:  Size  Location     Type
 12889 ;;                  4   54[BANK5 ] float 
 12890 ;; Registers used:
 12891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12892 ;; Tracked objects:
 12893 ;;		On entry : 0/0
 12894 ;;		On exit  : 0/0
 12895 ;;		Unchanged: 0/0
 12896 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12897 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12898 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12900 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12901 ;;Total ram usage:       26 bytes
 12902 ;; Hardware stack levels used: 1
 12903 ;; Hardware stack levels required when called: 3
 12904 ;; This function calls:
 12905 ;;		___cosdf
 12906 ;;		___fladd
 12907 ;;		___flneg
 12908 ;;		___rem_pio2f
 12909 ;;		___sindf
 12910 ;; This function is called by:
 12911 ;;		_MPU6050_DMP_GetData
 12912 ;; This function uses a non-reentrant model
 12913 ;;
 12914                           
 12915                           	psect	text27
 12916   012C3E                     __ptext27:
 12917                           	callstack 0
 12918   012C3E                     _sinf:
 12919                           	callstack 122
 12920   012C3E  C596  F5AC         	movff	sinf@x,sinf@ux
 12921   012C42  C597  F5AD         	movff	sinf@x+1,sinf@ux+1
 12922   012C46  C598  F5AE         	movff	sinf@x+2,sinf@ux+2
 12923   012C4A  C599  F5AF         	movff	sinf@x+3,sinf@ux+3
 12924   012C4E  0105               	movlb	5	; () banked
 12925   012C50  BFAF               	btfsc	(sinf@ux+3)& (0+255),7,b
 12926   012C52  EF2D  F096         	goto	u7701
 12927   012C56  EF30  F096         	goto	u7700
 12928   012C5A                     u7701:
 12929   012C5A  0E01               	movlw	1
 12930   012C5C  EF31  F096         	goto	u7710
 12931   012C60                     u7700:
 12932   012C60  0E00               	movlw	0
 12933   012C62                     u7710:
 12934   012C62  6FA3               	movwf	sinf@sign& (0+255),b
 12935   012C64                     
 12936                           ; BSR set to: 5
 12937   012C64  9FAF               	bcf	(sinf@ux+3)& (0+255),7,b
 12938   012C66                     
 12939                           ; BSR set to: 5
 12940   012C66  0EDB               	movlw	219
 12941   012C68  5DAC               	subwf	sinf@ux& (0+255),w,b
 12942   012C6A  0E0F               	movlw	15
 12943   012C6C  59AD               	subwfb	(sinf@ux+1)& (0+255),w,b
 12944   012C6E  0E49               	movlw	73
 12945   012C70  59AE               	subwfb	(sinf@ux+2)& (0+255),w,b
 12946   012C72  0E3F               	movlw	63
 12947   012C74  59AF               	subwfb	(sinf@ux+3)& (0+255),w,b
 12948   012C76  B0D8               	btfsc	status,0,c
 12949   012C78  EF40  F096         	goto	u7721
 12950   012C7C  EF42  F096         	goto	u7720
 12951   012C80                     u7721:
 12952   012C80  EF6B  F096         	goto	l9657
 12953   012C84                     u7720:
 12954   012C84                     
 12955                           ; BSR set to: 5
 12956   012C84  0E80               	movlw	128
 12957   012C86  5DAE               	subwf	(sinf@ux+2)& (0+255),w,b
 12958   012C88  0E39               	movlw	57
 12959   012C8A  59AF               	subwfb	(sinf@ux+3)& (0+255),w,b
 12960   012C8C  B0D8               	btfsc	status,0,c
 12961   012C8E  EF4B  F096         	goto	u7731
 12962   012C92  EF4D  F096         	goto	u7730
 12963   012C96                     u7731:
 12964   012C96  EF57  F096         	goto	l9653
 12965   012C9A                     u7730:
 12966   012C9A                     
 12967                           ; BSR set to: 5
 12968   012C9A  C596  F596         	movff	sinf@x,?_sinf
 12969   012C9E  C597  F597         	movff	sinf@x+1,?_sinf+1
 12970   012CA2  C598  F598         	movff	sinf@x+2,?_sinf+2
 12971   012CA6  C599  F599         	movff	sinf@x+3,?_sinf+3
 12972   012CAA  EFA5  F098         	goto	l2448
 12973   012CAE                     l9653:
 12974                           
 12975                           ; BSR set to: 5
 12976   012CAE  C596  F575         	movff	sinf@x,___sindf@x
 12977   012CB2  C597  F576         	movff	sinf@x+1,___sindf@x+1
 12978   012CB6  C598  F577         	movff	sinf@x+2,___sindf@x+2
 12979   012CBA  C599  F578         	movff	sinf@x+3,___sindf@x+3
 12980   012CBE  ECC1  F0A9         	call	___sindf	;wreg free
 12981   012CC2  C575  F596         	movff	?___sindf,?_sinf
 12982   012CC6  C576  F597         	movff	?___sindf+1,?_sinf+1
 12983   012CCA  C577  F598         	movff	?___sindf+2,?_sinf+2
 12984   012CCE  C578  F599         	movff	?___sindf+3,?_sinf+3
 12985   012CD2  EFA5  F098         	goto	l2448
 12986   012CD6                     l9657:
 12987                           
 12988                           ; BSR set to: 5
 12989   012CD6  0ED2               	movlw	210
 12990   012CD8  5DAC               	subwf	sinf@ux& (0+255),w,b
 12991   012CDA  0E53               	movlw	83
 12992   012CDC  59AD               	subwfb	(sinf@ux+1)& (0+255),w,b
 12993   012CDE  0E7B               	movlw	123
 12994   012CE0  59AE               	subwfb	(sinf@ux+2)& (0+255),w,b
 12995   012CE2  0E40               	movlw	64
 12996   012CE4  59AF               	subwfb	(sinf@ux+3)& (0+255),w,b
 12997   012CE6  B0D8               	btfsc	status,0,c
 12998   012CE8  EF78  F096         	goto	u7741
 12999   012CEC  EF7A  F096         	goto	u7740
 13000   012CF0                     u7741:
 13001   012CF0  EF5D  F097         	goto	l9687
 13002   012CF4                     u7740:
 13003   012CF4                     
 13004                           ; BSR set to: 5
 13005   012CF4  0EE4               	movlw	228
 13006   012CF6  5DAC               	subwf	sinf@ux& (0+255),w,b
 13007   012CF8  0ECB               	movlw	203
 13008   012CFA  59AD               	subwfb	(sinf@ux+1)& (0+255),w,b
 13009   012CFC  0E16               	movlw	22
 13010   012CFE  59AE               	subwfb	(sinf@ux+2)& (0+255),w,b
 13011   012D00  0E40               	movlw	64
 13012   012D02  59AF               	subwfb	(sinf@ux+3)& (0+255),w,b
 13013   012D04  B0D8               	btfsc	status,0,c
 13014   012D06  EF87  F096         	goto	u7751
 13015   012D0A  EF89  F096         	goto	u7750
 13016   012D0E                     u7751:
 13017   012D0E  EFF7  F096         	goto	l9677
 13018   012D12                     u7750:
 13019   012D12                     
 13020                           ; BSR set to: 5
 13021   012D12  51A3               	movf	sinf@sign& (0+255),w,b
 13022   012D14  B4D8               	btfsc	status,2,c
 13023   012D16  EF8F  F096         	goto	u7761
 13024   012D1A  EF91  F096         	goto	u7760
 13025   012D1E                     u7761:
 13026   012D1E  EFC9  F096         	goto	l9671
 13027   012D22                     u7760:
 13028   012D22                     
 13029                           ; BSR set to: 5
 13030   012D22  0EDB               	movlw	219
 13031   012D24  6E22               	movwf	___fladd@a^(0+1280),c
 13032   012D26  0E0F               	movlw	15
 13033   012D28  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13034   012D2A  0EC9               	movlw	201
 13035   012D2C  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13036   012D2E  0E3F               	movlw	63
 13037   012D30  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13038   012D32  C596  F51E         	movff	sinf@x,___fladd@b
 13039   012D36  C597  F51F         	movff	sinf@x+1,___fladd@b+1
 13040   012D3A  C598  F520         	movff	sinf@x+2,___fladd@b+2
 13041   012D3E  C599  F521         	movff	sinf@x+3,___fladd@b+3
 13042   012D42  EC1B  F09B         	call	___fladd	;wreg free
 13043   012D46  C51E  F5A4         	movff	?___fladd,_sinf$3503
 13044   012D4A  C51F  F5A5         	movff	?___fladd+1,_sinf$3503+1
 13045   012D4E  C520  F5A6         	movff	?___fladd+2,_sinf$3503+2
 13046   012D52  C521  F5A7         	movff	?___fladd+3,_sinf$3503+3
 13047   012D56                     l9665:
 13048   012D56  C5A4  F52E         	movff	_sinf$3503,___cosdf@x
 13049   012D5A  C5A5  F52F         	movff	_sinf$3503+1,___cosdf@x+1
 13050   012D5E  C5A6  F530         	movff	_sinf$3503+2,___cosdf@x+2
 13051   012D62  C5A7  F531         	movff	_sinf$3503+3,___cosdf@x+3
 13052   012D66  ECE5  F0AB         	call	___cosdf	;wreg free
 13053   012D6A  C52E  F501         	movff	?___cosdf,___flneg@f1
 13054   012D6E  C52F  F502         	movff	?___cosdf+1,___flneg@f1+1
 13055   012D72  C530  F503         	movff	?___cosdf+2,___flneg@f1+2
 13056   012D76  C531  F504         	movff	?___cosdf+3,___flneg@f1+3
 13057   012D7A  EC6F  F0B7         	call	___flneg	;wreg free
 13058   012D7E  C501  F596         	movff	?___flneg,?_sinf
 13059   012D82  C502  F597         	movff	?___flneg+1,?_sinf+1
 13060   012D86  C503  F598         	movff	?___flneg+2,?_sinf+2
 13061   012D8A  C504  F599         	movff	?___flneg+3,?_sinf+3
 13062   012D8E  EFA5  F098         	goto	l2448
 13063   012D92                     l9671:
 13064                           
 13065                           ; BSR set to: 5
 13066   012D92  C596  F51E         	movff	sinf@x,___fladd@b
 13067   012D96  C597  F51F         	movff	sinf@x+1,___fladd@b+1
 13068   012D9A  C598  F520         	movff	sinf@x+2,___fladd@b+2
 13069   012D9E  C599  F521         	movff	sinf@x+3,___fladd@b+3
 13070   012DA2  0EDB               	movlw	219
 13071   012DA4  6E22               	movwf	___fladd@a^(0+1280),c
 13072   012DA6  0E0F               	movlw	15
 13073   012DA8  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13074   012DAA  0EC9               	movlw	201
 13075   012DAC  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13076   012DAE  0EBF               	movlw	191
 13077   012DB0  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13078   012DB2  EC1B  F09B         	call	___fladd	;wreg free
 13079   012DB6  C51E  F5A4         	movff	?___fladd,_sinf$3503
 13080   012DBA  C51F  F5A5         	movff	?___fladd+1,_sinf$3503+1
 13081   012DBE  C520  F5A6         	movff	?___fladd+2,_sinf$3503+2
 13082   012DC2  C521  F5A7         	movff	?___fladd+3,_sinf$3503+3
 13083   012DC6                     l9673:
 13084   012DC6  C5A4  F52E         	movff	_sinf$3503,___cosdf@x
 13085   012DCA  C5A5  F52F         	movff	_sinf$3503+1,___cosdf@x+1
 13086   012DCE  C5A6  F530         	movff	_sinf$3503+2,___cosdf@x+2
 13087   012DD2  C5A7  F531         	movff	_sinf$3503+3,___cosdf@x+3
 13088   012DD6  ECE5  F0AB         	call	___cosdf	;wreg free
 13089   012DDA  C52E  F596         	movff	?___cosdf,?_sinf
 13090   012DDE  C52F  F597         	movff	?___cosdf+1,?_sinf+1
 13091   012DE2  C530  F598         	movff	?___cosdf+2,?_sinf+2
 13092   012DE6  C531  F599         	movff	?___cosdf+3,?_sinf+3
 13093   012DEA  EFA5  F098         	goto	l2448
 13094   012DEE                     l9677:
 13095                           
 13096                           ; BSR set to: 5
 13097   012DEE  51A3               	movf	sinf@sign& (0+255),w,b
 13098   012DF0  A4D8               	btfss	status,2,c
 13099   012DF2  EFFD  F096         	goto	u7771
 13100   012DF6  EFFF  F096         	goto	u7770
 13101   012DFA                     u7771:
 13102   012DFA  EF25  F097         	goto	l9681
 13103   012DFE                     u7770:
 13104   012DFE                     
 13105                           ; BSR set to: 5
 13106   012DFE  0EDB               	movlw	219
 13107   012E00  6E22               	movwf	___fladd@a^(0+1280),c
 13108   012E02  0E0F               	movlw	15
 13109   012E04  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13110   012E06  0E49               	movlw	73
 13111   012E08  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13112   012E0A  0EC0               	movlw	192
 13113   012E0C  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13114   012E0E  C596  F51E         	movff	sinf@x,___fladd@b
 13115   012E12  C597  F51F         	movff	sinf@x+1,___fladd@b+1
 13116   012E16  C598  F520         	movff	sinf@x+2,___fladd@b+2
 13117   012E1A  C599  F521         	movff	sinf@x+3,___fladd@b+3
 13118   012E1E  EC1B  F09B         	call	___fladd	;wreg free
 13119   012E22  C51E  F501         	movff	?___fladd,___flneg@f1
 13120   012E26  C51F  F502         	movff	?___fladd+1,___flneg@f1+1
 13121   012E2A  C520  F503         	movff	?___fladd+2,___flneg@f1+2
 13122   012E2E  C521  F504         	movff	?___fladd+3,___flneg@f1+3
 13123   012E32  EC6F  F0B7         	call	___flneg	;wreg free
 13124   012E36  C501  F59A         	movff	?___flneg,_sinf$3066
 13125   012E3A  C502  F59B         	movff	?___flneg+1,_sinf$3066+1
 13126   012E3E  C503  F59C         	movff	?___flneg+2,_sinf$3066+2
 13127   012E42  C504  F59D         	movff	?___flneg+3,_sinf$3066+3
 13128   012E46  EF49  F097         	goto	l9683
 13129   012E4A                     l9681:
 13130                           
 13131                           ; BSR set to: 5
 13132   012E4A  0EDB               	movlw	219
 13133   012E4C  6E22               	movwf	___fladd@a^(0+1280),c
 13134   012E4E  0E0F               	movlw	15
 13135   012E50  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13136   012E52  0E49               	movlw	73
 13137   012E54  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13138   012E56  0E40               	movlw	64
 13139   012E58  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13140   012E5A  C596  F51E         	movff	sinf@x,___fladd@b
 13141   012E5E  C597  F51F         	movff	sinf@x+1,___fladd@b+1
 13142   012E62  C598  F520         	movff	sinf@x+2,___fladd@b+2
 13143   012E66  C599  F521         	movff	sinf@x+3,___fladd@b+3
 13144   012E6A  EC1B  F09B         	call	___fladd	;wreg free
 13145   012E6E  C51E  F501         	movff	?___fladd,___flneg@f1
 13146   012E72  C51F  F502         	movff	?___fladd+1,___flneg@f1+1
 13147   012E76  C520  F503         	movff	?___fladd+2,___flneg@f1+2
 13148   012E7A  C521  F504         	movff	?___fladd+3,___flneg@f1+3
 13149   012E7E  EC6F  F0B7         	call	___flneg	;wreg free
 13150   012E82  C501  F59A         	movff	?___flneg,_sinf$3066
 13151   012E86  C502  F59B         	movff	?___flneg+1,_sinf$3066+1
 13152   012E8A  C503  F59C         	movff	?___flneg+2,_sinf$3066+2
 13153   012E8E  C504  F59D         	movff	?___flneg+3,_sinf$3066+3
 13154   012E92                     l9683:
 13155   012E92  C59A  F575         	movff	_sinf$3066,___sindf@x
 13156   012E96  C59B  F576         	movff	_sinf$3066+1,___sindf@x+1
 13157   012E9A  C59C  F577         	movff	_sinf$3066+2,___sindf@x+2
 13158   012E9E  C59D  F578         	movff	_sinf$3066+3,___sindf@x+3
 13159   012EA2  ECC1  F0A9         	call	___sindf	;wreg free
 13160   012EA6  C575  F596         	movff	?___sindf,?_sinf
 13161   012EAA  C576  F597         	movff	?___sindf+1,?_sinf+1
 13162   012EAE  C577  F598         	movff	?___sindf+2,?_sinf+2
 13163   012EB2  C578  F599         	movff	?___sindf+3,?_sinf+3
 13164   012EB6  EFA5  F098         	goto	l2448
 13165   012EBA                     l9687:
 13166                           
 13167                           ; BSR set to: 5
 13168   012EBA  0ED6               	movlw	214
 13169   012EBC  5DAC               	subwf	sinf@ux& (0+255),w,b
 13170   012EBE  0E31               	movlw	49
 13171   012EC0  59AD               	subwfb	(sinf@ux+1)& (0+255),w,b
 13172   012EC2  0EE2               	movlw	226
 13173   012EC4  59AE               	subwfb	(sinf@ux+2)& (0+255),w,b
 13174   012EC6  0E40               	movlw	64
 13175   012EC8  59AF               	subwfb	(sinf@ux+3)& (0+255),w,b
 13176   012ECA  B0D8               	btfsc	status,0,c
 13177   012ECC  EF6A  F097         	goto	u7781
 13178   012ED0  EF6C  F097         	goto	u7780
 13179   012ED4                     u7781:
 13180   012ED4  EF0D  F098         	goto	l9717
 13181   012ED8                     u7780:
 13182   012ED8                     
 13183                           ; BSR set to: 5
 13184   012ED8  0EE0               	movlw	224
 13185   012EDA  5DAC               	subwf	sinf@ux& (0+255),w,b
 13186   012EDC  0EED               	movlw	237
 13187   012EDE  59AD               	subwfb	(sinf@ux+1)& (0+255),w,b
 13188   012EE0  0EAF               	movlw	175
 13189   012EE2  59AE               	subwfb	(sinf@ux+2)& (0+255),w,b
 13190   012EE4  0E40               	movlw	64
 13191   012EE6  59AF               	subwfb	(sinf@ux+3)& (0+255),w,b
 13192   012EE8  B0D8               	btfsc	status,0,c
 13193   012EEA  EF79  F097         	goto	u7791
 13194   012EEE  EF7B  F097         	goto	u7790
 13195   012EF2                     u7791:
 13196   012EF2  EFBB  F097         	goto	l9707
 13197   012EF6                     u7790:
 13198   012EF6                     
 13199                           ; BSR set to: 5
 13200   012EF6  51A3               	movf	sinf@sign& (0+255),w,b
 13201   012EF8  B4D8               	btfsc	status,2,c
 13202   012EFA  EF81  F097         	goto	u7801
 13203   012EFE  EF83  F097         	goto	u7800
 13204   012F02                     u7801:
 13205   012F02  EF9F  F097         	goto	l9701
 13206   012F06                     u7800:
 13207   012F06                     
 13208                           ; BSR set to: 5
 13209   012F06  C596  F51E         	movff	sinf@x,___fladd@b
 13210   012F0A  C597  F51F         	movff	sinf@x+1,___fladd@b+1
 13211   012F0E  C598  F520         	movff	sinf@x+2,___fladd@b+2
 13212   012F12  C599  F521         	movff	sinf@x+3,___fladd@b+3
 13213   012F16  0EE4               	movlw	228
 13214   012F18  6E22               	movwf	___fladd@a^(0+1280),c
 13215   012F1A  0ECB               	movlw	203
 13216   012F1C  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13217   012F1E  0E96               	movlw	150
 13218   012F20  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13219   012F22  0E40               	movlw	64
 13220   012F24  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13221   012F26  EC1B  F09B         	call	___fladd	;wreg free
 13222   012F2A  C51E  F5A4         	movff	?___fladd,_sinf$3503
 13223   012F2E  C51F  F5A5         	movff	?___fladd+1,_sinf$3503+1
 13224   012F32  C520  F5A6         	movff	?___fladd+2,_sinf$3503+2
 13225   012F36  C521  F5A7         	movff	?___fladd+3,_sinf$3503+3
 13226   012F3A  EFE3  F096         	goto	l9673
 13227   012F3E                     l9701:
 13228                           
 13229                           ; BSR set to: 5
 13230   012F3E  0EE4               	movlw	228
 13231   012F40  6E22               	movwf	___fladd@a^(0+1280),c
 13232   012F42  0ECB               	movlw	203
 13233   012F44  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13234   012F46  0E96               	movlw	150
 13235   012F48  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13236   012F4A  0EC0               	movlw	192
 13237   012F4C  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13238   012F4E  C596  F51E         	movff	sinf@x,___fladd@b
 13239   012F52  C597  F51F         	movff	sinf@x+1,___fladd@b+1
 13240   012F56  C598  F520         	movff	sinf@x+2,___fladd@b+2
 13241   012F5A  C599  F521         	movff	sinf@x+3,___fladd@b+3
 13242   012F5E  EC1B  F09B         	call	___fladd	;wreg free
 13243   012F62  C51E  F5A4         	movff	?___fladd,_sinf$3503
 13244   012F66  C51F  F5A5         	movff	?___fladd+1,_sinf$3503+1
 13245   012F6A  C520  F5A6         	movff	?___fladd+2,_sinf$3503+2
 13246   012F6E  C521  F5A7         	movff	?___fladd+3,_sinf$3503+3
 13247   012F72  EFAB  F096         	goto	l9665
 13248   012F76                     l9707:
 13249                           
 13250                           ; BSR set to: 5
 13251   012F76  51A3               	movf	sinf@sign& (0+255),w,b
 13252   012F78  A4D8               	btfss	status,2,c
 13253   012F7A  EFC1  F097         	goto	u7811
 13254   012F7E  EFC3  F097         	goto	u7810
 13255   012F82                     u7811:
 13256   012F82  EFDF  F097         	goto	l9711
 13257   012F86                     u7810:
 13258   012F86                     
 13259                           ; BSR set to: 5
 13260   012F86  C596  F51E         	movff	sinf@x,___fladd@b
 13261   012F8A  C597  F51F         	movff	sinf@x+1,___fladd@b+1
 13262   012F8E  C598  F520         	movff	sinf@x+2,___fladd@b+2
 13263   012F92  C599  F521         	movff	sinf@x+3,___fladd@b+3
 13264   012F96  0EDB               	movlw	219
 13265   012F98  6E22               	movwf	___fladd@a^(0+1280),c
 13266   012F9A  0E0F               	movlw	15
 13267   012F9C  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13268   012F9E  0EC9               	movlw	201
 13269   012FA0  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13270   012FA2  0EC0               	movlw	192
 13271   012FA4  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13272   012FA6  EC1B  F09B         	call	___fladd	;wreg free
 13273   012FAA  C51E  F59E         	movff	?___fladd,_sinf$3067
 13274   012FAE  C51F  F59F         	movff	?___fladd+1,_sinf$3067+1
 13275   012FB2  C520  F5A0         	movff	?___fladd+2,_sinf$3067+2
 13276   012FB6  C521  F5A1         	movff	?___fladd+3,_sinf$3067+3
 13277   012FBA  EFF9  F097         	goto	l9713
 13278   012FBE                     l9711:
 13279                           
 13280                           ; BSR set to: 5
 13281   012FBE  C596  F51E         	movff	sinf@x,___fladd@b
 13282   012FC2  C597  F51F         	movff	sinf@x+1,___fladd@b+1
 13283   012FC6  C598  F520         	movff	sinf@x+2,___fladd@b+2
 13284   012FCA  C599  F521         	movff	sinf@x+3,___fladd@b+3
 13285   012FCE  0EDB               	movlw	219
 13286   012FD0  6E22               	movwf	___fladd@a^(0+1280),c
 13287   012FD2  0E0F               	movlw	15
 13288   012FD4  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13289   012FD6  0EC9               	movlw	201
 13290   012FD8  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13291   012FDA  0E40               	movlw	64
 13292   012FDC  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13293   012FDE  EC1B  F09B         	call	___fladd	;wreg free
 13294   012FE2  C51E  F59E         	movff	?___fladd,_sinf$3067
 13295   012FE6  C51F  F59F         	movff	?___fladd+1,_sinf$3067+1
 13296   012FEA  C520  F5A0         	movff	?___fladd+2,_sinf$3067+2
 13297   012FEE  C521  F5A1         	movff	?___fladd+3,_sinf$3067+3
 13298   012FF2                     l9713:
 13299   012FF2  C59E  F575         	movff	_sinf$3067,___sindf@x
 13300   012FF6  C59F  F576         	movff	_sinf$3067+1,___sindf@x+1
 13301   012FFA  C5A0  F577         	movff	_sinf$3067+2,___sindf@x+2
 13302   012FFE  C5A1  F578         	movff	_sinf$3067+3,___sindf@x+3
 13303   013002  ECC1  F0A9         	call	___sindf	;wreg free
 13304   013006  C575  F596         	movff	?___sindf,?_sinf
 13305   01300A  C576  F597         	movff	?___sindf+1,?_sinf+1
 13306   01300E  C577  F598         	movff	?___sindf+2,?_sinf+2
 13307   013012  C578  F599         	movff	?___sindf+3,?_sinf+3
 13308   013016  EFA5  F098         	goto	l2448
 13309   01301A                     l9717:
 13310                           
 13311                           ; BSR set to: 5
 13312   01301A  0E80               	movlw	128
 13313   01301C  5DAE               	subwf	(sinf@ux+2)& (0+255),w,b
 13314   01301E  0E7F               	movlw	127
 13315   013020  59AF               	subwfb	(sinf@ux+3)& (0+255),w,b
 13316   013022  A0D8               	btfss	status,0,c
 13317   013024  EF16  F098         	goto	u7821
 13318   013028  EF18  F098         	goto	u7820
 13319   01302C                     u7821:
 13320   01302C  EF2A  F098         	goto	l9725
 13321   013030                     u7820:
 13322   013030                     
 13323                           ; BSR set to: 5
 13324   013030  0EFF               	movlw	255
 13325   013032  13AC               	iorwf	sinf@ux& (0+255),f,b
 13326   013034  0EFF               	movlw	255
 13327   013036  13AD               	iorwf	(sinf@ux+1)& (0+255),f,b
 13328   013038  0EFF               	movlw	255
 13329   01303A  13AE               	iorwf	(sinf@ux+2)& (0+255),f,b
 13330   01303C  0E00               	movlw	0
 13331   01303E  13AF               	iorwf	(sinf@ux+3)& (0+255),f,b
 13332   013040                     
 13333                           ; BSR set to: 5
 13334   013040  C5AC  F596         	movff	sinf@ux,?_sinf
 13335   013044  C5AD  F597         	movff	sinf@ux+1,?_sinf+1
 13336   013048  C5AE  F598         	movff	sinf@ux+2,?_sinf+2
 13337   01304C  C5AF  F599         	movff	sinf@ux+3,?_sinf+3
 13338   013050  EFA5  F098         	goto	l2448
 13339   013054                     l9725:
 13340                           
 13341                           ; BSR set to: 5
 13342   013054  C596  F575         	movff	sinf@x,___rem_pio2f@x
 13343   013058  C597  F576         	movff	sinf@x+1,___rem_pio2f@x+1
 13344   01305C  C598  F577         	movff	sinf@x+2,___rem_pio2f@x+2
 13345   013060  C599  F578         	movff	sinf@x+3,___rem_pio2f@x+3
 13346   013064  0EA8               	movlw	low sinf@y
 13347   013066  6F79               	movwf	___rem_pio2f@y& (0+255),b
 13348   013068  0E05               	movlw	high sinf@y
 13349   01306A  6F7A               	movwf	(___rem_pio2f@y+1)& (0+255),b
 13350   01306C  ECB9  F0A3         	call	___rem_pio2f	;wreg free
 13351   013070  0105               	movlb	5	; () banked
 13352   013072  5175               	movf	?___rem_pio2f& (0+255),w,b
 13353   013074  0B03               	andlw	3
 13354   013076  6FA2               	movwf	sinf@n& (0+255),b
 13355   013078  EF96  F098         	goto	l9743
 13356   01307C                     l9727:
 13357                           
 13358                           ; BSR set to: 5
 13359   01307C  C5A8  F501         	movff	sinf@y,___flneg@f1
 13360   013080  C5A9  F502         	movff	sinf@y+1,___flneg@f1+1
 13361   013084  C5AA  F503         	movff	sinf@y+2,___flneg@f1+2
 13362   013088  C5AB  F504         	movff	sinf@y+3,___flneg@f1+3
 13363   01308C  EC6F  F0B7         	call	___flneg	;wreg free
 13364   013090  C501  F5A8         	movff	?___flneg,sinf@y
 13365   013094  C502  F5A9         	movff	?___flneg+1,sinf@y+1
 13366   013098  C503  F5AA         	movff	?___flneg+2,sinf@y+2
 13367   01309C  C504  F5AB         	movff	?___flneg+3,sinf@y+3
 13368   0130A0                     l9729:
 13369   0130A0  C5A8  F575         	movff	sinf@y,___sindf@x
 13370   0130A4  C5A9  F576         	movff	sinf@y+1,___sindf@x+1
 13371   0130A8  C5AA  F577         	movff	sinf@y+2,___sindf@x+2
 13372   0130AC  C5AB  F578         	movff	sinf@y+3,___sindf@x+3
 13373   0130B0  ECC1  F0A9         	call	___sindf	;wreg free
 13374   0130B4  C575  F596         	movff	?___sindf,?_sinf
 13375   0130B8  C576  F597         	movff	?___sindf+1,?_sinf+1
 13376   0130BC  C577  F598         	movff	?___sindf+2,?_sinf+2
 13377   0130C0  C578  F599         	movff	?___sindf+3,?_sinf+3
 13378   0130C4  EFA5  F098         	goto	l2448
 13379   0130C8                     l9733:
 13380                           
 13381                           ; BSR set to: 5
 13382   0130C8  C5A8  F52E         	movff	sinf@y,___cosdf@x
 13383   0130CC  C5A9  F52F         	movff	sinf@y+1,___cosdf@x+1
 13384   0130D0  C5AA  F530         	movff	sinf@y+2,___cosdf@x+2
 13385   0130D4  C5AB  F531         	movff	sinf@y+3,___cosdf@x+3
 13386   0130D8  ECE5  F0AB         	call	___cosdf	;wreg free
 13387   0130DC  C52E  F596         	movff	?___cosdf,?_sinf
 13388   0130E0  C52F  F597         	movff	?___cosdf+1,?_sinf+1
 13389   0130E4  C530  F598         	movff	?___cosdf+2,?_sinf+2
 13390   0130E8  C531  F599         	movff	?___cosdf+3,?_sinf+3
 13391   0130EC  EFA5  F098         	goto	l2448
 13392   0130F0                     l9737:
 13393                           
 13394                           ; BSR set to: 5
 13395   0130F0  C5A8  F52E         	movff	sinf@y,___cosdf@x
 13396   0130F4  C5A9  F52F         	movff	sinf@y+1,___cosdf@x+1
 13397   0130F8  C5AA  F530         	movff	sinf@y+2,___cosdf@x+2
 13398   0130FC  C5AB  F531         	movff	sinf@y+3,___cosdf@x+3
 13399   013100  ECE5  F0AB         	call	___cosdf	;wreg free
 13400   013104  C52E  F501         	movff	?___cosdf,___flneg@f1
 13401   013108  C52F  F502         	movff	?___cosdf+1,___flneg@f1+1
 13402   01310C  C530  F503         	movff	?___cosdf+2,___flneg@f1+2
 13403   013110  C531  F504         	movff	?___cosdf+3,___flneg@f1+3
 13404   013114  EC6F  F0B7         	call	___flneg	;wreg free
 13405   013118  C501  F596         	movff	?___flneg,?_sinf
 13406   01311C  C502  F597         	movff	?___flneg+1,?_sinf+1
 13407   013120  C503  F598         	movff	?___flneg+2,?_sinf+2
 13408   013124  C504  F599         	movff	?___flneg+3,?_sinf+3
 13409   013128  EFA5  F098         	goto	l2448
 13410   01312C                     l9743:
 13411                           
 13412                           ; BSR set to: 5
 13413   01312C  51A2               	movf	sinf@n& (0+255),w,b
 13414                           
 13415                           ; Switch size 1, requested type "simple"
 13416                           ; Number of cases is 3, Range of values is 0 to 2
 13417                           ; switch strategies available:
 13418                           ; Name         Instructions Cycles
 13419                           ; simple_byte           10     6 (average)
 13420                           ;	Chosen strategy is simple_byte
 13421   01312E  0A00               	xorlw	0	; case 0
 13422   013130  B4D8               	btfsc	status,2,c
 13423   013132  EF50  F098         	goto	l9729
 13424   013136  0A01               	xorlw	1	; case 1
 13425   013138  B4D8               	btfsc	status,2,c
 13426   01313A  EF64  F098         	goto	l9733
 13427   01313E  0A03               	xorlw	3	; case 2
 13428   013140  B4D8               	btfsc	status,2,c
 13429   013142  EF3E  F098         	goto	l9727
 13430   013146  EF78  F098         	goto	l9737
 13431   01314A                     l2448:
 13432   01314A  0012               	return		;funcret
 13433   01314C                     __end_of_sinf:
 13434                           	callstack 0
 13435                           
 13436 ;; *************** function _cosf *****************
 13437 ;; Defined at:
 13438 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\cosf.c"
 13439 ;; Parameters:    Size  Location     Type
 13440 ;;  x               4   54[BANK5 ] float 
 13441 ;; Auto vars:     Size  Location     Type
 13442 ;;  ix              4   76[BANK5 ] struct .
 13443 ;;  y               4   72[BANK5 ] struct .
 13444 ;;  sign            1   71[BANK5 ] _Bool 
 13445 ;;  n               1   66[BANK5 ] unsigned char 
 13446 ;; Return value:  Size  Location     Type
 13447 ;;                  4   54[BANK5 ] float 
 13448 ;; Registers used:
 13449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13450 ;; Tracked objects:
 13451 ;;		On entry : 0/0
 13452 ;;		On exit  : 0/0
 13453 ;;		Unchanged: 0/0
 13454 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13455 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13456 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13458 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13459 ;;Total ram usage:       26 bytes
 13460 ;; Hardware stack levels used: 1
 13461 ;; Hardware stack levels required when called: 3
 13462 ;; This function calls:
 13463 ;;		___cosdf
 13464 ;;		___fladd
 13465 ;;		___flneg
 13466 ;;		___flsub
 13467 ;;		___rem_pio2f
 13468 ;;		___sindf
 13469 ;; This function is called by:
 13470 ;;		_MPU6050_DMP_GetData
 13471 ;; This function uses a non-reentrant model
 13472 ;;
 13473                           
 13474                           	psect	text28
 13475   01314C                     __ptext28:
 13476                           	callstack 0
 13477   01314C                     _cosf:
 13478                           	callstack 122
 13479   01314C  C596  F5AC         	movff	cosf@x,cosf@ix
 13480   013150  C597  F5AD         	movff	cosf@x+1,cosf@ix+1
 13481   013154  C598  F5AE         	movff	cosf@x+2,cosf@ix+2
 13482   013158  C599  F5AF         	movff	cosf@x+3,cosf@ix+3
 13483   01315C  0105               	movlb	5	; () banked
 13484   01315E  BFAF               	btfsc	(cosf@ix+3)& (0+255),7,b
 13485   013160  EFB4  F098         	goto	u7571
 13486   013164  EFB7  F098         	goto	u7570
 13487   013168                     u7571:
 13488   013168  0E01               	movlw	1
 13489   01316A  EFB8  F098         	goto	u7580
 13490   01316E                     u7570:
 13491   01316E  0E00               	movlw	0
 13492   013170                     u7580:
 13493   013170  6FA7               	movwf	cosf@sign& (0+255),b
 13494   013172                     
 13495                           ; BSR set to: 5
 13496   013172  9FAF               	bcf	(cosf@ix+3)& (0+255),7,b
 13497   013174                     
 13498                           ; BSR set to: 5
 13499   013174  0EDB               	movlw	219
 13500   013176  5DAC               	subwf	cosf@ix& (0+255),w,b
 13501   013178  0E0F               	movlw	15
 13502   01317A  59AD               	subwfb	(cosf@ix+1)& (0+255),w,b
 13503   01317C  0E49               	movlw	73
 13504   01317E  59AE               	subwfb	(cosf@ix+2)& (0+255),w,b
 13505   013180  0E3F               	movlw	63
 13506   013182  59AF               	subwfb	(cosf@ix+3)& (0+255),w,b
 13507   013184  B0D8               	btfsc	status,0,c
 13508   013186  EFC7  F098         	goto	u7591
 13509   01318A  EFC9  F098         	goto	u7590
 13510   01318E                     u7591:
 13511   01318E  EFF2  F098         	goto	l9553
 13512   013192                     u7590:
 13513   013192                     
 13514                           ; BSR set to: 5
 13515   013192  0E80               	movlw	128
 13516   013194  5DAE               	subwf	(cosf@ix+2)& (0+255),w,b
 13517   013196  0E39               	movlw	57
 13518   013198  59AF               	subwfb	(cosf@ix+3)& (0+255),w,b
 13519   01319A  B0D8               	btfsc	status,0,c
 13520   01319C  EFD2  F098         	goto	u7601
 13521   0131A0  EFD4  F098         	goto	u7600
 13522   0131A4                     u7601:
 13523   0131A4  EFDE  F098         	goto	l9549
 13524   0131A8                     u7600:
 13525   0131A8                     
 13526                           ; BSR set to: 5
 13527   0131A8  0E00               	movlw	0
 13528   0131AA  6F96               	movwf	?_cosf& (0+255),b
 13529   0131AC  0E00               	movlw	0
 13530   0131AE  6F97               	movwf	(?_cosf+1)& (0+255),b
 13531   0131B0  0E80               	movlw	128
 13532   0131B2  6F98               	movwf	(?_cosf+2)& (0+255),b
 13533   0131B4  0E3F               	movlw	63
 13534   0131B6  6F99               	movwf	(?_cosf+3)& (0+255),b
 13535   0131B8  EF1A  F09B         	goto	l2185
 13536   0131BC                     l9549:
 13537                           
 13538                           ; BSR set to: 5
 13539   0131BC  C596  F52E         	movff	cosf@x,___cosdf@x
 13540   0131C0  C597  F52F         	movff	cosf@x+1,___cosdf@x+1
 13541   0131C4  C598  F530         	movff	cosf@x+2,___cosdf@x+2
 13542   0131C8  C599  F531         	movff	cosf@x+3,___cosdf@x+3
 13543   0131CC  ECE5  F0AB         	call	___cosdf	;wreg free
 13544   0131D0  C52E  F596         	movff	?___cosdf,?_cosf
 13545   0131D4  C52F  F597         	movff	?___cosdf+1,?_cosf+1
 13546   0131D8  C530  F598         	movff	?___cosdf+2,?_cosf+2
 13547   0131DC  C531  F599         	movff	?___cosdf+3,?_cosf+3
 13548   0131E0  EF1A  F09B         	goto	l2185
 13549   0131E4                     l9553:
 13550                           
 13551                           ; BSR set to: 5
 13552   0131E4  0ED2               	movlw	210
 13553   0131E6  5DAC               	subwf	cosf@ix& (0+255),w,b
 13554   0131E8  0E53               	movlw	83
 13555   0131EA  59AD               	subwfb	(cosf@ix+1)& (0+255),w,b
 13556   0131EC  0E7B               	movlw	123
 13557   0131EE  59AE               	subwfb	(cosf@ix+2)& (0+255),w,b
 13558   0131F0  0E40               	movlw	64
 13559   0131F2  59AF               	subwfb	(cosf@ix+3)& (0+255),w,b
 13560   0131F4  B0D8               	btfsc	status,0,c
 13561   0131F6  EFFF  F098         	goto	u7611
 13562   0131FA  EF01  F099         	goto	u7610
 13563   0131FE                     u7611:
 13564   0131FE  EFC8  F099         	goto	l9583
 13565   013202                     u7610:
 13566   013202                     
 13567                           ; BSR set to: 5
 13568   013202  0EE4               	movlw	228
 13569   013204  5DAC               	subwf	cosf@ix& (0+255),w,b
 13570   013206  0ECB               	movlw	203
 13571   013208  59AD               	subwfb	(cosf@ix+1)& (0+255),w,b
 13572   01320A  0E16               	movlw	22
 13573   01320C  59AE               	subwfb	(cosf@ix+2)& (0+255),w,b
 13574   01320E  0E40               	movlw	64
 13575   013210  59AF               	subwfb	(cosf@ix+3)& (0+255),w,b
 13576   013212  A0D8               	btfss	status,0,c
 13577   013214  EF0E  F099         	goto	u7621
 13578   013218  EF10  F099         	goto	u7620
 13579   01321C                     u7621:
 13580   01321C  EF6C  F099         	goto	l9569
 13581   013220                     u7620:
 13582   013220                     
 13583                           ; BSR set to: 5
 13584   013220  51A7               	movf	cosf@sign& (0+255),w,b
 13585   013222  A4D8               	btfss	status,2,c
 13586   013224  EF16  F099         	goto	u7631
 13587   013228  EF18  F099         	goto	u7630
 13588   01322C                     u7631:
 13589   01322C  EF34  F099         	goto	l9561
 13590   013230                     u7630:
 13591   013230                     
 13592                           ; BSR set to: 5
 13593   013230  C596  F51E         	movff	cosf@x,___fladd@b
 13594   013234  C597  F51F         	movff	cosf@x+1,___fladd@b+1
 13595   013238  C598  F520         	movff	cosf@x+2,___fladd@b+2
 13596   01323C  C599  F521         	movff	cosf@x+3,___fladd@b+3
 13597   013240  0EDB               	movlw	219
 13598   013242  6E22               	movwf	___fladd@a^(0+1280),c
 13599   013244  0E0F               	movlw	15
 13600   013246  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13601   013248  0E49               	movlw	73
 13602   01324A  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13603   01324C  0EC0               	movlw	192
 13604   01324E  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13605   013250  EC1B  F09B         	call	___fladd	;wreg free
 13606   013254  C51E  F59A         	movff	?___fladd,_cosf$2778
 13607   013258  C51F  F59B         	movff	?___fladd+1,_cosf$2778+1
 13608   01325C  C520  F59C         	movff	?___fladd+2,_cosf$2778+2
 13609   013260  C521  F59D         	movff	?___fladd+3,_cosf$2778+3
 13610   013264  EF4E  F099         	goto	l9563
 13611   013268                     l9561:
 13612                           
 13613                           ; BSR set to: 5
 13614   013268  C596  F51E         	movff	cosf@x,___fladd@b
 13615   01326C  C597  F51F         	movff	cosf@x+1,___fladd@b+1
 13616   013270  C598  F520         	movff	cosf@x+2,___fladd@b+2
 13617   013274  C599  F521         	movff	cosf@x+3,___fladd@b+3
 13618   013278  0EDB               	movlw	219
 13619   01327A  6E22               	movwf	___fladd@a^(0+1280),c
 13620   01327C  0E0F               	movlw	15
 13621   01327E  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13622   013280  0E49               	movlw	73
 13623   013282  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13624   013284  0E40               	movlw	64
 13625   013286  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13626   013288  EC1B  F09B         	call	___fladd	;wreg free
 13627   01328C  C51E  F59A         	movff	?___fladd,_cosf$2778
 13628   013290  C51F  F59B         	movff	?___fladd+1,_cosf$2778+1
 13629   013294  C520  F59C         	movff	?___fladd+2,_cosf$2778+2
 13630   013298  C521  F59D         	movff	?___fladd+3,_cosf$2778+3
 13631   01329C                     l9563:
 13632   01329C  C59A  F52E         	movff	_cosf$2778,___cosdf@x
 13633   0132A0  C59B  F52F         	movff	_cosf$2778+1,___cosdf@x+1
 13634   0132A4  C59C  F530         	movff	_cosf$2778+2,___cosdf@x+2
 13635   0132A8  C59D  F531         	movff	_cosf$2778+3,___cosdf@x+3
 13636   0132AC  ECE5  F0AB         	call	___cosdf	;wreg free
 13637   0132B0  C52E  F501         	movff	?___cosdf,___flneg@f1
 13638   0132B4  C52F  F502         	movff	?___cosdf+1,___flneg@f1+1
 13639   0132B8  C530  F503         	movff	?___cosdf+2,___flneg@f1+2
 13640   0132BC  C531  F504         	movff	?___cosdf+3,___flneg@f1+3
 13641   0132C0  EC6F  F0B7         	call	___flneg	;wreg free
 13642   0132C4  C501  F596         	movff	?___flneg,?_cosf
 13643   0132C8  C502  F597         	movff	?___flneg+1,?_cosf+1
 13644   0132CC  C503  F598         	movff	?___flneg+2,?_cosf+2
 13645   0132D0  C504  F599         	movff	?___flneg+3,?_cosf+3
 13646   0132D4  EF1A  F09B         	goto	l2185
 13647   0132D8                     l9569:
 13648                           
 13649                           ; BSR set to: 5
 13650   0132D8  51A7               	movf	cosf@sign& (0+255),w,b
 13651   0132DA  B4D8               	btfsc	status,2,c
 13652   0132DC  EF72  F099         	goto	u7641
 13653   0132E0  EF74  F099         	goto	u7640
 13654   0132E4                     u7641:
 13655   0132E4  EFA2  F099         	goto	l9579
 13656   0132E8                     u7640:
 13657   0132E8                     
 13658                           ; BSR set to: 5
 13659   0132E8  C596  F51E         	movff	cosf@x,___fladd@b
 13660   0132EC  C597  F51F         	movff	cosf@x+1,___fladd@b+1
 13661   0132F0  C598  F520         	movff	cosf@x+2,___fladd@b+2
 13662   0132F4  C599  F521         	movff	cosf@x+3,___fladd@b+3
 13663   0132F8  0EDB               	movlw	219
 13664   0132FA  6E22               	movwf	___fladd@a^(0+1280),c
 13665   0132FC  0E0F               	movlw	15
 13666   0132FE  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13667   013300  0EC9               	movlw	201
 13668   013302  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13669   013304  0E3F               	movlw	63
 13670   013306  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13671   013308  EC1B  F09B         	call	___fladd	;wreg free
 13672   01330C  C51E  F5A3         	movff	?___fladd,_cosf$3495
 13673   013310  C51F  F5A4         	movff	?___fladd+1,_cosf$3495+1
 13674   013314  C520  F5A5         	movff	?___fladd+2,_cosf$3495+2
 13675   013318  C521  F5A6         	movff	?___fladd+3,_cosf$3495+3
 13676   01331C                     l9573:
 13677   01331C  C5A3  F575         	movff	_cosf$3495,___sindf@x
 13678   013320  C5A4  F576         	movff	_cosf$3495+1,___sindf@x+1
 13679   013324  C5A5  F577         	movff	_cosf$3495+2,___sindf@x+2
 13680   013328  C5A6  F578         	movff	_cosf$3495+3,___sindf@x+3
 13681   01332C  ECC1  F0A9         	call	___sindf	;wreg free
 13682   013330  C575  F596         	movff	?___sindf,?_cosf
 13683   013334  C576  F597         	movff	?___sindf+1,?_cosf+1
 13684   013338  C577  F598         	movff	?___sindf+2,?_cosf+2
 13685   01333C  C578  F599         	movff	?___sindf+3,?_cosf+3
 13686   013340  EF1A  F09B         	goto	l2185
 13687   013344                     l9579:
 13688                           
 13689                           ; BSR set to: 5
 13690   013344  0EDB               	movlw	219
 13691   013346  6F6D               	movwf	___flsub@b& (0+255),b
 13692   013348  0E0F               	movlw	15
 13693   01334A  6F6E               	movwf	(___flsub@b+1)& (0+255),b
 13694   01334C  0EC9               	movlw	201
 13695   01334E  6F6F               	movwf	(___flsub@b+2)& (0+255),b
 13696   013350  0E3F               	movlw	63
 13697   013352  6F70               	movwf	(___flsub@b+3)& (0+255),b
 13698   013354  C596  F571         	movff	cosf@x,___flsub@a
 13699   013358  C597  F572         	movff	cosf@x+1,___flsub@a+1
 13700   01335C  C598  F573         	movff	cosf@x+2,___flsub@a+2
 13701   013360  C599  F574         	movff	cosf@x+3,___flsub@a+3
 13702   013364  ECED  F0B6         	call	___flsub	;wreg free
 13703   013368  C56D  F575         	movff	?___flsub,___sindf@x
 13704   01336C  C56E  F576         	movff	?___flsub+1,___sindf@x+1
 13705   013370  C56F  F577         	movff	?___flsub+2,___sindf@x+2
 13706   013374  C570  F578         	movff	?___flsub+3,___sindf@x+3
 13707   013378  ECC1  F0A9         	call	___sindf	;wreg free
 13708   01337C  C575  F596         	movff	?___sindf,?_cosf
 13709   013380  C576  F597         	movff	?___sindf+1,?_cosf+1
 13710   013384  C577  F598         	movff	?___sindf+2,?_cosf+2
 13711   013388  C578  F599         	movff	?___sindf+3,?_cosf+3
 13712   01338C  EF1A  F09B         	goto	l2185
 13713   013390                     l9583:
 13714                           
 13715                           ; BSR set to: 5
 13716   013390  0ED6               	movlw	214
 13717   013392  5DAC               	subwf	cosf@ix& (0+255),w,b
 13718   013394  0E31               	movlw	49
 13719   013396  59AD               	subwfb	(cosf@ix+1)& (0+255),w,b
 13720   013398  0EE2               	movlw	226
 13721   01339A  59AE               	subwfb	(cosf@ix+2)& (0+255),w,b
 13722   01339C  0E40               	movlw	64
 13723   01339E  59AF               	subwfb	(cosf@ix+3)& (0+255),w,b
 13724   0133A0  B0D8               	btfsc	status,0,c
 13725   0133A2  EFD5  F099         	goto	u7651
 13726   0133A6  EFD7  F099         	goto	u7650
 13727   0133AA                     u7651:
 13728   0133AA  EF82  F09A         	goto	l9613
 13729   0133AE                     u7650:
 13730   0133AE                     
 13731                           ; BSR set to: 5
 13732   0133AE  0EE0               	movlw	224
 13733   0133B0  5DAC               	subwf	cosf@ix& (0+255),w,b
 13734   0133B2  0EED               	movlw	237
 13735   0133B4  59AD               	subwfb	(cosf@ix+1)& (0+255),w,b
 13736   0133B6  0EAF               	movlw	175
 13737   0133B8  59AE               	subwfb	(cosf@ix+2)& (0+255),w,b
 13738   0133BA  0E40               	movlw	64
 13739   0133BC  59AF               	subwfb	(cosf@ix+3)& (0+255),w,b
 13740   0133BE  A0D8               	btfss	status,0,c
 13741   0133C0  EFE4  F099         	goto	u7661
 13742   0133C4  EFE6  F099         	goto	u7660
 13743   0133C8                     u7661:
 13744   0133C8  EF38  F09A         	goto	l9599
 13745   0133CC                     u7660:
 13746   0133CC                     
 13747                           ; BSR set to: 5
 13748   0133CC  51A7               	movf	cosf@sign& (0+255),w,b
 13749   0133CE  A4D8               	btfss	status,2,c
 13750   0133D0  EFEC  F099         	goto	u7671
 13751   0133D4  EFEE  F099         	goto	u7670
 13752   0133D8                     u7671:
 13753   0133D8  EF0A  F09A         	goto	l9591
 13754   0133DC                     u7670:
 13755   0133DC                     
 13756                           ; BSR set to: 5
 13757   0133DC  C596  F51E         	movff	cosf@x,___fladd@b
 13758   0133E0  C597  F51F         	movff	cosf@x+1,___fladd@b+1
 13759   0133E4  C598  F520         	movff	cosf@x+2,___fladd@b+2
 13760   0133E8  C599  F521         	movff	cosf@x+3,___fladd@b+3
 13761   0133EC  0EDB               	movlw	219
 13762   0133EE  6E22               	movwf	___fladd@a^(0+1280),c
 13763   0133F0  0E0F               	movlw	15
 13764   0133F2  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13765   0133F4  0EC9               	movlw	201
 13766   0133F6  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13767   0133F8  0EC0               	movlw	192
 13768   0133FA  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13769   0133FC  EC1B  F09B         	call	___fladd	;wreg free
 13770   013400  C51E  F59E         	movff	?___fladd,_cosf$2779
 13771   013404  C51F  F59F         	movff	?___fladd+1,_cosf$2779+1
 13772   013408  C520  F5A0         	movff	?___fladd+2,_cosf$2779+2
 13773   01340C  C521  F5A1         	movff	?___fladd+3,_cosf$2779+3
 13774   013410  EF24  F09A         	goto	l9593
 13775   013414                     l9591:
 13776                           
 13777                           ; BSR set to: 5
 13778   013414  C596  F51E         	movff	cosf@x,___fladd@b
 13779   013418  C597  F51F         	movff	cosf@x+1,___fladd@b+1
 13780   01341C  C598  F520         	movff	cosf@x+2,___fladd@b+2
 13781   013420  C599  F521         	movff	cosf@x+3,___fladd@b+3
 13782   013424  0EDB               	movlw	219
 13783   013426  6E22               	movwf	___fladd@a^(0+1280),c
 13784   013428  0E0F               	movlw	15
 13785   01342A  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13786   01342C  0EC9               	movlw	201
 13787   01342E  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13788   013430  0E40               	movlw	64
 13789   013432  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13790   013434  EC1B  F09B         	call	___fladd	;wreg free
 13791   013438  C51E  F59E         	movff	?___fladd,_cosf$2779
 13792   01343C  C51F  F59F         	movff	?___fladd+1,_cosf$2779+1
 13793   013440  C520  F5A0         	movff	?___fladd+2,_cosf$2779+2
 13794   013444  C521  F5A1         	movff	?___fladd+3,_cosf$2779+3
 13795   013448                     l9593:
 13796   013448  C59E  F52E         	movff	_cosf$2779,___cosdf@x
 13797   01344C  C59F  F52F         	movff	_cosf$2779+1,___cosdf@x+1
 13798   013450  C5A0  F530         	movff	_cosf$2779+2,___cosdf@x+2
 13799   013454  C5A1  F531         	movff	_cosf$2779+3,___cosdf@x+3
 13800   013458  ECE5  F0AB         	call	___cosdf	;wreg free
 13801   01345C  C52E  F596         	movff	?___cosdf,?_cosf
 13802   013460  C52F  F597         	movff	?___cosdf+1,?_cosf+1
 13803   013464  C530  F598         	movff	?___cosdf+2,?_cosf+2
 13804   013468  C531  F599         	movff	?___cosdf+3,?_cosf+3
 13805   01346C  EF1A  F09B         	goto	l2185
 13806   013470                     l9599:
 13807                           
 13808                           ; BSR set to: 5
 13809   013470  51A7               	movf	cosf@sign& (0+255),w,b
 13810   013472  B4D8               	btfsc	status,2,c
 13811   013474  EF3E  F09A         	goto	u7681
 13812   013478  EF40  F09A         	goto	u7680
 13813   01347C                     u7681:
 13814   01347C  EF66  F09A         	goto	l9607
 13815   013480                     u7680:
 13816   013480                     
 13817                           ; BSR set to: 5
 13818   013480  0EE4               	movlw	228
 13819   013482  6F6D               	movwf	___flsub@b& (0+255),b
 13820   013484  0ECB               	movlw	203
 13821   013486  6F6E               	movwf	(___flsub@b+1)& (0+255),b
 13822   013488  0E96               	movlw	150
 13823   01348A  6F6F               	movwf	(___flsub@b+2)& (0+255),b
 13824   01348C  0EC0               	movlw	192
 13825   01348E  6F70               	movwf	(___flsub@b+3)& (0+255),b
 13826   013490  C596  F571         	movff	cosf@x,___flsub@a
 13827   013494  C597  F572         	movff	cosf@x+1,___flsub@a+1
 13828   013498  C598  F573         	movff	cosf@x+2,___flsub@a+2
 13829   01349C  C599  F574         	movff	cosf@x+3,___flsub@a+3
 13830   0134A0  ECED  F0B6         	call	___flsub	;wreg free
 13831   0134A4  C56D  F575         	movff	?___flsub,___sindf@x
 13832   0134A8  C56E  F576         	movff	?___flsub+1,___sindf@x+1
 13833   0134AC  C56F  F577         	movff	?___flsub+2,___sindf@x+2
 13834   0134B0  C570  F578         	movff	?___flsub+3,___sindf@x+3
 13835   0134B4  ECC1  F0A9         	call	___sindf	;wreg free
 13836   0134B8  C575  F596         	movff	?___sindf,?_cosf
 13837   0134BC  C576  F597         	movff	?___sindf+1,?_cosf+1
 13838   0134C0  C577  F598         	movff	?___sindf+2,?_cosf+2
 13839   0134C4  C578  F599         	movff	?___sindf+3,?_cosf+3
 13840   0134C8  EF1A  F09B         	goto	l2185
 13841   0134CC                     l9607:
 13842                           
 13843                           ; BSR set to: 5
 13844   0134CC  C596  F51E         	movff	cosf@x,___fladd@b
 13845   0134D0  C597  F51F         	movff	cosf@x+1,___fladd@b+1
 13846   0134D4  C598  F520         	movff	cosf@x+2,___fladd@b+2
 13847   0134D8  C599  F521         	movff	cosf@x+3,___fladd@b+3
 13848   0134DC  0EE4               	movlw	228
 13849   0134DE  6E22               	movwf	___fladd@a^(0+1280),c
 13850   0134E0  0ECB               	movlw	203
 13851   0134E2  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 13852   0134E4  0E96               	movlw	150
 13853   0134E6  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 13854   0134E8  0EC0               	movlw	192
 13855   0134EA  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 13856   0134EC  EC1B  F09B         	call	___fladd	;wreg free
 13857   0134F0  C51E  F5A3         	movff	?___fladd,_cosf$3495
 13858   0134F4  C51F  F5A4         	movff	?___fladd+1,_cosf$3495+1
 13859   0134F8  C520  F5A5         	movff	?___fladd+2,_cosf$3495+2
 13860   0134FC  C521  F5A6         	movff	?___fladd+3,_cosf$3495+3
 13861   013500  EF8E  F099         	goto	l9573
 13862   013504                     l9613:
 13863                           
 13864                           ; BSR set to: 5
 13865   013504  0E80               	movlw	128
 13866   013506  5DAE               	subwf	(cosf@ix+2)& (0+255),w,b
 13867   013508  0E7F               	movlw	127
 13868   01350A  59AF               	subwfb	(cosf@ix+3)& (0+255),w,b
 13869   01350C  A0D8               	btfss	status,0,c
 13870   01350E  EF8B  F09A         	goto	u7691
 13871   013512  EF8D  F09A         	goto	u7690
 13872   013516                     u7691:
 13873   013516  EF9F  F09A         	goto	l9621
 13874   01351A                     u7690:
 13875   01351A                     
 13876                           ; BSR set to: 5
 13877   01351A  0EFF               	movlw	255
 13878   01351C  6FAC               	movwf	cosf@ix& (0+255),b
 13879   01351E  0EFF               	movlw	255
 13880   013520  6FAD               	movwf	(cosf@ix+1)& (0+255),b
 13881   013522  0EFF               	movlw	255
 13882   013524  6FAE               	movwf	(cosf@ix+2)& (0+255),b
 13883   013526  0E7F               	movlw	127
 13884   013528  6FAF               	movwf	(cosf@ix+3)& (0+255),b
 13885   01352A                     
 13886                           ; BSR set to: 5
 13887   01352A  C5AC  F596         	movff	cosf@ix,?_cosf
 13888   01352E  C5AD  F597         	movff	cosf@ix+1,?_cosf+1
 13889   013532  C5AE  F598         	movff	cosf@ix+2,?_cosf+2
 13890   013536  C5AF  F599         	movff	cosf@ix+3,?_cosf+3
 13891   01353A  EF1A  F09B         	goto	l2185
 13892   01353E                     l9621:
 13893                           
 13894                           ; BSR set to: 5
 13895   01353E  C596  F575         	movff	cosf@x,___rem_pio2f@x
 13896   013542  C597  F576         	movff	cosf@x+1,___rem_pio2f@x+1
 13897   013546  C598  F577         	movff	cosf@x+2,___rem_pio2f@x+2
 13898   01354A  C599  F578         	movff	cosf@x+3,___rem_pio2f@x+3
 13899   01354E  0EA8               	movlw	low cosf@y
 13900   013550  6F79               	movwf	___rem_pio2f@y& (0+255),b
 13901   013552  0E05               	movlw	high cosf@y
 13902   013554  6F7A               	movwf	(___rem_pio2f@y+1)& (0+255),b
 13903   013556  ECB9  F0A3         	call	___rem_pio2f	;wreg free
 13904   01355A  0105               	movlb	5	; () banked
 13905   01355C  5175               	movf	?___rem_pio2f& (0+255),w,b
 13906   01355E  0B03               	andlw	3
 13907   013560  6FA2               	movwf	cosf@n& (0+255),b
 13908   013562  EF0B  F09B         	goto	l9639
 13909   013566                     l9623:
 13910                           
 13911                           ; BSR set to: 5
 13912   013566  C5A8  F52E         	movff	cosf@y,___cosdf@x
 13913   01356A  C5A9  F52F         	movff	cosf@y+1,___cosdf@x+1
 13914   01356E  C5AA  F530         	movff	cosf@y+2,___cosdf@x+2
 13915   013572  C5AB  F531         	movff	cosf@y+3,___cosdf@x+3
 13916   013576  ECE5  F0AB         	call	___cosdf	;wreg free
 13917   01357A  C52E  F596         	movff	?___cosdf,?_cosf
 13918   01357E  C52F  F597         	movff	?___cosdf+1,?_cosf+1
 13919   013582  C530  F598         	movff	?___cosdf+2,?_cosf+2
 13920   013586  C531  F599         	movff	?___cosdf+3,?_cosf+3
 13921   01358A  EF1A  F09B         	goto	l2185
 13922   01358E                     l9627:
 13923                           
 13924                           ; BSR set to: 5
 13925   01358E  C5A8  F52E         	movff	cosf@y,___cosdf@x
 13926   013592  C5A9  F52F         	movff	cosf@y+1,___cosdf@x+1
 13927   013596  C5AA  F530         	movff	cosf@y+2,___cosdf@x+2
 13928   01359A  C5AB  F531         	movff	cosf@y+3,___cosdf@x+3
 13929   01359E  ECE5  F0AB         	call	___cosdf	;wreg free
 13930   0135A2  C52E  F501         	movff	?___cosdf,___flneg@f1
 13931   0135A6  C52F  F502         	movff	?___cosdf+1,___flneg@f1+1
 13932   0135AA  C530  F503         	movff	?___cosdf+2,___flneg@f1+2
 13933   0135AE  C531  F504         	movff	?___cosdf+3,___flneg@f1+3
 13934   0135B2  EC6F  F0B7         	call	___flneg	;wreg free
 13935   0135B6  C501  F596         	movff	?___flneg,?_cosf
 13936   0135BA  C502  F597         	movff	?___flneg+1,?_cosf+1
 13937   0135BE  C503  F598         	movff	?___flneg+2,?_cosf+2
 13938   0135C2  C504  F599         	movff	?___flneg+3,?_cosf+3
 13939   0135C6  EF1A  F09B         	goto	l2185
 13940   0135CA                     l9631:
 13941                           
 13942                           ; BSR set to: 5
 13943   0135CA  C5A8  F501         	movff	cosf@y,___flneg@f1
 13944   0135CE  C5A9  F502         	movff	cosf@y+1,___flneg@f1+1
 13945   0135D2  C5AA  F503         	movff	cosf@y+2,___flneg@f1+2
 13946   0135D6  C5AB  F504         	movff	cosf@y+3,___flneg@f1+3
 13947   0135DA  EC6F  F0B7         	call	___flneg	;wreg free
 13948   0135DE  C501  F5A8         	movff	?___flneg,cosf@y
 13949   0135E2  C502  F5A9         	movff	?___flneg+1,cosf@y+1
 13950   0135E6  C503  F5AA         	movff	?___flneg+2,cosf@y+2
 13951   0135EA  C504  F5AB         	movff	?___flneg+3,cosf@y+3
 13952   0135EE                     l9633:
 13953   0135EE  C5A8  F575         	movff	cosf@y,___sindf@x
 13954   0135F2  C5A9  F576         	movff	cosf@y+1,___sindf@x+1
 13955   0135F6  C5AA  F577         	movff	cosf@y+2,___sindf@x+2
 13956   0135FA  C5AB  F578         	movff	cosf@y+3,___sindf@x+3
 13957   0135FE  ECC1  F0A9         	call	___sindf	;wreg free
 13958   013602  C575  F596         	movff	?___sindf,?_cosf
 13959   013606  C576  F597         	movff	?___sindf+1,?_cosf+1
 13960   01360A  C577  F598         	movff	?___sindf+2,?_cosf+2
 13961   01360E  C578  F599         	movff	?___sindf+3,?_cosf+3
 13962   013612  EF1A  F09B         	goto	l2185
 13963   013616                     l9639:
 13964                           
 13965                           ; BSR set to: 5
 13966   013616  51A2               	movf	cosf@n& (0+255),w,b
 13967                           
 13968                           ; Switch size 1, requested type "simple"
 13969                           ; Number of cases is 3, Range of values is 0 to 2
 13970                           ; switch strategies available:
 13971                           ; Name         Instructions Cycles
 13972                           ; simple_byte           10     6 (average)
 13973                           ;	Chosen strategy is simple_byte
 13974   013618  0A00               	xorlw	0	; case 0
 13975   01361A  B4D8               	btfsc	status,2,c
 13976   01361C  EFB3  F09A         	goto	l9623
 13977   013620  0A01               	xorlw	1	; case 1
 13978   013622  B4D8               	btfsc	status,2,c
 13979   013624  EFE5  F09A         	goto	l9631
 13980   013628  0A03               	xorlw	3	; case 2
 13981   01362A  B4D8               	btfsc	status,2,c
 13982   01362C  EFC7  F09A         	goto	l9627
 13983   013630  EFF7  F09A         	goto	l9633
 13984   013634                     l2185:
 13985   013634  0012               	return		;funcret
 13986   013636                     __end_of_cosf:
 13987                           	callstack 0
 13988                           
 13989 ;; *************** function ___sindf *****************
 13990 ;; Defined at:
 13991 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__sindf.c"
 13992 ;; Parameters:    Size  Location     Type
 13993 ;;  x               4   21[BANK5 ] float 
 13994 ;; Auto vars:     Size  Location     Type
 13995 ;;  z               4   49[BANK5 ] float 
 13996 ;;  s               4   45[BANK5 ] float 
 13997 ;;  w               4   29[BANK5 ] float 
 13998 ;;  r               4   25[BANK5 ] float 
 13999 ;; Return value:  Size  Location     Type
 14000 ;;                  4   21[BANK5 ] float 
 14001 ;; Registers used:
 14002 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14003 ;; Tracked objects:
 14004 ;;		On entry : 0/0
 14005 ;;		On exit  : 0/0
 14006 ;;		Unchanged: 0/0
 14007 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14008 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14009 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14011 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14012 ;;Total ram usage:       32 bytes
 14013 ;; Hardware stack levels used: 1
 14014 ;; Hardware stack levels required when called: 1
 14015 ;; This function calls:
 14016 ;;		___fladd
 14017 ;;		___flmul
 14018 ;; This function is called by:
 14019 ;;		_cosf
 14020 ;;		_sinf
 14021 ;; This function uses a non-reentrant model
 14022 ;;
 14023                           
 14024                           	psect	text29
 14025   015382                     __ptext29:
 14026                           	callstack 0
 14027   015382                     ___sindf:
 14028                           	callstack 123
 14029   015382  C575  F505         	movff	___sindf@x,___flmul@b
 14030   015386  C576  F506         	movff	___sindf@x+1,___flmul@b+1
 14031   01538A  C577  F507         	movff	___sindf@x+2,___flmul@b+2
 14032   01538E  C578  F508         	movff	___sindf@x+3,___flmul@b+3
 14033   015392  C575  F509         	movff	___sindf@x,___flmul@a
 14034   015396  C576  F50A         	movff	___sindf@x+1,___flmul@a+1
 14035   01539A  C577  F50B         	movff	___sindf@x+2,___flmul@a+2
 14036   01539E  C578  F50C         	movff	___sindf@x+3,___flmul@a+3
 14037   0153A2  ECB7  F09F         	call	___flmul	;wreg free
 14038   0153A6  C505  F591         	movff	?___flmul,___sindf@z
 14039   0153AA  C506  F592         	movff	?___flmul+1,___sindf@z+1
 14040   0153AE  C507  F593         	movff	?___flmul+2,___sindf@z+2
 14041   0153B2  C508  F594         	movff	?___flmul+3,___sindf@z+3
 14042   0153B6  C591  F505         	movff	___sindf@z,___flmul@b
 14043   0153BA  C592  F506         	movff	___sindf@z+1,___flmul@b+1
 14044   0153BE  C593  F507         	movff	___sindf@z+2,___flmul@b+2
 14045   0153C2  C594  F508         	movff	___sindf@z+3,___flmul@b+3
 14046   0153C6  C591  F509         	movff	___sindf@z,___flmul@a
 14047   0153CA  C592  F50A         	movff	___sindf@z+1,___flmul@a+1
 14048   0153CE  C593  F50B         	movff	___sindf@z+2,___flmul@a+2
 14049   0153D2  C594  F50C         	movff	___sindf@z+3,___flmul@a+3
 14050   0153D6  ECB7  F09F         	call	___flmul	;wreg free
 14051   0153DA  C505  F57D         	movff	?___flmul,___sindf@w
 14052   0153DE  C506  F57E         	movff	?___flmul+1,___sindf@w+1
 14053   0153E2  C507  F57F         	movff	?___flmul+2,___sindf@w+2
 14054   0153E6  C508  F580         	movff	?___flmul+3,___sindf@w+3
 14055   0153EA  0E3C               	movlw	60
 14056   0153EC  6E09               	movwf	___flmul@a^(0+1280),c
 14057   0153EE  0E6C               	movlw	108
 14058   0153F0  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14059   0153F2  0E36               	movlw	54
 14060   0153F4  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14061   0153F6  0E36               	movlw	54
 14062   0153F8  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14063   0153FA  C591  F505         	movff	___sindf@z,___flmul@b
 14064   0153FE  C592  F506         	movff	___sindf@z+1,___flmul@b+1
 14065   015402  C593  F507         	movff	___sindf@z+2,___flmul@b+2
 14066   015406  C594  F508         	movff	___sindf@z+3,___flmul@b+3
 14067   01540A  ECB7  F09F         	call	___flmul	;wreg free
 14068   01540E  C505  F51E         	movff	?___flmul,___fladd@b
 14069   015412  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 14070   015416  C507  F520         	movff	?___flmul+2,___fladd@b+2
 14071   01541A  C508  F521         	movff	?___flmul+3,___fladd@b+3
 14072   01541E  0ECF               	movlw	207
 14073   015420  6E22               	movwf	___fladd@a^(0+1280),c
 14074   015422  0E07               	movlw	7
 14075   015424  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 14076   015426  0E50               	movlw	80
 14077   015428  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 14078   01542A  0EB9               	movlw	185
 14079   01542C  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 14080   01542E  EC1B  F09B         	call	___fladd	;wreg free
 14081   015432  C51E  F579         	movff	?___fladd,___sindf@r
 14082   015436  C51F  F57A         	movff	?___fladd+1,___sindf@r+1
 14083   01543A  C520  F57B         	movff	?___fladd+2,___sindf@r+2
 14084   01543E  C521  F57C         	movff	?___fladd+3,___sindf@r+3
 14085   015442  C591  F505         	movff	___sindf@z,___flmul@b
 14086   015446  C592  F506         	movff	___sindf@z+1,___flmul@b+1
 14087   01544A  C593  F507         	movff	___sindf@z+2,___flmul@b+2
 14088   01544E  C594  F508         	movff	___sindf@z+3,___flmul@b+3
 14089   015452  C575  F509         	movff	___sindf@x,___flmul@a
 14090   015456  C576  F50A         	movff	___sindf@x+1,___flmul@a+1
 14091   01545A  C577  F50B         	movff	___sindf@x+2,___flmul@a+2
 14092   01545E  C578  F50C         	movff	___sindf@x+3,___flmul@a+3
 14093   015462  ECB7  F09F         	call	___flmul	;wreg free
 14094   015466  C505  F58D         	movff	?___flmul,___sindf@s
 14095   01546A  C506  F58E         	movff	?___flmul+1,___sindf@s+1
 14096   01546E  C507  F58F         	movff	?___flmul+2,___sindf@s+2
 14097   015472  C508  F590         	movff	?___flmul+3,___sindf@s+3
 14098   015476  0EAB               	movlw	171
 14099   015478  6E22               	movwf	___fladd@a^(0+1280),c
 14100   01547A  0EAA               	movlw	170
 14101   01547C  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 14102   01547E  0E2A               	movlw	42
 14103   015480  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 14104   015482  0EBE               	movlw	190
 14105   015484  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 14106   015486  0E84               	movlw	132
 14107   015488  6E09               	movwf	___flmul@a^(0+1280),c
 14108   01548A  0E88               	movlw	136
 14109   01548C  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14110   01548E  0E08               	movlw	8
 14111   015490  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14112   015492  0E3C               	movlw	60
 14113   015494  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14114   015496  C591  F505         	movff	___sindf@z,___flmul@b
 14115   01549A  C592  F506         	movff	___sindf@z+1,___flmul@b+1
 14116   01549E  C593  F507         	movff	___sindf@z+2,___flmul@b+2
 14117   0154A2  C594  F508         	movff	___sindf@z+3,___flmul@b+3
 14118   0154A6  ECB7  F09F         	call	___flmul	;wreg free
 14119   0154AA  C505  F51E         	movff	?___flmul,___fladd@b
 14120   0154AE  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 14121   0154B2  C507  F520         	movff	?___flmul+2,___fladd@b+2
 14122   0154B6  C508  F521         	movff	?___flmul+3,___fladd@b+3
 14123   0154BA  EC1B  F09B         	call	___fladd	;wreg free
 14124   0154BE  C51E  F581         	movff	?___fladd,___sindf$3500
 14125   0154C2  C51F  F582         	movff	?___fladd+1,___sindf$3500+1
 14126   0154C6  C520  F583         	movff	?___fladd+2,___sindf$3500+2
 14127   0154CA  C521  F584         	movff	?___fladd+3,___sindf$3500+3
 14128   0154CE  C57D  F509         	movff	___sindf@w,___flmul@a
 14129   0154D2  C57E  F50A         	movff	___sindf@w+1,___flmul@a+1
 14130   0154D6  C57F  F50B         	movff	___sindf@w+2,___flmul@a+2
 14131   0154DA  C580  F50C         	movff	___sindf@w+3,___flmul@a+3
 14132   0154DE  C58D  F505         	movff	___sindf@s,___flmul@b
 14133   0154E2  C58E  F506         	movff	___sindf@s+1,___flmul@b+1
 14134   0154E6  C58F  F507         	movff	___sindf@s+2,___flmul@b+2
 14135   0154EA  C590  F508         	movff	___sindf@s+3,___flmul@b+3
 14136   0154EE  ECB7  F09F         	call	___flmul	;wreg free
 14137   0154F2  C505  F585         	movff	?___flmul,___sindf$3501
 14138   0154F6  C506  F586         	movff	?___flmul+1,___sindf$3501+1
 14139   0154FA  C507  F587         	movff	?___flmul+2,___sindf$3501+2
 14140   0154FE  C508  F588         	movff	?___flmul+3,___sindf$3501+3
 14141   015502  C575  F522         	movff	___sindf@x,___fladd@a
 14142   015506  C576  F523         	movff	___sindf@x+1,___fladd@a+1
 14143   01550A  C577  F524         	movff	___sindf@x+2,___fladd@a+2
 14144   01550E  C578  F525         	movff	___sindf@x+3,___fladd@a+3
 14145   015512  C58D  F509         	movff	___sindf@s,___flmul@a
 14146   015516  C58E  F50A         	movff	___sindf@s+1,___flmul@a+1
 14147   01551A  C58F  F50B         	movff	___sindf@s+2,___flmul@a+2
 14148   01551E  C590  F50C         	movff	___sindf@s+3,___flmul@a+3
 14149   015522  C581  F505         	movff	___sindf$3500,___flmul@b
 14150   015526  C582  F506         	movff	___sindf$3500+1,___flmul@b+1
 14151   01552A  C583  F507         	movff	___sindf$3500+2,___flmul@b+2
 14152   01552E  C584  F508         	movff	___sindf$3500+3,___flmul@b+3
 14153   015532  ECB7  F09F         	call	___flmul	;wreg free
 14154   015536  C505  F51E         	movff	?___flmul,___fladd@b
 14155   01553A  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 14156   01553E  C507  F520         	movff	?___flmul+2,___fladd@b+2
 14157   015542  C508  F521         	movff	?___flmul+3,___fladd@b+3
 14158   015546  EC1B  F09B         	call	___fladd	;wreg free
 14159   01554A  C51E  F589         	movff	?___fladd,___sindf$3502
 14160   01554E  C51F  F58A         	movff	?___fladd+1,___sindf$3502+1
 14161   015552  C520  F58B         	movff	?___fladd+2,___sindf$3502+2
 14162   015556  C521  F58C         	movff	?___fladd+3,___sindf$3502+3
 14163   01555A  C589  F51E         	movff	___sindf$3502,___fladd@b
 14164   01555E  C58A  F51F         	movff	___sindf$3502+1,___fladd@b+1
 14165   015562  C58B  F520         	movff	___sindf$3502+2,___fladd@b+2
 14166   015566  C58C  F521         	movff	___sindf$3502+3,___fladd@b+3
 14167   01556A  C579  F509         	movff	___sindf@r,___flmul@a
 14168   01556E  C57A  F50A         	movff	___sindf@r+1,___flmul@a+1
 14169   015572  C57B  F50B         	movff	___sindf@r+2,___flmul@a+2
 14170   015576  C57C  F50C         	movff	___sindf@r+3,___flmul@a+3
 14171   01557A  C585  F505         	movff	___sindf$3501,___flmul@b
 14172   01557E  C586  F506         	movff	___sindf$3501+1,___flmul@b+1
 14173   015582  C587  F507         	movff	___sindf$3501+2,___flmul@b+2
 14174   015586  C588  F508         	movff	___sindf$3501+3,___flmul@b+3
 14175   01558A  ECB7  F09F         	call	___flmul	;wreg free
 14176   01558E  C505  F522         	movff	?___flmul,___fladd@a
 14177   015592  C506  F523         	movff	?___flmul+1,___fladd@a+1
 14178   015596  C507  F524         	movff	?___flmul+2,___fladd@a+2
 14179   01559A  C508  F525         	movff	?___flmul+3,___fladd@a+3
 14180   01559E  EC1B  F09B         	call	___fladd	;wreg free
 14181   0155A2  C51E  F575         	movff	?___fladd,?___sindf
 14182   0155A6  C51F  F576         	movff	?___fladd+1,?___sindf+1
 14183   0155AA  C520  F577         	movff	?___fladd+2,?___sindf+2
 14184   0155AE  C521  F578         	movff	?___fladd+3,?___sindf+3
 14185   0155B2  0012               	return		;funcret
 14186   0155B4                     __end_of___sindf:
 14187                           	callstack 0
 14188                           
 14189 ;; *************** function ___rem_pio2f *****************
 14190 ;; Defined at:
 14191 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__rem_pio2f.c"
 14192 ;; Parameters:    Size  Location     Type
 14193 ;;  x               4   21[BANK5 ] float 
 14194 ;;  y               2   25[BANK5 ] PTR 
 14195 ;;		 -> sinf@y(4), cosf@y(4), 
 14196 ;; Auto vars:     Size  Location     Type
 14197 ;;  n               4   50[BANK5 ] long 
 14198 ;;  t               4   46[BANK5 ] float 
 14199 ;;  fn              4   42[BANK5 ] float 
 14200 ;;  ux              4   38[BANK5 ] struct .
 14201 ;;  ty              4   29[BANK5 ] [1]
 14202 ;;  sign            1   37[BANK5 ] _Bool 
 14203 ;; Return value:  Size  Location     Type
 14204 ;;                  2   21[BANK5 ] int 
 14205 ;; Registers used:
 14206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14207 ;; Tracked objects:
 14208 ;;		On entry : 0/0
 14209 ;;		On exit  : 0/0
 14210 ;;		Unchanged: 0/0
 14211 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14212 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14213 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14214 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14215 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14216 ;;Total ram usage:       33 bytes
 14217 ;; Hardware stack levels used: 1
 14218 ;; Hardware stack levels required when called: 2
 14219 ;; This function calls:
 14220 ;;		___fladd
 14221 ;;		___flmul
 14222 ;;		___flneg
 14223 ;;		___flsub
 14224 ;;		___fltol
 14225 ;;		___xxtofl
 14226 ;;		_fabsf
 14227 ;; This function is called by:
 14228 ;;		_cosf
 14229 ;;		_sinf
 14230 ;; This function uses a non-reentrant model
 14231 ;;
 14232                           
 14233                           	psect	text30
 14234   014772                     __ptext30:
 14235                           	callstack 0
 14236   014772                     ___rem_pio2f:
 14237                           	callstack 122
 14238   014772  C708  F586         	movff	___rem_pio2f@F526,___rem_pio2f@ux
 14239   014776  C709  F587         	movff	___rem_pio2f@F526+1,___rem_pio2f@ux+1
 14240   01477A  C70A  F588         	movff	___rem_pio2f@F526+2,___rem_pio2f@ux+2
 14241   01477E  C70B  F589         	movff	___rem_pio2f@F526+3,___rem_pio2f@ux+3
 14242   014782  C575  F586         	movff	___rem_pio2f@x,___rem_pio2f@ux
 14243   014786  C576  F587         	movff	___rem_pio2f@x+1,___rem_pio2f@ux+1
 14244   01478A  C577  F588         	movff	___rem_pio2f@x+2,___rem_pio2f@ux+2
 14245   01478E  C578  F589         	movff	___rem_pio2f@x+3,___rem_pio2f@ux+3
 14246   014792  0105               	movlb	5	; () banked
 14247   014794  BF89               	btfsc	(___rem_pio2f@ux+3)& (0+255),7,b
 14248   014796  EFCF  F0A3         	goto	u7381
 14249   01479A  EFD2  F0A3         	goto	u7380
 14250   01479E                     u7381:
 14251   01479E  0E01               	movlw	1
 14252   0147A0  EFD3  F0A3         	goto	u7390
 14253   0147A4                     u7380:
 14254   0147A4  0E00               	movlw	0
 14255   0147A6                     u7390:
 14256   0147A6  6F85               	movwf	___rem_pio2f@sign& (0+255),b
 14257   0147A8                     
 14258                           ; BSR set to: 5
 14259   0147A8  9F89               	bcf	(___rem_pio2f@ux+3)& (0+255),7,b
 14260   0147AA                     
 14261                           ; BSR set to: 5
 14262   0147AA  0EDB               	movlw	219
 14263   0147AC  5D86               	subwf	___rem_pio2f@ux& (0+255),w,b
 14264   0147AE  0E0F               	movlw	15
 14265   0147B0  5987               	subwfb	(___rem_pio2f@ux+1)& (0+255),w,b
 14266   0147B2  0EC9               	movlw	201
 14267   0147B4  5988               	subwfb	(___rem_pio2f@ux+2)& (0+255),w,b
 14268   0147B6  0E4D               	movlw	77
 14269   0147B8  5989               	subwfb	(___rem_pio2f@ux+3)& (0+255),w,b
 14270   0147BA  B0D8               	btfsc	status,0,c
 14271   0147BC  EFE2  F0A3         	goto	u7401
 14272   0147C0  EFE4  F0A3         	goto	u7400
 14273   0147C4                     u7401:
 14274   0147C4  EFD3  F0A4         	goto	l9323
 14275   0147C8                     u7400:
 14276   0147C8                     
 14277                           ; BSR set to: 5
 14278   0147C8  C575  F56D         	movff	___rem_pio2f@x,fabsf@x
 14279   0147CC  C576  F56E         	movff	___rem_pio2f@x+1,fabsf@x+1
 14280   0147D0  C577  F56F         	movff	___rem_pio2f@x+2,fabsf@x+2
 14281   0147D4  C578  F570         	movff	___rem_pio2f@x+3,fabsf@x+3
 14282   0147D8  EC8B  F0B7         	call	_fabsf	;wreg free
 14283   0147DC  C56D  F58E         	movff	?_fabsf,___rem_pio2f@t
 14284   0147E0  C56E  F58F         	movff	?_fabsf+1,___rem_pio2f@t+1
 14285   0147E4  C56F  F590         	movff	?_fabsf+2,___rem_pio2f@t+2
 14286   0147E8  C570  F591         	movff	?_fabsf+3,___rem_pio2f@t+3
 14287   0147EC  0E00               	movlw	0
 14288   0147EE  6E22               	movwf	___fladd@a^(0+1280),c
 14289   0147F0  0E00               	movlw	0
 14290   0147F2  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 14291   0147F4  0E00               	movlw	0
 14292   0147F6  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 14293   0147F8  0E3F               	movlw	63
 14294   0147FA  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 14295   0147FC  0E83               	movlw	131
 14296   0147FE  6E09               	movwf	___flmul@a^(0+1280),c
 14297   014800  0EF9               	movlw	249
 14298   014802  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14299   014804  0E22               	movlw	34
 14300   014806  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14301   014808  0E3F               	movlw	63
 14302   01480A  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14303   01480C  C58E  F505         	movff	___rem_pio2f@t,___flmul@b
 14304   014810  C58F  F506         	movff	___rem_pio2f@t+1,___flmul@b+1
 14305   014814  C590  F507         	movff	___rem_pio2f@t+2,___flmul@b+2
 14306   014818  C591  F508         	movff	___rem_pio2f@t+3,___flmul@b+3
 14307   01481C  ECB7  F09F         	call	___flmul	;wreg free
 14308   014820  C505  F51E         	movff	?___flmul,___fladd@b
 14309   014824  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 14310   014828  C507  F520         	movff	?___flmul+2,___fladd@b+2
 14311   01482C  C508  F521         	movff	?___flmul+3,___fladd@b+3
 14312   014830  EC1B  F09B         	call	___fladd	;wreg free
 14313   014834  C51E  F52E         	movff	?___fladd,___fltol@f1
 14314   014838  C51F  F52F         	movff	?___fladd+1,___fltol@f1+1
 14315   01483C  C520  F530         	movff	?___fladd+2,___fltol@f1+2
 14316   014840  C521  F531         	movff	?___fladd+3,___fltol@f1+3
 14317   014844  ECBC  F0B0         	call	___fltol	;wreg free
 14318   014848  C52E  F592         	movff	?___fltol,___rem_pio2f@n
 14319   01484C  C52F  F593         	movff	?___fltol+1,___rem_pio2f@n+1
 14320   014850  C530  F594         	movff	?___fltol+2,___rem_pio2f@n+2
 14321   014854  C531  F595         	movff	?___fltol+3,___rem_pio2f@n+3
 14322   014858  C592  F501         	movff	___rem_pio2f@n,___xxtofl@val
 14323   01485C  C593  F502         	movff	___rem_pio2f@n+1,___xxtofl@val+1
 14324   014860  C594  F503         	movff	___rem_pio2f@n+2,___xxtofl@val+2
 14325   014864  C595  F504         	movff	___rem_pio2f@n+3,___xxtofl@val+3
 14326   014868  0E01               	movlw	1
 14327   01486A  ECE4  F0AC         	call	___xxtofl
 14328   01486E  C501  F58A         	movff	?___xxtofl,___rem_pio2f@fn
 14329   014872  C502  F58B         	movff	?___xxtofl+1,___rem_pio2f@fn+1
 14330   014876  C503  F58C         	movff	?___xxtofl+2,___rem_pio2f@fn+2
 14331   01487A  C504  F58D         	movff	?___xxtofl+3,___rem_pio2f@fn+3
 14332   01487E  0EDA               	movlw	218
 14333   014880  6E09               	movwf	___flmul@a^(0+1280),c
 14334   014882  0E0F               	movlw	15
 14335   014884  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14336   014886  0EC9               	movlw	201
 14337   014888  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14338   01488A  0E3F               	movlw	63
 14339   01488C  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14340   01488E  C58A  F505         	movff	___rem_pio2f@fn,___flmul@b
 14341   014892  C58B  F506         	movff	___rem_pio2f@fn+1,___flmul@b+1
 14342   014896  C58C  F507         	movff	___rem_pio2f@fn+2,___flmul@b+2
 14343   01489A  C58D  F508         	movff	___rem_pio2f@fn+3,___flmul@b+3
 14344   01489E  ECB7  F09F         	call	___flmul	;wreg free
 14345   0148A2  C505  F571         	movff	?___flmul,___flsub@a
 14346   0148A6  C506  F572         	movff	?___flmul+1,___flsub@a+1
 14347   0148AA  C507  F573         	movff	?___flmul+2,___flsub@a+2
 14348   0148AE  C508  F574         	movff	?___flmul+3,___flsub@a+3
 14349   0148B2  C58E  F56D         	movff	___rem_pio2f@t,___flsub@b
 14350   0148B6  C58F  F56E         	movff	___rem_pio2f@t+1,___flsub@b+1
 14351   0148BA  C590  F56F         	movff	___rem_pio2f@t+2,___flsub@b+2
 14352   0148BE  C591  F570         	movff	___rem_pio2f@t+3,___flsub@b+3
 14353   0148C2  ECED  F0B6         	call	___flsub	;wreg free
 14354   0148C6  C56D  F581         	movff	?___flsub,___rem_pio2f$3499
 14355   0148CA  C56E  F582         	movff	?___flsub+1,___rem_pio2f$3499+1
 14356   0148CE  C56F  F583         	movff	?___flsub+2,___rem_pio2f$3499+2
 14357   0148D2  C570  F584         	movff	?___flsub+3,___rem_pio2f$3499+3
 14358   0148D6  C581  F56D         	movff	___rem_pio2f$3499,___flsub@b
 14359   0148DA  C582  F56E         	movff	___rem_pio2f$3499+1,___flsub@b+1
 14360   0148DE  C583  F56F         	movff	___rem_pio2f$3499+2,___flsub@b+2
 14361   0148E2  C584  F570         	movff	___rem_pio2f$3499+3,___flsub@b+3
 14362   0148E6  0EA3               	movlw	163
 14363   0148E8  6E09               	movwf	___flmul@a^(0+1280),c
 14364   0148EA  0E85               	movlw	133
 14365   0148EC  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14366   0148EE  0E88               	movlw	136
 14367   0148F0  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14368   0148F2  0E32               	movlw	50
 14369   0148F4  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14370   0148F6  C58A  F505         	movff	___rem_pio2f@fn,___flmul@b
 14371   0148FA  C58B  F506         	movff	___rem_pio2f@fn+1,___flmul@b+1
 14372   0148FE  C58C  F507         	movff	___rem_pio2f@fn+2,___flmul@b+2
 14373   014902  C58D  F508         	movff	___rem_pio2f@fn+3,___flmul@b+3
 14374   014906  ECB7  F09F         	call	___flmul	;wreg free
 14375   01490A  C505  F571         	movff	?___flmul,___flsub@a
 14376   01490E  C506  F572         	movff	?___flmul+1,___flsub@a+1
 14377   014912  C507  F573         	movff	?___flmul+2,___flsub@a+2
 14378   014916  C508  F574         	movff	?___flmul+3,___flsub@a+3
 14379   01491A  ECED  F0B6         	call	___flsub	;wreg free
 14380   01491E  C579  F4D9         	movff	___rem_pio2f@y,fsr2l
 14381   014922  C57A  F4DA         	movff	___rem_pio2f@y+1,fsr2h
 14382   014926  0105               	movlb	5	; () banked
 14383   014928  C56D  F4DE         	movff	?___flsub,postinc2
 14384   01492C  C56E  F4DE         	movff	?___flsub+1,postinc2
 14385   014930  C56F  F4DE         	movff	?___flsub+2,postinc2
 14386   014934  C570  F4DE         	movff	?___flsub+3,postinc2
 14387   014938                     
 14388                           ; BSR set to: 5
 14389   014938  5185               	movf	___rem_pio2f@sign& (0+255),w,b
 14390   01493A  B4D8               	btfsc	status,2,c
 14391   01493C  EFA2  F0A4         	goto	u7411
 14392   014940  EFA4  F0A4         	goto	u7410
 14393   014944                     u7411:
 14394   014944  EFCD  F0A4         	goto	l2237
 14395   014948                     u7410:
 14396   014948                     l9317:
 14397                           
 14398                           ; BSR set to: 5
 14399   014948  C579  F4D9         	movff	___rem_pio2f@y,fsr2l
 14400   01494C  C57A  F4DA         	movff	___rem_pio2f@y+1,fsr2h
 14401   014950  C4DE F501          	movff	postinc2,___flneg@f1
 14402   014954  C4DE F502          	movff	postinc2,___flneg@f1+1
 14403   014958  C4DE F503          	movff	postinc2,___flneg@f1+2
 14404   01495C  C4DE F504          	movff	postinc2,___flneg@f1+3
 14405   014960  EC6F  F0B7         	call	___flneg	;wreg free
 14406   014964  C579  F4D9         	movff	___rem_pio2f@y,fsr2l
 14407   014968  C57A  F4DA         	movff	___rem_pio2f@y+1,fsr2h
 14408   01496C  C501  F4DE         	movff	?___flneg,postinc2
 14409   014970  C502  F4DE         	movff	?___flneg+1,postinc2
 14410   014974  C503  F4DE         	movff	?___flneg+2,postinc2
 14411   014978  C504  F4DE         	movff	?___flneg+3,postinc2
 14412   01497C  C592  F57B         	movff	___rem_pio2f@n,??___rem_pio2f
 14413   014980  C593  F57C         	movff	___rem_pio2f@n+1,??___rem_pio2f+1
 14414   014984  0105               	movlb	5	; () banked
 14415   014986  1F7B               	comf	??___rem_pio2f& (0+255),f,b
 14416   014988  1F7C               	comf	(??___rem_pio2f+1)& (0+255),f,b
 14417   01498A  4B7B               	infsnz	??___rem_pio2f& (0+255),f,b
 14418   01498C  2B7C               	incf	(??___rem_pio2f+1)& (0+255),f,b
 14419   01498E  C57B  F575         	movff	??___rem_pio2f,?___rem_pio2f
 14420   014992  C57C  F576         	movff	??___rem_pio2f+1,?___rem_pio2f+1
 14421   014996  EF9D  F0A5         	goto	l2238
 14422   01499A                     l2237:
 14423                           
 14424                           ; BSR set to: 5
 14425   01499A  C592  F575         	movff	___rem_pio2f@n,?___rem_pio2f
 14426   01499E  C593  F576         	movff	___rem_pio2f@n+1,?___rem_pio2f+1
 14427   0149A2  EF9D  F0A5         	goto	l2238
 14428   0149A6                     l9323:
 14429                           
 14430                           ; BSR set to: 5
 14431   0149A6  C575  F56D         	movff	___rem_pio2f@x,fabsf@x
 14432   0149AA  C576  F56E         	movff	___rem_pio2f@x+1,fabsf@x+1
 14433   0149AE  C577  F56F         	movff	___rem_pio2f@x+2,fabsf@x+2
 14434   0149B2  C578  F570         	movff	___rem_pio2f@x+3,fabsf@x+3
 14435   0149B6  EC8B  F0B7         	call	_fabsf	;wreg free
 14436   0149BA  C56D  F58E         	movff	?_fabsf,___rem_pio2f@t
 14437   0149BE  C56E  F58F         	movff	?_fabsf+1,___rem_pio2f@t+1
 14438   0149C2  C56F  F590         	movff	?_fabsf+2,___rem_pio2f@t+2
 14439   0149C6  C570  F591         	movff	?_fabsf+3,___rem_pio2f@t+3
 14440   0149CA  0E00               	movlw	0
 14441   0149CC  6E22               	movwf	___fladd@a^(0+1280),c
 14442   0149CE  0E00               	movlw	0
 14443   0149D0  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 14444   0149D2  0E00               	movlw	0
 14445   0149D4  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 14446   0149D6  0E3F               	movlw	63
 14447   0149D8  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 14448   0149DA  0E83               	movlw	131
 14449   0149DC  6E09               	movwf	___flmul@a^(0+1280),c
 14450   0149DE  0EF9               	movlw	249
 14451   0149E0  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14452   0149E2  0E22               	movlw	34
 14453   0149E4  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14454   0149E6  0E3F               	movlw	63
 14455   0149E8  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14456   0149EA  C58E  F505         	movff	___rem_pio2f@t,___flmul@b
 14457   0149EE  C58F  F506         	movff	___rem_pio2f@t+1,___flmul@b+1
 14458   0149F2  C590  F507         	movff	___rem_pio2f@t+2,___flmul@b+2
 14459   0149F6  C591  F508         	movff	___rem_pio2f@t+3,___flmul@b+3
 14460   0149FA  ECB7  F09F         	call	___flmul	;wreg free
 14461   0149FE  C505  F51E         	movff	?___flmul,___fladd@b
 14462   014A02  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 14463   014A06  C507  F520         	movff	?___flmul+2,___fladd@b+2
 14464   014A0A  C508  F521         	movff	?___flmul+3,___fladd@b+3
 14465   014A0E  EC1B  F09B         	call	___fladd	;wreg free
 14466   014A12  C51E  F52E         	movff	?___fladd,___fltol@f1
 14467   014A16  C51F  F52F         	movff	?___fladd+1,___fltol@f1+1
 14468   014A1A  C520  F530         	movff	?___fladd+2,___fltol@f1+2
 14469   014A1E  C521  F531         	movff	?___fladd+3,___fltol@f1+3
 14470   014A22  ECBC  F0B0         	call	___fltol	;wreg free
 14471   014A26  C52E  F592         	movff	?___fltol,___rem_pio2f@n
 14472   014A2A  C52F  F593         	movff	?___fltol+1,___rem_pio2f@n+1
 14473   014A2E  C530  F594         	movff	?___fltol+2,___rem_pio2f@n+2
 14474   014A32  C531  F595         	movff	?___fltol+3,___rem_pio2f@n+3
 14475   014A36  C592  F501         	movff	___rem_pio2f@n,___xxtofl@val
 14476   014A3A  C593  F502         	movff	___rem_pio2f@n+1,___xxtofl@val+1
 14477   014A3E  C594  F503         	movff	___rem_pio2f@n+2,___xxtofl@val+2
 14478   014A42  C595  F504         	movff	___rem_pio2f@n+3,___xxtofl@val+3
 14479   014A46  0E01               	movlw	1
 14480   014A48  ECE4  F0AC         	call	___xxtofl
 14481   014A4C  C501  F58A         	movff	?___xxtofl,___rem_pio2f@fn
 14482   014A50  C502  F58B         	movff	?___xxtofl+1,___rem_pio2f@fn+1
 14483   014A54  C503  F58C         	movff	?___xxtofl+2,___rem_pio2f@fn+2
 14484   014A58  C504  F58D         	movff	?___xxtofl+3,___rem_pio2f@fn+3
 14485   014A5C  0EDA               	movlw	218
 14486   014A5E  6E09               	movwf	___flmul@a^(0+1280),c
 14487   014A60  0E0F               	movlw	15
 14488   014A62  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14489   014A64  0EC9               	movlw	201
 14490   014A66  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14491   014A68  0E3F               	movlw	63
 14492   014A6A  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14493   014A6C  C58A  F505         	movff	___rem_pio2f@fn,___flmul@b
 14494   014A70  C58B  F506         	movff	___rem_pio2f@fn+1,___flmul@b+1
 14495   014A74  C58C  F507         	movff	___rem_pio2f@fn+2,___flmul@b+2
 14496   014A78  C58D  F508         	movff	___rem_pio2f@fn+3,___flmul@b+3
 14497   014A7C  ECB7  F09F         	call	___flmul	;wreg free
 14498   014A80  C505  F571         	movff	?___flmul,___flsub@a
 14499   014A84  C506  F572         	movff	?___flmul+1,___flsub@a+1
 14500   014A88  C507  F573         	movff	?___flmul+2,___flsub@a+2
 14501   014A8C  C508  F574         	movff	?___flmul+3,___flsub@a+3
 14502   014A90  C58E  F56D         	movff	___rem_pio2f@t,___flsub@b
 14503   014A94  C58F  F56E         	movff	___rem_pio2f@t+1,___flsub@b+1
 14504   014A98  C590  F56F         	movff	___rem_pio2f@t+2,___flsub@b+2
 14505   014A9C  C591  F570         	movff	___rem_pio2f@t+3,___flsub@b+3
 14506   014AA0  ECED  F0B6         	call	___flsub	;wreg free
 14507   014AA4  C56D  F581         	movff	?___flsub,___rem_pio2f$3499
 14508   014AA8  C56E  F582         	movff	?___flsub+1,___rem_pio2f$3499+1
 14509   014AAC  C56F  F583         	movff	?___flsub+2,___rem_pio2f$3499+2
 14510   014AB0  C570  F584         	movff	?___flsub+3,___rem_pio2f$3499+3
 14511   014AB4  C581  F56D         	movff	___rem_pio2f$3499,___flsub@b
 14512   014AB8  C582  F56E         	movff	___rem_pio2f$3499+1,___flsub@b+1
 14513   014ABC  C583  F56F         	movff	___rem_pio2f$3499+2,___flsub@b+2
 14514   014AC0  C584  F570         	movff	___rem_pio2f$3499+3,___flsub@b+3
 14515   014AC4  0EA3               	movlw	163
 14516   014AC6  6E09               	movwf	___flmul@a^(0+1280),c
 14517   014AC8  0E85               	movlw	133
 14518   014ACA  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14519   014ACC  0E88               	movlw	136
 14520   014ACE  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14521   014AD0  0E32               	movlw	50
 14522   014AD2  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14523   014AD4  C58A  F505         	movff	___rem_pio2f@fn,___flmul@b
 14524   014AD8  C58B  F506         	movff	___rem_pio2f@fn+1,___flmul@b+1
 14525   014ADC  C58C  F507         	movff	___rem_pio2f@fn+2,___flmul@b+2
 14526   014AE0  C58D  F508         	movff	___rem_pio2f@fn+3,___flmul@b+3
 14527   014AE4  ECB7  F09F         	call	___flmul	;wreg free
 14528   014AE8  C505  F571         	movff	?___flmul,___flsub@a
 14529   014AEC  C506  F572         	movff	?___flmul+1,___flsub@a+1
 14530   014AF0  C507  F573         	movff	?___flmul+2,___flsub@a+2
 14531   014AF4  C508  F574         	movff	?___flmul+3,___flsub@a+3
 14532   014AF8  ECED  F0B6         	call	___flsub	;wreg free
 14533   014AFC  C56D  F57D         	movff	?___flsub,___rem_pio2f@ty
 14534   014B00  C56E  F57E         	movff	?___flsub+1,___rem_pio2f@ty+1
 14535   014B04  C56F  F57F         	movff	?___flsub+2,___rem_pio2f@ty+2
 14536   014B08  C570  F580         	movff	?___flsub+3,___rem_pio2f@ty+3
 14537   014B0C  C579  F4D9         	movff	___rem_pio2f@y,fsr2l
 14538   014B10  C57A  F4DA         	movff	___rem_pio2f@y+1,fsr2h
 14539   014B14  C57D  F4DE         	movff	___rem_pio2f@ty,postinc2
 14540   014B18  C57E  F4DE         	movff	___rem_pio2f@ty+1,postinc2
 14541   014B1C  C57F  F4DE         	movff	___rem_pio2f@ty+2,postinc2
 14542   014B20  C580  F4DE         	movff	___rem_pio2f@ty+3,postinc2
 14543   014B24  0105               	movlb	5	; () banked
 14544   014B26  5185               	movf	___rem_pio2f@sign& (0+255),w,b
 14545   014B28  B4D8               	btfsc	status,2,c
 14546   014B2A  EF99  F0A5         	goto	u7421
 14547   014B2E  EF9B  F0A5         	goto	u7420
 14548   014B32                     u7421:
 14549   014B32  EFCD  F0A4         	goto	l2237
 14550   014B36                     u7420:
 14551   014B36  EFA4  F0A4         	goto	l9317
 14552   014B3A                     l2238:
 14553                           
 14554                           ; BSR set to: 5
 14555   014B3A  0012               	return		;funcret
 14556   014B3C                     __end_of___rem_pio2f:
 14557                           	callstack 0
 14558                           
 14559 ;; *************** function ___fltol *****************
 14560 ;; Defined at:
 14561 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
 14562 ;; Parameters:    Size  Location     Type
 14563 ;;  f1              4   45[COMRAM] int 
 14564 ;; Auto vars:     Size  Location     Type
 14565 ;;  exp1            1   54[COMRAM] unsigned char 
 14566 ;;  sign1           1   53[COMRAM] unsigned char 
 14567 ;; Return value:  Size  Location     Type
 14568 ;;                  4   45[COMRAM] long 
 14569 ;; Registers used:
 14570 ;;		wreg, status,2, status,0
 14571 ;; Tracked objects:
 14572 ;;		On entry : 0/0
 14573 ;;		On exit  : 0/0
 14574 ;;		Unchanged: 0/0
 14575 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14576 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14577 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14578 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14579 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14580 ;;Total ram usage:       10 bytes
 14581 ;; Hardware stack levels used: 1
 14582 ;; This function calls:
 14583 ;;		Nothing
 14584 ;; This function is called by:
 14585 ;;		___rem_pio2f
 14586 ;;		_efgtoa
 14587 ;; This function uses a non-reentrant model
 14588 ;;
 14589                           
 14590                           	psect	text31
 14591   016178                     __ptext31:
 14592                           	callstack 0
 14593   016178                     ___fltol:
 14594                           	callstack 122
 14595   016178  3430               	rlcf	(___fltol@f1+2)^(0+1280),w,c
 14596   01617A  3431               	rlcf	(___fltol@f1+3)^(0+1280),w,c
 14597   01617C  6E37               	movwf	___fltol@exp1^(0+1280),c
 14598   01617E  5037               	movf	___fltol@exp1^(0+1280),w,c
 14599   016180  A4D8               	btfss	status,2,c
 14600   016182  EFC5  F0B0         	goto	u5941
 14601   016186  EFC7  F0B0         	goto	u5940
 14602   01618A                     u5941:
 14603   01618A  EFD1  F0B0         	goto	l8327
 14604   01618E                     u5940:
 14605   01618E                     l8323:
 14606   01618E  0E00               	movlw	0
 14607   016190  6E2E               	movwf	?___fltol^(0+1280),c
 14608   016192  0E00               	movlw	0
 14609   016194  6E2F               	movwf	(?___fltol+1)^(0+1280),c
 14610   016196  0E00               	movlw	0
 14611   016198  6E30               	movwf	(?___fltol+2)^(0+1280),c
 14612   01619A  0E00               	movlw	0
 14613   01619C  6E31               	movwf	(?___fltol+3)^(0+1280),c
 14614   01619E  EF3E  F0B1         	goto	l1680
 14615   0161A2                     l8327:
 14616   0161A2  C52E  F532         	movff	___fltol@f1,??___fltol
 14617   0161A6  C52F  F533         	movff	___fltol@f1+1,??___fltol+1
 14618   0161AA  C530  F534         	movff	___fltol@f1+2,??___fltol+2
 14619   0161AE  C531  F535         	movff	___fltol@f1+3,??___fltol+3
 14620   0161B2  0E20               	movlw	32
 14621   0161B4  EFE1  F0B0         	goto	u5950
 14622   0161B8                     u5955:
 14623   0161B8  90D8               	bcf	status,0,c
 14624   0161BA  3235               	rrcf	(??___fltol+3)^(0+1280),f,c
 14625   0161BC  3234               	rrcf	(??___fltol+2)^(0+1280),f,c
 14626   0161BE  3233               	rrcf	(??___fltol+1)^(0+1280),f,c
 14627   0161C0  3232               	rrcf	??___fltol^(0+1280),f,c
 14628   0161C2                     u5950:
 14629   0161C2  2EE8               	decfsz	wreg,f,c
 14630   0161C4  EFDC  F0B0         	goto	u5955
 14631   0161C8  5032               	movf	??___fltol^(0+1280),w,c
 14632   0161CA  6E36               	movwf	___fltol@sign1^(0+1280),c
 14633   0161CC  8E30               	bsf	(___fltol@f1+2)^(0+1280),7,c
 14634   0161CE  0EFF               	movlw	255
 14635   0161D0  162E               	andwf	___fltol@f1^(0+1280),f,c
 14636   0161D2  0EFF               	movlw	255
 14637   0161D4  162F               	andwf	(___fltol@f1+1)^(0+1280),f,c
 14638   0161D6  0EFF               	movlw	255
 14639   0161D8  1630               	andwf	(___fltol@f1+2)^(0+1280),f,c
 14640   0161DA  0E00               	movlw	0
 14641   0161DC  1631               	andwf	(___fltol@f1+3)^(0+1280),f,c
 14642   0161DE  0E96               	movlw	150
 14643   0161E0  5E37               	subwf	___fltol@exp1^(0+1280),f,c
 14644   0161E2  BE37               	btfsc	___fltol@exp1^(0+1280),7,c
 14645   0161E4  EFF8  F0B0         	goto	u5960
 14646   0161E8  EFF6  F0B0         	goto	u5961
 14647   0161EC                     u5961:
 14648   0161EC  EF0E  F0B1         	goto	l8347
 14649   0161F0                     u5960:
 14650   0161F0  5037               	movf	___fltol@exp1^(0+1280),w,c
 14651   0161F2  0A80               	xorlw	128
 14652   0161F4  0F97               	addlw	151
 14653   0161F6  B0D8               	btfsc	status,0,c
 14654   0161F8  EF00  F0B1         	goto	u5971
 14655   0161FC  EF02  F0B1         	goto	u5970
 14656   016200                     u5971:
 14657   016200  EF04  F0B1         	goto	l8343
 14658   016204                     u5970:
 14659   016204  EFC7  F0B0         	goto	l8323
 14660   016208                     l8343:
 14661   016208  90D8               	bcf	status,0,c
 14662   01620A  3231               	rrcf	(___fltol@f1+3)^(0+1280),f,c
 14663   01620C  3230               	rrcf	(___fltol@f1+2)^(0+1280),f,c
 14664   01620E  322F               	rrcf	(___fltol@f1+1)^(0+1280),f,c
 14665   016210  322E               	rrcf	___fltol@f1^(0+1280),f,c
 14666   016212  3E37               	incfsz	___fltol@exp1^(0+1280),f,c
 14667   016214  EF04  F0B1         	goto	l8343
 14668   016218  EF26  F0B1         	goto	l8357
 14669   01621C                     l8347:
 14670   01621C  0E1F               	movlw	31
 14671   01621E  6437               	cpfsgt	___fltol@exp1^(0+1280),c
 14672   016220  EF14  F0B1         	goto	u5981
 14673   016224  EF16  F0B1         	goto	u5980
 14674   016228                     u5981:
 14675   016228  EF1E  F0B1         	goto	l8355
 14676   01622C                     u5980:
 14677   01622C  EFC7  F0B0         	goto	l8323
 14678   016230                     l8353:
 14679   016230  90D8               	bcf	status,0,c
 14680   016232  362E               	rlcf	___fltol@f1^(0+1280),f,c
 14681   016234  362F               	rlcf	(___fltol@f1+1)^(0+1280),f,c
 14682   016236  3630               	rlcf	(___fltol@f1+2)^(0+1280),f,c
 14683   016238  3631               	rlcf	(___fltol@f1+3)^(0+1280),f,c
 14684   01623A  0637               	decf	___fltol@exp1^(0+1280),f,c
 14685   01623C                     l8355:
 14686   01623C  5037               	movf	___fltol@exp1^(0+1280),w,c
 14687   01623E  A4D8               	btfss	status,2,c
 14688   016240  EF24  F0B1         	goto	u5991
 14689   016244  EF26  F0B1         	goto	u5990
 14690   016248                     u5991:
 14691   016248  EF18  F0B1         	goto	l8353
 14692   01624C                     u5990:
 14693   01624C                     l8357:
 14694   01624C  5036               	movf	___fltol@sign1^(0+1280),w,c
 14695   01624E  B4D8               	btfsc	status,2,c
 14696   016250  EF2C  F0B1         	goto	u6001
 14697   016254  EF2E  F0B1         	goto	u6000
 14698   016258                     u6001:
 14699   016258  EF36  F0B1         	goto	l8361
 14700   01625C                     u6000:
 14701   01625C  1E31               	comf	(___fltol@f1+3)^(0+1280),f,c
 14702   01625E  1E30               	comf	(___fltol@f1+2)^(0+1280),f,c
 14703   016260  1E2F               	comf	(___fltol@f1+1)^(0+1280),f,c
 14704   016262  6C2E               	negf	___fltol@f1^(0+1280),c
 14705   016264  0E00               	movlw	0
 14706   016266  222F               	addwfc	(___fltol@f1+1)^(0+1280),f,c
 14707   016268  2230               	addwfc	(___fltol@f1+2)^(0+1280),f,c
 14708   01626A  2231               	addwfc	(___fltol@f1+3)^(0+1280),f,c
 14709   01626C                     l8361:
 14710   01626C  C52E  F52E         	movff	___fltol@f1,?___fltol
 14711   016270  C52F  F52F         	movff	___fltol@f1+1,?___fltol+1
 14712   016274  C530  F530         	movff	___fltol@f1+2,?___fltol+2
 14713   016278  C531  F531         	movff	___fltol@f1+3,?___fltol+3
 14714   01627C                     l1680:
 14715   01627C  0012               	return		;funcret
 14716   01627E                     __end_of___fltol:
 14717                           	callstack 0
 14718                           
 14719 ;; *************** function ___cosdf *****************
 14720 ;; Defined at:
 14721 ;;		line 26 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__cosdf.c"
 14722 ;; Parameters:    Size  Location     Type
 14723 ;;  x               4   45[COMRAM] long 
 14724 ;; Auto vars:     Size  Location     Type
 14725 ;;  z               4   69[COMRAM] long 
 14726 ;;  w               4   65[COMRAM] long 
 14727 ;;  r               4   49[COMRAM] long 
 14728 ;; Return value:  Size  Location     Type
 14729 ;;                  4   45[COMRAM] float 
 14730 ;; Registers used:
 14731 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14732 ;; Tracked objects:
 14733 ;;		On entry : 0/0
 14734 ;;		On exit  : 0/0
 14735 ;;		Unchanged: 0/0
 14736 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14737 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14738 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14740 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14741 ;;Total ram usage:       28 bytes
 14742 ;; Hardware stack levels used: 1
 14743 ;; Hardware stack levels required when called: 1
 14744 ;; This function calls:
 14745 ;;		___fladd
 14746 ;;		___flmul
 14747 ;; This function is called by:
 14748 ;;		_cosf
 14749 ;;		_sinf
 14750 ;; This function uses a non-reentrant model
 14751 ;;
 14752                           
 14753                           	psect	text32
 14754   0157CA                     __ptext32:
 14755                           	callstack 0
 14756   0157CA                     ___cosdf:
 14757                           	callstack 123
 14758   0157CA  C52E  F505         	movff	___cosdf@x,___flmul@b
 14759   0157CE  C52F  F506         	movff	___cosdf@x+1,___flmul@b+1
 14760   0157D2  C530  F507         	movff	___cosdf@x+2,___flmul@b+2
 14761   0157D6  C531  F508         	movff	___cosdf@x+3,___flmul@b+3
 14762   0157DA  C52E  F509         	movff	___cosdf@x,___flmul@a
 14763   0157DE  C52F  F50A         	movff	___cosdf@x+1,___flmul@a+1
 14764   0157E2  C530  F50B         	movff	___cosdf@x+2,___flmul@a+2
 14765   0157E6  C531  F50C         	movff	___cosdf@x+3,___flmul@a+3
 14766   0157EA  ECB7  F09F         	call	___flmul	;wreg free
 14767   0157EE  C505  F546         	movff	?___flmul,___cosdf@z
 14768   0157F2  C506  F547         	movff	?___flmul+1,___cosdf@z+1
 14769   0157F6  C507  F548         	movff	?___flmul+2,___cosdf@z+2
 14770   0157FA  C508  F549         	movff	?___flmul+3,___cosdf@z+3
 14771   0157FE  C546  F505         	movff	___cosdf@z,___flmul@b
 14772   015802  C547  F506         	movff	___cosdf@z+1,___flmul@b+1
 14773   015806  C548  F507         	movff	___cosdf@z+2,___flmul@b+2
 14774   01580A  C549  F508         	movff	___cosdf@z+3,___flmul@b+3
 14775   01580E  C546  F509         	movff	___cosdf@z,___flmul@a
 14776   015812  C547  F50A         	movff	___cosdf@z+1,___flmul@a+1
 14777   015816  C548  F50B         	movff	___cosdf@z+2,___flmul@a+2
 14778   01581A  C549  F50C         	movff	___cosdf@z+3,___flmul@a+3
 14779   01581E  ECB7  F09F         	call	___flmul	;wreg free
 14780   015822  C505  F542         	movff	?___flmul,___cosdf@w
 14781   015826  C506  F543         	movff	?___flmul+1,___cosdf@w+1
 14782   01582A  C507  F544         	movff	?___flmul+2,___cosdf@w+2
 14783   01582E  C508  F545         	movff	?___flmul+3,___cosdf@w+3
 14784   015832  0E17               	movlw	23
 14785   015834  6E09               	movwf	___flmul@a^(0+1280),c
 14786   015836  0E9A               	movlw	154
 14787   015838  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14788   01583A  0ECC               	movlw	204
 14789   01583C  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14790   01583E  0E37               	movlw	55
 14791   015840  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14792   015842  C546  F505         	movff	___cosdf@z,___flmul@b
 14793   015846  C547  F506         	movff	___cosdf@z+1,___flmul@b+1
 14794   01584A  C548  F507         	movff	___cosdf@z+2,___flmul@b+2
 14795   01584E  C549  F508         	movff	___cosdf@z+3,___flmul@b+3
 14796   015852  ECB7  F09F         	call	___flmul	;wreg free
 14797   015856  C505  F51E         	movff	?___flmul,___fladd@b
 14798   01585A  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 14799   01585E  C507  F520         	movff	?___flmul+2,___fladd@b+2
 14800   015862  C508  F521         	movff	?___flmul+3,___fladd@b+3
 14801   015866  0E3F               	movlw	63
 14802   015868  6E22               	movwf	___fladd@a^(0+1280),c
 14803   01586A  0E04               	movlw	4
 14804   01586C  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 14805   01586E  0EB6               	movlw	182
 14806   015870  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 14807   015872  0EBA               	movlw	186
 14808   015874  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 14809   015876  EC1B  F09B         	call	___fladd	;wreg free
 14810   01587A  C51E  F532         	movff	?___fladd,___cosdf@r
 14811   01587E  C51F  F533         	movff	?___fladd+1,___cosdf@r+1
 14812   015882  C520  F534         	movff	?___fladd+2,___cosdf@r+2
 14813   015886  C521  F535         	movff	?___fladd+3,___cosdf@r+3
 14814   01588A  0E00               	movlw	0
 14815   01588C  6E22               	movwf	___fladd@a^(0+1280),c
 14816   01588E  0E00               	movlw	0
 14817   015890  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 14818   015892  0E80               	movlw	128
 14819   015894  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 14820   015896  0E3F               	movlw	63
 14821   015898  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 14822   01589A  0E00               	movlw	0
 14823   01589C  6E09               	movwf	___flmul@a^(0+1280),c
 14824   01589E  0E00               	movlw	0
 14825   0158A0  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14826   0158A2  0E00               	movlw	0
 14827   0158A4  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14828   0158A6  0EBF               	movlw	191
 14829   0158A8  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14830   0158AA  C546  F505         	movff	___cosdf@z,___flmul@b
 14831   0158AE  C547  F506         	movff	___cosdf@z+1,___flmul@b+1
 14832   0158B2  C548  F507         	movff	___cosdf@z+2,___flmul@b+2
 14833   0158B6  C549  F508         	movff	___cosdf@z+3,___flmul@b+3
 14834   0158BA  ECB7  F09F         	call	___flmul	;wreg free
 14835   0158BE  C505  F51E         	movff	?___flmul,___fladd@b
 14836   0158C2  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 14837   0158C6  C507  F520         	movff	?___flmul+2,___fladd@b+2
 14838   0158CA  C508  F521         	movff	?___flmul+3,___fladd@b+3
 14839   0158CE  EC1B  F09B         	call	___fladd	;wreg free
 14840   0158D2  C51E  F536         	movff	?___fladd,___cosdf$3496
 14841   0158D6  C51F  F537         	movff	?___fladd+1,___cosdf$3496+1
 14842   0158DA  C520  F538         	movff	?___fladd+2,___cosdf$3496+2
 14843   0158DE  C521  F539         	movff	?___fladd+3,___cosdf$3496+3
 14844   0158E2  C546  F509         	movff	___cosdf@z,___flmul@a
 14845   0158E6  C547  F50A         	movff	___cosdf@z+1,___flmul@a+1
 14846   0158EA  C548  F50B         	movff	___cosdf@z+2,___flmul@a+2
 14847   0158EE  C549  F50C         	movff	___cosdf@z+3,___flmul@a+3
 14848   0158F2  C542  F505         	movff	___cosdf@w,___flmul@b
 14849   0158F6  C543  F506         	movff	___cosdf@w+1,___flmul@b+1
 14850   0158FA  C544  F507         	movff	___cosdf@w+2,___flmul@b+2
 14851   0158FE  C545  F508         	movff	___cosdf@w+3,___flmul@b+3
 14852   015902  ECB7  F09F         	call	___flmul	;wreg free
 14853   015906  C505  F53A         	movff	?___flmul,___cosdf$3497
 14854   01590A  C506  F53B         	movff	?___flmul+1,___cosdf$3497+1
 14855   01590E  C507  F53C         	movff	?___flmul+2,___cosdf$3497+2
 14856   015912  C508  F53D         	movff	?___flmul+3,___cosdf$3497+3
 14857   015916  0E9F               	movlw	159
 14858   015918  6E09               	movwf	___flmul@a^(0+1280),c
 14859   01591A  0EAA               	movlw	170
 14860   01591C  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 14861   01591E  0E2A               	movlw	42
 14862   015920  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 14863   015922  0E3D               	movlw	61
 14864   015924  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 14865   015926  C542  F505         	movff	___cosdf@w,___flmul@b
 14866   01592A  C543  F506         	movff	___cosdf@w+1,___flmul@b+1
 14867   01592E  C544  F507         	movff	___cosdf@w+2,___flmul@b+2
 14868   015932  C545  F508         	movff	___cosdf@w+3,___flmul@b+3
 14869   015936  ECB7  F09F         	call	___flmul	;wreg free
 14870   01593A  C505  F522         	movff	?___flmul,___fladd@a
 14871   01593E  C506  F523         	movff	?___flmul+1,___fladd@a+1
 14872   015942  C507  F524         	movff	?___flmul+2,___fladd@a+2
 14873   015946  C508  F525         	movff	?___flmul+3,___fladd@a+3
 14874   01594A  C536  F51E         	movff	___cosdf$3496,___fladd@b
 14875   01594E  C537  F51F         	movff	___cosdf$3496+1,___fladd@b+1
 14876   015952  C538  F520         	movff	___cosdf$3496+2,___fladd@b+2
 14877   015956  C539  F521         	movff	___cosdf$3496+3,___fladd@b+3
 14878   01595A  EC1B  F09B         	call	___fladd	;wreg free
 14879   01595E  C51E  F53E         	movff	?___fladd,___cosdf$3498
 14880   015962  C51F  F53F         	movff	?___fladd+1,___cosdf$3498+1
 14881   015966  C520  F540         	movff	?___fladd+2,___cosdf$3498+2
 14882   01596A  C521  F541         	movff	?___fladd+3,___cosdf$3498+3
 14883   01596E  C53E  F51E         	movff	___cosdf$3498,___fladd@b
 14884   015972  C53F  F51F         	movff	___cosdf$3498+1,___fladd@b+1
 14885   015976  C540  F520         	movff	___cosdf$3498+2,___fladd@b+2
 14886   01597A  C541  F521         	movff	___cosdf$3498+3,___fladd@b+3
 14887   01597E  C532  F509         	movff	___cosdf@r,___flmul@a
 14888   015982  C533  F50A         	movff	___cosdf@r+1,___flmul@a+1
 14889   015986  C534  F50B         	movff	___cosdf@r+2,___flmul@a+2
 14890   01598A  C535  F50C         	movff	___cosdf@r+3,___flmul@a+3
 14891   01598E  C53A  F505         	movff	___cosdf$3497,___flmul@b
 14892   015992  C53B  F506         	movff	___cosdf$3497+1,___flmul@b+1
 14893   015996  C53C  F507         	movff	___cosdf$3497+2,___flmul@b+2
 14894   01599A  C53D  F508         	movff	___cosdf$3497+3,___flmul@b+3
 14895   01599E  ECB7  F09F         	call	___flmul	;wreg free
 14896   0159A2  C505  F522         	movff	?___flmul,___fladd@a
 14897   0159A6  C506  F523         	movff	?___flmul+1,___fladd@a+1
 14898   0159AA  C507  F524         	movff	?___flmul+2,___fladd@a+2
 14899   0159AE  C508  F525         	movff	?___flmul+3,___fladd@a+3
 14900   0159B2  EC1B  F09B         	call	___fladd	;wreg free
 14901   0159B6  C51E  F52E         	movff	?___fladd,?___cosdf
 14902   0159BA  C51F  F52F         	movff	?___fladd+1,?___cosdf+1
 14903   0159BE  C520  F530         	movff	?___fladd+2,?___cosdf+2
 14904   0159C2  C521  F531         	movff	?___fladd+3,?___cosdf+3
 14905   0159C6  0012               	return		;funcret
 14906   0159C8                     __end_of___cosdf:
 14907                           	callstack 0
 14908                           
 14909 ;; *************** function ___flge *****************
 14910 ;; Defined at:
 14911 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flge.c"
 14912 ;; Parameters:    Size  Location     Type
 14913 ;;  ff1             4   29[COMRAM] float 
 14914 ;;  ff2             4   33[COMRAM] float 
 14915 ;; Auto vars:     Size  Location     Type
 14916 ;;		None
 14917 ;; Return value:  Size  Location     Type
 14918 ;;		None               void
 14919 ;; Registers used:
 14920 ;;		wreg, status,2, status,0
 14921 ;; Tracked objects:
 14922 ;;		On entry : 0/0
 14923 ;;		On exit  : 0/0
 14924 ;;		Unchanged: 0/0
 14925 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 14926 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14928 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14929 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14930 ;;Total ram usage:       12 bytes
 14931 ;; Hardware stack levels used: 1
 14932 ;; This function calls:
 14933 ;;		Nothing
 14934 ;; This function is called by:
 14935 ;;		_MPU6050_DMP_GetData
 14936 ;;		_main
 14937 ;;		_efgtoa
 14938 ;;		_AnalyzeMovementPattern
 14939 ;;		_CalculateConfidence
 14940 ;; This function uses a non-reentrant model
 14941 ;;
 14942                           
 14943                           	psect	text33
 14944   01627E                     __ptext33:
 14945                           	callstack 0
 14946   01627E                     ___flge:
 14947                           	callstack 122
 14948   01627E  0E00               	movlw	0
 14949   016280  141E               	andwf	___flge@ff1^(0+1280),w,c
 14950   016282  6E26               	movwf	??___flge^(0+1280),c
 14951   016284  0E00               	movlw	0
 14952   016286  141F               	andwf	(___flge@ff1+1)^(0+1280),w,c
 14953   016288  6E27               	movwf	(??___flge+1)^(0+1280),c
 14954   01628A  0E80               	movlw	128
 14955   01628C  1420               	andwf	(___flge@ff1+2)^(0+1280),w,c
 14956   01628E  6E28               	movwf	(??___flge+2)^(0+1280),c
 14957   016290  0E7F               	movlw	127
 14958   016292  1421               	andwf	(___flge@ff1+3)^(0+1280),w,c
 14959   016294  6E29               	movwf	(??___flge+3)^(0+1280),c
 14960   016296  5026               	movf	??___flge^(0+1280),w,c
 14961   016298  1027               	iorwf	(??___flge+1)^(0+1280),w,c
 14962   01629A  1028               	iorwf	(??___flge+2)^(0+1280),w,c
 14963   01629C  1029               	iorwf	(??___flge+3)^(0+1280),w,c
 14964   01629E  A4D8               	btfss	status,2,c
 14965   0162A0  EF54  F0B1         	goto	u5881
 14966   0162A4  EF56  F0B1         	goto	u5880
 14967   0162A8                     u5881:
 14968   0162A8  EF5E  F0B1         	goto	l8295
 14969   0162AC                     u5880:
 14970   0162AC  0E00               	movlw	0
 14971   0162AE  6E1E               	movwf	___flge@ff1^(0+1280),c
 14972   0162B0  0E00               	movlw	0
 14973   0162B2  6E1F               	movwf	(___flge@ff1+1)^(0+1280),c
 14974   0162B4  0E00               	movlw	0
 14975   0162B6  6E20               	movwf	(___flge@ff1+2)^(0+1280),c
 14976   0162B8  0E00               	movlw	0
 14977   0162BA  6E21               	movwf	(___flge@ff1+3)^(0+1280),c
 14978   0162BC                     l8295:
 14979   0162BC  0E00               	movlw	0
 14980   0162BE  1422               	andwf	___flge@ff2^(0+1280),w,c
 14981   0162C0  6E26               	movwf	??___flge^(0+1280),c
 14982   0162C2  0E00               	movlw	0
 14983   0162C4  1423               	andwf	(___flge@ff2+1)^(0+1280),w,c
 14984   0162C6  6E27               	movwf	(??___flge+1)^(0+1280),c
 14985   0162C8  0E80               	movlw	128
 14986   0162CA  1424               	andwf	(___flge@ff2+2)^(0+1280),w,c
 14987   0162CC  6E28               	movwf	(??___flge+2)^(0+1280),c
 14988   0162CE  0E7F               	movlw	127
 14989   0162D0  1425               	andwf	(___flge@ff2+3)^(0+1280),w,c
 14990   0162D2  6E29               	movwf	(??___flge+3)^(0+1280),c
 14991   0162D4  5026               	movf	??___flge^(0+1280),w,c
 14992   0162D6  1027               	iorwf	(??___flge+1)^(0+1280),w,c
 14993   0162D8  1028               	iorwf	(??___flge+2)^(0+1280),w,c
 14994   0162DA  1029               	iorwf	(??___flge+3)^(0+1280),w,c
 14995   0162DC  A4D8               	btfss	status,2,c
 14996   0162DE  EF73  F0B1         	goto	u5891
 14997   0162E2  EF75  F0B1         	goto	u5890
 14998   0162E6                     u5891:
 14999   0162E6  EF7D  F0B1         	goto	l8299
 15000   0162EA                     u5890:
 15001   0162EA  0E00               	movlw	0
 15002   0162EC  6E22               	movwf	___flge@ff2^(0+1280),c
 15003   0162EE  0E00               	movlw	0
 15004   0162F0  6E23               	movwf	(___flge@ff2+1)^(0+1280),c
 15005   0162F2  0E00               	movlw	0
 15006   0162F4  6E24               	movwf	(___flge@ff2+2)^(0+1280),c
 15007   0162F6  0E00               	movlw	0
 15008   0162F8  6E25               	movwf	(___flge@ff2+3)^(0+1280),c
 15009   0162FA                     l8299:
 15010   0162FA  AE21               	btfss	(___flge@ff1+3)^(0+1280),7,c
 15011   0162FC  EF82  F0B1         	goto	u5901
 15012   016300  EF84  F0B1         	goto	u5900
 15013   016304                     u5901:
 15014   016304  EF8D  F0B1         	goto	l8303
 15015   016308                     u5900:
 15016   016308  6C1E               	negf	___flge@ff1^(0+1280),c
 15017   01630A  1E1F               	comf	(___flge@ff1+1)^(0+1280),f,c
 15018   01630C  B0D8               	btfsc	status,0,c
 15019   01630E  2A1F               	incf	(___flge@ff1+1)^(0+1280),f,c
 15020   016310  1E20               	comf	(___flge@ff1+2)^(0+1280),f,c
 15021   016312  B0D8               	btfsc	status,0,c
 15022   016314  2A20               	incf	(___flge@ff1+2)^(0+1280),f,c
 15023   016316  0E80               	movlw	128
 15024   016318  5621               	subfwb	(___flge@ff1+3)^(0+1280),f,c
 15025   01631A                     l8303:
 15026   01631A  AE25               	btfss	(___flge@ff2+3)^(0+1280),7,c
 15027   01631C  EF92  F0B1         	goto	u5911
 15028   016320  EF94  F0B1         	goto	u5910
 15029   016324                     u5911:
 15030   016324  EF9D  F0B1         	goto	l1648
 15031   016328                     u5910:
 15032   016328  6C22               	negf	___flge@ff2^(0+1280),c
 15033   01632A  1E23               	comf	(___flge@ff2+1)^(0+1280),f,c
 15034   01632C  B0D8               	btfsc	status,0,c
 15035   01632E  2A23               	incf	(___flge@ff2+1)^(0+1280),f,c
 15036   016330  1E24               	comf	(___flge@ff2+2)^(0+1280),f,c
 15037   016332  B0D8               	btfsc	status,0,c
 15038   016334  2A24               	incf	(___flge@ff2+2)^(0+1280),f,c
 15039   016336  0E80               	movlw	128
 15040   016338  5625               	subfwb	(___flge@ff2+3)^(0+1280),f,c
 15041   01633A                     l1648:
 15042   01633A  0E00               	movlw	0
 15043   01633C  1A1E               	xorwf	___flge@ff1^(0+1280),f,c
 15044   01633E  0E00               	movlw	0
 15045   016340  1A1F               	xorwf	(___flge@ff1+1)^(0+1280),f,c
 15046   016342  0E00               	movlw	0
 15047   016344  1A20               	xorwf	(___flge@ff1+2)^(0+1280),f,c
 15048   016346  0E80               	movlw	128
 15049   016348  1A21               	xorwf	(___flge@ff1+3)^(0+1280),f,c
 15050   01634A  0E00               	movlw	0
 15051   01634C  1A22               	xorwf	___flge@ff2^(0+1280),f,c
 15052   01634E  0E00               	movlw	0
 15053   016350  1A23               	xorwf	(___flge@ff2+1)^(0+1280),f,c
 15054   016352  0E00               	movlw	0
 15055   016354  1A24               	xorwf	(___flge@ff2+2)^(0+1280),f,c
 15056   016356  0E80               	movlw	128
 15057   016358  1A25               	xorwf	(___flge@ff2+3)^(0+1280),f,c
 15058   01635A  5022               	movf	___flge@ff2^(0+1280),w,c
 15059   01635C  5C1E               	subwf	___flge@ff1^(0+1280),w,c
 15060   01635E  5023               	movf	(___flge@ff2+1)^(0+1280),w,c
 15061   016360  581F               	subwfb	(___flge@ff1+1)^(0+1280),w,c
 15062   016362  5024               	movf	(___flge@ff2+2)^(0+1280),w,c
 15063   016364  5820               	subwfb	(___flge@ff1+2)^(0+1280),w,c
 15064   016366  5025               	movf	(___flge@ff2+3)^(0+1280),w,c
 15065   016368  5821               	subwfb	(___flge@ff1+3)^(0+1280),w,c
 15066   01636A  B0D8               	btfsc	status,0,c
 15067   01636C  EFBA  F0B1         	goto	u5921
 15068   016370  EFBC  F0B1         	goto	u5920
 15069   016374                     u5921:
 15070   016374  EFBF  F0B1         	goto	l8309
 15071   016378                     u5920:
 15072   016378  90D8               	bcf	status,0,c
 15073   01637A  EFC0  F0B1         	goto	l1653
 15074   01637E                     l8309:
 15075   01637E  80D8               	bsf	status,0,c
 15076   016380                     l1653:
 15077   016380  0012               	return		;funcret
 15078   016382                     __end_of___flge:
 15079                           	callstack 0
 15080                           
 15081 ;; *************** function _MPU6050_ReadAll *****************
 15082 ;; Defined at:
 15083 ;;		line 249 in file "MPU6050_DMP.c"
 15084 ;; Parameters:    Size  Location     Type
 15085 ;;  data            2  108[BANK5 ] PTR struct .
 15086 ;;		 -> MPU6050_Calibrate@data(43), MPU6050_DMP_GetData@sensor_data(43), 
 15087 ;; Auto vars:     Size  Location     Type
 15088 ;;  raw_data       14  122[BANK5 ] unsigned char [14]
 15089 ;;  raw_gz          2  148[BANK5 ] short 
 15090 ;;  raw_gy          2  146[BANK5 ] short 
 15091 ;;  raw_gx          2  144[BANK5 ] short 
 15092 ;;  raw_temp        2  142[BANK5 ] short 
 15093 ;;  raw_az          2  140[BANK5 ] short 
 15094 ;;  raw_ay          2  138[BANK5 ] short 
 15095 ;;  raw_ax          2  136[BANK5 ] short 
 15096 ;; Return value:  Size  Location     Type
 15097 ;;                  1    wreg      _Bool 
 15098 ;; Registers used:
 15099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15100 ;; Tracked objects:
 15101 ;;		On entry : 0/0
 15102 ;;		On exit  : 0/0
 15103 ;;		Unchanged: 0/0
 15104 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15105 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15106 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15108 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15109 ;;Total ram usage:       46 bytes
 15110 ;; Hardware stack levels used: 1
 15111 ;; Hardware stack levels required when called: 5
 15112 ;; This function calls:
 15113 ;;		_GetTimestamp_ms
 15114 ;;		_MPU6050_CombineBytes
 15115 ;;		_MPU6050_ReadRegisters
 15116 ;;		___fladd
 15117 ;;		___fldiv
 15118 ;;		___flmul
 15119 ;;		___flneg
 15120 ;;		___flsub
 15121 ;;		___xxtofl
 15122 ;;		_atan2f
 15123 ;;		_sqrtf
 15124 ;; This function is called by:
 15125 ;;		_MPU6050_DMP_GetData
 15126 ;;		_MPU6050_Calibrate
 15127 ;; This function uses a non-reentrant model
 15128 ;;
 15129                           
 15130                           	psect	text34
 15131   011F30                     __ptext34:
 15132                           	callstack 0
 15133   011F30                     _MPU6050_ReadAll:
 15134                           	callstack 120
 15135   011F30                     
 15136                           ;MPU6050_DMP.c: 251:     uint8_t raw_data[14];;MPU6050_DMP.c: 254:     if (!MPU6050_Read
      +                          Registers(0x3B, raw_data, 14)) {
 15137   011F30  0EDA               	movlw	low MPU6050_ReadAll@raw_data
 15138   011F32  6E13               	movwf	MPU6050_ReadRegisters@data^(0+1280),c
 15139   011F34  0E05               	movlw	high MPU6050_ReadAll@raw_data
 15140   011F36  6E14               	movwf	(MPU6050_ReadRegisters@data+1)^(0+1280),c
 15141   011F38  0E0E               	movlw	14
 15142   011F3A  6E15               	movwf	MPU6050_ReadRegisters@length^(0+1280),c
 15143   011F3C  0E3B               	movlw	59
 15144   011F3E  EC09  F0B8         	call	_MPU6050_ReadRegisters
 15145   011F42  0900               	iorlw	0
 15146   011F44  A4D8               	btfss	status,2,c
 15147   011F46  EFA7  F08F         	goto	u7561
 15148   011F4A  EFA9  F08F         	goto	u7560
 15149   011F4E                     u7561:
 15150   011F4E  EFAC  F08F         	goto	l9491
 15151   011F52                     u7560:
 15152   011F52                     
 15153                           ;MPU6050_DMP.c: 255:         return 0;
 15154   011F52  0E00               	movlw	0
 15155   011F54  EF3F  F093         	goto	l614
 15156   011F58                     l9491:
 15157                           
 15158                           ;MPU6050_DMP.c: 259:     int16_t raw_ax = MPU6050_CombineBytes(raw_data[0], raw_data[1])
      +                          ;
 15159   011F58  C5DB  F501         	movff	MPU6050_ReadAll@raw_data+1,MPU6050_CombineBytes@low
 15160   011F5C  0105               	movlb	5	; () banked
 15161   011F5E  51DA               	movf	MPU6050_ReadAll@raw_data& (0+255),w,b
 15162   011F60  EC83  F0B8         	call	_MPU6050_CombineBytes
 15163   011F64  C501  F5E8         	movff	?_MPU6050_CombineBytes,MPU6050_ReadAll@raw_ax
 15164   011F68  C502  F5E9         	movff	?_MPU6050_CombineBytes+1,MPU6050_ReadAll@raw_ax+1
 15165                           
 15166                           ;MPU6050_DMP.c: 260:     int16_t raw_ay = MPU6050_CombineBytes(raw_data[2], raw_data[3])
      +                          ;
 15167   011F6C  C5DD  F501         	movff	MPU6050_ReadAll@raw_data+3,MPU6050_CombineBytes@low
 15168   011F70  0105               	movlb	5	; () banked
 15169   011F72  51DC               	movf	(MPU6050_ReadAll@raw_data+2)& (0+255),w,b
 15170   011F74  EC83  F0B8         	call	_MPU6050_CombineBytes
 15171   011F78  C501  F5EA         	movff	?_MPU6050_CombineBytes,MPU6050_ReadAll@raw_ay
 15172   011F7C  C502  F5EB         	movff	?_MPU6050_CombineBytes+1,MPU6050_ReadAll@raw_ay+1
 15173                           
 15174                           ;MPU6050_DMP.c: 261:     int16_t raw_az = MPU6050_CombineBytes(raw_data[4], raw_data[5])
      +                          ;
 15175   011F80  C5DF  F501         	movff	MPU6050_ReadAll@raw_data+5,MPU6050_CombineBytes@low
 15176   011F84  0105               	movlb	5	; () banked
 15177   011F86  51DE               	movf	(MPU6050_ReadAll@raw_data+4)& (0+255),w,b
 15178   011F88  EC83  F0B8         	call	_MPU6050_CombineBytes
 15179   011F8C  C501  F5EC         	movff	?_MPU6050_CombineBytes,MPU6050_ReadAll@raw_az
 15180   011F90  C502  F5ED         	movff	?_MPU6050_CombineBytes+1,MPU6050_ReadAll@raw_az+1
 15181   011F94                     
 15182                           ;MPU6050_DMP.c: 263:     data->accel.x = (raw_ax / 8192.0f) - accel_offset.x;
 15183   011F94  0E00               	movlw	0
 15184   011F96  6E57               	movwf	___fldiv@a^(0+1280),c
 15185   011F98  0E00               	movlw	0
 15186   011F9A  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15187   011F9C  0E00               	movlw	0
 15188   011F9E  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15189   011FA0  0E46               	movlw	70
 15190   011FA2  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15191   011FA4  C5E8  F501         	movff	MPU6050_ReadAll@raw_ax,___xxtofl@val
 15192   011FA8  C5E9  F502         	movff	MPU6050_ReadAll@raw_ax+1,___xxtofl@val+1
 15193   011FAC  0E00               	movlw	0
 15194   011FAE  BE02               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 15195   011FB0  0EFF               	movlw	-1
 15196   011FB2  6E03               	movwf	(___xxtofl@val+2)^(0+1280),c
 15197   011FB4  6E04               	movwf	(___xxtofl@val+3)^(0+1280),c
 15198   011FB6  0E01               	movlw	1
 15199   011FB8  ECE4  F0AC         	call	___xxtofl
 15200   011FBC  C501  F553         	movff	?___xxtofl,___fldiv@b
 15201   011FC0  C502  F554         	movff	?___xxtofl+1,___fldiv@b+1
 15202   011FC4  C503  F555         	movff	?___xxtofl+2,___fldiv@b+2
 15203   011FC8  C504  F556         	movff	?___xxtofl+3,___fldiv@b+3
 15204   011FCC  EC9E  F0A5         	call	___fldiv	;wreg free
 15205   011FD0  C553  F56D         	movff	?___fldiv,___flsub@b
 15206   011FD4  C554  F56E         	movff	?___fldiv+1,___flsub@b+1
 15207   011FD8  C555  F56F         	movff	?___fldiv+2,___flsub@b+2
 15208   011FDC  C556  F570         	movff	?___fldiv+3,___flsub@b+3
 15209   011FE0  C6E5  F571         	movff	_accel_offset,___flsub@a
 15210   011FE4  C6E6  F572         	movff	_accel_offset+1,___flsub@a+1
 15211   011FE8  C6E7  F573         	movff	_accel_offset+2,___flsub@a+2
 15212   011FEC  C6E8  F574         	movff	_accel_offset+3,___flsub@a+3
 15213   011FF0  ECED  F0B6         	call	___flsub	;wreg free
 15214   011FF4  C5CC  F4D9         	movff	MPU6050_ReadAll@data,fsr2l
 15215   011FF8  C5CD  F4DA         	movff	MPU6050_ReadAll@data+1,fsr2h
 15216   011FFC  0105               	movlb	5	; () banked
 15217   011FFE  C56D  F4DE         	movff	?___flsub,postinc2
 15218   012002  C56E  F4DE         	movff	?___flsub+1,postinc2
 15219   012006  C56F  F4DE         	movff	?___flsub+2,postinc2
 15220   01200A  C570  F4DE         	movff	?___flsub+3,postinc2
 15221   01200E                     
 15222                           ; BSR set to: 5
 15223                           ;MPU6050_DMP.c: 264:     data->accel.y = (raw_ay / 8192.0f) - accel_offset.y;
 15224   01200E  0E00               	movlw	0
 15225   012010  6E57               	movwf	___fldiv@a^(0+1280),c
 15226   012012  0E00               	movlw	0
 15227   012014  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15228   012016  0E00               	movlw	0
 15229   012018  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15230   01201A  0E46               	movlw	70
 15231   01201C  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15232   01201E  C5EA  F501         	movff	MPU6050_ReadAll@raw_ay,___xxtofl@val
 15233   012022  C5EB  F502         	movff	MPU6050_ReadAll@raw_ay+1,___xxtofl@val+1
 15234   012026  0E00               	movlw	0
 15235   012028  BE02               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 15236   01202A  0EFF               	movlw	-1
 15237   01202C  6E03               	movwf	(___xxtofl@val+2)^(0+1280),c
 15238   01202E  6E04               	movwf	(___xxtofl@val+3)^(0+1280),c
 15239   012030  0E01               	movlw	1
 15240   012032  ECE4  F0AC         	call	___xxtofl
 15241   012036  C501  F553         	movff	?___xxtofl,___fldiv@b
 15242   01203A  C502  F554         	movff	?___xxtofl+1,___fldiv@b+1
 15243   01203E  C503  F555         	movff	?___xxtofl+2,___fldiv@b+2
 15244   012042  C504  F556         	movff	?___xxtofl+3,___fldiv@b+3
 15245   012046  EC9E  F0A5         	call	___fldiv	;wreg free
 15246   01204A  C553  F56D         	movff	?___fldiv,___flsub@b
 15247   01204E  C554  F56E         	movff	?___fldiv+1,___flsub@b+1
 15248   012052  C555  F56F         	movff	?___fldiv+2,___flsub@b+2
 15249   012056  C556  F570         	movff	?___fldiv+3,___flsub@b+3
 15250   01205A  C6E9  F571         	movff	_accel_offset+4,___flsub@a
 15251   01205E  C6EA  F572         	movff	_accel_offset+5,___flsub@a+1
 15252   012062  C6EB  F573         	movff	_accel_offset+6,___flsub@a+2
 15253   012066  C6EC  F574         	movff	_accel_offset+7,___flsub@a+3
 15254   01206A  ECED  F0B6         	call	___flsub	;wreg free
 15255   01206E  0105               	movlb	5	; () banked
 15256   012070  EE20 F004          	lfsr	2,4
 15257   012074  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15258   012076  26D9               	addwf	fsr2l,f,c
 15259   012078  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15260   01207A  22DA               	addwfc	fsr2h,f,c
 15261   01207C  C56D  F4DE         	movff	?___flsub,postinc2
 15262   012080  C56E  F4DE         	movff	?___flsub+1,postinc2
 15263   012084  C56F  F4DE         	movff	?___flsub+2,postinc2
 15264   012088  C570  F4DE         	movff	?___flsub+3,postinc2
 15265   01208C                     
 15266                           ; BSR set to: 5
 15267                           ;MPU6050_DMP.c: 265:     data->accel.z = (raw_az / 8192.0f) - accel_offset.z;
 15268   01208C  0E00               	movlw	0
 15269   01208E  6E57               	movwf	___fldiv@a^(0+1280),c
 15270   012090  0E00               	movlw	0
 15271   012092  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15272   012094  0E00               	movlw	0
 15273   012096  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15274   012098  0E46               	movlw	70
 15275   01209A  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15276   01209C  C5EC  F501         	movff	MPU6050_ReadAll@raw_az,___xxtofl@val
 15277   0120A0  C5ED  F502         	movff	MPU6050_ReadAll@raw_az+1,___xxtofl@val+1
 15278   0120A4  0E00               	movlw	0
 15279   0120A6  BE02               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 15280   0120A8  0EFF               	movlw	-1
 15281   0120AA  6E03               	movwf	(___xxtofl@val+2)^(0+1280),c
 15282   0120AC  6E04               	movwf	(___xxtofl@val+3)^(0+1280),c
 15283   0120AE  0E01               	movlw	1
 15284   0120B0  ECE4  F0AC         	call	___xxtofl
 15285   0120B4  C501  F553         	movff	?___xxtofl,___fldiv@b
 15286   0120B8  C502  F554         	movff	?___xxtofl+1,___fldiv@b+1
 15287   0120BC  C503  F555         	movff	?___xxtofl+2,___fldiv@b+2
 15288   0120C0  C504  F556         	movff	?___xxtofl+3,___fldiv@b+3
 15289   0120C4  EC9E  F0A5         	call	___fldiv	;wreg free
 15290   0120C8  C553  F56D         	movff	?___fldiv,___flsub@b
 15291   0120CC  C554  F56E         	movff	?___fldiv+1,___flsub@b+1
 15292   0120D0  C555  F56F         	movff	?___fldiv+2,___flsub@b+2
 15293   0120D4  C556  F570         	movff	?___fldiv+3,___flsub@b+3
 15294   0120D8  C6ED  F571         	movff	_accel_offset+8,___flsub@a
 15295   0120DC  C6EE  F572         	movff	_accel_offset+9,___flsub@a+1
 15296   0120E0  C6EF  F573         	movff	_accel_offset+10,___flsub@a+2
 15297   0120E4  C6F0  F574         	movff	_accel_offset+11,___flsub@a+3
 15298   0120E8  ECED  F0B6         	call	___flsub	;wreg free
 15299   0120EC  0105               	movlb	5	; () banked
 15300   0120EE  EE20 F008          	lfsr	2,8
 15301   0120F2  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15302   0120F4  26D9               	addwf	fsr2l,f,c
 15303   0120F6  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15304   0120F8  22DA               	addwfc	fsr2h,f,c
 15305   0120FA  C56D  F4DE         	movff	?___flsub,postinc2
 15306   0120FE  C56E  F4DE         	movff	?___flsub+1,postinc2
 15307   012102  C56F  F4DE         	movff	?___flsub+2,postinc2
 15308   012106  C570  F4DE         	movff	?___flsub+3,postinc2
 15309   01210A                     
 15310                           ; BSR set to: 5
 15311                           ;MPU6050_DMP.c: 268:     int16_t raw_temp = MPU6050_CombineBytes(raw_data[6], raw_data[7
      +                          ]);
 15312   01210A  C5E1  F501         	movff	MPU6050_ReadAll@raw_data+7,MPU6050_CombineBytes@low
 15313   01210E  51E0               	movf	(MPU6050_ReadAll@raw_data+6)& (0+255),w,b
 15314   012110  EC83  F0B8         	call	_MPU6050_CombineBytes
 15315   012114  C501  F5EE         	movff	?_MPU6050_CombineBytes,MPU6050_ReadAll@raw_temp
 15316   012118  C502  F5EF         	movff	?_MPU6050_CombineBytes+1,MPU6050_ReadAll@raw_temp+1
 15317                           
 15318                           ;MPU6050_DMP.c: 269:     data->temperature = (raw_temp / 340.0f) + 36.53f;
 15319   01211C  0E00               	movlw	0
 15320   01211E  6E57               	movwf	___fldiv@a^(0+1280),c
 15321   012120  0E00               	movlw	0
 15322   012122  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15323   012124  0EAA               	movlw	170
 15324   012126  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15325   012128  0E43               	movlw	67
 15326   01212A  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15327   01212C  C5EE  F501         	movff	MPU6050_ReadAll@raw_temp,___xxtofl@val
 15328   012130  C5EF  F502         	movff	MPU6050_ReadAll@raw_temp+1,___xxtofl@val+1
 15329   012134  0E00               	movlw	0
 15330   012136  BE02               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 15331   012138  0EFF               	movlw	-1
 15332   01213A  6E03               	movwf	(___xxtofl@val+2)^(0+1280),c
 15333   01213C  6E04               	movwf	(___xxtofl@val+3)^(0+1280),c
 15334   01213E  0E01               	movlw	1
 15335   012140  ECE4  F0AC         	call	___xxtofl
 15336   012144  C501  F553         	movff	?___xxtofl,___fldiv@b
 15337   012148  C502  F554         	movff	?___xxtofl+1,___fldiv@b+1
 15338   01214C  C503  F555         	movff	?___xxtofl+2,___fldiv@b+2
 15339   012150  C504  F556         	movff	?___xxtofl+3,___fldiv@b+3
 15340   012154  EC9E  F0A5         	call	___fldiv	;wreg free
 15341   012158  C553  F51E         	movff	?___fldiv,___fladd@b
 15342   01215C  C554  F51F         	movff	?___fldiv+1,___fladd@b+1
 15343   012160  C555  F520         	movff	?___fldiv+2,___fladd@b+2
 15344   012164  C556  F521         	movff	?___fldiv+3,___fladd@b+3
 15345   012168  0EB8               	movlw	184
 15346   01216A  6E22               	movwf	___fladd@a^(0+1280),c
 15347   01216C  0E1E               	movlw	30
 15348   01216E  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 15349   012170  0E12               	movlw	18
 15350   012172  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 15351   012174  0E42               	movlw	66
 15352   012176  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 15353   012178  EC1B  F09B         	call	___fladd	;wreg free
 15354   01217C  0105               	movlb	5	; () banked
 15355   01217E  EE20 F024          	lfsr	2,36
 15356   012182  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15357   012184  26D9               	addwf	fsr2l,f,c
 15358   012186  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15359   012188  22DA               	addwfc	fsr2h,f,c
 15360   01218A  C51E  F4DE         	movff	?___fladd,postinc2
 15361   01218E  C51F  F4DE         	movff	?___fladd+1,postinc2
 15362   012192  C520  F4DE         	movff	?___fladd+2,postinc2
 15363   012196  C521  F4DE         	movff	?___fladd+3,postinc2
 15364   01219A                     
 15365                           ; BSR set to: 5
 15366                           ;MPU6050_DMP.c: 272:     int16_t raw_gx = MPU6050_CombineBytes(raw_data[8], raw_data[9])
      +                          ;
 15367   01219A  C5E3  F501         	movff	MPU6050_ReadAll@raw_data+9,MPU6050_CombineBytes@low
 15368   01219E  51E2               	movf	(MPU6050_ReadAll@raw_data+8)& (0+255),w,b
 15369   0121A0  EC83  F0B8         	call	_MPU6050_CombineBytes
 15370   0121A4  C501  F5F0         	movff	?_MPU6050_CombineBytes,MPU6050_ReadAll@raw_gx
 15371   0121A8  C502  F5F1         	movff	?_MPU6050_CombineBytes+1,MPU6050_ReadAll@raw_gx+1
 15372   0121AC                     
 15373                           ;MPU6050_DMP.c: 273:     int16_t raw_gy = MPU6050_CombineBytes(raw_data[10], raw_data[11
      +                          ]);
 15374   0121AC  C5E5  F501         	movff	MPU6050_ReadAll@raw_data+11,MPU6050_CombineBytes@low
 15375   0121B0  0105               	movlb	5	; () banked
 15376   0121B2  51E4               	movf	(MPU6050_ReadAll@raw_data+10)& (0+255),w,b
 15377   0121B4  EC83  F0B8         	call	_MPU6050_CombineBytes
 15378   0121B8  C501  F5F2         	movff	?_MPU6050_CombineBytes,MPU6050_ReadAll@raw_gy
 15379   0121BC  C502  F5F3         	movff	?_MPU6050_CombineBytes+1,MPU6050_ReadAll@raw_gy+1
 15380   0121C0                     
 15381                           ;MPU6050_DMP.c: 274:     int16_t raw_gz = MPU6050_CombineBytes(raw_data[12], raw_data[13
      +                          ]);
 15382   0121C0  C5E7  F501         	movff	MPU6050_ReadAll@raw_data+13,MPU6050_CombineBytes@low
 15383   0121C4  0105               	movlb	5	; () banked
 15384   0121C6  51E6               	movf	(MPU6050_ReadAll@raw_data+12)& (0+255),w,b
 15385   0121C8  EC83  F0B8         	call	_MPU6050_CombineBytes
 15386   0121CC  C501  F5F4         	movff	?_MPU6050_CombineBytes,MPU6050_ReadAll@raw_gz
 15387   0121D0  C502  F5F5         	movff	?_MPU6050_CombineBytes+1,MPU6050_ReadAll@raw_gz+1
 15388   0121D4                     
 15389                           ;MPU6050_DMP.c: 276:     data->gyro.x = (raw_gx / 65.5f) - gyro_offset.x;
 15390   0121D4  0E00               	movlw	0
 15391   0121D6  6E57               	movwf	___fldiv@a^(0+1280),c
 15392   0121D8  0E00               	movlw	0
 15393   0121DA  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15394   0121DC  0E83               	movlw	131
 15395   0121DE  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15396   0121E0  0E42               	movlw	66
 15397   0121E2  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15398   0121E4  C5F0  F501         	movff	MPU6050_ReadAll@raw_gx,___xxtofl@val
 15399   0121E8  C5F1  F502         	movff	MPU6050_ReadAll@raw_gx+1,___xxtofl@val+1
 15400   0121EC  0E00               	movlw	0
 15401   0121EE  BE02               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 15402   0121F0  0EFF               	movlw	-1
 15403   0121F2  6E03               	movwf	(___xxtofl@val+2)^(0+1280),c
 15404   0121F4  6E04               	movwf	(___xxtofl@val+3)^(0+1280),c
 15405   0121F6  0E01               	movlw	1
 15406   0121F8  ECE4  F0AC         	call	___xxtofl
 15407   0121FC  C501  F553         	movff	?___xxtofl,___fldiv@b
 15408   012200  C502  F554         	movff	?___xxtofl+1,___fldiv@b+1
 15409   012204  C503  F555         	movff	?___xxtofl+2,___fldiv@b+2
 15410   012208  C504  F556         	movff	?___xxtofl+3,___fldiv@b+3
 15411   01220C  EC9E  F0A5         	call	___fldiv	;wreg free
 15412   012210  C553  F56D         	movff	?___fldiv,___flsub@b
 15413   012214  C554  F56E         	movff	?___fldiv+1,___flsub@b+1
 15414   012218  C555  F56F         	movff	?___fldiv+2,___flsub@b+2
 15415   01221C  C556  F570         	movff	?___fldiv+3,___flsub@b+3
 15416   012220  C6D9  F571         	movff	_gyro_offset,___flsub@a
 15417   012224  C6DA  F572         	movff	_gyro_offset+1,___flsub@a+1
 15418   012228  C6DB  F573         	movff	_gyro_offset+2,___flsub@a+2
 15419   01222C  C6DC  F574         	movff	_gyro_offset+3,___flsub@a+3
 15420   012230  ECED  F0B6         	call	___flsub	;wreg free
 15421   012234  0105               	movlb	5	; () banked
 15422   012236  EE20 F00C          	lfsr	2,12
 15423   01223A  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15424   01223C  26D9               	addwf	fsr2l,f,c
 15425   01223E  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15426   012240  22DA               	addwfc	fsr2h,f,c
 15427   012242  C56D  F4DE         	movff	?___flsub,postinc2
 15428   012246  C56E  F4DE         	movff	?___flsub+1,postinc2
 15429   01224A  C56F  F4DE         	movff	?___flsub+2,postinc2
 15430   01224E  C570  F4DE         	movff	?___flsub+3,postinc2
 15431   012252                     
 15432                           ; BSR set to: 5
 15433                           ;MPU6050_DMP.c: 277:     data->gyro.y = (raw_gy / 65.5f) - gyro_offset.y;
 15434   012252  0E00               	movlw	0
 15435   012254  6E57               	movwf	___fldiv@a^(0+1280),c
 15436   012256  0E00               	movlw	0
 15437   012258  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15438   01225A  0E83               	movlw	131
 15439   01225C  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15440   01225E  0E42               	movlw	66
 15441   012260  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15442   012262  C5F2  F501         	movff	MPU6050_ReadAll@raw_gy,___xxtofl@val
 15443   012266  C5F3  F502         	movff	MPU6050_ReadAll@raw_gy+1,___xxtofl@val+1
 15444   01226A  0E00               	movlw	0
 15445   01226C  BE02               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 15446   01226E  0EFF               	movlw	-1
 15447   012270  6E03               	movwf	(___xxtofl@val+2)^(0+1280),c
 15448   012272  6E04               	movwf	(___xxtofl@val+3)^(0+1280),c
 15449   012274  0E01               	movlw	1
 15450   012276  ECE4  F0AC         	call	___xxtofl
 15451   01227A  C501  F553         	movff	?___xxtofl,___fldiv@b
 15452   01227E  C502  F554         	movff	?___xxtofl+1,___fldiv@b+1
 15453   012282  C503  F555         	movff	?___xxtofl+2,___fldiv@b+2
 15454   012286  C504  F556         	movff	?___xxtofl+3,___fldiv@b+3
 15455   01228A  EC9E  F0A5         	call	___fldiv	;wreg free
 15456   01228E  C553  F56D         	movff	?___fldiv,___flsub@b
 15457   012292  C554  F56E         	movff	?___fldiv+1,___flsub@b+1
 15458   012296  C555  F56F         	movff	?___fldiv+2,___flsub@b+2
 15459   01229A  C556  F570         	movff	?___fldiv+3,___flsub@b+3
 15460   01229E  C6DD  F571         	movff	_gyro_offset+4,___flsub@a
 15461   0122A2  C6DE  F572         	movff	_gyro_offset+5,___flsub@a+1
 15462   0122A6  C6DF  F573         	movff	_gyro_offset+6,___flsub@a+2
 15463   0122AA  C6E0  F574         	movff	_gyro_offset+7,___flsub@a+3
 15464   0122AE  ECED  F0B6         	call	___flsub	;wreg free
 15465   0122B2  0105               	movlb	5	; () banked
 15466   0122B4  EE20 F010          	lfsr	2,16
 15467   0122B8  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15468   0122BA  26D9               	addwf	fsr2l,f,c
 15469   0122BC  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15470   0122BE  22DA               	addwfc	fsr2h,f,c
 15471   0122C0  C56D  F4DE         	movff	?___flsub,postinc2
 15472   0122C4  C56E  F4DE         	movff	?___flsub+1,postinc2
 15473   0122C8  C56F  F4DE         	movff	?___flsub+2,postinc2
 15474   0122CC  C570  F4DE         	movff	?___flsub+3,postinc2
 15475   0122D0                     
 15476                           ; BSR set to: 5
 15477                           ;MPU6050_DMP.c: 278:     data->gyro.z = (raw_gz / 65.5f) - gyro_offset.z;
 15478   0122D0  0E00               	movlw	0
 15479   0122D2  6E57               	movwf	___fldiv@a^(0+1280),c
 15480   0122D4  0E00               	movlw	0
 15481   0122D6  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15482   0122D8  0E83               	movlw	131
 15483   0122DA  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15484   0122DC  0E42               	movlw	66
 15485   0122DE  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15486   0122E0  C5F4  F501         	movff	MPU6050_ReadAll@raw_gz,___xxtofl@val
 15487   0122E4  C5F5  F502         	movff	MPU6050_ReadAll@raw_gz+1,___xxtofl@val+1
 15488   0122E8  0E00               	movlw	0
 15489   0122EA  BE02               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
 15490   0122EC  0EFF               	movlw	-1
 15491   0122EE  6E03               	movwf	(___xxtofl@val+2)^(0+1280),c
 15492   0122F0  6E04               	movwf	(___xxtofl@val+3)^(0+1280),c
 15493   0122F2  0E01               	movlw	1
 15494   0122F4  ECE4  F0AC         	call	___xxtofl
 15495   0122F8  C501  F553         	movff	?___xxtofl,___fldiv@b
 15496   0122FC  C502  F554         	movff	?___xxtofl+1,___fldiv@b+1
 15497   012300  C503  F555         	movff	?___xxtofl+2,___fldiv@b+2
 15498   012304  C504  F556         	movff	?___xxtofl+3,___fldiv@b+3
 15499   012308  EC9E  F0A5         	call	___fldiv	;wreg free
 15500   01230C  C553  F56D         	movff	?___fldiv,___flsub@b
 15501   012310  C554  F56E         	movff	?___fldiv+1,___flsub@b+1
 15502   012314  C555  F56F         	movff	?___fldiv+2,___flsub@b+2
 15503   012318  C556  F570         	movff	?___fldiv+3,___flsub@b+3
 15504   01231C  C6E1  F571         	movff	_gyro_offset+8,___flsub@a
 15505   012320  C6E2  F572         	movff	_gyro_offset+9,___flsub@a+1
 15506   012324  C6E3  F573         	movff	_gyro_offset+10,___flsub@a+2
 15507   012328  C6E4  F574         	movff	_gyro_offset+11,___flsub@a+3
 15508   01232C  ECED  F0B6         	call	___flsub	;wreg free
 15509   012330  0105               	movlb	5	; () banked
 15510   012332  EE20 F014          	lfsr	2,20
 15511   012336  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15512   012338  26D9               	addwf	fsr2l,f,c
 15513   01233A  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15514   01233C  22DA               	addwfc	fsr2h,f,c
 15515   01233E  C56D  F4DE         	movff	?___flsub,postinc2
 15516   012342  C56E  F4DE         	movff	?___flsub+1,postinc2
 15517   012346  C56F  F4DE         	movff	?___flsub+2,postinc2
 15518   01234A  C570  F4DE         	movff	?___flsub+3,postinc2
 15519   01234E                     
 15520                           ; BSR set to: 5
 15521                           ;MPU6050_DMP.c: 281:     data->angles.roll = ((atan2f(data->accel.y,sqrtf(data->accel.x 
      +                          * data->accel.x + data->accel.z * data->accel.z))) * 180.0f / 3.14159265358979323846);
 15522   01234E  EE20 F008          	lfsr	2,8
 15523   012352  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15524   012354  26D9               	addwf	fsr2l,f,c
 15525   012356  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15526   012358  22DA               	addwfc	fsr2h,f,c
 15527   01235A  C4DE F509          	movff	postinc2,___flmul@a
 15528   01235E  C4DE F50A          	movff	postinc2,___flmul@a+1
 15529   012362  C4DE F50B          	movff	postinc2,___flmul@a+2
 15530   012366  C4DE F50C          	movff	postinc2,___flmul@a+3
 15531   01236A  EE20 F008          	lfsr	2,8
 15532   01236E  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15533   012370  26D9               	addwf	fsr2l,f,c
 15534   012372  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15535   012374  22DA               	addwfc	fsr2h,f,c
 15536   012376  C4DE F505          	movff	postinc2,___flmul@b
 15537   01237A  C4DE F506          	movff	postinc2,___flmul@b+1
 15538   01237E  C4DE F507          	movff	postinc2,___flmul@b+2
 15539   012382  C4DE F508          	movff	postinc2,___flmul@b+3
 15540   012386  ECB7  F09F         	call	___flmul	;wreg free
 15541   01238A  C505  F522         	movff	?___flmul,___fladd@a
 15542   01238E  C506  F523         	movff	?___flmul+1,___fladd@a+1
 15543   012392  C507  F524         	movff	?___flmul+2,___fladd@a+2
 15544   012396  C508  F525         	movff	?___flmul+3,___fladd@a+3
 15545   01239A  C5CC  F4D9         	movff	MPU6050_ReadAll@data,fsr2l
 15546   01239E  C5CD  F4DA         	movff	MPU6050_ReadAll@data+1,fsr2h
 15547   0123A2  C4DE F509          	movff	postinc2,___flmul@a
 15548   0123A6  C4DE F50A          	movff	postinc2,___flmul@a+1
 15549   0123AA  C4DE F50B          	movff	postinc2,___flmul@a+2
 15550   0123AE  C4DE F50C          	movff	postinc2,___flmul@a+3
 15551   0123B2  C5CC  F4D9         	movff	MPU6050_ReadAll@data,fsr2l
 15552   0123B6  C5CD  F4DA         	movff	MPU6050_ReadAll@data+1,fsr2h
 15553   0123BA  C4DE F505          	movff	postinc2,___flmul@b
 15554   0123BE  C4DE F506          	movff	postinc2,___flmul@b+1
 15555   0123C2  C4DE F507          	movff	postinc2,___flmul@b+2
 15556   0123C6  C4DE F508          	movff	postinc2,___flmul@b+3
 15557   0123CA  ECB7  F09F         	call	___flmul	;wreg free
 15558   0123CE  C505  F51E         	movff	?___flmul,___fladd@b
 15559   0123D2  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 15560   0123D6  C507  F520         	movff	?___flmul+2,___fladd@b+2
 15561   0123DA  C508  F521         	movff	?___flmul+3,___fladd@b+3
 15562   0123DE  EC1B  F09B         	call	___fladd	;wreg free
 15563   0123E2  C51E  F52E         	movff	?___fladd,sqrtf@x
 15564   0123E6  C51F  F52F         	movff	?___fladd+1,sqrtf@x+1
 15565   0123EA  C520  F530         	movff	?___fladd+2,sqrtf@x+2
 15566   0123EE  C521  F531         	movff	?___fladd+3,sqrtf@x+3
 15567   0123F2  ECCA  F0A1         	call	_sqrtf	;wreg free
 15568   0123F6  C52E  F5F6         	movff	?_sqrtf,_MPU6050_ReadAll$3482
 15569   0123FA  C52F  F5F7         	movff	?_sqrtf+1,_MPU6050_ReadAll$3482+1
 15570   0123FE  C530  F5F8         	movff	?_sqrtf+2,_MPU6050_ReadAll$3482+2
 15571   012402  C531  F5F9         	movff	?_sqrtf+3,_MPU6050_ReadAll$3482+3
 15572   012406                     
 15573                           ;MPU6050_DMP.c: 281:     data->angles.roll = ((atan2f(data->accel.y,sqrtf(data->accel.x 
      +                          * data->accel.x + data->accel.z * data->accel.z))) * 180.0f / 3.14159265358979323846);
 15574   012406  C5F6  F5A7         	movff	_MPU6050_ReadAll$3482,atan2f@x
 15575   01240A  C5F7  F5A8         	movff	_MPU6050_ReadAll$3482+1,atan2f@x+1
 15576   01240E  C5F8  F5A9         	movff	_MPU6050_ReadAll$3482+2,atan2f@x+2
 15577   012412  C5F9  F5AA         	movff	_MPU6050_ReadAll$3482+3,atan2f@x+3
 15578   012416  0105               	movlb	5	; () banked
 15579   012418  EE20 F004          	lfsr	2,4
 15580   01241C  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15581   01241E  26D9               	addwf	fsr2l,f,c
 15582   012420  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15583   012422  22DA               	addwfc	fsr2h,f,c
 15584   012424  C4DE F5A3          	movff	postinc2,atan2f@y
 15585   012428  C4DE F5A4          	movff	postinc2,atan2f@y+1
 15586   01242C  C4DE F5A5          	movff	postinc2,atan2f@y+2
 15587   012430  C4DE F5A6          	movff	postinc2,atan2f@y+3
 15588   012434  EC40  F093         	call	_atan2f	;wreg free
 15589   012438  C5A3  F5CE         	movff	?_atan2f,_MPU6050_ReadAll$3483
 15590   01243C  C5A4  F5CF         	movff	?_atan2f+1,_MPU6050_ReadAll$3483+1
 15591   012440  C5A5  F5D0         	movff	?_atan2f+2,_MPU6050_ReadAll$3483+2
 15592   012444  C5A6  F5D1         	movff	?_atan2f+3,_MPU6050_ReadAll$3483+3
 15593   012448                     
 15594                           ;MPU6050_DMP.c: 281:     data->angles.roll = ((atan2f(data->accel.y,sqrtf(data->accel.x 
      +                          * data->accel.x + data->accel.z * data->accel.z))) * 180.0f / 3.14159265358979323846);
 15595   012448  0E00               	movlw	0
 15596   01244A  6E09               	movwf	___flmul@a^(0+1280),c
 15597   01244C  0E00               	movlw	0
 15598   01244E  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 15599   012450  0E34               	movlw	52
 15600   012452  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 15601   012454  0E43               	movlw	67
 15602   012456  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 15603   012458  C5CE  F505         	movff	_MPU6050_ReadAll$3483,___flmul@b
 15604   01245C  C5CF  F506         	movff	_MPU6050_ReadAll$3483+1,___flmul@b+1
 15605   012460  C5D0  F507         	movff	_MPU6050_ReadAll$3483+2,___flmul@b+2
 15606   012464  C5D1  F508         	movff	_MPU6050_ReadAll$3483+3,___flmul@b+3
 15607   012468  ECB7  F09F         	call	___flmul	;wreg free
 15608   01246C  C505  F553         	movff	?___flmul,___fldiv@b
 15609   012470  C506  F554         	movff	?___flmul+1,___fldiv@b+1
 15610   012474  C507  F555         	movff	?___flmul+2,___fldiv@b+2
 15611   012478  C508  F556         	movff	?___flmul+3,___fldiv@b+3
 15612   01247C  0EDB               	movlw	219
 15613   01247E  6E57               	movwf	___fldiv@a^(0+1280),c
 15614   012480  0E0F               	movlw	15
 15615   012482  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15616   012484  0E49               	movlw	73
 15617   012486  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15618   012488  0E40               	movlw	64
 15619   01248A  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15620   01248C  EC9E  F0A5         	call	___fldiv	;wreg free
 15621   012490  0105               	movlb	5	; () banked
 15622   012492  EE20 F020          	lfsr	2,32
 15623   012496  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15624   012498  26D9               	addwf	fsr2l,f,c
 15625   01249A  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15626   01249C  22DA               	addwfc	fsr2h,f,c
 15627   01249E  C553  F4DE         	movff	?___fldiv,postinc2
 15628   0124A2  C554  F4DE         	movff	?___fldiv+1,postinc2
 15629   0124A6  C555  F4DE         	movff	?___fldiv+2,postinc2
 15630   0124AA  C556  F4DE         	movff	?___fldiv+3,postinc2
 15631   0124AE                     
 15632                           ; BSR set to: 5
 15633                           ;MPU6050_DMP.c: 285:     data->angles.pitch = ((atan2f(-data->accel.x,sqrtf(data->accel.
      +                          y * data->accel.y + data->accel.z * data->accel.z))) * 180.0f / 3.14159265358979323846);
 15634   0124AE  EE20 F008          	lfsr	2,8
 15635   0124B2  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15636   0124B4  26D9               	addwf	fsr2l,f,c
 15637   0124B6  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15638   0124B8  22DA               	addwfc	fsr2h,f,c
 15639   0124BA  C4DE F509          	movff	postinc2,___flmul@a
 15640   0124BE  C4DE F50A          	movff	postinc2,___flmul@a+1
 15641   0124C2  C4DE F50B          	movff	postinc2,___flmul@a+2
 15642   0124C6  C4DE F50C          	movff	postinc2,___flmul@a+3
 15643   0124CA  EE20 F008          	lfsr	2,8
 15644   0124CE  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15645   0124D0  26D9               	addwf	fsr2l,f,c
 15646   0124D2  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15647   0124D4  22DA               	addwfc	fsr2h,f,c
 15648   0124D6  C4DE F505          	movff	postinc2,___flmul@b
 15649   0124DA  C4DE F506          	movff	postinc2,___flmul@b+1
 15650   0124DE  C4DE F507          	movff	postinc2,___flmul@b+2
 15651   0124E2  C4DE F508          	movff	postinc2,___flmul@b+3
 15652   0124E6  ECB7  F09F         	call	___flmul	;wreg free
 15653   0124EA  C505  F522         	movff	?___flmul,___fladd@a
 15654   0124EE  C506  F523         	movff	?___flmul+1,___fladd@a+1
 15655   0124F2  C507  F524         	movff	?___flmul+2,___fladd@a+2
 15656   0124F6  C508  F525         	movff	?___flmul+3,___fladd@a+3
 15657   0124FA  0105               	movlb	5	; () banked
 15658   0124FC  EE20 F004          	lfsr	2,4
 15659   012500  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15660   012502  26D9               	addwf	fsr2l,f,c
 15661   012504  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15662   012506  22DA               	addwfc	fsr2h,f,c
 15663   012508  C4DE F509          	movff	postinc2,___flmul@a
 15664   01250C  C4DE F50A          	movff	postinc2,___flmul@a+1
 15665   012510  C4DE F50B          	movff	postinc2,___flmul@a+2
 15666   012514  C4DE F50C          	movff	postinc2,___flmul@a+3
 15667   012518  EE20 F004          	lfsr	2,4
 15668   01251C  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15669   01251E  26D9               	addwf	fsr2l,f,c
 15670   012520  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15671   012522  22DA               	addwfc	fsr2h,f,c
 15672   012524  C4DE F505          	movff	postinc2,___flmul@b
 15673   012528  C4DE F506          	movff	postinc2,___flmul@b+1
 15674   01252C  C4DE F507          	movff	postinc2,___flmul@b+2
 15675   012530  C4DE F508          	movff	postinc2,___flmul@b+3
 15676   012534  ECB7  F09F         	call	___flmul	;wreg free
 15677   012538  C505  F51E         	movff	?___flmul,___fladd@b
 15678   01253C  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 15679   012540  C507  F520         	movff	?___flmul+2,___fladd@b+2
 15680   012544  C508  F521         	movff	?___flmul+3,___fladd@b+3
 15681   012548  EC1B  F09B         	call	___fladd	;wreg free
 15682   01254C  C51E  F52E         	movff	?___fladd,sqrtf@x
 15683   012550  C51F  F52F         	movff	?___fladd+1,sqrtf@x+1
 15684   012554  C520  F530         	movff	?___fladd+2,sqrtf@x+2
 15685   012558  C521  F531         	movff	?___fladd+3,sqrtf@x+3
 15686   01255C  ECCA  F0A1         	call	_sqrtf	;wreg free
 15687   012560  C52E  F5F6         	movff	?_sqrtf,_MPU6050_ReadAll$3482
 15688   012564  C52F  F5F7         	movff	?_sqrtf+1,_MPU6050_ReadAll$3482+1
 15689   012568  C530  F5F8         	movff	?_sqrtf+2,_MPU6050_ReadAll$3482+2
 15690   01256C  C531  F5F9         	movff	?_sqrtf+3,_MPU6050_ReadAll$3482+3
 15691   012570                     
 15692                           ;MPU6050_DMP.c: 285:     data->angles.pitch = ((atan2f(-data->accel.x,sqrtf(data->accel.
      +                          y * data->accel.y + data->accel.z * data->accel.z))) * 180.0f / 3.14159265358979323846);
 15693   012570  C5CC  F4D9         	movff	MPU6050_ReadAll@data,fsr2l
 15694   012574  C5CD  F4DA         	movff	MPU6050_ReadAll@data+1,fsr2h
 15695   012578  C4DE F501          	movff	postinc2,___flneg@f1
 15696   01257C  C4DE F502          	movff	postinc2,___flneg@f1+1
 15697   012580  C4DE F503          	movff	postinc2,___flneg@f1+2
 15698   012584  C4DE F504          	movff	postinc2,___flneg@f1+3
 15699   012588  EC6F  F0B7         	call	___flneg	;wreg free
 15700   01258C  C501  F5D2         	movff	?___flneg,_MPU6050_ReadAll$3484
 15701   012590  C502  F5D3         	movff	?___flneg+1,_MPU6050_ReadAll$3484+1
 15702   012594  C503  F5D4         	movff	?___flneg+2,_MPU6050_ReadAll$3484+2
 15703   012598  C504  F5D5         	movff	?___flneg+3,_MPU6050_ReadAll$3484+3
 15704   01259C                     
 15705                           ;MPU6050_DMP.c: 285:     data->angles.pitch = ((atan2f(-data->accel.x,sqrtf(data->accel.
      +                          y * data->accel.y + data->accel.z * data->accel.z))) * 180.0f / 3.14159265358979323846);
 15706   01259C  C5F6  F5A7         	movff	_MPU6050_ReadAll$3482,atan2f@x
 15707   0125A0  C5F7  F5A8         	movff	_MPU6050_ReadAll$3482+1,atan2f@x+1
 15708   0125A4  C5F8  F5A9         	movff	_MPU6050_ReadAll$3482+2,atan2f@x+2
 15709   0125A8  C5F9  F5AA         	movff	_MPU6050_ReadAll$3482+3,atan2f@x+3
 15710   0125AC  C5D2  F5A3         	movff	_MPU6050_ReadAll$3484,atan2f@y
 15711   0125B0  C5D3  F5A4         	movff	_MPU6050_ReadAll$3484+1,atan2f@y+1
 15712   0125B4  C5D4  F5A5         	movff	_MPU6050_ReadAll$3484+2,atan2f@y+2
 15713   0125B8  C5D5  F5A6         	movff	_MPU6050_ReadAll$3484+3,atan2f@y+3
 15714   0125BC  EC40  F093         	call	_atan2f	;wreg free
 15715   0125C0  C5A3  F5D6         	movff	?_atan2f,_MPU6050_ReadAll$3485
 15716   0125C4  C5A4  F5D7         	movff	?_atan2f+1,_MPU6050_ReadAll$3485+1
 15717   0125C8  C5A5  F5D8         	movff	?_atan2f+2,_MPU6050_ReadAll$3485+2
 15718   0125CC  C5A6  F5D9         	movff	?_atan2f+3,_MPU6050_ReadAll$3485+3
 15719                           
 15720                           ;MPU6050_DMP.c: 285:     data->angles.pitch = ((atan2f(-data->accel.x,sqrtf(data->accel.
      +                          y * data->accel.y + data->accel.z * data->accel.z))) * 180.0f / 3.14159265358979323846);
 15721   0125D0  0E00               	movlw	0
 15722   0125D2  6E09               	movwf	___flmul@a^(0+1280),c
 15723   0125D4  0E00               	movlw	0
 15724   0125D6  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 15725   0125D8  0E34               	movlw	52
 15726   0125DA  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 15727   0125DC  0E43               	movlw	67
 15728   0125DE  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 15729   0125E0  C5D6  F505         	movff	_MPU6050_ReadAll$3485,___flmul@b
 15730   0125E4  C5D7  F506         	movff	_MPU6050_ReadAll$3485+1,___flmul@b+1
 15731   0125E8  C5D8  F507         	movff	_MPU6050_ReadAll$3485+2,___flmul@b+2
 15732   0125EC  C5D9  F508         	movff	_MPU6050_ReadAll$3485+3,___flmul@b+3
 15733   0125F0  ECB7  F09F         	call	___flmul	;wreg free
 15734   0125F4  C505  F553         	movff	?___flmul,___fldiv@b
 15735   0125F8  C506  F554         	movff	?___flmul+1,___fldiv@b+1
 15736   0125FC  C507  F555         	movff	?___flmul+2,___fldiv@b+2
 15737   012600  C508  F556         	movff	?___flmul+3,___fldiv@b+3
 15738   012604  0EDB               	movlw	219
 15739   012606  6E57               	movwf	___fldiv@a^(0+1280),c
 15740   012608  0E0F               	movlw	15
 15741   01260A  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 15742   01260C  0E49               	movlw	73
 15743   01260E  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 15744   012610  0E40               	movlw	64
 15745   012612  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 15746   012614  EC9E  F0A5         	call	___fldiv	;wreg free
 15747   012618  0105               	movlb	5	; () banked
 15748   01261A  EE20 F01C          	lfsr	2,28
 15749   01261E  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15750   012620  26D9               	addwf	fsr2l,f,c
 15751   012622  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15752   012624  22DA               	addwfc	fsr2h,f,c
 15753   012626  C553  F4DE         	movff	?___fldiv,postinc2
 15754   01262A  C554  F4DE         	movff	?___fldiv+1,postinc2
 15755   01262E  C555  F4DE         	movff	?___fldiv+2,postinc2
 15756   012632  C556  F4DE         	movff	?___fldiv+3,postinc2
 15757   012636                     
 15758                           ; BSR set to: 5
 15759                           ;MPU6050_DMP.c: 289:     data->angles.yaw = 0.0f;
 15760   012636  EE20 F018          	lfsr	2,24
 15761   01263A  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15762   01263C  26D9               	addwf	fsr2l,f,c
 15763   01263E  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15764   012640  22DA               	addwfc	fsr2h,f,c
 15765   012642  0E00               	movlw	0
 15766   012644  6EDE               	movwf	postinc2,c
 15767   012646  0E00               	movlw	0
 15768   012648  6EDE               	movwf	postinc2,c
 15769   01264A  0E00               	movlw	0
 15770   01264C  6EDE               	movwf	postinc2,c
 15771   01264E  0E00               	movlw	0
 15772   012650  6EDD               	movwf	postdec2,c
 15773   012652                     
 15774                           ; BSR set to: 5
 15775                           ;MPU6050_DMP.c: 292:     data->timestamp = GetTimestamp_ms();
 15776   012652  ECA5  F0B8         	call	_GetTimestamp_ms	;wreg free
 15777   012656  0105               	movlb	5	; () banked
 15778   012658  EE20 F028          	lfsr	2,40
 15779   01265C  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15780   01265E  26D9               	addwf	fsr2l,f,c
 15781   012660  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15782   012662  22DA               	addwfc	fsr2h,f,c
 15783   012664  C501  F4DE         	movff	?_GetTimestamp_ms,postinc2
 15784   012668  C502  F4DD         	movff	?_GetTimestamp_ms+1,postdec2
 15785   01266C                     
 15786                           ; BSR set to: 5
 15787                           ;MPU6050_DMP.c: 293:     data->data_ready = 1;
 15788   01266C  EE20 F02A          	lfsr	2,42
 15789   012670  51CC               	movf	MPU6050_ReadAll@data& (0+255),w,b
 15790   012672  26D9               	addwf	fsr2l,f,c
 15791   012674  51CD               	movf	(MPU6050_ReadAll@data+1)& (0+255),w,b
 15792   012676  22DA               	addwfc	fsr2h,f,c
 15793   012678  0E01               	movlw	1
 15794   01267A  6EDF               	movwf	indf2,c
 15795   01267C                     
 15796                           ; BSR set to: 5
 15797                           ;MPU6050_DMP.c: 295:     return 1;
 15798   01267C  0E01               	movlw	1
 15799   01267E                     l614:
 15800   01267E  0012               	return		;funcret
 15801   012680                     __end_of_MPU6050_ReadAll:
 15802                           	callstack 0
 15803                           
 15804 ;; *************** function _sqrtf *****************
 15805 ;; Defined at:
 15806 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sqrtf.c"
 15807 ;; Parameters:    Size  Location     Type
 15808 ;;  x               4   45[COMRAM] float 
 15809 ;; Auto vars:     Size  Location     Type
 15810 ;;  ix              4   78[COMRAM] struct .
 15811 ;;  r               4   74[COMRAM] unsigned long 
 15812 ;;  m               4   70[COMRAM] long 
 15813 ;;  t               4   66[COMRAM] long 
 15814 ;;  q               4   62[COMRAM] long 
 15815 ;;  i               4   58[COMRAM] long 
 15816 ;;  s               4   54[COMRAM] long 
 15817 ;;  z               4    0        float 
 15818 ;; Return value:  Size  Location     Type
 15819 ;;                  4   45[COMRAM] float 
 15820 ;; Registers used:
 15821 ;;		wreg, status,2, status,0
 15822 ;; Tracked objects:
 15823 ;;		On entry : 0/0
 15824 ;;		On exit  : 0/0
 15825 ;;		Unchanged: 0/0
 15826 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 15827 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15828 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15829 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15830 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15831 ;;Total ram usage:       37 bytes
 15832 ;; Hardware stack levels used: 1
 15833 ;; This function calls:
 15834 ;;		Nothing
 15835 ;; This function is called by:
 15836 ;;		_MPU6050_DMP_GetData
 15837 ;;		_MPU6050_ReadAll
 15838 ;; This function uses a non-reentrant model
 15839 ;;
 15840                           
 15841                           	psect	text35
 15842   014394                     __ptext35:
 15843                           	callstack 0
 15844   014394                     _sqrtf:
 15845                           	callstack 125
 15846   014394  C52E  F54F         	movff	sqrtf@x,sqrtf@ix
 15847   014398  C52F  F550         	movff	sqrtf@x+1,sqrtf@ix+1
 15848   01439C  C530  F551         	movff	sqrtf@x+2,sqrtf@ix+2
 15849   0143A0  C531  F552         	movff	sqrtf@x+3,sqrtf@ix+3
 15850   0143A4  0E00               	movlw	0
 15851   0143A6  144F               	andwf	sqrtf@ix^(0+1280),w,c
 15852   0143A8  6E32               	movwf	??_sqrtf^(0+1280),c
 15853   0143AA  0E00               	movlw	0
 15854   0143AC  1450               	andwf	(sqrtf@ix+1)^(0+1280),w,c
 15855   0143AE  6E33               	movwf	(??_sqrtf+1)^(0+1280),c
 15856   0143B0  0E80               	movlw	128
 15857   0143B2  1451               	andwf	(sqrtf@ix+2)^(0+1280),w,c
 15858   0143B4  6E34               	movwf	(??_sqrtf+2)^(0+1280),c
 15859   0143B6  0E7F               	movlw	127
 15860   0143B8  1452               	andwf	(sqrtf@ix+3)^(0+1280),w,c
 15861   0143BA  6E35               	movwf	(??_sqrtf+3)^(0+1280),c
 15862   0143BC  0E80               	movlw	128
 15863   0143BE  1834               	xorwf	(??_sqrtf+2)^(0+1280),w,c
 15864   0143C0  E109               	bnz	u7071
 15865   0143C2  0E7F               	movlw	127
 15866   0143C4  1835               	xorwf	(??_sqrtf+3)^(0+1280),w,c
 15867   0143C6  1032               	iorwf	??_sqrtf^(0+1280),w,c
 15868   0143C8  1033               	iorwf	(??_sqrtf+1)^(0+1280),w,c
 15869   0143CA  A4D8               	btfss	status,2,c
 15870   0143CC  EFEA  F0A1         	goto	u7071
 15871   0143D0  EFEC  F0A1         	goto	u7070
 15872   0143D4                     u7071:
 15873   0143D4  EF1C  F0A2         	goto	l9083
 15874   0143D8                     u7070:
 15875   0143D8  0EFF               	movlw	255
 15876   0143DA  144F               	andwf	sqrtf@ix^(0+1280),w,c
 15877   0143DC  6E32               	movwf	??_sqrtf^(0+1280),c
 15878   0143DE  0EFF               	movlw	255
 15879   0143E0  1450               	andwf	(sqrtf@ix+1)^(0+1280),w,c
 15880   0143E2  6E33               	movwf	(??_sqrtf+1)^(0+1280),c
 15881   0143E4  0E7F               	movlw	127
 15882   0143E6  1451               	andwf	(sqrtf@ix+2)^(0+1280),w,c
 15883   0143E8  6E34               	movwf	(??_sqrtf+2)^(0+1280),c
 15884   0143EA  0E00               	movlw	0
 15885   0143EC  1452               	andwf	(sqrtf@ix+3)^(0+1280),w,c
 15886   0143EE  6E35               	movwf	(??_sqrtf+3)^(0+1280),c
 15887   0143F0  5032               	movf	??_sqrtf^(0+1280),w,c
 15888   0143F2  1033               	iorwf	(??_sqrtf+1)^(0+1280),w,c
 15889   0143F4  1034               	iorwf	(??_sqrtf+2)^(0+1280),w,c
 15890   0143F6  1035               	iorwf	(??_sqrtf+3)^(0+1280),w,c
 15891   0143F8  A4D8               	btfss	status,2,c
 15892   0143FA  EF01  F0A2         	goto	u7081
 15893   0143FE  EF03  F0A2         	goto	u7080
 15894   014402                     u7081:
 15895   014402  EF0A  F0A2         	goto	l9077
 15896   014406                     u7080:
 15897   014406  BE52               	btfsc	(sqrtf@ix+3)^(0+1280),7,c
 15898   014408  EF0A  F0A2         	goto	u7090
 15899   01440C  EF08  F0A2         	goto	u7091
 15900   014410                     u7091:
 15901   014410  EF12  F0A2         	goto	l9079
 15902   014414                     u7090:
 15903   014414                     l9077:
 15904   014414  0EFF               	movlw	255
 15905   014416  124F               	iorwf	sqrtf@ix^(0+1280),f,c
 15906   014418  0EFF               	movlw	255
 15907   01441A  1250               	iorwf	(sqrtf@ix+1)^(0+1280),f,c
 15908   01441C  0E7F               	movlw	127
 15909   01441E  1251               	iorwf	(sqrtf@ix+2)^(0+1280),f,c
 15910   014420  0E00               	movlw	0
 15911   014422  1252               	iorwf	(sqrtf@ix+3)^(0+1280),f,c
 15912   014424                     l9079:
 15913   014424  C54F  F52E         	movff	sqrtf@ix,?_sqrtf
 15914   014428  C550  F52F         	movff	sqrtf@ix+1,?_sqrtf+1
 15915   01442C  C551  F530         	movff	sqrtf@ix+2,?_sqrtf+2
 15916   014430  C552  F531         	movff	sqrtf@ix+3,?_sqrtf+3
 15917   014434  EFB8  F0A3         	goto	l2480
 15918   014438                     l9083:
 15919   014438  BE52               	btfsc	(sqrtf@ix+3)^(0+1280),7,c
 15920   01443A  EF2B  F0A2         	goto	u7100
 15921   01443E  5052               	movf	(sqrtf@ix+3)^(0+1280),w,c
 15922   014440  1051               	iorwf	(sqrtf@ix+2)^(0+1280),w,c
 15923   014442  1050               	iorwf	(sqrtf@ix+1)^(0+1280),w,c
 15924   014444  E106               	bnz	u7101
 15925   014446  044F               	decf	sqrtf@ix^(0+1280),w,c
 15926   014448  B0D8               	btfsc	status,0,c
 15927   01444A  EF29  F0A2         	goto	u7101
 15928   01444E  EF2B  F0A2         	goto	u7100
 15929   014452                     u7101:
 15930   014452  EF62  F0A2         	goto	l9099
 15931   014456                     u7100:
 15932   014456  0EFF               	movlw	255
 15933   014458  144F               	andwf	sqrtf@ix^(0+1280),w,c
 15934   01445A  6E32               	movwf	??_sqrtf^(0+1280),c
 15935   01445C  0EFF               	movlw	255
 15936   01445E  1450               	andwf	(sqrtf@ix+1)^(0+1280),w,c
 15937   014460  6E33               	movwf	(??_sqrtf+1)^(0+1280),c
 15938   014462  0EFF               	movlw	255
 15939   014464  1451               	andwf	(sqrtf@ix+2)^(0+1280),w,c
 15940   014466  6E34               	movwf	(??_sqrtf+2)^(0+1280),c
 15941   014468  0E7F               	movlw	127
 15942   01446A  1452               	andwf	(sqrtf@ix+3)^(0+1280),w,c
 15943   01446C  6E35               	movwf	(??_sqrtf+3)^(0+1280),c
 15944   01446E  5032               	movf	??_sqrtf^(0+1280),w,c
 15945   014470  1033               	iorwf	(??_sqrtf+1)^(0+1280),w,c
 15946   014472  1034               	iorwf	(??_sqrtf+2)^(0+1280),w,c
 15947   014474  1035               	iorwf	(??_sqrtf+3)^(0+1280),w,c
 15948   014476  A4D8               	btfss	status,2,c
 15949   014478  EF40  F0A2         	goto	u7111
 15950   01447C  EF42  F0A2         	goto	u7110
 15951   014480                     u7111:
 15952   014480  EF4C  F0A2         	goto	l9091
 15953   014484                     u7110:
 15954   014484  0E00               	movlw	0
 15955   014486  6E2E               	movwf	?_sqrtf^(0+1280),c
 15956   014488  0E00               	movlw	0
 15957   01448A  6E2F               	movwf	(?_sqrtf+1)^(0+1280),c
 15958   01448C  0E00               	movlw	0
 15959   01448E  6E30               	movwf	(?_sqrtf+2)^(0+1280),c
 15960   014490  0E00               	movlw	0
 15961   014492  6E31               	movwf	(?_sqrtf+3)^(0+1280),c
 15962   014494  EFB8  F0A3         	goto	l2480
 15963   014498                     l9091:
 15964   014498  BE52               	btfsc	(sqrtf@ix+3)^(0+1280),7,c
 15965   01449A  EF53  F0A2         	goto	u7120
 15966   01449E  EF51  F0A2         	goto	u7121
 15967   0144A2                     u7121:
 15968   0144A2  EF62  F0A2         	goto	l9099
 15969   0144A6                     u7120:
 15970   0144A6  0E00               	movlw	0
 15971   0144A8  0107               	movlb	7	; () banked
 15972   0144AA  6F11               	movwf	(_errno+1)& (0+255),b
 15973   0144AC  0E21               	movlw	33
 15974   0144AE  6F10               	movwf	_errno& (0+255),b
 15975   0144B0  0EFF               	movlw	255
 15976   0144B2  6E4F               	movwf	sqrtf@ix^(0+1280),c
 15977   0144B4  0EFF               	movlw	255
 15978   0144B6  6E50               	movwf	(sqrtf@ix+1)^(0+1280),c
 15979   0144B8  0EFF               	movlw	255
 15980   0144BA  6E51               	movwf	(sqrtf@ix+2)^(0+1280),c
 15981   0144BC  0E7F               	movlw	127
 15982   0144BE  6E52               	movwf	(sqrtf@ix+3)^(0+1280),c
 15983   0144C0  EF12  F0A2         	goto	l9079
 15984   0144C4                     l9099:
 15985   0144C4  0E17               	movlw	23
 15986   0144C6  6E32               	movwf	??_sqrtf^(0+1280),c
 15987   0144C8  C54F  F533         	movff	sqrtf@ix,??_sqrtf+1
 15988   0144CC  C550  F534         	movff	sqrtf@ix+1,??_sqrtf+2
 15989   0144D0  C551  F535         	movff	sqrtf@ix+2,??_sqrtf+3
 15990   0144D4  C552  F536         	movff	sqrtf@ix+3,??_sqrtf+4
 15991   0144D8                     u7135:
 15992   0144D8  6632               	tstfsz	??_sqrtf^(0+1280),c
 15993   0144DA  EF71  F0A2         	goto	u7136
 15994   0144DE  EF79  F0A2         	goto	u7137
 15995   0144E2                     u7136:
 15996   0144E2  3436               	rlcf	(??_sqrtf+4)^(0+1280),w,c
 15997   0144E4  3236               	rrcf	(??_sqrtf+4)^(0+1280),f,c
 15998   0144E6  3235               	rrcf	(??_sqrtf+3)^(0+1280),f,c
 15999   0144E8  3234               	rrcf	(??_sqrtf+2)^(0+1280),f,c
 16000   0144EA  3233               	rrcf	(??_sqrtf+1)^(0+1280),f,c
 16001   0144EC  2E32               	decfsz	??_sqrtf^(0+1280),f,c
 16002   0144EE  EF6C  F0A2         	goto	u7135
 16003   0144F2                     u7137:
 16004   0144F2  C533  F547         	movff	??_sqrtf+1,sqrtf@m
 16005   0144F6  C534  F548         	movff	??_sqrtf+2,sqrtf@m+1
 16006   0144FA  C535  F549         	movff	??_sqrtf+3,sqrtf@m+2
 16007   0144FE  C536  F54A         	movff	??_sqrtf+4,sqrtf@m+3
 16008   014502  5047               	movf	sqrtf@m^(0+1280),w,c
 16009   014504  1048               	iorwf	(sqrtf@m+1)^(0+1280),w,c
 16010   014506  1049               	iorwf	(sqrtf@m+2)^(0+1280),w,c
 16011   014508  104A               	iorwf	(sqrtf@m+3)^(0+1280),w,c
 16012   01450A  A4D8               	btfss	status,2,c
 16013   01450C  EF8A  F0A2         	goto	u7141
 16014   014510  EF8C  F0A2         	goto	u7140
 16015   014514                     u7141:
 16016   014514  EFBC  F0A2         	goto	l2484
 16017   014518                     u7140:
 16018   014518  0E00               	movlw	0
 16019   01451A  6E3B               	movwf	sqrtf@i^(0+1280),c
 16020   01451C  0E00               	movlw	0
 16021   01451E  6E3C               	movwf	(sqrtf@i+1)^(0+1280),c
 16022   014520  0E00               	movlw	0
 16023   014522  6E3D               	movwf	(sqrtf@i+2)^(0+1280),c
 16024   014524  0E00               	movlw	0
 16025   014526  6E3E               	movwf	(sqrtf@i+3)^(0+1280),c
 16026   014528  EFA1  F0A2         	goto	l9107
 16027   01452C                     l9103:
 16028   01452C  90D8               	bcf	status,0,c
 16029   01452E  364F               	rlcf	sqrtf@ix^(0+1280),f,c
 16030   014530  3650               	rlcf	(sqrtf@ix+1)^(0+1280),f,c
 16031   014532  3651               	rlcf	(sqrtf@ix+2)^(0+1280),f,c
 16032   014534  3652               	rlcf	(sqrtf@ix+3)^(0+1280),f,c
 16033   014536  0E01               	movlw	1
 16034   014538  263B               	addwf	sqrtf@i^(0+1280),f,c
 16035   01453A  0E00               	movlw	0
 16036   01453C  223C               	addwfc	(sqrtf@i+1)^(0+1280),f,c
 16037   01453E  223D               	addwfc	(sqrtf@i+2)^(0+1280),f,c
 16038   014540  223E               	addwfc	(sqrtf@i+3)^(0+1280),f,c
 16039   014542                     l9107:
 16040   014542  AE51               	btfss	(sqrtf@ix+2)^(0+1280),7,c
 16041   014544  EFA6  F0A2         	goto	u7151
 16042   014548  EFA8  F0A2         	goto	u7150
 16043   01454C                     u7151:
 16044   01454C  EF96  F0A2         	goto	l9103
 16045   014550                     u7150:
 16046   014550  0EFF               	movlw	255
 16047   014552  243B               	addwf	sqrtf@i^(0+1280),w,c
 16048   014554  6E32               	movwf	??_sqrtf^(0+1280),c
 16049   014556  0EFF               	movlw	255
 16050   014558  203C               	addwfc	(sqrtf@i+1)^(0+1280),w,c
 16051   01455A  6E33               	movwf	(??_sqrtf+1)^(0+1280),c
 16052   01455C  0EFF               	movlw	255
 16053   01455E  203D               	addwfc	(sqrtf@i+2)^(0+1280),w,c
 16054   014560  6E34               	movwf	(??_sqrtf+2)^(0+1280),c
 16055   014562  0EFF               	movlw	255
 16056   014564  203E               	addwfc	(sqrtf@i+3)^(0+1280),w,c
 16057   014566  6E35               	movwf	(??_sqrtf+3)^(0+1280),c
 16058   014568  5032               	movf	??_sqrtf^(0+1280),w,c
 16059   01456A  5E47               	subwf	sqrtf@m^(0+1280),f,c
 16060   01456C  5033               	movf	(??_sqrtf+1)^(0+1280),w,c
 16061   01456E  5A48               	subwfb	(sqrtf@m+1)^(0+1280),f,c
 16062   014570  5034               	movf	(??_sqrtf+2)^(0+1280),w,c
 16063   014572  5A49               	subwfb	(sqrtf@m+2)^(0+1280),f,c
 16064   014574  5035               	movf	(??_sqrtf+3)^(0+1280),w,c
 16065   014576  5A4A               	subwfb	(sqrtf@m+3)^(0+1280),f,c
 16066   014578                     l2484:
 16067   014578  0E81               	movlw	129
 16068   01457A  2647               	addwf	sqrtf@m^(0+1280),f,c
 16069   01457C  0EFF               	movlw	255
 16070   01457E  2248               	addwfc	(sqrtf@m+1)^(0+1280),f,c
 16071   014580  0EFF               	movlw	255
 16072   014582  2249               	addwfc	(sqrtf@m+2)^(0+1280),f,c
 16073   014584  0EFF               	movlw	255
 16074   014586  224A               	addwfc	(sqrtf@m+3)^(0+1280),f,c
 16075   014588  0EFF               	movlw	255
 16076   01458A  144F               	andwf	sqrtf@ix^(0+1280),w,c
 16077   01458C  6E32               	movwf	??_sqrtf^(0+1280),c
 16078   01458E  0EFF               	movlw	255
 16079   014590  1450               	andwf	(sqrtf@ix+1)^(0+1280),w,c
 16080   014592  6E33               	movwf	(??_sqrtf+1)^(0+1280),c
 16081   014594  0E7F               	movlw	127
 16082   014596  1451               	andwf	(sqrtf@ix+2)^(0+1280),w,c
 16083   014598  6E34               	movwf	(??_sqrtf+2)^(0+1280),c
 16084   01459A  0E00               	movlw	0
 16085   01459C  1452               	andwf	(sqrtf@ix+3)^(0+1280),w,c
 16086   01459E  6E35               	movwf	(??_sqrtf+3)^(0+1280),c
 16087   0145A0  0E00               	movlw	0
 16088   0145A2  1032               	iorwf	??_sqrtf^(0+1280),w,c
 16089   0145A4  6E4F               	movwf	sqrtf@ix^(0+1280),c
 16090   0145A6  0E00               	movlw	0
 16091   0145A8  1033               	iorwf	(??_sqrtf+1)^(0+1280),w,c
 16092   0145AA  6E50               	movwf	(sqrtf@ix+1)^(0+1280),c
 16093   0145AC  0E80               	movlw	128
 16094   0145AE  1034               	iorwf	(??_sqrtf+2)^(0+1280),w,c
 16095   0145B0  6E51               	movwf	(sqrtf@ix+2)^(0+1280),c
 16096   0145B2  0E00               	movlw	0
 16097   0145B4  1035               	iorwf	(??_sqrtf+3)^(0+1280),w,c
 16098   0145B6  6E52               	movwf	(sqrtf@ix+3)^(0+1280),c
 16099   0145B8  A047               	btfss	sqrtf@m^(0+1280),0,c
 16100   0145BA  EFE1  F0A2         	goto	u7161
 16101   0145BE  EFE3  F0A2         	goto	u7160
 16102   0145C2                     u7161:
 16103   0145C2  EFEB  F0A2         	goto	l2488
 16104   0145C6                     u7160:
 16105   0145C6  504F               	movf	sqrtf@ix^(0+1280),w,c
 16106   0145C8  264F               	addwf	sqrtf@ix^(0+1280),f,c
 16107   0145CA  5050               	movf	(sqrtf@ix+1)^(0+1280),w,c
 16108   0145CC  2250               	addwfc	(sqrtf@ix+1)^(0+1280),f,c
 16109   0145CE  5051               	movf	(sqrtf@ix+2)^(0+1280),w,c
 16110   0145D0  2251               	addwfc	(sqrtf@ix+2)^(0+1280),f,c
 16111   0145D2  5052               	movf	(sqrtf@ix+3)^(0+1280),w,c
 16112   0145D4  2252               	addwfc	(sqrtf@ix+3)^(0+1280),f,c
 16113   0145D6                     l2488:
 16114   0145D6  344A               	rlcf	(sqrtf@m+3)^(0+1280),w,c
 16115   0145D8  324A               	rrcf	(sqrtf@m+3)^(0+1280),f,c
 16116   0145DA  3249               	rrcf	(sqrtf@m+2)^(0+1280),f,c
 16117   0145DC  3248               	rrcf	(sqrtf@m+1)^(0+1280),f,c
 16118   0145DE  3247               	rrcf	sqrtf@m^(0+1280),f,c
 16119   0145E0  504F               	movf	sqrtf@ix^(0+1280),w,c
 16120   0145E2  264F               	addwf	sqrtf@ix^(0+1280),f,c
 16121   0145E4  5050               	movf	(sqrtf@ix+1)^(0+1280),w,c
 16122   0145E6  2250               	addwfc	(sqrtf@ix+1)^(0+1280),f,c
 16123   0145E8  5051               	movf	(sqrtf@ix+2)^(0+1280),w,c
 16124   0145EA  2251               	addwfc	(sqrtf@ix+2)^(0+1280),f,c
 16125   0145EC  5052               	movf	(sqrtf@ix+3)^(0+1280),w,c
 16126   0145EE  2252               	addwfc	(sqrtf@ix+3)^(0+1280),f,c
 16127   0145F0  0E00               	movlw	0
 16128   0145F2  6E37               	movwf	sqrtf@s^(0+1280),c
 16129   0145F4  0E00               	movlw	0
 16130   0145F6  6E38               	movwf	(sqrtf@s+1)^(0+1280),c
 16131   0145F8  0E00               	movlw	0
 16132   0145FA  6E39               	movwf	(sqrtf@s+2)^(0+1280),c
 16133   0145FC  0E00               	movlw	0
 16134   0145FE  6E3A               	movwf	(sqrtf@s+3)^(0+1280),c
 16135   014600  C537  F53F         	movff	sqrtf@s,sqrtf@q
 16136   014604  C538  F540         	movff	sqrtf@s+1,sqrtf@q+1
 16137   014608  C539  F541         	movff	sqrtf@s+2,sqrtf@q+2
 16138   01460C  C53A  F542         	movff	sqrtf@s+3,sqrtf@q+3
 16139   014610  0E00               	movlw	0
 16140   014612  6E4B               	movwf	sqrtf@r^(0+1280),c
 16141   014614  0E00               	movlw	0
 16142   014616  6E4C               	movwf	(sqrtf@r+1)^(0+1280),c
 16143   014618  0E00               	movlw	0
 16144   01461A  6E4D               	movwf	(sqrtf@r+2)^(0+1280),c
 16145   01461C  0E01               	movlw	1
 16146   01461E  6E4E               	movwf	(sqrtf@r+3)^(0+1280),c
 16147   014620  EF5A  F0A3         	goto	l9125
 16148   014624                     l9119:
 16149   014624  5037               	movf	sqrtf@s^(0+1280),w,c
 16150   014626  244B               	addwf	sqrtf@r^(0+1280),w,c
 16151   014628  6E43               	movwf	sqrtf@t^(0+1280),c
 16152   01462A  5038               	movf	(sqrtf@s+1)^(0+1280),w,c
 16153   01462C  204C               	addwfc	(sqrtf@r+1)^(0+1280),w,c
 16154   01462E  6E44               	movwf	(sqrtf@t+1)^(0+1280),c
 16155   014630  5039               	movf	(sqrtf@s+2)^(0+1280),w,c
 16156   014632  204D               	addwfc	(sqrtf@r+2)^(0+1280),w,c
 16157   014634  6E45               	movwf	(sqrtf@t+2)^(0+1280),c
 16158   014636  503A               	movf	(sqrtf@s+3)^(0+1280),w,c
 16159   014638  204E               	addwfc	(sqrtf@r+3)^(0+1280),w,c
 16160   01463A  6E46               	movwf	(sqrtf@t+3)^(0+1280),c
 16161   01463C  5043               	movf	sqrtf@t^(0+1280),w,c
 16162   01463E  5C4F               	subwf	sqrtf@ix^(0+1280),w,c
 16163   014640  5044               	movf	(sqrtf@t+1)^(0+1280),w,c
 16164   014642  5850               	subwfb	(sqrtf@ix+1)^(0+1280),w,c
 16165   014644  5045               	movf	(sqrtf@t+2)^(0+1280),w,c
 16166   014646  5851               	subwfb	(sqrtf@ix+2)^(0+1280),w,c
 16167   014648  5052               	movf	(sqrtf@ix+3)^(0+1280),w,c
 16168   01464A  0A80               	xorlw	128
 16169   01464C  6E32               	movwf	??_sqrtf^(0+1280),c
 16170   01464E  5046               	movf	(sqrtf@t+3)^(0+1280),w,c
 16171   014650  0A80               	xorlw	128
 16172   014652  5832               	subwfb	??_sqrtf^(0+1280),w,c
 16173   014654  A0D8               	btfss	status,0,c
 16174   014656  EF2F  F0A3         	goto	u7171
 16175   01465A  EF31  F0A3         	goto	u7170
 16176   01465E                     u7171:
 16177   01465E  EF4D  F0A3         	goto	l2491
 16178   014662                     u7170:
 16179   014662  5043               	movf	sqrtf@t^(0+1280),w,c
 16180   014664  244B               	addwf	sqrtf@r^(0+1280),w,c
 16181   014666  6E37               	movwf	sqrtf@s^(0+1280),c
 16182   014668  5044               	movf	(sqrtf@t+1)^(0+1280),w,c
 16183   01466A  204C               	addwfc	(sqrtf@r+1)^(0+1280),w,c
 16184   01466C  6E38               	movwf	(sqrtf@s+1)^(0+1280),c
 16185   01466E  5045               	movf	(sqrtf@t+2)^(0+1280),w,c
 16186   014670  204D               	addwfc	(sqrtf@r+2)^(0+1280),w,c
 16187   014672  6E39               	movwf	(sqrtf@s+2)^(0+1280),c
 16188   014674  5046               	movf	(sqrtf@t+3)^(0+1280),w,c
 16189   014676  204E               	addwfc	(sqrtf@r+3)^(0+1280),w,c
 16190   014678  6E3A               	movwf	(sqrtf@s+3)^(0+1280),c
 16191   01467A  5043               	movf	sqrtf@t^(0+1280),w,c
 16192   01467C  5E4F               	subwf	sqrtf@ix^(0+1280),f,c
 16193   01467E  5044               	movf	(sqrtf@t+1)^(0+1280),w,c
 16194   014680  5A50               	subwfb	(sqrtf@ix+1)^(0+1280),f,c
 16195   014682  5045               	movf	(sqrtf@t+2)^(0+1280),w,c
 16196   014684  5A51               	subwfb	(sqrtf@ix+2)^(0+1280),f,c
 16197   014686  5046               	movf	(sqrtf@t+3)^(0+1280),w,c
 16198   014688  5A52               	subwfb	(sqrtf@ix+3)^(0+1280),f,c
 16199   01468A  504B               	movf	sqrtf@r^(0+1280),w,c
 16200   01468C  263F               	addwf	sqrtf@q^(0+1280),f,c
 16201   01468E  504C               	movf	(sqrtf@r+1)^(0+1280),w,c
 16202   014690  2240               	addwfc	(sqrtf@q+1)^(0+1280),f,c
 16203   014692  504D               	movf	(sqrtf@r+2)^(0+1280),w,c
 16204   014694  2241               	addwfc	(sqrtf@q+2)^(0+1280),f,c
 16205   014696  504E               	movf	(sqrtf@r+3)^(0+1280),w,c
 16206   014698  2242               	addwfc	(sqrtf@q+3)^(0+1280),f,c
 16207   01469A                     l2491:
 16208   01469A  504F               	movf	sqrtf@ix^(0+1280),w,c
 16209   01469C  264F               	addwf	sqrtf@ix^(0+1280),f,c
 16210   01469E  5050               	movf	(sqrtf@ix+1)^(0+1280),w,c
 16211   0146A0  2250               	addwfc	(sqrtf@ix+1)^(0+1280),f,c
 16212   0146A2  5051               	movf	(sqrtf@ix+2)^(0+1280),w,c
 16213   0146A4  2251               	addwfc	(sqrtf@ix+2)^(0+1280),f,c
 16214   0146A6  5052               	movf	(sqrtf@ix+3)^(0+1280),w,c
 16215   0146A8  2252               	addwfc	(sqrtf@ix+3)^(0+1280),f,c
 16216   0146AA  90D8               	bcf	status,0,c
 16217   0146AC  324E               	rrcf	(sqrtf@r+3)^(0+1280),f,c
 16218   0146AE  324D               	rrcf	(sqrtf@r+2)^(0+1280),f,c
 16219   0146B0  324C               	rrcf	(sqrtf@r+1)^(0+1280),f,c
 16220   0146B2  324B               	rrcf	sqrtf@r^(0+1280),f,c
 16221   0146B4                     l9125:
 16222   0146B4  504B               	movf	sqrtf@r^(0+1280),w,c
 16223   0146B6  104C               	iorwf	(sqrtf@r+1)^(0+1280),w,c
 16224   0146B8  104D               	iorwf	(sqrtf@r+2)^(0+1280),w,c
 16225   0146BA  104E               	iorwf	(sqrtf@r+3)^(0+1280),w,c
 16226   0146BC  A4D8               	btfss	status,2,c
 16227   0146BE  EF63  F0A3         	goto	u7181
 16228   0146C2  EF65  F0A3         	goto	u7180
 16229   0146C6                     u7181:
 16230   0146C6  EF12  F0A3         	goto	l9119
 16231   0146CA                     u7180:
 16232   0146CA  504F               	movf	sqrtf@ix^(0+1280),w,c
 16233   0146CC  1050               	iorwf	(sqrtf@ix+1)^(0+1280),w,c
 16234   0146CE  1051               	iorwf	(sqrtf@ix+2)^(0+1280),w,c
 16235   0146D0  1052               	iorwf	(sqrtf@ix+3)^(0+1280),w,c
 16236   0146D2  B4D8               	btfsc	status,2,c
 16237   0146D4  EF6E  F0A3         	goto	u7191
 16238   0146D8  EF70  F0A3         	goto	u7190
 16239   0146DC                     u7191:
 16240   0146DC  EF84  F0A3         	goto	l2493
 16241   0146E0                     u7190:
 16242   0146E0  0E01               	movlw	1
 16243   0146E2  143F               	andwf	sqrtf@q^(0+1280),w,c
 16244   0146E4  6E32               	movwf	??_sqrtf^(0+1280),c
 16245   0146E6  0E00               	movlw	0
 16246   0146E8  1440               	andwf	(sqrtf@q+1)^(0+1280),w,c
 16247   0146EA  6E33               	movwf	(??_sqrtf+1)^(0+1280),c
 16248   0146EC  0E00               	movlw	0
 16249   0146EE  1441               	andwf	(sqrtf@q+2)^(0+1280),w,c
 16250   0146F0  6E34               	movwf	(??_sqrtf+2)^(0+1280),c
 16251   0146F2  0E00               	movlw	0
 16252   0146F4  1442               	andwf	(sqrtf@q+3)^(0+1280),w,c
 16253   0146F6  6E35               	movwf	(??_sqrtf+3)^(0+1280),c
 16254   0146F8  5032               	movf	??_sqrtf^(0+1280),w,c
 16255   0146FA  263F               	addwf	sqrtf@q^(0+1280),f,c
 16256   0146FC  5033               	movf	(??_sqrtf+1)^(0+1280),w,c
 16257   0146FE  2240               	addwfc	(sqrtf@q+1)^(0+1280),f,c
 16258   014700  5034               	movf	(??_sqrtf+2)^(0+1280),w,c
 16259   014702  2241               	addwfc	(sqrtf@q+2)^(0+1280),f,c
 16260   014704  5035               	movf	(??_sqrtf+3)^(0+1280),w,c
 16261   014706  2242               	addwfc	(sqrtf@q+3)^(0+1280),f,c
 16262   014708                     l2493:
 16263   014708  C53F  F532         	movff	sqrtf@q,??_sqrtf
 16264   01470C  C540  F533         	movff	sqrtf@q+1,??_sqrtf+1
 16265   014710  C541  F534         	movff	sqrtf@q+2,??_sqrtf+2
 16266   014714  C542  F535         	movff	sqrtf@q+3,??_sqrtf+3
 16267   014718  3435               	rlcf	(??_sqrtf+3)^(0+1280),w,c
 16268   01471A  3235               	rrcf	(??_sqrtf+3)^(0+1280),f,c
 16269   01471C  3234               	rrcf	(??_sqrtf+2)^(0+1280),f,c
 16270   01471E  3233               	rrcf	(??_sqrtf+1)^(0+1280),f,c
 16271   014720  3232               	rrcf	??_sqrtf^(0+1280),f,c
 16272   014722  0E00               	movlw	0
 16273   014724  2432               	addwf	??_sqrtf^(0+1280),w,c
 16274   014726  6E4F               	movwf	sqrtf@ix^(0+1280),c
 16275   014728  0E00               	movlw	0
 16276   01472A  2033               	addwfc	(??_sqrtf+1)^(0+1280),w,c
 16277   01472C  6E50               	movwf	(sqrtf@ix+1)^(0+1280),c
 16278   01472E  0E00               	movlw	0
 16279   014730  2034               	addwfc	(??_sqrtf+2)^(0+1280),w,c
 16280   014732  6E51               	movwf	(sqrtf@ix+2)^(0+1280),c
 16281   014734  0E3F               	movlw	63
 16282   014736  2035               	addwfc	(??_sqrtf+3)^(0+1280),w,c
 16283   014738  6E52               	movwf	(sqrtf@ix+3)^(0+1280),c
 16284   01473A  C547  F532         	movff	sqrtf@m,??_sqrtf
 16285   01473E  C548  F533         	movff	sqrtf@m+1,??_sqrtf+1
 16286   014742  C549  F534         	movff	sqrtf@m+2,??_sqrtf+2
 16287   014746  C54A  F535         	movff	sqrtf@m+3,??_sqrtf+3
 16288   01474A  0E17               	movlw	23
 16289   01474C                     u7205:
 16290   01474C  90D8               	bcf	status,0,c
 16291   01474E  3632               	rlcf	??_sqrtf^(0+1280),f,c
 16292   014750  3633               	rlcf	(??_sqrtf+1)^(0+1280),f,c
 16293   014752  3634               	rlcf	(??_sqrtf+2)^(0+1280),f,c
 16294   014754  3635               	rlcf	(??_sqrtf+3)^(0+1280),f,c
 16295   014756  2EE8               	decfsz	wreg,f,c
 16296   014758  EFA6  F0A3         	goto	u7205
 16297   01475C  5032               	movf	??_sqrtf^(0+1280),w,c
 16298   01475E  264F               	addwf	sqrtf@ix^(0+1280),f,c
 16299   014760  5033               	movf	(??_sqrtf+1)^(0+1280),w,c
 16300   014762  2250               	addwfc	(sqrtf@ix+1)^(0+1280),f,c
 16301   014764  5034               	movf	(??_sqrtf+2)^(0+1280),w,c
 16302   014766  2251               	addwfc	(sqrtf@ix+2)^(0+1280),f,c
 16303   014768  5035               	movf	(??_sqrtf+3)^(0+1280),w,c
 16304   01476A  2252               	addwfc	(sqrtf@ix+3)^(0+1280),f,c
 16305   01476C  EF12  F0A2         	goto	l9079
 16306   014770                     l2480:
 16307   014770  0012               	return		;funcret
 16308   014772                     __end_of_sqrtf:
 16309                           	callstack 0
 16310                           
 16311 ;; *************** function _atan2f *****************
 16312 ;; Defined at:
 16313 ;;		line 22 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\atan2f.c"
 16314 ;; Parameters:    Size  Location     Type
 16315 ;;  y               4   67[BANK5 ] float 
 16316 ;;  x               4   71[BANK5 ] float 
 16317 ;; Auto vars:     Size  Location     Type
 16318 ;;  iy              4  103[BANK5 ] struct .
 16319 ;;  ix              4   99[BANK5 ] struct .
 16320 ;;  z               4   95[BANK5 ] float 
 16321 ;;  m               1  107[BANK5 ] unsigned char 
 16322 ;; Return value:  Size  Location     Type
 16323 ;;                  4   67[BANK5 ] float 
 16324 ;; Registers used:
 16325 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16326 ;; Tracked objects:
 16327 ;;		On entry : 0/0
 16328 ;;		On exit  : 0/0
 16329 ;;		Unchanged: 0/0
 16330 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 16331 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16332 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16333 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16334 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16335 ;;Total ram usage:       41 bytes
 16336 ;; Hardware stack levels used: 1
 16337 ;; Hardware stack levels required when called: 3
 16338 ;; This function calls:
 16339 ;;		___fladd
 16340 ;;		___fldiv
 16341 ;;		___flneg
 16342 ;;		___flsub
 16343 ;;		___fpclassifyf
 16344 ;;		_atanf
 16345 ;;		_fabsf
 16346 ;; This function is called by:
 16347 ;;		_MPU6050_DMP_GetData
 16348 ;;		_MPU6050_ReadAll
 16349 ;; This function uses a non-reentrant model
 16350 ;;
 16351                           
 16352                           	psect	text36
 16353   012680                     __ptext36:
 16354                           	callstack 0
 16355   012680                     _atan2f:
 16356                           	callstack 122
 16357   012680  C5A7  F501         	movff	atan2f@x,___fpclassifyf@x
 16358   012684  C5A8  F502         	movff	atan2f@x+1,___fpclassifyf@x+1
 16359   012688  C5A9  F503         	movff	atan2f@x+2,___fpclassifyf@x+2
 16360   01268C  C5AA  F504         	movff	atan2f@x+3,___fpclassifyf@x+3
 16361   012690  EC43  F0B2         	call	___fpclassifyf	;wreg free
 16362   012694  5001               	movf	?___fpclassifyf^(0+1280),w,c
 16363   012696  1002               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 16364   012698  B4D8               	btfsc	status,2,c
 16365   01269A  EF51  F093         	goto	u7211
 16366   01269E  EF53  F093         	goto	u7210
 16367   0126A2                     u7211:
 16368   0126A2  EF66  F093         	goto	l9139
 16369   0126A6                     u7210:
 16370   0126A6  C5A3  F501         	movff	atan2f@y,___fpclassifyf@x
 16371   0126AA  C5A4  F502         	movff	atan2f@y+1,___fpclassifyf@x+1
 16372   0126AE  C5A5  F503         	movff	atan2f@y+2,___fpclassifyf@x+2
 16373   0126B2  C5A6  F504         	movff	atan2f@y+3,___fpclassifyf@x+3
 16374   0126B6  EC43  F0B2         	call	___fpclassifyf	;wreg free
 16375   0126BA  5001               	movf	?___fpclassifyf^(0+1280),w,c
 16376   0126BC  1002               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 16377   0126BE  A4D8               	btfss	status,2,c
 16378   0126C0  EF64  F093         	goto	u7221
 16379   0126C4  EF66  F093         	goto	u7220
 16380   0126C8                     u7221:
 16381   0126C8  EF82  F093         	goto	l2067
 16382   0126CC                     u7220:
 16383   0126CC                     l9139:
 16384   0126CC  C5A7  F51E         	movff	atan2f@x,___fladd@b
 16385   0126D0  C5A8  F51F         	movff	atan2f@x+1,___fladd@b+1
 16386   0126D4  C5A9  F520         	movff	atan2f@x+2,___fladd@b+2
 16387   0126D8  C5AA  F521         	movff	atan2f@x+3,___fladd@b+3
 16388   0126DC  C5A3  F522         	movff	atan2f@y,___fladd@a
 16389   0126E0  C5A4  F523         	movff	atan2f@y+1,___fladd@a+1
 16390   0126E4  C5A5  F524         	movff	atan2f@y+2,___fladd@a+2
 16391   0126E8  C5A6  F525         	movff	atan2f@y+3,___fladd@a+3
 16392   0126EC  EC1B  F09B         	call	___fladd	;wreg free
 16393   0126F0  C51E  F5A3         	movff	?___fladd,?_atan2f
 16394   0126F4  C51F  F5A4         	movff	?___fladd+1,?_atan2f+1
 16395   0126F8  C520  F5A5         	movff	?___fladd+2,?_atan2f+2
 16396   0126FC  C521  F5A6         	movff	?___fladd+3,?_atan2f+3
 16397   012700  EF1E  F096         	goto	l2070
 16398   012704                     l2067:
 16399   012704  C5A7  F5C3         	movff	atan2f@x,atan2f@ix
 16400   012708  C5A8  F5C4         	movff	atan2f@x+1,atan2f@ix+1
 16401   01270C  C5A9  F5C5         	movff	atan2f@x+2,atan2f@ix+2
 16402   012710  C5AA  F5C6         	movff	atan2f@x+3,atan2f@ix+3
 16403   012714  C5A3  F5C7         	movff	atan2f@y,atan2f@iy
 16404   012718  C5A4  F5C8         	movff	atan2f@y+1,atan2f@iy+1
 16405   01271C  C5A5  F5C9         	movff	atan2f@y+2,atan2f@iy+2
 16406   012720  C5A6  F5CA         	movff	atan2f@y+3,atan2f@iy+3
 16407   012724  0E80               	movlw	128
 16408   012726  0105               	movlb	5	; () banked
 16409   012728  19C5               	xorwf	(atan2f@ix+2)& (0+255),w,b
 16410   01272A  E109               	bnz	u7231
 16411   01272C  0E3F               	movlw	63
 16412   01272E  19C6               	xorwf	(atan2f@ix+3)& (0+255),w,b
 16413   012730  11C3               	iorwf	atan2f@ix& (0+255),w,b
 16414   012732  11C4               	iorwf	(atan2f@ix+1)& (0+255),w,b
 16415   012734  A4D8               	btfss	status,2,c
 16416   012736  EF9F  F093         	goto	u7231
 16417   01273A  EFA1  F093         	goto	u7230
 16418   01273E                     u7231:
 16419   01273E  EFB5  F093         	goto	l9149
 16420   012742                     u7230:
 16421   012742                     
 16422                           ; BSR set to: 5
 16423   012742  C5A3  F575         	movff	atan2f@y,atanf@x
 16424   012746  C5A4  F576         	movff	atan2f@y+1,atanf@x+1
 16425   01274A  C5A5  F577         	movff	atan2f@y+2,atanf@x+2
 16426   01274E  C5A6  F578         	movff	atan2f@y+3,atanf@x+3
 16427   012752  ECDB  F08B         	call	_atanf	;wreg free
 16428   012756  C575  F5A3         	movff	?_atanf,?_atan2f
 16429   01275A  C576  F5A4         	movff	?_atanf+1,?_atan2f+1
 16430   01275E  C577  F5A5         	movff	?_atanf+2,?_atan2f+2
 16431   012762  C578  F5A6         	movff	?_atanf+3,?_atan2f+3
 16432   012766  EF1E  F096         	goto	l2070
 16433   01276A                     l9149:
 16434                           
 16435                           ; BSR set to: 5
 16436   01276A  C5C3  F5AB         	movff	atan2f@ix,??_atan2f
 16437   01276E  C5C4  F5AC         	movff	atan2f@ix+1,??_atan2f+1
 16438   012772  C5C5  F5AD         	movff	atan2f@ix+2,??_atan2f+2
 16439   012776  C5C6  F5AE         	movff	atan2f@ix+3,??_atan2f+3
 16440   01277A  0E1F               	movlw	31
 16441   01277C  EFC5  F093         	goto	u7240
 16442   012780                     u7245:
 16443   012780  90D8               	bcf	status,0,c
 16444   012782  33AE               	rrcf	(??_atan2f+3)& (0+255),f,b
 16445   012784  33AD               	rrcf	(??_atan2f+2)& (0+255),f,b
 16446   012786  33AC               	rrcf	(??_atan2f+1)& (0+255),f,b
 16447   012788  33AB               	rrcf	??_atan2f& (0+255),f,b
 16448   01278A                     u7240:
 16449   01278A  2EE8               	decfsz	wreg,f,c
 16450   01278C  EFC0  F093         	goto	u7245
 16451   012790  0E02               	movlw	2
 16452   012792  17AB               	andwf	??_atan2f& (0+255),f,b
 16453   012794  C5C7  F5AF         	movff	atan2f@iy,??_atan2f+4
 16454   012798  C5C8  F5B0         	movff	atan2f@iy+1,??_atan2f+5
 16455   01279C  C5C9  F5B1         	movff	atan2f@iy+2,??_atan2f+6
 16456   0127A0  C5CA  F5B2         	movff	atan2f@iy+3,??_atan2f+7
 16457   0127A4  0E20               	movlw	32
 16458   0127A6  EFDA  F093         	goto	u7250
 16459   0127AA                     u7255:
 16460   0127AA  90D8               	bcf	status,0,c
 16461   0127AC  33B2               	rrcf	(??_atan2f+7)& (0+255),f,b
 16462   0127AE  33B1               	rrcf	(??_atan2f+6)& (0+255),f,b
 16463   0127B0  33B0               	rrcf	(??_atan2f+5)& (0+255),f,b
 16464   0127B2  33AF               	rrcf	(??_atan2f+4)& (0+255),f,b
 16465   0127B4                     u7250:
 16466   0127B4  2EE8               	decfsz	wreg,f,c
 16467   0127B6  EFD5  F093         	goto	u7255
 16468   0127BA  51AF               	movf	(??_atan2f+4)& (0+255),w,b
 16469   0127BC  0B01               	andlw	1
 16470   0127BE  11AB               	iorwf	??_atan2f& (0+255),w,b
 16471   0127C0  6FCB               	movwf	atan2f@m& (0+255),b
 16472   0127C2                     
 16473                           ; BSR set to: 5
 16474   0127C2  9FC6               	bcf	(atan2f@ix+3)& (0+255),7,b
 16475   0127C4                     
 16476                           ; BSR set to: 5
 16477   0127C4  9FCA               	bcf	(atan2f@iy+3)& (0+255),7,b
 16478   0127C6  51C7               	movf	atan2f@iy& (0+255),w,b
 16479   0127C8  11C8               	iorwf	(atan2f@iy+1)& (0+255),w,b
 16480   0127CA  11C9               	iorwf	(atan2f@iy+2)& (0+255),w,b
 16481   0127CC  11CA               	iorwf	(atan2f@iy+3)& (0+255),w,b
 16482   0127CE  A4D8               	btfss	status,2,c
 16483   0127D0  EFEC  F093         	goto	u7261
 16484   0127D4  EFEE  F093         	goto	u7260
 16485   0127D8                     u7261:
 16486   0127D8  EF21  F094         	goto	l9169
 16487   0127DC                     u7260:
 16488   0127DC  EF0E  F094         	goto	l9167
 16489   0127E0                     l2075:
 16490                           
 16491                           ; BSR set to: 5
 16492   0127E0  C5A3  F5A3         	movff	atan2f@y,?_atan2f
 16493   0127E4  C5A4  F5A4         	movff	atan2f@y+1,?_atan2f+1
 16494   0127E8  C5A5  F5A5         	movff	atan2f@y+2,?_atan2f+2
 16495   0127EC  C5A6  F5A6         	movff	atan2f@y+3,?_atan2f+3
 16496   0127F0  EF1E  F096         	goto	l2070
 16497   0127F4                     l9157:
 16498                           
 16499                           ; BSR set to: 5
 16500   0127F4  0EDB               	movlw	219
 16501   0127F6  6FA3               	movwf	?_atan2f& (0+255),b
 16502   0127F8  0E0F               	movlw	15
 16503   0127FA  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16504   0127FC  0E49               	movlw	73
 16505   0127FE  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16506   012800  0E40               	movlw	64
 16507   012802  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16508   012804  EF1E  F096         	goto	l2070
 16509   012808                     l9161:
 16510                           
 16511                           ; BSR set to: 5
 16512   012808  0EDB               	movlw	219
 16513   01280A  6FA3               	movwf	?_atan2f& (0+255),b
 16514   01280C  0E0F               	movlw	15
 16515   01280E  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16516   012810  0E49               	movlw	73
 16517   012812  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16518   012814  0EC0               	movlw	192
 16519   012816  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16520   012818  EF1E  F096         	goto	l2070
 16521   01281C                     l9167:
 16522                           
 16523                           ; BSR set to: 5
 16524   01281C  51CB               	movf	atan2f@m& (0+255),w,b
 16525                           
 16526                           ; Switch size 1, requested type "simple"
 16527                           ; Number of cases is 4, Range of values is 0 to 3
 16528                           ; switch strategies available:
 16529                           ; Name         Instructions Cycles
 16530                           ; simple_byte           13     7 (average)
 16531                           ;	Chosen strategy is simple_byte
 16532   01281E  0A00               	xorlw	0	; case 0
 16533   012820  B4D8               	btfsc	status,2,c
 16534   012822  EFF0  F093         	goto	l2075
 16535   012826  0A01               	xorlw	1	; case 1
 16536   012828  B4D8               	btfsc	status,2,c
 16537   01282A  EFF0  F093         	goto	l2075
 16538   01282E  0A03               	xorlw	3	; case 2
 16539   012830  B4D8               	btfsc	status,2,c
 16540   012832  EFFA  F093         	goto	l9157
 16541   012836  0A01               	xorlw	1	; case 3
 16542   012838  B4D8               	btfsc	status,2,c
 16543   01283A  EF04  F094         	goto	l9161
 16544   01283E  EF21  F094         	goto	l9169
 16545   012842                     l9169:
 16546                           
 16547                           ; BSR set to: 5
 16548   012842  51C3               	movf	atan2f@ix& (0+255),w,b
 16549   012844  11C4               	iorwf	(atan2f@ix+1)& (0+255),w,b
 16550   012846  11C5               	iorwf	(atan2f@ix+2)& (0+255),w,b
 16551   012848  11C6               	iorwf	(atan2f@ix+3)& (0+255),w,b
 16552   01284A  A4D8               	btfss	status,2,c
 16553   01284C  EF2A  F094         	goto	u7271
 16554   012850  EF2C  F094         	goto	u7270
 16555   012854                     u7271:
 16556   012854  EF47  F094         	goto	l9179
 16557   012858                     u7270:
 16558   012858                     
 16559                           ; BSR set to: 5
 16560   012858  B1CB               	btfsc	atan2f@m& (0+255),0,b
 16561   01285A  EF31  F094         	goto	u7281
 16562   01285E  EF33  F094         	goto	u7280
 16563   012862                     u7281:
 16564   012862  EF3D  F094         	goto	l9175
 16565   012866                     u7280:
 16566   012866                     
 16567                           ; BSR set to: 5
 16568   012866  0EDB               	movlw	219
 16569   012868  6FA3               	movwf	?_atan2f& (0+255),b
 16570   01286A  0E0F               	movlw	15
 16571   01286C  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16572   01286E  0EC9               	movlw	201
 16573   012870  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16574   012872  0E3F               	movlw	63
 16575   012874  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16576   012876  EF1E  F096         	goto	l2070
 16577   01287A                     l9175:
 16578                           
 16579                           ; BSR set to: 5
 16580   01287A  0EDB               	movlw	219
 16581   01287C  6FA3               	movwf	?_atan2f& (0+255),b
 16582   01287E  0E0F               	movlw	15
 16583   012880  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16584   012882  0EC9               	movlw	201
 16585   012884  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16586   012886  0EBF               	movlw	191
 16587   012888  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16588   01288A  EF1E  F096         	goto	l2070
 16589   01288E                     l9179:
 16590                           
 16591                           ; BSR set to: 5
 16592   01288E  0E80               	movlw	128
 16593   012890  19C5               	xorwf	(atan2f@ix+2)& (0+255),w,b
 16594   012892  E109               	bnz	u7291
 16595   012894  0E7F               	movlw	127
 16596   012896  19C6               	xorwf	(atan2f@ix+3)& (0+255),w,b
 16597   012898  11C3               	iorwf	atan2f@ix& (0+255),w,b
 16598   01289A  11C4               	iorwf	(atan2f@ix+1)& (0+255),w,b
 16599   01289C  A4D8               	btfss	status,2,c
 16600   01289E  EF53  F094         	goto	u7291
 16601   0128A2  EF55  F094         	goto	u7290
 16602   0128A6                     u7291:
 16603   0128A6  EFDB  F094         	goto	l9225
 16604   0128AA                     u7290:
 16605   0128AA                     
 16606                           ; BSR set to: 5
 16607   0128AA  0E80               	movlw	128
 16608   0128AC  19C9               	xorwf	(atan2f@iy+2)& (0+255),w,b
 16609   0128AE  E109               	bnz	u7301
 16610   0128B0  0E7F               	movlw	127
 16611   0128B2  19CA               	xorwf	(atan2f@iy+3)& (0+255),w,b
 16612   0128B4  11C7               	iorwf	atan2f@iy& (0+255),w,b
 16613   0128B6  11C8               	iorwf	(atan2f@iy+1)& (0+255),w,b
 16614   0128B8  A4D8               	btfss	status,2,c
 16615   0128BA  EF61  F094         	goto	u7301
 16616   0128BE  EF63  F094         	goto	u7300
 16617   0128C2                     u7301:
 16618   0128C2  EFC8  F094         	goto	l9223
 16619   0128C6                     u7300:
 16620   0128C6  EF8D  F094         	goto	l9203
 16621   0128CA                     l9185:
 16622                           
 16623                           ; BSR set to: 5
 16624   0128CA  0EDB               	movlw	219
 16625   0128CC  6FA3               	movwf	?_atan2f& (0+255),b
 16626   0128CE  0E0F               	movlw	15
 16627   0128D0  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16628   0128D2  0E49               	movlw	73
 16629   0128D4  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16630   0128D6  0E3F               	movlw	63
 16631   0128D8  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16632   0128DA  EF1E  F096         	goto	l2070
 16633   0128DE                     l9189:
 16634                           
 16635                           ; BSR set to: 5
 16636   0128DE  0EDB               	movlw	219
 16637   0128E0  6FA3               	movwf	?_atan2f& (0+255),b
 16638   0128E2  0E0F               	movlw	15
 16639   0128E4  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16640   0128E6  0E49               	movlw	73
 16641   0128E8  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16642   0128EA  0EBF               	movlw	191
 16643   0128EC  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16644   0128EE  EF1E  F096         	goto	l2070
 16645   0128F2                     l9193:
 16646                           
 16647                           ; BSR set to: 5
 16648   0128F2  0EE4               	movlw	228
 16649   0128F4  6FA3               	movwf	?_atan2f& (0+255),b
 16650   0128F6  0ECB               	movlw	203
 16651   0128F8  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16652   0128FA  0E16               	movlw	22
 16653   0128FC  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16654   0128FE  0E40               	movlw	64
 16655   012900  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16656   012902  EF1E  F096         	goto	l2070
 16657   012906                     l9197:
 16658                           
 16659                           ; BSR set to: 5
 16660   012906  0EE4               	movlw	228
 16661   012908  6FA3               	movwf	?_atan2f& (0+255),b
 16662   01290A  0ECB               	movlw	203
 16663   01290C  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16664   01290E  0E16               	movlw	22
 16665   012910  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16666   012912  0EC0               	movlw	192
 16667   012914  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16668   012916  EF1E  F096         	goto	l2070
 16669   01291A                     l9203:
 16670                           
 16671                           ; BSR set to: 5
 16672   01291A  51CB               	movf	atan2f@m& (0+255),w,b
 16673                           
 16674                           ; Switch size 1, requested type "simple"
 16675                           ; Number of cases is 4, Range of values is 0 to 3
 16676                           ; switch strategies available:
 16677                           ; Name         Instructions Cycles
 16678                           ; simple_byte           13     7 (average)
 16679                           ;	Chosen strategy is simple_byte
 16680   01291C  0A00               	xorlw	0	; case 0
 16681   01291E  B4D8               	btfsc	status,2,c
 16682   012920  EF65  F094         	goto	l9185
 16683   012924  0A01               	xorlw	1	; case 1
 16684   012926  B4D8               	btfsc	status,2,c
 16685   012928  EF6F  F094         	goto	l9189
 16686   01292C  0A03               	xorlw	3	; case 2
 16687   01292E  B4D8               	btfsc	status,2,c
 16688   012930  EF79  F094         	goto	l9193
 16689   012934  0A01               	xorlw	1	; case 3
 16690   012936  B4D8               	btfsc	status,2,c
 16691   012938  EF83  F094         	goto	l9197
 16692   01293C  EFDB  F094         	goto	l9225
 16693   012940                     l9205:
 16694                           
 16695                           ; BSR set to: 5
 16696   012940  0E00               	movlw	0
 16697   012942  6FA3               	movwf	?_atan2f& (0+255),b
 16698   012944  0E00               	movlw	0
 16699   012946  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16700   012948  0E00               	movlw	0
 16701   01294A  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16702   01294C  0E00               	movlw	0
 16703   01294E  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16704   012950  EF1E  F096         	goto	l2070
 16705   012954                     l9209:
 16706                           
 16707                           ; BSR set to: 5
 16708   012954  0E00               	movlw	0
 16709   012956  6FA3               	movwf	?_atan2f& (0+255),b
 16710   012958  0E00               	movlw	0
 16711   01295A  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16712   01295C  0E00               	movlw	0
 16713   01295E  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16714   012960  0E80               	movlw	128
 16715   012962  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16716   012964  EF1E  F096         	goto	l2070
 16717   012968                     l9213:
 16718                           
 16719                           ; BSR set to: 5
 16720   012968  0EDB               	movlw	219
 16721   01296A  6FA3               	movwf	?_atan2f& (0+255),b
 16722   01296C  0E0F               	movlw	15
 16723   01296E  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16724   012970  0E49               	movlw	73
 16725   012972  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16726   012974  0E40               	movlw	64
 16727   012976  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16728   012978  EF1E  F096         	goto	l2070
 16729   01297C                     l9217:
 16730                           
 16731                           ; BSR set to: 5
 16732   01297C  0EDB               	movlw	219
 16733   01297E  6FA3               	movwf	?_atan2f& (0+255),b
 16734   012980  0E0F               	movlw	15
 16735   012982  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16736   012984  0E49               	movlw	73
 16737   012986  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16738   012988  0EC0               	movlw	192
 16739   01298A  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16740   01298C  EF1E  F096         	goto	l2070
 16741   012990                     l9223:
 16742                           
 16743                           ; BSR set to: 5
 16744   012990  51CB               	movf	atan2f@m& (0+255),w,b
 16745                           
 16746                           ; Switch size 1, requested type "simple"
 16747                           ; Number of cases is 4, Range of values is 0 to 3
 16748                           ; switch strategies available:
 16749                           ; Name         Instructions Cycles
 16750                           ; simple_byte           13     7 (average)
 16751                           ;	Chosen strategy is simple_byte
 16752   012992  0A00               	xorlw	0	; case 0
 16753   012994  B4D8               	btfsc	status,2,c
 16754   012996  EFA0  F094         	goto	l9205
 16755   01299A  0A01               	xorlw	1	; case 1
 16756   01299C  B4D8               	btfsc	status,2,c
 16757   01299E  EFAA  F094         	goto	l9209
 16758   0129A2  0A03               	xorlw	3	; case 2
 16759   0129A4  B4D8               	btfsc	status,2,c
 16760   0129A6  EFB4  F094         	goto	l9213
 16761   0129AA  0A01               	xorlw	1	; case 3
 16762   0129AC  B4D8               	btfsc	status,2,c
 16763   0129AE  EFBE  F094         	goto	l9217
 16764   0129B2  EFDB  F094         	goto	l9225
 16765   0129B6                     l9225:
 16766                           
 16767                           ; BSR set to: 5
 16768   0129B6  0E00               	movlw	0
 16769   0129B8  25C3               	addwf	atan2f@ix& (0+255),w,b
 16770   0129BA  6FAB               	movwf	??_atan2f& (0+255),b
 16771   0129BC  0E00               	movlw	0
 16772   0129BE  21C4               	addwfc	(atan2f@ix+1)& (0+255),w,b
 16773   0129C0  6FAC               	movwf	(??_atan2f+1)& (0+255),b
 16774   0129C2  0E00               	movlw	0
 16775   0129C4  21C5               	addwfc	(atan2f@ix+2)& (0+255),w,b
 16776   0129C6  6FAD               	movwf	(??_atan2f+2)& (0+255),b
 16777   0129C8  0E0D               	movlw	13
 16778   0129CA  21C6               	addwfc	(atan2f@ix+3)& (0+255),w,b
 16779   0129CC  6FAE               	movwf	(??_atan2f+3)& (0+255),b
 16780   0129CE  51C7               	movf	atan2f@iy& (0+255),w,b
 16781   0129D0  5DAB               	subwf	??_atan2f& (0+255),w,b
 16782   0129D2  51C8               	movf	(atan2f@iy+1)& (0+255),w,b
 16783   0129D4  59AC               	subwfb	(??_atan2f+1)& (0+255),w,b
 16784   0129D6  51C9               	movf	(atan2f@iy+2)& (0+255),w,b
 16785   0129D8  59AD               	subwfb	(??_atan2f+2)& (0+255),w,b
 16786   0129DA  51CA               	movf	(atan2f@iy+3)& (0+255),w,b
 16787   0129DC  59AE               	subwfb	(??_atan2f+3)& (0+255),w,b
 16788   0129DE  A0D8               	btfss	status,0,c
 16789   0129E0  EFF4  F094         	goto	u7311
 16790   0129E4  EFF6  F094         	goto	u7310
 16791   0129E8                     u7311:
 16792   0129E8  EF04  F095         	goto	l2101
 16793   0129EC                     u7310:
 16794   0129EC                     
 16795                           ; BSR set to: 5
 16796   0129EC  0E80               	movlw	128
 16797   0129EE  19C9               	xorwf	(atan2f@iy+2)& (0+255),w,b
 16798   0129F0  E109               	bnz	u7321
 16799   0129F2  0E7F               	movlw	127
 16800   0129F4  19CA               	xorwf	(atan2f@iy+3)& (0+255),w,b
 16801   0129F6  11C7               	iorwf	atan2f@iy& (0+255),w,b
 16802   0129F8  11C8               	iorwf	(atan2f@iy+1)& (0+255),w,b
 16803   0129FA  A4D8               	btfss	status,2,c
 16804   0129FC  EF02  F095         	goto	u7321
 16805   012A00  EF04  F095         	goto	u7320
 16806   012A04                     u7321:
 16807   012A04  EF1F  F095         	goto	l2099
 16808   012A08                     u7320:
 16809   012A08                     l2101:
 16810                           
 16811                           ; BSR set to: 5
 16812   012A08  B1CB               	btfsc	atan2f@m& (0+255),0,b
 16813   012A0A  EF09  F095         	goto	u7331
 16814   012A0E  EF0B  F095         	goto	u7330
 16815   012A12                     u7331:
 16816   012A12  EF15  F095         	goto	l9231
 16817   012A16                     u7330:
 16818   012A16                     
 16819                           ; BSR set to: 5
 16820   012A16  0EDB               	movlw	219
 16821   012A18  6FA3               	movwf	?_atan2f& (0+255),b
 16822   012A1A  0E0F               	movlw	15
 16823   012A1C  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16824   012A1E  0EC9               	movlw	201
 16825   012A20  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16826   012A22  0E3F               	movlw	63
 16827   012A24  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16828   012A26  EF1E  F096         	goto	l2070
 16829   012A2A                     l9231:
 16830                           
 16831                           ; BSR set to: 5
 16832   012A2A  0EDB               	movlw	219
 16833   012A2C  6FA3               	movwf	?_atan2f& (0+255),b
 16834   012A2E  0E0F               	movlw	15
 16835   012A30  6FA4               	movwf	(?_atan2f+1)& (0+255),b
 16836   012A32  0EC9               	movlw	201
 16837   012A34  6FA5               	movwf	(?_atan2f+2)& (0+255),b
 16838   012A36  0EBF               	movlw	191
 16839   012A38  6FA6               	movwf	(?_atan2f+3)& (0+255),b
 16840   012A3A  EF1E  F096         	goto	l2070
 16841   012A3E                     l2099:
 16842                           
 16843                           ; BSR set to: 5
 16844   012A3E  A3CB               	btfss	atan2f@m& (0+255),1,b
 16845   012A40  EF24  F095         	goto	u7341
 16846   012A44  EF26  F095         	goto	u7340
 16847   012A48                     u7341:
 16848   012A48  EF4B  F095         	goto	l9239
 16849   012A4C                     u7340:
 16850   012A4C                     
 16851                           ; BSR set to: 5
 16852   012A4C  0E00               	movlw	0
 16853   012A4E  25C7               	addwf	atan2f@iy& (0+255),w,b
 16854   012A50  6FAB               	movwf	??_atan2f& (0+255),b
 16855   012A52  0E00               	movlw	0
 16856   012A54  21C8               	addwfc	(atan2f@iy+1)& (0+255),w,b
 16857   012A56  6FAC               	movwf	(??_atan2f+1)& (0+255),b
 16858   012A58  0E00               	movlw	0
 16859   012A5A  21C9               	addwfc	(atan2f@iy+2)& (0+255),w,b
 16860   012A5C  6FAD               	movwf	(??_atan2f+2)& (0+255),b
 16861   012A5E  0E0D               	movlw	13
 16862   012A60  21CA               	addwfc	(atan2f@iy+3)& (0+255),w,b
 16863   012A62  6FAE               	movwf	(??_atan2f+3)& (0+255),b
 16864   012A64  51C3               	movf	atan2f@ix& (0+255),w,b
 16865   012A66  5DAB               	subwf	??_atan2f& (0+255),w,b
 16866   012A68  51C4               	movf	(atan2f@ix+1)& (0+255),w,b
 16867   012A6A  59AC               	subwfb	(??_atan2f+1)& (0+255),w,b
 16868   012A6C  51C5               	movf	(atan2f@ix+2)& (0+255),w,b
 16869   012A6E  59AD               	subwfb	(??_atan2f+2)& (0+255),w,b
 16870   012A70  51C6               	movf	(atan2f@ix+3)& (0+255),w,b
 16871   012A72  59AE               	subwfb	(??_atan2f+3)& (0+255),w,b
 16872   012A74  B0D8               	btfsc	status,0,c
 16873   012A76  EF3F  F095         	goto	u7351
 16874   012A7A  EF41  F095         	goto	u7350
 16875   012A7E                     u7351:
 16876   012A7E  EF4B  F095         	goto	l9239
 16877   012A82                     u7350:
 16878   012A82                     
 16879                           ; BSR set to: 5
 16880   012A82  0E00               	movlw	0
 16881   012A84  6FBF               	movwf	atan2f@z& (0+255),b
 16882   012A86  0E00               	movlw	0
 16883   012A88  6FC0               	movwf	(atan2f@z+1)& (0+255),b
 16884   012A8A  0E00               	movlw	0
 16885   012A8C  6FC1               	movwf	(atan2f@z+2)& (0+255),b
 16886   012A8E  0E00               	movlw	0
 16887   012A90  6FC2               	movwf	(atan2f@z+3)& (0+255),b
 16888   012A92  EF0E  F096         	goto	l9257
 16889   012A96                     l9239:
 16890                           
 16891                           ; BSR set to: 5
 16892   012A96  C5A3  F553         	movff	atan2f@y,___fldiv@b
 16893   012A9A  C5A4  F554         	movff	atan2f@y+1,___fldiv@b+1
 16894   012A9E  C5A5  F555         	movff	atan2f@y+2,___fldiv@b+2
 16895   012AA2  C5A6  F556         	movff	atan2f@y+3,___fldiv@b+3
 16896   012AA6  C5A7  F557         	movff	atan2f@x,___fldiv@a
 16897   012AAA  C5A8  F558         	movff	atan2f@x+1,___fldiv@a+1
 16898   012AAE  C5A9  F559         	movff	atan2f@x+2,___fldiv@a+2
 16899   012AB2  C5AA  F55A         	movff	atan2f@x+3,___fldiv@a+3
 16900   012AB6  EC9E  F0A5         	call	___fldiv	;wreg free
 16901   012ABA  C553  F56D         	movff	?___fldiv,fabsf@x
 16902   012ABE  C554  F56E         	movff	?___fldiv+1,fabsf@x+1
 16903   012AC2  C555  F56F         	movff	?___fldiv+2,fabsf@x+2
 16904   012AC6  C556  F570         	movff	?___fldiv+3,fabsf@x+3
 16905   012ACA  EC8B  F0B7         	call	_fabsf	;wreg free
 16906   012ACE  C56D  F5B3         	movff	?_fabsf,_atan2f$3487
 16907   012AD2  C56E  F5B4         	movff	?_fabsf+1,_atan2f$3487+1
 16908   012AD6  C56F  F5B5         	movff	?_fabsf+2,_atan2f$3487+2
 16909   012ADA  C570  F5B6         	movff	?_fabsf+3,_atan2f$3487+3
 16910   012ADE  C5B3  F575         	movff	_atan2f$3487,atanf@x
 16911   012AE2  C5B4  F576         	movff	_atan2f$3487+1,atanf@x+1
 16912   012AE6  C5B5  F577         	movff	_atan2f$3487+2,atanf@x+2
 16913   012AEA  C5B6  F578         	movff	_atan2f$3487+3,atanf@x+3
 16914   012AEE  ECDB  F08B         	call	_atanf	;wreg free
 16915   012AF2  C575  F5BF         	movff	?_atanf,atan2f@z
 16916   012AF6  C576  F5C0         	movff	?_atanf+1,atan2f@z+1
 16917   012AFA  C577  F5C1         	movff	?_atanf+2,atan2f@z+2
 16918   012AFE  C578  F5C2         	movff	?_atanf+3,atan2f@z+3
 16919   012B02  EF0E  F096         	goto	l9257
 16920   012B06                     l2109:
 16921                           
 16922                           ; BSR set to: 5
 16923   012B06  C5BF  F5A3         	movff	atan2f@z,?_atan2f
 16924   012B0A  C5C0  F5A4         	movff	atan2f@z+1,?_atan2f+1
 16925   012B0E  C5C1  F5A5         	movff	atan2f@z+2,?_atan2f+2
 16926   012B12  C5C2  F5A6         	movff	atan2f@z+3,?_atan2f+3
 16927   012B16  EF1E  F096         	goto	l2070
 16928   012B1A                     l9243:
 16929                           
 16930                           ; BSR set to: 5
 16931   012B1A  C5BF  F501         	movff	atan2f@z,___flneg@f1
 16932   012B1E  C5C0  F502         	movff	atan2f@z+1,___flneg@f1+1
 16933   012B22  C5C1  F503         	movff	atan2f@z+2,___flneg@f1+2
 16934   012B26  C5C2  F504         	movff	atan2f@z+3,___flneg@f1+3
 16935   012B2A  EC6F  F0B7         	call	___flneg	;wreg free
 16936   012B2E  C501  F5A3         	movff	?___flneg,?_atan2f
 16937   012B32  C502  F5A4         	movff	?___flneg+1,?_atan2f+1
 16938   012B36  C503  F5A5         	movff	?___flneg+2,?_atan2f+2
 16939   012B3A  C504  F5A6         	movff	?___flneg+3,?_atan2f+3
 16940   012B3E  EF1E  F096         	goto	l2070
 16941   012B42                     l9247:
 16942                           
 16943                           ; BSR set to: 5
 16944   012B42  0E2E               	movlw	46
 16945   012B44  6E22               	movwf	___fladd@a^(0+1280),c
 16946   012B46  0EBD               	movlw	189
 16947   012B48  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 16948   012B4A  0EBB               	movlw	187
 16949   012B4C  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 16950   012B4E  0E33               	movlw	51
 16951   012B50  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 16952   012B52  C5BF  F51E         	movff	atan2f@z,___fladd@b
 16953   012B56  C5C0  F51F         	movff	atan2f@z+1,___fladd@b+1
 16954   012B5A  C5C1  F520         	movff	atan2f@z+2,___fladd@b+2
 16955   012B5E  C5C2  F521         	movff	atan2f@z+3,___fladd@b+3
 16956   012B62  EC1B  F09B         	call	___fladd	;wreg free
 16957   012B66  C51E  F5B7         	movff	?___fladd,_atan2f$3488
 16958   012B6A  C51F  F5B8         	movff	?___fladd+1,_atan2f$3488+1
 16959   012B6E  C520  F5B9         	movff	?___fladd+2,_atan2f$3488+2
 16960   012B72  C521  F5BA         	movff	?___fladd+3,_atan2f$3488+3
 16961   012B76  0EDB               	movlw	219
 16962   012B78  0105               	movlb	5	; () banked
 16963   012B7A  6F6D               	movwf	___flsub@b& (0+255),b
 16964   012B7C  0E0F               	movlw	15
 16965   012B7E  6F6E               	movwf	(___flsub@b+1)& (0+255),b
 16966   012B80  0E49               	movlw	73
 16967   012B82  6F6F               	movwf	(___flsub@b+2)& (0+255),b
 16968   012B84  0E40               	movlw	64
 16969   012B86  6F70               	movwf	(___flsub@b+3)& (0+255),b
 16970   012B88  C5B7  F571         	movff	_atan2f$3488,___flsub@a
 16971   012B8C  C5B8  F572         	movff	_atan2f$3488+1,___flsub@a+1
 16972   012B90  C5B9  F573         	movff	_atan2f$3488+2,___flsub@a+2
 16973   012B94  C5BA  F574         	movff	_atan2f$3488+3,___flsub@a+3
 16974   012B98  ECED  F0B6         	call	___flsub	;wreg free
 16975   012B9C  C56D  F5A3         	movff	?___flsub,?_atan2f
 16976   012BA0  C56E  F5A4         	movff	?___flsub+1,?_atan2f+1
 16977   012BA4  C56F  F5A5         	movff	?___flsub+2,?_atan2f+2
 16978   012BA8  C570  F5A6         	movff	?___flsub+3,?_atan2f+3
 16979   012BAC  EF1E  F096         	goto	l2070
 16980   012BB0                     l9251:
 16981                           
 16982                           ; BSR set to: 5
 16983   012BB0  0E2E               	movlw	46
 16984   012BB2  6E22               	movwf	___fladd@a^(0+1280),c
 16985   012BB4  0EBD               	movlw	189
 16986   012BB6  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 16987   012BB8  0EBB               	movlw	187
 16988   012BBA  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 16989   012BBC  0E33               	movlw	51
 16990   012BBE  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 16991   012BC0  C5BF  F51E         	movff	atan2f@z,___fladd@b
 16992   012BC4  C5C0  F51F         	movff	atan2f@z+1,___fladd@b+1
 16993   012BC8  C5C1  F520         	movff	atan2f@z+2,___fladd@b+2
 16994   012BCC  C5C2  F521         	movff	atan2f@z+3,___fladd@b+3
 16995   012BD0  EC1B  F09B         	call	___fladd	;wreg free
 16996   012BD4  C51E  F5BB         	movff	?___fladd,_atan2f$3489
 16997   012BD8  C51F  F5BC         	movff	?___fladd+1,_atan2f$3489+1
 16998   012BDC  C520  F5BD         	movff	?___fladd+2,_atan2f$3489+2
 16999   012BE0  C521  F5BE         	movff	?___fladd+3,_atan2f$3489+3
 17000   012BE4  C5BB  F51E         	movff	_atan2f$3489,___fladd@b
 17001   012BE8  C5BC  F51F         	movff	_atan2f$3489+1,___fladd@b+1
 17002   012BEC  C5BD  F520         	movff	_atan2f$3489+2,___fladd@b+2
 17003   012BF0  C5BE  F521         	movff	_atan2f$3489+3,___fladd@b+3
 17004   012BF4  0EDB               	movlw	219
 17005   012BF6  6E22               	movwf	___fladd@a^(0+1280),c
 17006   012BF8  0E0F               	movlw	15
 17007   012BFA  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17008   012BFC  0E49               	movlw	73
 17009   012BFE  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17010   012C00  0EC0               	movlw	192
 17011   012C02  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17012   012C04  EC1B  F09B         	call	___fladd	;wreg free
 17013   012C08  C51E  F5A3         	movff	?___fladd,?_atan2f
 17014   012C0C  C51F  F5A4         	movff	?___fladd+1,?_atan2f+1
 17015   012C10  C520  F5A5         	movff	?___fladd+2,?_atan2f+2
 17016   012C14  C521  F5A6         	movff	?___fladd+3,?_atan2f+3
 17017   012C18  EF1E  F096         	goto	l2070
 17018   012C1C                     l9257:
 17019   012C1C  0105               	movlb	5	; () banked
 17020   012C1E  51CB               	movf	atan2f@m& (0+255),w,b
 17021                           
 17022                           ; Switch size 1, requested type "simple"
 17023                           ; Number of cases is 3, Range of values is 0 to 2
 17024                           ; switch strategies available:
 17025                           ; Name         Instructions Cycles
 17026                           ; simple_byte           10     6 (average)
 17027                           ;	Chosen strategy is simple_byte
 17028   012C20  0A00               	xorlw	0	; case 0
 17029   012C22  B4D8               	btfsc	status,2,c
 17030   012C24  EF83  F095         	goto	l2109
 17031   012C28  0A01               	xorlw	1	; case 1
 17032   012C2A  B4D8               	btfsc	status,2,c
 17033   012C2C  EF8D  F095         	goto	l9243
 17034   012C30  0A03               	xorlw	3	; case 2
 17035   012C32  B4D8               	btfsc	status,2,c
 17036   012C34  EFA1  F095         	goto	l9247
 17037   012C38  EFD8  F095         	goto	l9251
 17038   012C3C                     l2070:
 17039   012C3C  0012               	return		;funcret
 17040   012C3E                     __end_of_atan2f:
 17041                           	callstack 0
 17042                           
 17043 ;; *************** function _atanf *****************
 17044 ;; Defined at:
 17045 ;;		line 40 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\atanf.c"
 17046 ;; Parameters:    Size  Location     Type
 17047 ;;  x               4   21[BANK5 ] float 
 17048 ;; Auto vars:     Size  Location     Type
 17049 ;;  ix              4   63[BANK5 ] struct .
 17050 ;;  z               4   59[BANK5 ] float 
 17051 ;;  w               4   54[BANK5 ] float 
 17052 ;;  s2              4   41[BANK5 ] float 
 17053 ;;  s1              4   37[BANK5 ] float 
 17054 ;;  id              1   58[BANK5 ] char 
 17055 ;;  sign            1   53[BANK5 ] _Bool 
 17056 ;; Return value:  Size  Location     Type
 17057 ;;                  4   21[BANK5 ] float 
 17058 ;; Registers used:
 17059 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17060 ;; Tracked objects:
 17061 ;;		On entry : 0/0
 17062 ;;		On exit  : 0/0
 17063 ;;		Unchanged: 0/0
 17064 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17065 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17066 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17068 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17069 ;;Total ram usage:       46 bytes
 17070 ;; Hardware stack levels used: 1
 17071 ;; Hardware stack levels required when called: 2
 17072 ;; This function calls:
 17073 ;;		___fladd
 17074 ;;		___fldiv
 17075 ;;		___flmul
 17076 ;;		___flneg
 17077 ;;		___flsub
 17078 ;;		___fpclassifyf
 17079 ;;		_fabsf
 17080 ;; This function is called by:
 17081 ;;		_atan2f
 17082 ;; This function uses a non-reentrant model
 17083 ;;
 17084                           
 17085                           	psect	text37
 17086   0117B6                     __ptext37:
 17087                           	callstack 0
 17088   0117B6                     _atanf:
 17089                           	callstack 122
 17090   0117B6  C575  F59F         	movff	atanf@x,atanf@ix
 17091   0117BA  C576  F5A0         	movff	atanf@x+1,atanf@ix+1
 17092   0117BE  C577  F5A1         	movff	atanf@x+2,atanf@ix+2
 17093   0117C2  C578  F5A2         	movff	atanf@x+3,atanf@ix+3
 17094   0117C6  0105               	movlb	5	; () banked
 17095   0117C8  BFA2               	btfsc	(atanf@ix+3)& (0+255),7,b
 17096   0117CA  EFE9  F08B         	goto	u6561
 17097   0117CE  EFEC  F08B         	goto	u6560
 17098   0117D2                     u6561:
 17099   0117D2  0E01               	movlw	1
 17100   0117D4  EFED  F08B         	goto	u6570
 17101   0117D8                     u6560:
 17102   0117D8  0E00               	movlw	0
 17103   0117DA                     u6570:
 17104   0117DA  6F95               	movwf	atanf@sign& (0+255),b
 17105   0117DC                     
 17106                           ; BSR set to: 5
 17107   0117DC  9FA2               	bcf	(atanf@ix+3)& (0+255),7,b
 17108   0117DE                     
 17109                           ; BSR set to: 5
 17110   0117DE  0E80               	movlw	128
 17111   0117E0  5DA1               	subwf	(atanf@ix+2)& (0+255),w,b
 17112   0117E2  0E4C               	movlw	76
 17113   0117E4  59A2               	subwfb	(atanf@ix+3)& (0+255),w,b
 17114   0117E6  A0D8               	btfss	status,0,c
 17115   0117E8  EFF8  F08B         	goto	u6581
 17116   0117EC  EFFA  F08B         	goto	u6580
 17117   0117F0                     u6581:
 17118   0117F0  EF62  F08C         	goto	l8727
 17119   0117F4                     u6580:
 17120   0117F4                     
 17121                           ; BSR set to: 5
 17122   0117F4  C575  F501         	movff	atanf@x,___fpclassifyf@x
 17123   0117F8  C576  F502         	movff	atanf@x+1,___fpclassifyf@x+1
 17124   0117FC  C577  F503         	movff	atanf@x+2,___fpclassifyf@x+2
 17125   011800  C578  F504         	movff	atanf@x+3,___fpclassifyf@x+3
 17126   011804  EC43  F0B2         	call	___fpclassifyf	;wreg free
 17127   011808  5001               	movf	?___fpclassifyf^(0+1280),w,c
 17128   01180A  1002               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
 17129   01180C  A4D8               	btfss	status,2,c
 17130   01180E  EF0B  F08C         	goto	u6591
 17131   011812  EF0D  F08C         	goto	u6590
 17132   011816                     u6591:
 17133   011816  EF17  F08C         	goto	l8717
 17134   01181A                     u6590:
 17135   01181A                     l8715:
 17136   01181A  C575  F575         	movff	atanf@x,?_atanf
 17137   01181E  C576  F576         	movff	atanf@x+1,?_atanf+1
 17138   011822  C577  F577         	movff	atanf@x+2,?_atanf+2
 17139   011826  C578  F578         	movff	atanf@x+3,?_atanf+3
 17140   01182A  EF97  F08F         	goto	l2147
 17141   01182E                     l8717:
 17142   01182E  0EC0               	movlw	low (_atanhi+12)
 17143   011830  6EF6               	movwf	tblptrl,c
 17144   011832  0EFE               	movlw	high (_atanhi+12)
 17145   011834  6EF7               	movwf	tblptrh,c
 17146   011836                     	if	0	;tblptru may be non-zero
 17147   011836                     	endif
 17148   011836                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17149   011836  0E00               	movlw	low (__mediumconst shr (0+16))
 17150   011838  6EF8               	movwf	tblptru,c
 17151   01183A                     	endif
 17152   01183A  0009               	tblrd		*+
 17153   01183C  C4F5 F51E          	movff	tablat,___fladd@b
 17154   011840  0009               	tblrd		*+
 17155   011842  C4F5 F51F          	movff	tablat,___fladd@b+1
 17156   011846  0009               	tblrd		*+
 17157   011848  C4F5 F520          	movff	tablat,___fladd@b+2
 17158   01184C  000A               	tblrd		*-
 17159   01184E  C4F5 F521          	movff	tablat,___fladd@b+3
 17160   011852  0E00               	movlw	0
 17161   011854  6E22               	movwf	___fladd@a^(0+1280),c
 17162   011856  0E00               	movlw	0
 17163   011858  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17164   01185A  0E80               	movlw	128
 17165   01185C  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17166   01185E  0E03               	movlw	3
 17167   011860  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17168   011862  EC1B  F09B         	call	___fladd	;wreg free
 17169   011866  C51E  F59B         	movff	?___fladd,atanf@z
 17170   01186A  C51F  F59C         	movff	?___fladd+1,atanf@z+1
 17171   01186E  C520  F59D         	movff	?___fladd+2,atanf@z+2
 17172   011872  C521  F59E         	movff	?___fladd+3,atanf@z+3
 17173   011876  0105               	movlb	5	; () banked
 17174   011878  5195               	movf	atanf@sign& (0+255),w,b
 17175   01187A  A4D8               	btfss	status,2,c
 17176   01187C  EF42  F08C         	goto	u6601
 17177   011880  EF44  F08C         	goto	u6600
 17178   011884                     u6601:
 17179   011884  EF4E  F08C         	goto	l8723
 17180   011888                     u6600:
 17181   011888                     l8721:
 17182                           
 17183                           ; BSR set to: 5
 17184   011888  C59B  F575         	movff	atanf@z,?_atanf
 17185   01188C  C59C  F576         	movff	atanf@z+1,?_atanf+1
 17186   011890  C59D  F577         	movff	atanf@z+2,?_atanf+2
 17187   011894  C59E  F578         	movff	atanf@z+3,?_atanf+3
 17188   011898  EF97  F08F         	goto	l2147
 17189   01189C                     l8723:
 17190                           
 17191                           ; BSR set to: 5
 17192   01189C  C59B  F501         	movff	atanf@z,___flneg@f1
 17193   0118A0  C59C  F502         	movff	atanf@z+1,___flneg@f1+1
 17194   0118A4  C59D  F503         	movff	atanf@z+2,___flneg@f1+2
 17195   0118A8  C59E  F504         	movff	atanf@z+3,___flneg@f1+3
 17196   0118AC  EC6F  F0B7         	call	___flneg	;wreg free
 17197   0118B0  C501  F575         	movff	?___flneg,?_atanf
 17198   0118B4  C502  F576         	movff	?___flneg+1,?_atanf+1
 17199   0118B8  C503  F577         	movff	?___flneg+2,?_atanf+2
 17200   0118BC  C504  F578         	movff	?___flneg+3,?_atanf+3
 17201   0118C0  EF97  F08F         	goto	l2147
 17202   0118C4                     l8727:
 17203                           
 17204                           ; BSR set to: 5
 17205   0118C4  0EE0               	movlw	224
 17206   0118C6  5DA1               	subwf	(atanf@ix+2)& (0+255),w,b
 17207   0118C8  0E3E               	movlw	62
 17208   0118CA  59A2               	subwfb	(atanf@ix+3)& (0+255),w,b
 17209   0118CC  B0D8               	btfsc	status,0,c
 17210   0118CE  EF6B  F08C         	goto	u6611
 17211   0118D2  EF6D  F08C         	goto	u6610
 17212   0118D6                     u6611:
 17213   0118D6  EF7D  F08C         	goto	l8733
 17214   0118DA                     u6610:
 17215   0118DA                     
 17216                           ; BSR set to: 5
 17217   0118DA  0E80               	movlw	128
 17218   0118DC  5DA1               	subwf	(atanf@ix+2)& (0+255),w,b
 17219   0118DE  0E39               	movlw	57
 17220   0118E0  59A2               	subwfb	(atanf@ix+3)& (0+255),w,b
 17221   0118E2  B0D8               	btfsc	status,0,c
 17222   0118E4  EF76  F08C         	goto	u6621
 17223   0118E8  EF78  F08C         	goto	u6620
 17224   0118EC                     u6621:
 17225   0118EC  EF7A  F08C         	goto	l2153
 17226   0118F0                     u6620:
 17227   0118F0  EF0D  F08C         	goto	l8715
 17228   0118F4                     l2153:
 17229                           
 17230                           ; BSR set to: 5
 17231   0118F4  699A               	setf	atanf@id& (0+255),b
 17232   0118F6  EFB6  F08D         	goto	l8757
 17233   0118FA                     l8733:
 17234                           
 17235                           ; BSR set to: 5
 17236   0118FA  C575  F56D         	movff	atanf@x,fabsf@x
 17237   0118FE  C576  F56E         	movff	atanf@x+1,fabsf@x+1
 17238   011902  C577  F56F         	movff	atanf@x+2,fabsf@x+2
 17239   011906  C578  F570         	movff	atanf@x+3,fabsf@x+3
 17240   01190A  EC8B  F0B7         	call	_fabsf	;wreg free
 17241   01190E  C56D  F575         	movff	?_fabsf,atanf@x
 17242   011912  C56E  F576         	movff	?_fabsf+1,atanf@x+1
 17243   011916  C56F  F577         	movff	?_fabsf+2,atanf@x+2
 17244   01191A  C570  F578         	movff	?_fabsf+3,atanf@x+3
 17245   01191E  0E98               	movlw	152
 17246   011920  0105               	movlb	5	; () banked
 17247   011922  5DA1               	subwf	(atanf@ix+2)& (0+255),w,b
 17248   011924  0E3F               	movlw	63
 17249   011926  59A2               	subwfb	(atanf@ix+3)& (0+255),w,b
 17250   011928  B0D8               	btfsc	status,0,c
 17251   01192A  EF99  F08C         	goto	u6631
 17252   01192E  EF9B  F08C         	goto	u6630
 17253   011932                     u6631:
 17254   011932  EF3B  F08D         	goto	l8747
 17255   011936                     u6630:
 17256   011936                     
 17257                           ; BSR set to: 5
 17258   011936  0E30               	movlw	48
 17259   011938  5DA1               	subwf	(atanf@ix+2)& (0+255),w,b
 17260   01193A  0E3F               	movlw	63
 17261   01193C  59A2               	subwfb	(atanf@ix+3)& (0+255),w,b
 17262   01193E  B0D8               	btfsc	status,0,c
 17263   011940  EFA4  F08C         	goto	u6641
 17264   011944  EFA6  F08C         	goto	u6640
 17265   011948                     u6641:
 17266   011948  EFF9  F08C         	goto	l8743
 17267   01194C                     u6640:
 17268   01194C                     
 17269                           ; BSR set to: 5
 17270   01194C  6B9A               	clrf	atanf@id& (0+255),b
 17271   01194E                     
 17272                           ; BSR set to: 5
 17273   01194E  0E00               	movlw	0
 17274   011950  6E22               	movwf	___fladd@a^(0+1280),c
 17275   011952  0E00               	movlw	0
 17276   011954  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17277   011956  0E80               	movlw	128
 17278   011958  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17279   01195A  0EBF               	movlw	191
 17280   01195C  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17281   01195E  0E00               	movlw	0
 17282   011960  6E09               	movwf	___flmul@a^(0+1280),c
 17283   011962  0E00               	movlw	0
 17284   011964  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 17285   011966  0E00               	movlw	0
 17286   011968  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 17287   01196A  0E40               	movlw	64
 17288   01196C  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 17289   01196E  C575  F505         	movff	atanf@x,___flmul@b
 17290   011972  C576  F506         	movff	atanf@x+1,___flmul@b+1
 17291   011976  C577  F507         	movff	atanf@x+2,___flmul@b+2
 17292   01197A  C578  F508         	movff	atanf@x+3,___flmul@b+3
 17293   01197E  ECB7  F09F         	call	___flmul	;wreg free
 17294   011982  C505  F51E         	movff	?___flmul,___fladd@b
 17295   011986  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 17296   01198A  C507  F520         	movff	?___flmul+2,___fladd@b+2
 17297   01198E  C508  F521         	movff	?___flmul+3,___fladd@b+3
 17298   011992  EC1B  F09B         	call	___fladd	;wreg free
 17299   011996  C51E  F553         	movff	?___fladd,___fldiv@b
 17300   01199A  C51F  F554         	movff	?___fladd+1,___fldiv@b+1
 17301   01199E  C520  F555         	movff	?___fladd+2,___fldiv@b+2
 17302   0119A2  C521  F556         	movff	?___fladd+3,___fldiv@b+3
 17303   0119A6  0E00               	movlw	0
 17304   0119A8  6E22               	movwf	___fladd@a^(0+1280),c
 17305   0119AA  0E00               	movlw	0
 17306   0119AC  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17307   0119AE  0E00               	movlw	0
 17308   0119B0  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17309   0119B2  0E40               	movlw	64
 17310   0119B4  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17311   0119B6  C575  F51E         	movff	atanf@x,___fladd@b
 17312   0119BA  C576  F51F         	movff	atanf@x+1,___fladd@b+1
 17313   0119BE  C577  F520         	movff	atanf@x+2,___fladd@b+2
 17314   0119C2  C578  F521         	movff	atanf@x+3,___fladd@b+3
 17315   0119C6  EC1B  F09B         	call	___fladd	;wreg free
 17316   0119CA  C51E  F557         	movff	?___fladd,___fldiv@a
 17317   0119CE  C51F  F558         	movff	?___fladd+1,___fldiv@a+1
 17318   0119D2  C520  F559         	movff	?___fladd+2,___fldiv@a+2
 17319   0119D6  C521  F55A         	movff	?___fladd+3,___fldiv@a+3
 17320   0119DA  EC9E  F0A5         	call	___fldiv	;wreg free
 17321   0119DE  C553  F575         	movff	?___fldiv,atanf@x
 17322   0119E2  C554  F576         	movff	?___fldiv+1,atanf@x+1
 17323   0119E6  C555  F577         	movff	?___fldiv+2,atanf@x+2
 17324   0119EA  C556  F578         	movff	?___fldiv+3,atanf@x+3
 17325   0119EE  EFB6  F08D         	goto	l8757
 17326   0119F2                     l8743:
 17327                           
 17328                           ; BSR set to: 5
 17329   0119F2  0E01               	movlw	1
 17330   0119F4  6F9A               	movwf	atanf@id& (0+255),b
 17331   0119F6                     
 17332                           ; BSR set to: 5
 17333   0119F6  0E00               	movlw	0
 17334   0119F8  6E22               	movwf	___fladd@a^(0+1280),c
 17335   0119FA  0E00               	movlw	0
 17336   0119FC  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17337   0119FE  0E80               	movlw	128
 17338   011A00  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17339   011A02  0EBF               	movlw	191
 17340   011A04  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17341   011A06  C575  F51E         	movff	atanf@x,___fladd@b
 17342   011A0A  C576  F51F         	movff	atanf@x+1,___fladd@b+1
 17343   011A0E  C577  F520         	movff	atanf@x+2,___fladd@b+2
 17344   011A12  C578  F521         	movff	atanf@x+3,___fladd@b+3
 17345   011A16  EC1B  F09B         	call	___fladd	;wreg free
 17346   011A1A  C51E  F553         	movff	?___fladd,___fldiv@b
 17347   011A1E  C51F  F554         	movff	?___fladd+1,___fldiv@b+1
 17348   011A22  C520  F555         	movff	?___fladd+2,___fldiv@b+2
 17349   011A26  C521  F556         	movff	?___fladd+3,___fldiv@b+3
 17350   011A2A  0E00               	movlw	0
 17351   011A2C  6E22               	movwf	___fladd@a^(0+1280),c
 17352   011A2E  0E00               	movlw	0
 17353   011A30  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17354   011A32  0E80               	movlw	128
 17355   011A34  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17356   011A36  0E3F               	movlw	63
 17357   011A38  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17358   011A3A  C575  F51E         	movff	atanf@x,___fladd@b
 17359   011A3E  C576  F51F         	movff	atanf@x+1,___fladd@b+1
 17360   011A42  C577  F520         	movff	atanf@x+2,___fladd@b+2
 17361   011A46  C578  F521         	movff	atanf@x+3,___fladd@b+3
 17362   011A4A  EC1B  F09B         	call	___fladd	;wreg free
 17363   011A4E  C51E  F557         	movff	?___fladd,___fldiv@a
 17364   011A52  C51F  F558         	movff	?___fladd+1,___fldiv@a+1
 17365   011A56  C520  F559         	movff	?___fladd+2,___fldiv@a+2
 17366   011A5A  C521  F55A         	movff	?___fladd+3,___fldiv@a+3
 17367   011A5E  EC9E  F0A5         	call	___fldiv	;wreg free
 17368   011A62  C553  F575         	movff	?___fldiv,atanf@x
 17369   011A66  C554  F576         	movff	?___fldiv+1,atanf@x+1
 17370   011A6A  C555  F577         	movff	?___fldiv+2,atanf@x+2
 17371   011A6E  C556  F578         	movff	?___fldiv+3,atanf@x+3
 17372   011A72  EFB6  F08D         	goto	l8757
 17373   011A76                     l8747:
 17374                           
 17375                           ; BSR set to: 5
 17376   011A76  0E1C               	movlw	28
 17377   011A78  5DA1               	subwf	(atanf@ix+2)& (0+255),w,b
 17378   011A7A  0E40               	movlw	64
 17379   011A7C  59A2               	subwfb	(atanf@ix+3)& (0+255),w,b
 17380   011A7E  B0D8               	btfsc	status,0,c
 17381   011A80  EF44  F08D         	goto	u6651
 17382   011A84  EF46  F08D         	goto	u6650
 17383   011A88                     u6651:
 17384   011A88  EF9A  F08D         	goto	l8753
 17385   011A8C                     u6650:
 17386   011A8C                     
 17387                           ; BSR set to: 5
 17388   011A8C  0E02               	movlw	2
 17389   011A8E  6F9A               	movwf	atanf@id& (0+255),b
 17390   011A90                     
 17391                           ; BSR set to: 5
 17392   011A90  0E00               	movlw	0
 17393   011A92  6E22               	movwf	___fladd@a^(0+1280),c
 17394   011A94  0E00               	movlw	0
 17395   011A96  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17396   011A98  0EC0               	movlw	192
 17397   011A9A  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17398   011A9C  0EBF               	movlw	191
 17399   011A9E  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17400   011AA0  C575  F51E         	movff	atanf@x,___fladd@b
 17401   011AA4  C576  F51F         	movff	atanf@x+1,___fladd@b+1
 17402   011AA8  C577  F520         	movff	atanf@x+2,___fladd@b+2
 17403   011AAC  C578  F521         	movff	atanf@x+3,___fladd@b+3
 17404   011AB0  EC1B  F09B         	call	___fladd	;wreg free
 17405   011AB4  C51E  F553         	movff	?___fladd,___fldiv@b
 17406   011AB8  C51F  F554         	movff	?___fladd+1,___fldiv@b+1
 17407   011ABC  C520  F555         	movff	?___fladd+2,___fldiv@b+2
 17408   011AC0  C521  F556         	movff	?___fladd+3,___fldiv@b+3
 17409   011AC4  0E00               	movlw	0
 17410   011AC6  6E22               	movwf	___fladd@a^(0+1280),c
 17411   011AC8  0E00               	movlw	0
 17412   011ACA  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17413   011ACC  0E80               	movlw	128
 17414   011ACE  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17415   011AD0  0E3F               	movlw	63
 17416   011AD2  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17417   011AD4  0E00               	movlw	0
 17418   011AD6  6E09               	movwf	___flmul@a^(0+1280),c
 17419   011AD8  0E00               	movlw	0
 17420   011ADA  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 17421   011ADC  0EC0               	movlw	192
 17422   011ADE  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 17423   011AE0  0E3F               	movlw	63
 17424   011AE2  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 17425   011AE4  C575  F505         	movff	atanf@x,___flmul@b
 17426   011AE8  C576  F506         	movff	atanf@x+1,___flmul@b+1
 17427   011AEC  C577  F507         	movff	atanf@x+2,___flmul@b+2
 17428   011AF0  C578  F508         	movff	atanf@x+3,___flmul@b+3
 17429   011AF4  ECB7  F09F         	call	___flmul	;wreg free
 17430   011AF8  C505  F51E         	movff	?___flmul,___fladd@b
 17431   011AFC  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 17432   011B00  C507  F520         	movff	?___flmul+2,___fladd@b+2
 17433   011B04  C508  F521         	movff	?___flmul+3,___fladd@b+3
 17434   011B08  EC1B  F09B         	call	___fladd	;wreg free
 17435   011B0C  C51E  F557         	movff	?___fladd,___fldiv@a
 17436   011B10  C51F  F558         	movff	?___fladd+1,___fldiv@a+1
 17437   011B14  C520  F559         	movff	?___fladd+2,___fldiv@a+2
 17438   011B18  C521  F55A         	movff	?___fladd+3,___fldiv@a+3
 17439   011B1C  EC9E  F0A5         	call	___fldiv	;wreg free
 17440   011B20  C553  F575         	movff	?___fldiv,atanf@x
 17441   011B24  C554  F576         	movff	?___fldiv+1,atanf@x+1
 17442   011B28  C555  F577         	movff	?___fldiv+2,atanf@x+2
 17443   011B2C  C556  F578         	movff	?___fldiv+3,atanf@x+3
 17444   011B30  EFB6  F08D         	goto	l8757
 17445   011B34                     l8753:
 17446                           
 17447                           ; BSR set to: 5
 17448   011B34  0E03               	movlw	3
 17449   011B36  6F9A               	movwf	atanf@id& (0+255),b
 17450   011B38                     
 17451                           ; BSR set to: 5
 17452   011B38  0E00               	movlw	0
 17453   011B3A  6E53               	movwf	___fldiv@b^(0+1280),c
 17454   011B3C  0E00               	movlw	0
 17455   011B3E  6E54               	movwf	(___fldiv@b+1)^(0+1280),c
 17456   011B40  0E80               	movlw	128
 17457   011B42  6E55               	movwf	(___fldiv@b+2)^(0+1280),c
 17458   011B44  0EBF               	movlw	191
 17459   011B46  6E56               	movwf	(___fldiv@b+3)^(0+1280),c
 17460   011B48  C575  F557         	movff	atanf@x,___fldiv@a
 17461   011B4C  C576  F558         	movff	atanf@x+1,___fldiv@a+1
 17462   011B50  C577  F559         	movff	atanf@x+2,___fldiv@a+2
 17463   011B54  C578  F55A         	movff	atanf@x+3,___fldiv@a+3
 17464   011B58  EC9E  F0A5         	call	___fldiv	;wreg free
 17465   011B5C  C553  F575         	movff	?___fldiv,atanf@x
 17466   011B60  C554  F576         	movff	?___fldiv+1,atanf@x+1
 17467   011B64  C555  F577         	movff	?___fldiv+2,atanf@x+2
 17468   011B68  C556  F578         	movff	?___fldiv+3,atanf@x+3
 17469   011B6C                     l8757:
 17470   011B6C  C575  F505         	movff	atanf@x,___flmul@b
 17471   011B70  C576  F506         	movff	atanf@x+1,___flmul@b+1
 17472   011B74  C577  F507         	movff	atanf@x+2,___flmul@b+2
 17473   011B78  C578  F508         	movff	atanf@x+3,___flmul@b+3
 17474   011B7C  C575  F509         	movff	atanf@x,___flmul@a
 17475   011B80  C576  F50A         	movff	atanf@x+1,___flmul@a+1
 17476   011B84  C577  F50B         	movff	atanf@x+2,___flmul@a+2
 17477   011B88  C578  F50C         	movff	atanf@x+3,___flmul@a+3
 17478   011B8C  ECB7  F09F         	call	___flmul	;wreg free
 17479   011B90  C505  F59B         	movff	?___flmul,atanf@z
 17480   011B94  C506  F59C         	movff	?___flmul+1,atanf@z+1
 17481   011B98  C507  F59D         	movff	?___flmul+2,atanf@z+2
 17482   011B9C  C508  F59E         	movff	?___flmul+3,atanf@z+3
 17483   011BA0  C59B  F505         	movff	atanf@z,___flmul@b
 17484   011BA4  C59C  F506         	movff	atanf@z+1,___flmul@b+1
 17485   011BA8  C59D  F507         	movff	atanf@z+2,___flmul@b+2
 17486   011BAC  C59E  F508         	movff	atanf@z+3,___flmul@b+3
 17487   011BB0  C59B  F509         	movff	atanf@z,___flmul@a
 17488   011BB4  C59C  F50A         	movff	atanf@z+1,___flmul@a+1
 17489   011BB8  C59D  F50B         	movff	atanf@z+2,___flmul@a+2
 17490   011BBC  C59E  F50C         	movff	atanf@z+3,___flmul@a+3
 17491   011BC0  ECB7  F09F         	call	___flmul	;wreg free
 17492   011BC4  C505  F596         	movff	?___flmul,atanf@w
 17493   011BC8  C506  F597         	movff	?___flmul+1,atanf@w+1
 17494   011BCC  C507  F598         	movff	?___flmul+2,atanf@w+2
 17495   011BD0  C508  F599         	movff	?___flmul+3,atanf@w+3
 17496   011BD4  0E0D               	movlw	13
 17497   011BD6  6E22               	movwf	___fladd@a^(0+1280),c
 17498   011BD8  0EF5               	movlw	245
 17499   011BDA  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17500   011BDC  0E11               	movlw	17
 17501   011BDE  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17502   011BE0  0E3E               	movlw	62
 17503   011BE2  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17504   011BE4  0E25               	movlw	37
 17505   011BE6  6E09               	movwf	___flmul@a^(0+1280),c
 17506   011BE8  0EAC               	movlw	172
 17507   011BEA  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 17508   011BEC  0E7C               	movlw	124
 17509   011BEE  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 17510   011BF0  0E3D               	movlw	61
 17511   011BF2  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 17512   011BF4  C596  F505         	movff	atanf@w,___flmul@b
 17513   011BF8  C597  F506         	movff	atanf@w+1,___flmul@b+1
 17514   011BFC  C598  F507         	movff	atanf@w+2,___flmul@b+2
 17515   011C00  C599  F508         	movff	atanf@w+3,___flmul@b+3
 17516   011C04  ECB7  F09F         	call	___flmul	;wreg free
 17517   011C08  C505  F51E         	movff	?___flmul,___fladd@b
 17518   011C0C  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 17519   011C10  C507  F520         	movff	?___flmul+2,___fladd@b+2
 17520   011C14  C508  F521         	movff	?___flmul+3,___fladd@b+3
 17521   011C18  EC1B  F09B         	call	___fladd	;wreg free
 17522   011C1C  C51E  F58D         	movff	?___fladd,_atanf$3490
 17523   011C20  C51F  F58E         	movff	?___fladd+1,_atanf$3490+1
 17524   011C24  C520  F58F         	movff	?___fladd+2,_atanf$3490+2
 17525   011C28  C521  F590         	movff	?___fladd+3,_atanf$3490+3
 17526   011C2C  0EA9               	movlw	169
 17527   011C2E  6E22               	movwf	___fladd@a^(0+1280),c
 17528   011C30  0EAA               	movlw	170
 17529   011C32  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17530   011C34  0EAA               	movlw	170
 17531   011C36  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17532   011C38  0E3E               	movlw	62
 17533   011C3A  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17534   011C3C  C596  F509         	movff	atanf@w,___flmul@a
 17535   011C40  C597  F50A         	movff	atanf@w+1,___flmul@a+1
 17536   011C44  C598  F50B         	movff	atanf@w+2,___flmul@a+2
 17537   011C48  C599  F50C         	movff	atanf@w+3,___flmul@a+3
 17538   011C4C  C58D  F505         	movff	_atanf$3490,___flmul@b
 17539   011C50  C58E  F506         	movff	_atanf$3490+1,___flmul@b+1
 17540   011C54  C58F  F507         	movff	_atanf$3490+2,___flmul@b+2
 17541   011C58  C590  F508         	movff	_atanf$3490+3,___flmul@b+3
 17542   011C5C  ECB7  F09F         	call	___flmul	;wreg free
 17543   011C60  C505  F51E         	movff	?___flmul,___fladd@b
 17544   011C64  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 17545   011C68  C507  F520         	movff	?___flmul+2,___fladd@b+2
 17546   011C6C  C508  F521         	movff	?___flmul+3,___fladd@b+3
 17547   011C70  EC1B  F09B         	call	___fladd	;wreg free
 17548   011C74  C51E  F579         	movff	?___fladd,_atanf$3491
 17549   011C78  C51F  F57A         	movff	?___fladd+1,_atanf$3491+1
 17550   011C7C  C520  F57B         	movff	?___fladd+2,_atanf$3491+2
 17551   011C80  C521  F57C         	movff	?___fladd+3,_atanf$3491+3
 17552   011C84  C579  F505         	movff	_atanf$3491,___flmul@b
 17553   011C88  C57A  F506         	movff	_atanf$3491+1,___flmul@b+1
 17554   011C8C  C57B  F507         	movff	_atanf$3491+2,___flmul@b+2
 17555   011C90  C57C  F508         	movff	_atanf$3491+3,___flmul@b+3
 17556   011C94  C59B  F509         	movff	atanf@z,___flmul@a
 17557   011C98  C59C  F50A         	movff	atanf@z+1,___flmul@a+1
 17558   011C9C  C59D  F50B         	movff	atanf@z+2,___flmul@a+2
 17559   011CA0  C59E  F50C         	movff	atanf@z+3,___flmul@a+3
 17560   011CA4  ECB7  F09F         	call	___flmul	;wreg free
 17561   011CA8  C505  F585         	movff	?___flmul,atanf@s1
 17562   011CAC  C506  F586         	movff	?___flmul+1,atanf@s1+1
 17563   011CB0  C507  F587         	movff	?___flmul+2,atanf@s1+2
 17564   011CB4  C508  F588         	movff	?___flmul+3,atanf@s1+3
 17565   011CB8  0E98               	movlw	152
 17566   011CBA  6E22               	movwf	___fladd@a^(0+1280),c
 17567   011CBC  0ECA               	movlw	202
 17568   011CBE  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 17569   011CC0  0E4C               	movlw	76
 17570   011CC2  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 17571   011CC4  0EBE               	movlw	190
 17572   011CC6  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 17573   011CC8  0E47               	movlw	71
 17574   011CCA  6E09               	movwf	___flmul@a^(0+1280),c
 17575   011CCC  0E12               	movlw	18
 17576   011CCE  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 17577   011CD0  0EDA               	movlw	218
 17578   011CD2  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 17579   011CD4  0EBD               	movlw	189
 17580   011CD6  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 17581   011CD8  C596  F505         	movff	atanf@w,___flmul@b
 17582   011CDC  C597  F506         	movff	atanf@w+1,___flmul@b+1
 17583   011CE0  C598  F507         	movff	atanf@w+2,___flmul@b+2
 17584   011CE4  C599  F508         	movff	atanf@w+3,___flmul@b+3
 17585   011CE8  ECB7  F09F         	call	___flmul	;wreg free
 17586   011CEC  C505  F51E         	movff	?___flmul,___fladd@b
 17587   011CF0  C506  F51F         	movff	?___flmul+1,___fladd@b+1
 17588   011CF4  C507  F520         	movff	?___flmul+2,___fladd@b+2
 17589   011CF8  C508  F521         	movff	?___flmul+3,___fladd@b+3
 17590   011CFC  EC1B  F09B         	call	___fladd	;wreg free
 17591   011D00  C51E  F58D         	movff	?___fladd,_atanf$3490
 17592   011D04  C51F  F58E         	movff	?___fladd+1,_atanf$3490+1
 17593   011D08  C520  F58F         	movff	?___fladd+2,_atanf$3490+2
 17594   011D0C  C521  F590         	movff	?___fladd+3,_atanf$3490+3
 17595   011D10  C58D  F505         	movff	_atanf$3490,___flmul@b
 17596   011D14  C58E  F506         	movff	_atanf$3490+1,___flmul@b+1
 17597   011D18  C58F  F507         	movff	_atanf$3490+2,___flmul@b+2
 17598   011D1C  C590  F508         	movff	_atanf$3490+3,___flmul@b+3
 17599   011D20  C596  F509         	movff	atanf@w,___flmul@a
 17600   011D24  C597  F50A         	movff	atanf@w+1,___flmul@a+1
 17601   011D28  C598  F50B         	movff	atanf@w+2,___flmul@a+2
 17602   011D2C  C599  F50C         	movff	atanf@w+3,___flmul@a+3
 17603   011D30  ECB7  F09F         	call	___flmul	;wreg free
 17604   011D34  C505  F589         	movff	?___flmul,atanf@s2
 17605   011D38  C506  F58A         	movff	?___flmul+1,atanf@s2+1
 17606   011D3C  C507  F58B         	movff	?___flmul+2,atanf@s2+2
 17607   011D40  C508  F58C         	movff	?___flmul+3,atanf@s2+3
 17608   011D44  0105               	movlb	5	; () banked
 17609   011D46  BF9A               	btfsc	atanf@id& (0+255),7,b
 17610   011D48  EFAA  F08E         	goto	u6660
 17611   011D4C  EFA8  F08E         	goto	u6661
 17612   011D50                     u6661:
 17613   011D50  EFF2  F08E         	goto	l8779
 17614   011D54                     u6660:
 17615   011D54                     
 17616                           ; BSR set to: 5
 17617   011D54  C575  F509         	movff	atanf@x,___flmul@a
 17618   011D58  C576  F50A         	movff	atanf@x+1,___flmul@a+1
 17619   011D5C  C577  F50B         	movff	atanf@x+2,___flmul@a+2
 17620   011D60  C578  F50C         	movff	atanf@x+3,___flmul@a+3
 17621   011D64  C589  F522         	movff	atanf@s2,___fladd@a
 17622   011D68  C58A  F523         	movff	atanf@s2+1,___fladd@a+1
 17623   011D6C  C58B  F524         	movff	atanf@s2+2,___fladd@a+2
 17624   011D70  C58C  F525         	movff	atanf@s2+3,___fladd@a+3
 17625   011D74  C585  F51E         	movff	atanf@s1,___fladd@b
 17626   011D78  C586  F51F         	movff	atanf@s1+1,___fladd@b+1
 17627   011D7C  C587  F520         	movff	atanf@s1+2,___fladd@b+2
 17628   011D80  C588  F521         	movff	atanf@s1+3,___fladd@b+3
 17629   011D84  EC1B  F09B         	call	___fladd	;wreg free
 17630   011D88  C51E  F505         	movff	?___fladd,___flmul@b
 17631   011D8C  C51F  F506         	movff	?___fladd+1,___flmul@b+1
 17632   011D90  C520  F507         	movff	?___fladd+2,___flmul@b+2
 17633   011D94  C521  F508         	movff	?___fladd+3,___flmul@b+3
 17634   011D98  ECB7  F09F         	call	___flmul	;wreg free
 17635   011D9C  C505  F591         	movff	?___flmul,_atanf$3492
 17636   011DA0  C506  F592         	movff	?___flmul+1,_atanf$3492+1
 17637   011DA4  C507  F593         	movff	?___flmul+2,_atanf$3492+2
 17638   011DA8  C508  F594         	movff	?___flmul+3,_atanf$3492+3
 17639   011DAC  C575  F56D         	movff	atanf@x,___flsub@b
 17640   011DB0  C576  F56E         	movff	atanf@x+1,___flsub@b+1
 17641   011DB4  C577  F56F         	movff	atanf@x+2,___flsub@b+2
 17642   011DB8  C578  F570         	movff	atanf@x+3,___flsub@b+3
 17643   011DBC  C591  F571         	movff	_atanf$3492,___flsub@a
 17644   011DC0  C592  F572         	movff	_atanf$3492+1,___flsub@a+1
 17645   011DC4  C593  F573         	movff	_atanf$3492+2,___flsub@a+2
 17646   011DC8  C594  F574         	movff	_atanf$3492+3,___flsub@a+3
 17647   011DCC  ECED  F0B6         	call	___flsub	;wreg free
 17648   011DD0  C56D  F575         	movff	?___flsub,?_atanf
 17649   011DD4  C56E  F576         	movff	?___flsub+1,?_atanf+1
 17650   011DD8  C56F  F577         	movff	?___flsub+2,?_atanf+2
 17651   011DDC  C570  F578         	movff	?___flsub+3,?_atanf+3
 17652   011DE0  EF97  F08F         	goto	l2147
 17653   011DE4                     l8779:
 17654                           
 17655                           ; BSR set to: 5
 17656   011DE4  C575  F509         	movff	atanf@x,___flmul@a
 17657   011DE8  C576  F50A         	movff	atanf@x+1,___flmul@a+1
 17658   011DEC  C577  F50B         	movff	atanf@x+2,___flmul@a+2
 17659   011DF0  C578  F50C         	movff	atanf@x+3,___flmul@a+3
 17660   011DF4  C589  F522         	movff	atanf@s2,___fladd@a
 17661   011DF8  C58A  F523         	movff	atanf@s2+1,___fladd@a+1
 17662   011DFC  C58B  F524         	movff	atanf@s2+2,___fladd@a+2
 17663   011E00  C58C  F525         	movff	atanf@s2+3,___fladd@a+3
 17664   011E04  C585  F51E         	movff	atanf@s1,___fladd@b
 17665   011E08  C586  F51F         	movff	atanf@s1+1,___fladd@b+1
 17666   011E0C  C587  F520         	movff	atanf@s1+2,___fladd@b+2
 17667   011E10  C588  F521         	movff	atanf@s1+3,___fladd@b+3
 17668   011E14  EC1B  F09B         	call	___fladd	;wreg free
 17669   011E18  C51E  F505         	movff	?___fladd,___flmul@b
 17670   011E1C  C51F  F506         	movff	?___fladd+1,___flmul@b+1
 17671   011E20  C520  F507         	movff	?___fladd+2,___flmul@b+2
 17672   011E24  C521  F508         	movff	?___fladd+3,___flmul@b+3
 17673   011E28  ECB7  F09F         	call	___flmul	;wreg free
 17674   011E2C  C505  F591         	movff	?___flmul,_atanf$3492
 17675   011E30  C506  F592         	movff	?___flmul+1,_atanf$3492+1
 17676   011E34  C507  F593         	movff	?___flmul+2,_atanf$3492+2
 17677   011E38  C508  F594         	movff	?___flmul+3,_atanf$3492+3
 17678   011E3C  0105               	movlb	5	; () banked
 17679   011E3E  519A               	movf	atanf@id& (0+255),w,b
 17680   011E40  0D04               	mullw	4
 17681   011E42  0EA4               	movlw	low _atanlo
 17682   011E44  24F3               	addwf	243,w,c
 17683   011E46  6EF6               	movwf	tblptrl,c
 17684   011E48  0EFE               	movlw	high _atanlo
 17685   011E4A  20F4               	addwfc	244,w,c
 17686   011E4C  6EF7               	movwf	tblptrh,c
 17687   011E4E                     	if	1	;There are 3 active tblptr bytes
 17688   011E4E  6AF8               	clrf	tblptru,c
 17689   011E50  0E00               	movlw	low (__mediumconst shr (0+16))
 17690   011E52  22F8               	addwfc	tblptru,f,c
 17691   011E54                     	endif
 17692   011E54  0009               	tblrd		*+
 17693   011E56  C4F5 F571          	movff	tablat,___flsub@a
 17694   011E5A  0009               	tblrd		*+
 17695   011E5C  C4F5 F572          	movff	tablat,___flsub@a+1
 17696   011E60  0009               	tblrd		*+
 17697   011E62  C4F5 F573          	movff	tablat,___flsub@a+2
 17698   011E66  000A               	tblrd		*-
 17699   011E68  C4F5 F574          	movff	tablat,___flsub@a+3
 17700   011E6C  C591  F56D         	movff	_atanf$3492,___flsub@b
 17701   011E70  C592  F56E         	movff	_atanf$3492+1,___flsub@b+1
 17702   011E74  C593  F56F         	movff	_atanf$3492+2,___flsub@b+2
 17703   011E78  C594  F570         	movff	_atanf$3492+3,___flsub@b+3
 17704   011E7C  ECED  F0B6         	call	___flsub	;wreg free
 17705   011E80  C56D  F57D         	movff	?___flsub,_atanf$3493
 17706   011E84  C56E  F57E         	movff	?___flsub+1,_atanf$3493+1
 17707   011E88  C56F  F57F         	movff	?___flsub+2,_atanf$3493+2
 17708   011E8C  C570  F580         	movff	?___flsub+3,_atanf$3493+3
 17709   011E90  C575  F571         	movff	atanf@x,___flsub@a
 17710   011E94  C576  F572         	movff	atanf@x+1,___flsub@a+1
 17711   011E98  C577  F573         	movff	atanf@x+2,___flsub@a+2
 17712   011E9C  C578  F574         	movff	atanf@x+3,___flsub@a+3
 17713   011EA0  C57D  F56D         	movff	_atanf$3493,___flsub@b
 17714   011EA4  C57E  F56E         	movff	_atanf$3493+1,___flsub@b+1
 17715   011EA8  C57F  F56F         	movff	_atanf$3493+2,___flsub@b+2
 17716   011EAC  C580  F570         	movff	_atanf$3493+3,___flsub@b+3
 17717   011EB0  ECED  F0B6         	call	___flsub	;wreg free
 17718   011EB4  C56D  F581         	movff	?___flsub,_atanf$3494
 17719   011EB8  C56E  F582         	movff	?___flsub+1,_atanf$3494+1
 17720   011EBC  C56F  F583         	movff	?___flsub+2,_atanf$3494+2
 17721   011EC0  C570  F584         	movff	?___flsub+3,_atanf$3494+3
 17722   011EC4  0105               	movlb	5	; () banked
 17723   011EC6  519A               	movf	atanf@id& (0+255),w,b
 17724   011EC8  0D04               	mullw	4
 17725   011ECA  0EB4               	movlw	low _atanhi
 17726   011ECC  24F3               	addwf	243,w,c
 17727   011ECE  6EF6               	movwf	tblptrl,c
 17728   011ED0  0EFE               	movlw	high _atanhi
 17729   011ED2  20F4               	addwfc	244,w,c
 17730   011ED4  6EF7               	movwf	tblptrh,c
 17731   011ED6                     	if	1	;There are 3 active tblptr bytes
 17732   011ED6  6AF8               	clrf	tblptru,c
 17733   011ED8  0E00               	movlw	low (__mediumconst shr (0+16))
 17734   011EDA  22F8               	addwfc	tblptru,f,c
 17735   011EDC                     	endif
 17736   011EDC  0009               	tblrd		*+
 17737   011EDE  C4F5 F56D          	movff	tablat,___flsub@b
 17738   011EE2  0009               	tblrd		*+
 17739   011EE4  C4F5 F56E          	movff	tablat,___flsub@b+1
 17740   011EE8  0009               	tblrd		*+
 17741   011EEA  C4F5 F56F          	movff	tablat,___flsub@b+2
 17742   011EEE  000A               	tblrd		*-
 17743   011EF0  C4F5 F570          	movff	tablat,___flsub@b+3
 17744   011EF4  C581  F571         	movff	_atanf$3494,___flsub@a
 17745   011EF8  C582  F572         	movff	_atanf$3494+1,___flsub@a+1
 17746   011EFC  C583  F573         	movff	_atanf$3494+2,___flsub@a+2
 17747   011F00  C584  F574         	movff	_atanf$3494+3,___flsub@a+3
 17748   011F04  ECED  F0B6         	call	___flsub	;wreg free
 17749   011F08  C56D  F59B         	movff	?___flsub,atanf@z
 17750   011F0C  C56E  F59C         	movff	?___flsub+1,atanf@z+1
 17751   011F10  C56F  F59D         	movff	?___flsub+2,atanf@z+2
 17752   011F14  C570  F59E         	movff	?___flsub+3,atanf@z+3
 17753   011F18  0105               	movlb	5	; () banked
 17754   011F1A  5195               	movf	atanf@sign& (0+255),w,b
 17755   011F1C  A4D8               	btfss	status,2,c
 17756   011F1E  EF93  F08F         	goto	u6671
 17757   011F22  EF95  F08F         	goto	u6670
 17758   011F26                     u6671:
 17759   011F26  EF4E  F08C         	goto	l8723
 17760   011F2A                     u6670:
 17761   011F2A  EF44  F08C         	goto	l8721
 17762   011F2E                     l2147:
 17763   011F2E  0012               	return		;funcret
 17764   011F30                     __end_of_atanf:
 17765                           	callstack 0
 17766                           
 17767 ;; *************** function _fabsf *****************
 17768 ;; Defined at:
 17769 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fabsf.c"
 17770 ;; Parameters:    Size  Location     Type
 17771 ;;  x               4   13[BANK5 ] float 
 17772 ;; Auto vars:     Size  Location     Type
 17773 ;;  u               4   17[BANK5 ] struct .
 17774 ;; Return value:  Size  Location     Type
 17775 ;;                  4   13[BANK5 ] float 
 17776 ;; Registers used:
 17777 ;;		status,2, status,0
 17778 ;; Tracked objects:
 17779 ;;		On entry : 0/0
 17780 ;;		On exit  : 0/0
 17781 ;;		Unchanged: 0/0
 17782 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17783 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17784 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17786 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17787 ;;Total ram usage:        8 bytes
 17788 ;; Hardware stack levels used: 1
 17789 ;; This function calls:
 17790 ;;		Nothing
 17791 ;; This function is called by:
 17792 ;;		_atan2f
 17793 ;;		_atanf
 17794 ;;		___rem_pio2f
 17795 ;; This function uses a non-reentrant model
 17796 ;;
 17797                           
 17798                           	psect	text38
 17799   016F16                     __ptext38:
 17800                           	callstack 0
 17801   016F16                     _fabsf:
 17802                           	callstack 123
 17803   016F16  C704  F571         	movff	fabsf@F465,fabsf@u
 17804   016F1A  C705  F572         	movff	fabsf@F465+1,fabsf@u+1
 17805   016F1E  C706  F573         	movff	fabsf@F465+2,fabsf@u+2
 17806   016F22  C707  F574         	movff	fabsf@F465+3,fabsf@u+3
 17807   016F26  C56D  F571         	movff	fabsf@x,fabsf@u
 17808   016F2A  C56E  F572         	movff	fabsf@x+1,fabsf@u+1
 17809   016F2E  C56F  F573         	movff	fabsf@x+2,fabsf@u+2
 17810   016F32  C570  F574         	movff	fabsf@x+3,fabsf@u+3
 17811   016F36  0105               	movlb	5	; () banked
 17812   016F38  9F74               	bcf	(fabsf@u+3)& (0+255),7,b
 17813   016F3A                     
 17814                           ; BSR set to: 5
 17815   016F3A  C571  F56D         	movff	fabsf@u,?_fabsf
 17816   016F3E  C572  F56E         	movff	fabsf@u+1,?_fabsf+1
 17817   016F42  C573  F56F         	movff	fabsf@u+2,?_fabsf+2
 17818   016F46  C574  F570         	movff	fabsf@u+3,?_fabsf+3
 17819   016F4A                     
 17820                           ; BSR set to: 5
 17821   016F4A  0012               	return		;funcret
 17822   016F4C                     __end_of_fabsf:
 17823                           	callstack 0
 17824                           
 17825 ;; *************** function ___fpclassifyf *****************
 17826 ;; Defined at:
 17827 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__fpclassifyf.c"
 17828 ;; Parameters:    Size  Location     Type
 17829 ;;  x               4    0[COMRAM] float 
 17830 ;; Auto vars:     Size  Location     Type
 17831 ;;  u               4   10[COMRAM] struct .
 17832 ;;  e               2    8[COMRAM] int 
 17833 ;; Return value:  Size  Location     Type
 17834 ;;                  2    0[COMRAM] int 
 17835 ;; Registers used:
 17836 ;;		wreg, status,2, status,0
 17837 ;; Tracked objects:
 17838 ;;		On entry : 0/0
 17839 ;;		On exit  : 0/0
 17840 ;;		Unchanged: 0/0
 17841 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17842 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17843 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17844 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17845 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17846 ;;Total ram usage:       14 bytes
 17847 ;; Hardware stack levels used: 1
 17848 ;; This function calls:
 17849 ;;		Nothing
 17850 ;; This function is called by:
 17851 ;;		_atan2f
 17852 ;;		_atanf
 17853 ;;		_efgtoa
 17854 ;; This function uses a non-reentrant model
 17855 ;;
 17856                           
 17857                           	psect	text39
 17858   016486                     __ptext39:
 17859                           	callstack 0
 17860   016486                     ___fpclassifyf:
 17861                           	callstack 122
 17862   016486  C70C  F50B         	movff	___fpclassifyf@F465,___fpclassifyf@u
 17863   01648A  C70D  F50C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 17864   01648E  C70E  F50D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 17865   016492  C70F  F50E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 17866   016496  C501  F50B         	movff	___fpclassifyf@x,___fpclassifyf@u
 17867   01649A  C502  F50C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 17868   01649E  C503  F50D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 17869   0164A2  C504  F50E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 17870   0164A6  C50B  F505         	movff	___fpclassifyf@u,??___fpclassifyf
 17871   0164AA  C50C  F506         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 17872   0164AE  C50D  F507         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 17873   0164B2  C50E  F508         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 17874   0164B6  0E18               	movlw	24
 17875   0164B8  EF63  F0B2         	goto	u6010
 17876   0164BC                     u6015:
 17877   0164BC  90D8               	bcf	status,0,c
 17878   0164BE  3208               	rrcf	(??___fpclassifyf+3)^(0+1280),f,c
 17879   0164C0  3207               	rrcf	(??___fpclassifyf+2)^(0+1280),f,c
 17880   0164C2  3206               	rrcf	(??___fpclassifyf+1)^(0+1280),f,c
 17881   0164C4  3205               	rrcf	??___fpclassifyf^(0+1280),f,c
 17882   0164C6                     u6010:
 17883   0164C6  2EE8               	decfsz	wreg,f,c
 17884   0164C8  EF5E  F0B2         	goto	u6015
 17885   0164CC  5005               	movf	??___fpclassifyf^(0+1280),w,c
 17886   0164CE  6E09               	movwf	___fpclassifyf@e^(0+1280),c
 17887   0164D0  6A0A               	clrf	(___fpclassifyf@e+1)^(0+1280),c
 17888   0164D2  5009               	movf	___fpclassifyf@e^(0+1280),w,c
 17889   0164D4  100A               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
 17890   0164D6  A4D8               	btfss	status,2,c
 17891   0164D8  EF70  F0B2         	goto	u6021
 17892   0164DC  EF72  F0B2         	goto	u6020
 17893   0164E0                     u6021:
 17894   0164E0  EF92  F0B2         	goto	l8377
 17895   0164E4                     u6020:
 17896   0164E4  90D8               	bcf	status,0,c
 17897   0164E6  340B               	rlcf	___fpclassifyf@u^(0+1280),w,c
 17898   0164E8  6E05               	movwf	??___fpclassifyf^(0+1280),c
 17899   0164EA  340C               	rlcf	(___fpclassifyf@u+1)^(0+1280),w,c
 17900   0164EC  6E06               	movwf	(??___fpclassifyf+1)^(0+1280),c
 17901   0164EE  340D               	rlcf	(___fpclassifyf@u+2)^(0+1280),w,c
 17902   0164F0  6E07               	movwf	(??___fpclassifyf+2)^(0+1280),c
 17903   0164F2  340E               	rlcf	(___fpclassifyf@u+3)^(0+1280),w,c
 17904   0164F4  6E08               	movwf	(??___fpclassifyf+3)^(0+1280),c
 17905   0164F6  5005               	movf	??___fpclassifyf^(0+1280),w,c
 17906   0164F8  1006               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
 17907   0164FA  1007               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
 17908   0164FC  1008               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
 17909   0164FE  A4D8               	btfss	status,2,c
 17910   016500  EF84  F0B2         	goto	u6031
 17911   016504  EF86  F0B2         	goto	u6030
 17912   016508                     u6031:
 17913   016508  EF8C  F0B2         	goto	l8373
 17914   01650C                     u6030:
 17915   01650C  0E00               	movlw	0
 17916   01650E  6E02               	movwf	(?___fpclassifyf+1)^(0+1280),c
 17917   016510  0E02               	movlw	2
 17918   016512  6E01               	movwf	?___fpclassifyf^(0+1280),c
 17919   016514  EFC1  F0B2         	goto	l2123
 17920   016518                     l8373:
 17921   016518  0E00               	movlw	0
 17922   01651A  6E02               	movwf	(?___fpclassifyf+1)^(0+1280),c
 17923   01651C  0E03               	movlw	3
 17924   01651E  6E01               	movwf	?___fpclassifyf^(0+1280),c
 17925   016520  EFC1  F0B2         	goto	l2123
 17926   016524                     l8377:
 17927   016524  2809               	incf	___fpclassifyf@e^(0+1280),w,c
 17928   016526  100A               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
 17929   016528  A4D8               	btfss	status,2,c
 17930   01652A  EF99  F0B2         	goto	u6041
 17931   01652E  EF9B  F0B2         	goto	u6040
 17932   016532                     u6041:
 17933   016532  EFBD  F0B2         	goto	l8383
 17934   016536                     u6040:
 17935   016536  C50B  F505         	movff	___fpclassifyf@u,??___fpclassifyf
 17936   01653A  C50C  F506         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 17937   01653E  C50D  F507         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 17938   016542  C50E  F508         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 17939   016546  0E09               	movlw	9
 17940   016548                     u6055:
 17941   016548  90D8               	bcf	status,0,c
 17942   01654A  3605               	rlcf	??___fpclassifyf^(0+1280),f,c
 17943   01654C  3606               	rlcf	(??___fpclassifyf+1)^(0+1280),f,c
 17944   01654E  3607               	rlcf	(??___fpclassifyf+2)^(0+1280),f,c
 17945   016550  3608               	rlcf	(??___fpclassifyf+3)^(0+1280),f,c
 17946   016552  2EE8               	decfsz	wreg,f,c
 17947   016554  EFA4  F0B2         	goto	u6055
 17948   016558  5005               	movf	??___fpclassifyf^(0+1280),w,c
 17949   01655A  1006               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
 17950   01655C  1007               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
 17951   01655E  1008               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
 17952   016560  B4D8               	btfsc	status,2,c
 17953   016562  EFB5  F0B2         	goto	u6061
 17954   016566  EFB8  F0B2         	goto	u6060
 17955   01656A                     u6061:
 17956   01656A  0E01               	movlw	1
 17957   01656C  EFB9  F0B2         	goto	u6070
 17958   016570                     u6060:
 17959   016570  0E00               	movlw	0
 17960   016572                     u6070:
 17961   016572  6E01               	movwf	?___fpclassifyf^(0+1280),c
 17962   016574  6A02               	clrf	(?___fpclassifyf+1)^(0+1280),c
 17963   016576  EFC1  F0B2         	goto	l2123
 17964   01657A                     l8383:
 17965   01657A  0E00               	movlw	0
 17966   01657C  6E02               	movwf	(?___fpclassifyf+1)^(0+1280),c
 17967   01657E  0E04               	movlw	4
 17968   016580  6E01               	movwf	?___fpclassifyf^(0+1280),c
 17969   016582                     l2123:
 17970   016582  0012               	return		;funcret
 17971   016584                     __end_of___fpclassifyf:
 17972                           	callstack 0
 17973                           
 17974 ;; *************** function ___flsub *****************
 17975 ;; Defined at:
 17976 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
 17977 ;; Parameters:    Size  Location     Type
 17978 ;;  b               4   13[BANK5 ] int 
 17979 ;;  a               4   17[BANK5 ] int 
 17980 ;; Auto vars:     Size  Location     Type
 17981 ;;		None
 17982 ;; Return value:  Size  Location     Type
 17983 ;;                  4   13[BANK5 ] int 
 17984 ;; Registers used:
 17985 ;;		wreg, status,2, status,0, cstack
 17986 ;; Tracked objects:
 17987 ;;		On entry : 0/0
 17988 ;;		On exit  : 0/0
 17989 ;;		Unchanged: 0/0
 17990 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 17991 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17994 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17995 ;;Total ram usage:        8 bytes
 17996 ;; Hardware stack levels used: 1
 17997 ;; Hardware stack levels required when called: 1
 17998 ;; This function calls:
 17999 ;;		___fladd
 18000 ;; This function is called by:
 18001 ;;		_MPU6050_DMP_GetData
 18002 ;;		_MPU6050_ReadAll
 18003 ;;		_atan2f
 18004 ;;		_atanf
 18005 ;;		_cosf
 18006 ;;		___rem_pio2f
 18007 ;;		_efgtoa
 18008 ;;		_MPU6050_ReadAccel
 18009 ;;		_MPU6050_ReadGyro
 18010 ;; This function uses a non-reentrant model
 18011 ;;
 18012                           
 18013                           	psect	text40
 18014   016DDA                     __ptext40:
 18015                           	callstack 0
 18016   016DDA                     ___flsub:
 18017                           	callstack 121
 18018   016DDA  0E00               	movlw	0
 18019   016DDC  0105               	movlb	5	; () banked
 18020   016DDE  1B71               	xorwf	___flsub@a& (0+255),f,b
 18021   016DE0  0E00               	movlw	0
 18022   016DE2  1B72               	xorwf	(___flsub@a+1)& (0+255),f,b
 18023   016DE4  0E00               	movlw	0
 18024   016DE6  1B73               	xorwf	(___flsub@a+2)& (0+255),f,b
 18025   016DE8  0E80               	movlw	128
 18026   016DEA  1B74               	xorwf	(___flsub@a+3)& (0+255),f,b
 18027   016DEC                     
 18028                           ; BSR set to: 5
 18029   016DEC  C56D  F51E         	movff	___flsub@b,___fladd@b
 18030   016DF0  C56E  F51F         	movff	___flsub@b+1,___fladd@b+1
 18031   016DF4  C56F  F520         	movff	___flsub@b+2,___fladd@b+2
 18032   016DF8  C570  F521         	movff	___flsub@b+3,___fladd@b+3
 18033   016DFC  C571  F522         	movff	___flsub@a,___fladd@a
 18034   016E00  C572  F523         	movff	___flsub@a+1,___fladd@a+1
 18035   016E04  C573  F524         	movff	___flsub@a+2,___fladd@a+2
 18036   016E08  C574  F525         	movff	___flsub@a+3,___fladd@a+3
 18037   016E0C  EC1B  F09B         	call	___fladd	;wreg free
 18038   016E10  C51E  F56D         	movff	?___fladd,?___flsub
 18039   016E14  C51F  F56E         	movff	?___fladd+1,?___flsub+1
 18040   016E18  C520  F56F         	movff	?___fladd+2,?___flsub+2
 18041   016E1C  C521  F570         	movff	?___fladd+3,?___flsub+3
 18042   016E20  0012               	return		;funcret
 18043   016E22                     __end_of___flsub:
 18044                           	callstack 0
 18045                           
 18046 ;; *************** function ___fladd *****************
 18047 ;; Defined at:
 18048 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
 18049 ;; Parameters:    Size  Location     Type
 18050 ;;  b               4   29[COMRAM] int 
 18051 ;;  a               4   33[COMRAM] int 
 18052 ;; Auto vars:     Size  Location     Type
 18053 ;;  grs             1   44[COMRAM] unsigned char 
 18054 ;;  bexp            1   43[COMRAM] unsigned char 
 18055 ;;  aexp            1   42[COMRAM] unsigned char 
 18056 ;;  signs           1   41[COMRAM] unsigned char 
 18057 ;; Return value:  Size  Location     Type
 18058 ;;                  4   29[COMRAM] unsigned char 
 18059 ;; Registers used:
 18060 ;;		wreg, status,2, status,0
 18061 ;; Tracked objects:
 18062 ;;		On entry : 0/0
 18063 ;;		On exit  : 0/0
 18064 ;;		Unchanged: 0/0
 18065 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18066 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18067 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18068 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18069 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18070 ;;Total ram usage:       16 bytes
 18071 ;; Hardware stack levels used: 1
 18072 ;; This function calls:
 18073 ;;		Nothing
 18074 ;; This function is called by:
 18075 ;;		_MPU6050_DMP_GetData
 18076 ;;		_MPU6050_ReadAll
 18077 ;;		___flsub
 18078 ;;		_atan2f
 18079 ;;		_atanf
 18080 ;;		_cosf
 18081 ;;		___cosdf
 18082 ;;		___rem_pio2f
 18083 ;;		___sindf
 18084 ;;		_efgtoa
 18085 ;;		_sinf
 18086 ;;		_MPU6050_ReadTemperature
 18087 ;;		_MPU6050_Calibrate
 18088 ;;		_MovingAverage_Update
 18089 ;;		_AnalyzeMovementPattern
 18090 ;; This function uses a non-reentrant model
 18091 ;;
 18092                           
 18093                           	psect	text41
 18094   013636                     __ptext41:
 18095                           	callstack 0
 18096   013636                     ___fladd:
 18097                           	callstack 121
 18098   013636  5021               	movf	(___fladd@b+3)^(0+1280),w,c
 18099   013638  0B80               	andlw	128
 18100   01363A  6E2A               	movwf	___fladd@signs^(0+1280),c
 18101   01363C  5021               	movf	(___fladd@b+3)^(0+1280),w,c
 18102   01363E  2421               	addwf	(___fladd@b+3)^(0+1280),w,c
 18103   013640  6E2C               	movwf	___fladd@bexp^(0+1280),c
 18104   013642  AE20               	btfss	(___fladd@b+2)^(0+1280),7,c
 18105   013644  EF26  F09B         	goto	u4841
 18106   013648  EF28  F09B         	goto	u4840
 18107   01364C                     u4841:
 18108   01364C  EF29  F09B         	goto	l7561
 18109   013650                     u4840:
 18110   013650  802C               	bsf	___fladd@bexp^(0+1280),0,c
 18111   013652                     l7561:
 18112   013652  502C               	movf	___fladd@bexp^(0+1280),w,c
 18113   013654  B4D8               	btfsc	status,2,c
 18114   013656  EF2F  F09B         	goto	u4851
 18115   01365A  EF31  F09B         	goto	u4850
 18116   01365E                     u4851:
 18117   01365E  EF45  F09B         	goto	l7571
 18118   013662                     u4850:
 18119   013662  282C               	incf	___fladd@bexp^(0+1280),w,c
 18120   013664  A4D8               	btfss	status,2,c
 18121   013666  EF37  F09B         	goto	u4861
 18122   01366A  EF39  F09B         	goto	u4860
 18123   01366E                     u4861:
 18124   01366E  EF41  F09B         	goto	l7567
 18125   013672                     u4860:
 18126   013672  0E00               	movlw	0
 18127   013674  6E1E               	movwf	___fladd@b^(0+1280),c
 18128   013676  0E00               	movlw	0
 18129   013678  6E1F               	movwf	(___fladd@b+1)^(0+1280),c
 18130   01367A  0E00               	movlw	0
 18131   01367C  6E20               	movwf	(___fladd@b+2)^(0+1280),c
 18132   01367E  0E00               	movlw	0
 18133   013680  6E21               	movwf	(___fladd@b+3)^(0+1280),c
 18134   013682                     l7567:
 18135   013682  8E20               	bsf	(___fladd@b+2)^(0+1280),7,c
 18136   013684  6A21               	clrf	(___fladd@b+3)^(0+1280),c
 18137   013686  EF4D  F09B         	goto	l7573
 18138   01368A                     l7571:
 18139   01368A  0E00               	movlw	0
 18140   01368C  6E1E               	movwf	___fladd@b^(0+1280),c
 18141   01368E  0E00               	movlw	0
 18142   013690  6E1F               	movwf	(___fladd@b+1)^(0+1280),c
 18143   013692  0E00               	movlw	0
 18144   013694  6E20               	movwf	(___fladd@b+2)^(0+1280),c
 18145   013696  0E00               	movlw	0
 18146   013698  6E21               	movwf	(___fladd@b+3)^(0+1280),c
 18147   01369A                     l7573:
 18148   01369A  5025               	movf	(___fladd@a+3)^(0+1280),w,c
 18149   01369C  0B80               	andlw	128
 18150   01369E  6E2B               	movwf	___fladd@aexp^(0+1280),c
 18151   0136A0  502A               	movf	___fladd@signs^(0+1280),w,c
 18152   0136A2  182B               	xorwf	___fladd@aexp^(0+1280),w,c
 18153   0136A4  B4D8               	btfsc	status,2,c
 18154   0136A6  EF57  F09B         	goto	u4871
 18155   0136AA  EF59  F09B         	goto	u4870
 18156   0136AE                     u4871:
 18157   0136AE  EF5A  F09B         	goto	l7579
 18158   0136B2                     u4870:
 18159   0136B2  8C2A               	bsf	___fladd@signs^(0+1280),6,c
 18160   0136B4                     l7579:
 18161   0136B4  5025               	movf	(___fladd@a+3)^(0+1280),w,c
 18162   0136B6  2425               	addwf	(___fladd@a+3)^(0+1280),w,c
 18163   0136B8  6E2B               	movwf	___fladd@aexp^(0+1280),c
 18164   0136BA  AE24               	btfss	(___fladd@a+2)^(0+1280),7,c
 18165   0136BC  EF62  F09B         	goto	u4881
 18166   0136C0  EF64  F09B         	goto	u4880
 18167   0136C4                     u4881:
 18168   0136C4  EF65  F09B         	goto	l7585
 18169   0136C8                     u4880:
 18170   0136C8  802B               	bsf	___fladd@aexp^(0+1280),0,c
 18171   0136CA                     l7585:
 18172   0136CA  502B               	movf	___fladd@aexp^(0+1280),w,c
 18173   0136CC  B4D8               	btfsc	status,2,c
 18174   0136CE  EF6B  F09B         	goto	u4891
 18175   0136D2  EF6D  F09B         	goto	u4890
 18176   0136D6                     u4891:
 18177   0136D6  EF81  F09B         	goto	l7595
 18178   0136DA                     u4890:
 18179   0136DA  282B               	incf	___fladd@aexp^(0+1280),w,c
 18180   0136DC  A4D8               	btfss	status,2,c
 18181   0136DE  EF73  F09B         	goto	u4901
 18182   0136E2  EF75  F09B         	goto	u4900
 18183   0136E6                     u4901:
 18184   0136E6  EF7D  F09B         	goto	l7591
 18185   0136EA                     u4900:
 18186   0136EA  0E00               	movlw	0
 18187   0136EC  6E22               	movwf	___fladd@a^(0+1280),c
 18188   0136EE  0E00               	movlw	0
 18189   0136F0  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 18190   0136F2  0E00               	movlw	0
 18191   0136F4  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 18192   0136F6  0E00               	movlw	0
 18193   0136F8  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 18194   0136FA                     l7591:
 18195   0136FA  8E24               	bsf	(___fladd@a+2)^(0+1280),7,c
 18196   0136FC  6A25               	clrf	(___fladd@a+3)^(0+1280),c
 18197   0136FE  EF89  F09B         	goto	l7597
 18198   013702                     l7595:
 18199   013702  0E00               	movlw	0
 18200   013704  6E22               	movwf	___fladd@a^(0+1280),c
 18201   013706  0E00               	movlw	0
 18202   013708  6E23               	movwf	(___fladd@a+1)^(0+1280),c
 18203   01370A  0E00               	movlw	0
 18204   01370C  6E24               	movwf	(___fladd@a+2)^(0+1280),c
 18205   01370E  0E00               	movlw	0
 18206   013710  6E25               	movwf	(___fladd@a+3)^(0+1280),c
 18207   013712                     l7597:
 18208   013712  502C               	movf	___fladd@bexp^(0+1280),w,c
 18209   013714  5C2B               	subwf	___fladd@aexp^(0+1280),w,c
 18210   013716  B0D8               	btfsc	status,0,c
 18211   013718  EF90  F09B         	goto	u4911
 18212   01371C  EF92  F09B         	goto	u4910
 18213   013720                     u4911:
 18214   013720  EFB9  F09B         	goto	l7633
 18215   013724                     u4910:
 18216   013724  AC2A               	btfss	___fladd@signs^(0+1280),6,c
 18217   013726  EF97  F09B         	goto	u4921
 18218   01372A  EF99  F09B         	goto	u4920
 18219   01372E                     u4921:
 18220   01372E  EF9B  F09B         	goto	l7603
 18221   013732                     u4920:
 18222   013732  0E80               	movlw	128
 18223   013734  1A2A               	xorwf	___fladd@signs^(0+1280),f,c
 18224   013736                     l7603:
 18225   013736  C52C  F52D         	movff	___fladd@bexp,___fladd@grs
 18226   01373A  C52B  F52C         	movff	___fladd@aexp,___fladd@bexp
 18227   01373E  C52D  F52B         	movff	___fladd@grs,___fladd@aexp
 18228   013742  C51E  F52D         	movff	___fladd@b,___fladd@grs
 18229   013746  C522  F51E         	movff	___fladd@a,___fladd@b
 18230   01374A  C52D  F522         	movff	___fladd@grs,___fladd@a
 18231   01374E  C51F  F52D         	movff	___fladd@b+1,___fladd@grs
 18232   013752  C523  F51F         	movff	___fladd@a+1,___fladd@b+1
 18233   013756  C52D  F523         	movff	___fladd@grs,___fladd@a+1
 18234   01375A  C520  F52D         	movff	___fladd@b+2,___fladd@grs
 18235   01375E  C524  F520         	movff	___fladd@a+2,___fladd@b+2
 18236   013762  C52D  F524         	movff	___fladd@grs,___fladd@a+2
 18237   013766  C521  F52D         	movff	___fladd@b+3,___fladd@grs
 18238   01376A  C525  F521         	movff	___fladd@a+3,___fladd@b+3
 18239   01376E  C52D  F525         	movff	___fladd@grs,___fladd@a+3
 18240   013772                     l7633:
 18241   013772  6A2D               	clrf	___fladd@grs^(0+1280),c
 18242   013774  502C               	movf	___fladd@bexp^(0+1280),w,c
 18243   013776  C52B  F526         	movff	___fladd@aexp,??___fladd
 18244   01377A  6A27               	clrf	(??___fladd+1)^(0+1280),c
 18245   01377C  5E26               	subwf	??___fladd^(0+1280),f,c
 18246   01377E  0E00               	movlw	0
 18247   013780  5A27               	subwfb	(??___fladd+1)^(0+1280),f,c
 18248   013782  BE27               	btfsc	(??___fladd+1)^(0+1280),7,c
 18249   013784  EFCD  F09B         	goto	u4931
 18250   013788  5027               	movf	(??___fladd+1)^(0+1280),w,c
 18251   01378A  E109               	bnz	u4930
 18252   01378C  0E1A               	movlw	26
 18253   01378E  5C26               	subwf	??___fladd^(0+1280),w,c
 18254   013790  A0D8               	btfss	status,0,c
 18255   013792  EFCD  F09B         	goto	u4931
 18256   013796  EFCF  F09B         	goto	u4930
 18257   01379A                     u4931:
 18258   01379A  EF06  F09C         	goto	l1912
 18259   01379E                     u4930:
 18260   01379E  501E               	movf	___fladd@b^(0+1280),w,c
 18261   0137A0  101F               	iorwf	(___fladd@b+1)^(0+1280),w,c
 18262   0137A2  1020               	iorwf	(___fladd@b+2)^(0+1280),w,c
 18263   0137A4  1021               	iorwf	(___fladd@b+3)^(0+1280),w,c
 18264   0137A6  A4D8               	btfss	status,2,c
 18265   0137A8  EFD8  F09B         	goto	u4941
 18266   0137AC  EFDB  F09B         	goto	u4940
 18267   0137B0                     u4941:
 18268   0137B0  0E01               	movlw	1
 18269   0137B2  EFDC  F09B         	goto	u4950
 18270   0137B6                     u4940:
 18271   0137B6  0E00               	movlw	0
 18272   0137B8                     u4950:
 18273   0137B8  6E2D               	movwf	___fladd@grs^(0+1280),c
 18274   0137BA  0E00               	movlw	0
 18275   0137BC  6E1E               	movwf	___fladd@b^(0+1280),c
 18276   0137BE  0E00               	movlw	0
 18277   0137C0  6E1F               	movwf	(___fladd@b+1)^(0+1280),c
 18278   0137C2  0E00               	movlw	0
 18279   0137C4  6E20               	movwf	(___fladd@b+2)^(0+1280),c
 18280   0137C6  0E00               	movlw	0
 18281   0137C8  6E21               	movwf	(___fladd@b+3)^(0+1280),c
 18282   0137CA  C52B  F52C         	movff	___fladd@aexp,___fladd@bexp
 18283   0137CE  EF0F  F09C         	goto	l1911
 18284   0137D2                     l1913:
 18285   0137D2  A02D               	btfss	___fladd@grs^(0+1280),0,c
 18286   0137D4  EFEE  F09B         	goto	u4961
 18287   0137D8  EFF0  F09B         	goto	u4960
 18288   0137DC                     u4961:
 18289   0137DC  EFF6  F09B         	goto	l7643
 18290   0137E0                     u4960:
 18291   0137E0  90D8               	bcf	status,0,c
 18292   0137E2  302D               	rrcf	___fladd@grs^(0+1280),w,c
 18293   0137E4  0901               	iorlw	1
 18294   0137E6  6E2D               	movwf	___fladd@grs^(0+1280),c
 18295   0137E8  EFF8  F09B         	goto	l7645
 18296   0137EC                     l7643:
 18297   0137EC  90D8               	bcf	status,0,c
 18298   0137EE  322D               	rrcf	___fladd@grs^(0+1280),f,c
 18299   0137F0                     l7645:
 18300   0137F0  A01E               	btfss	___fladd@b^(0+1280),0,c
 18301   0137F2  EFFD  F09B         	goto	u4971
 18302   0137F6  EFFF  F09B         	goto	u4970
 18303   0137FA                     u4971:
 18304   0137FA  EF00  F09C         	goto	l7649
 18305   0137FE                     u4970:
 18306   0137FE  8E2D               	bsf	___fladd@grs^(0+1280),7,c
 18307   013800                     l7649:
 18308   013800  3421               	rlcf	(___fladd@b+3)^(0+1280),w,c
 18309   013802  3221               	rrcf	(___fladd@b+3)^(0+1280),f,c
 18310   013804  3220               	rrcf	(___fladd@b+2)^(0+1280),f,c
 18311   013806  321F               	rrcf	(___fladd@b+1)^(0+1280),f,c
 18312   013808  321E               	rrcf	___fladd@b^(0+1280),f,c
 18313   01380A  2A2C               	incf	___fladd@bexp^(0+1280),f,c
 18314   01380C                     l1912:
 18315   01380C  502B               	movf	___fladd@aexp^(0+1280),w,c
 18316   01380E  5C2C               	subwf	___fladd@bexp^(0+1280),w,c
 18317   013810  A0D8               	btfss	status,0,c
 18318   013812  EF0D  F09C         	goto	u4981
 18319   013816  EF0F  F09C         	goto	u4980
 18320   01381A                     u4981:
 18321   01381A  EFE9  F09B         	goto	l1913
 18322   01381E                     u4980:
 18323   01381E                     l1911:
 18324   01381E  BC2A               	btfsc	___fladd@signs^(0+1280),6,c
 18325   013820  EF14  F09C         	goto	u4991
 18326   013824  EF16  F09C         	goto	u4990
 18327   013828                     u4991:
 18328   013828  EF56  F09C         	goto	l7677
 18329   01382C                     u4990:
 18330   01382C  502C               	movf	___fladd@bexp^(0+1280),w,c
 18331   01382E  A4D8               	btfss	status,2,c
 18332   013830  EF1C  F09C         	goto	u5001
 18333   013834  EF1E  F09C         	goto	u5000
 18334   013838                     u5001:
 18335   013838  EF28  F09C         	goto	l7659
 18336   01383C                     u5000:
 18337   01383C  0E00               	movlw	0
 18338   01383E  6E1E               	movwf	?___fladd^(0+1280),c
 18339   013840  0E00               	movlw	0
 18340   013842  6E1F               	movwf	(?___fladd+1)^(0+1280),c
 18341   013844  0E00               	movlw	0
 18342   013846  6E20               	movwf	(?___fladd+2)^(0+1280),c
 18343   013848  0E00               	movlw	0
 18344   01384A  6E21               	movwf	(?___fladd+3)^(0+1280),c
 18345   01384C  EF75  F09D         	goto	l1920
 18346   013850                     l7659:
 18347   013850  5022               	movf	___fladd@a^(0+1280),w,c
 18348   013852  261E               	addwf	___fladd@b^(0+1280),f,c
 18349   013854  5023               	movf	(___fladd@a+1)^(0+1280),w,c
 18350   013856  221F               	addwfc	(___fladd@b+1)^(0+1280),f,c
 18351   013858  5024               	movf	(___fladd@a+2)^(0+1280),w,c
 18352   01385A  2220               	addwfc	(___fladd@b+2)^(0+1280),f,c
 18353   01385C  5025               	movf	(___fladd@a+3)^(0+1280),w,c
 18354   01385E  2221               	addwfc	(___fladd@b+3)^(0+1280),f,c
 18355   013860  A021               	btfss	(___fladd@b+3)^(0+1280),0,c
 18356   013862  EF35  F09C         	goto	u5011
 18357   013866  EF37  F09C         	goto	u5010
 18358   01386A                     u5011:
 18359   01386A  EFE3  F09C         	goto	l1925
 18360   01386E                     u5010:
 18361   01386E  A02D               	btfss	___fladd@grs^(0+1280),0,c
 18362   013870  EF3C  F09C         	goto	u5021
 18363   013874  EF3E  F09C         	goto	u5020
 18364   013878                     u5021:
 18365   013878  EF44  F09C         	goto	l7667
 18366   01387C                     u5020:
 18367   01387C  90D8               	bcf	status,0,c
 18368   01387E  302D               	rrcf	___fladd@grs^(0+1280),w,c
 18369   013880  0901               	iorlw	1
 18370   013882  6E2D               	movwf	___fladd@grs^(0+1280),c
 18371   013884  EF46  F09C         	goto	l7669
 18372   013888                     l7667:
 18373   013888  90D8               	bcf	status,0,c
 18374   01388A  322D               	rrcf	___fladd@grs^(0+1280),f,c
 18375   01388C                     l7669:
 18376   01388C  A01E               	btfss	___fladd@b^(0+1280),0,c
 18377   01388E  EF4B  F09C         	goto	u5031
 18378   013892  EF4D  F09C         	goto	u5030
 18379   013896                     u5031:
 18380   013896  EF4E  F09C         	goto	l7673
 18381   01389A                     u5030:
 18382   01389A  8E2D               	bsf	___fladd@grs^(0+1280),7,c
 18383   01389C                     l7673:
 18384   01389C  3421               	rlcf	(___fladd@b+3)^(0+1280),w,c
 18385   01389E  3221               	rrcf	(___fladd@b+3)^(0+1280),f,c
 18386   0138A0  3220               	rrcf	(___fladd@b+2)^(0+1280),f,c
 18387   0138A2  321F               	rrcf	(___fladd@b+1)^(0+1280),f,c
 18388   0138A4  321E               	rrcf	___fladd@b^(0+1280),f,c
 18389   0138A6  2A2C               	incf	___fladd@bexp^(0+1280),f,c
 18390   0138A8  EFE3  F09C         	goto	l1925
 18391   0138AC                     l7677:
 18392   0138AC  5022               	movf	___fladd@a^(0+1280),w,c
 18393   0138AE  5C1E               	subwf	___fladd@b^(0+1280),w,c
 18394   0138B0  5023               	movf	(___fladd@a+1)^(0+1280),w,c
 18395   0138B2  581F               	subwfb	(___fladd@b+1)^(0+1280),w,c
 18396   0138B4  5024               	movf	(___fladd@a+2)^(0+1280),w,c
 18397   0138B6  5820               	subwfb	(___fladd@b+2)^(0+1280),w,c
 18398   0138B8  5021               	movf	(___fladd@b+3)^(0+1280),w,c
 18399   0138BA  0A80               	xorlw	128
 18400   0138BC  6E26               	movwf	??___fladd^(0+1280),c
 18401   0138BE  5025               	movf	(___fladd@a+3)^(0+1280),w,c
 18402   0138C0  0A80               	xorlw	128
 18403   0138C2  5826               	subwfb	??___fladd^(0+1280),w,c
 18404   0138C4  B0D8               	btfsc	status,0,c
 18405   0138C6  EF67  F09C         	goto	u5041
 18406   0138CA  EF69  F09C         	goto	u5040
 18407   0138CE                     u5041:
 18408   0138CE  EF94  F09C         	goto	l7687
 18409   0138D2                     u5040:
 18410   0138D2  501E               	movf	___fladd@b^(0+1280),w,c
 18411   0138D4  5C22               	subwf	___fladd@a^(0+1280),w,c
 18412   0138D6  6E26               	movwf	??___fladd^(0+1280),c
 18413   0138D8  501F               	movf	(___fladd@b+1)^(0+1280),w,c
 18414   0138DA  5823               	subwfb	(___fladd@a+1)^(0+1280),w,c
 18415   0138DC  6E27               	movwf	(??___fladd+1)^(0+1280),c
 18416   0138DE  5020               	movf	(___fladd@b+2)^(0+1280),w,c
 18417   0138E0  5824               	subwfb	(___fladd@a+2)^(0+1280),w,c
 18418   0138E2  6E28               	movwf	(??___fladd+2)^(0+1280),c
 18419   0138E4  5021               	movf	(___fladd@b+3)^(0+1280),w,c
 18420   0138E6  5825               	subwfb	(___fladd@a+3)^(0+1280),w,c
 18421   0138E8  6E29               	movwf	(??___fladd+3)^(0+1280),c
 18422   0138EA  0EFF               	movlw	255
 18423   0138EC  2426               	addwf	??___fladd^(0+1280),w,c
 18424   0138EE  6E1E               	movwf	___fladd@b^(0+1280),c
 18425   0138F0  0EFF               	movlw	255
 18426   0138F2  2027               	addwfc	(??___fladd+1)^(0+1280),w,c
 18427   0138F4  6E1F               	movwf	(___fladd@b+1)^(0+1280),c
 18428   0138F6  0EFF               	movlw	255
 18429   0138F8  2028               	addwfc	(??___fladd+2)^(0+1280),w,c
 18430   0138FA  6E20               	movwf	(___fladd@b+2)^(0+1280),c
 18431   0138FC  0EFF               	movlw	255
 18432   0138FE  2029               	addwfc	(??___fladd+3)^(0+1280),w,c
 18433   013900  6E21               	movwf	(___fladd@b+3)^(0+1280),c
 18434   013902  0E80               	movlw	128
 18435   013904  1A2A               	xorwf	___fladd@signs^(0+1280),f,c
 18436   013906  6C2D               	negf	___fladd@grs^(0+1280),c
 18437   013908  502D               	movf	___fladd@grs^(0+1280),w,c
 18438   01390A  A4D8               	btfss	status,2,c
 18439   01390C  EF8A  F09C         	goto	u5051
 18440   013910  EF8C  F09C         	goto	u5050
 18441   013914                     u5051:
 18442   013914  EF9C  F09C         	goto	l1928
 18443   013918                     u5050:
 18444   013918  0E01               	movlw	1
 18445   01391A  261E               	addwf	___fladd@b^(0+1280),f,c
 18446   01391C  0E00               	movlw	0
 18447   01391E  221F               	addwfc	(___fladd@b+1)^(0+1280),f,c
 18448   013920  2220               	addwfc	(___fladd@b+2)^(0+1280),f,c
 18449   013922  2221               	addwfc	(___fladd@b+3)^(0+1280),f,c
 18450   013924  EF9C  F09C         	goto	l1928
 18451   013928                     l7687:
 18452   013928  5022               	movf	___fladd@a^(0+1280),w,c
 18453   01392A  5E1E               	subwf	___fladd@b^(0+1280),f,c
 18454   01392C  5023               	movf	(___fladd@a+1)^(0+1280),w,c
 18455   01392E  5A1F               	subwfb	(___fladd@b+1)^(0+1280),f,c
 18456   013930  5024               	movf	(___fladd@a+2)^(0+1280),w,c
 18457   013932  5A20               	subwfb	(___fladd@b+2)^(0+1280),f,c
 18458   013934  5025               	movf	(___fladd@a+3)^(0+1280),w,c
 18459   013936  5A21               	subwfb	(___fladd@b+3)^(0+1280),f,c
 18460   013938                     l1928:
 18461   013938  501E               	movf	___fladd@b^(0+1280),w,c
 18462   01393A  101F               	iorwf	(___fladd@b+1)^(0+1280),w,c
 18463   01393C  1020               	iorwf	(___fladd@b+2)^(0+1280),w,c
 18464   01393E  1021               	iorwf	(___fladd@b+3)^(0+1280),w,c
 18465   013940  A4D8               	btfss	status,2,c
 18466   013942  EFA5  F09C         	goto	u5061
 18467   013946  EFA7  F09C         	goto	u5060
 18468   01394A                     u5061:
 18469   01394A  EFDC  F09C         	goto	l7711
 18470   01394E                     u5060:
 18471   01394E  502D               	movf	___fladd@grs^(0+1280),w,c
 18472   013950  A4D8               	btfss	status,2,c
 18473   013952  EFAD  F09C         	goto	u5071
 18474   013956  EFAF  F09C         	goto	u5070
 18475   01395A                     u5071:
 18476   01395A  EFDC  F09C         	goto	l7711
 18477   01395E                     u5070:
 18478   01395E  0E00               	movlw	0
 18479   013960  6E1E               	movwf	?___fladd^(0+1280),c
 18480   013962  0E00               	movlw	0
 18481   013964  6E1F               	movwf	(?___fladd+1)^(0+1280),c
 18482   013966  0E00               	movlw	0
 18483   013968  6E20               	movwf	(?___fladd+2)^(0+1280),c
 18484   01396A  0E00               	movlw	0
 18485   01396C  6E21               	movwf	(?___fladd+3)^(0+1280),c
 18486   01396E  EF75  F09D         	goto	l1920
 18487   013972                     l7695:
 18488   013972  90D8               	bcf	status,0,c
 18489   013974  361E               	rlcf	___fladd@b^(0+1280),f,c
 18490   013976  361F               	rlcf	(___fladd@b+1)^(0+1280),f,c
 18491   013978  3620               	rlcf	(___fladd@b+2)^(0+1280),f,c
 18492   01397A  3621               	rlcf	(___fladd@b+3)^(0+1280),f,c
 18493   01397C  AE2D               	btfss	___fladd@grs^(0+1280),7,c
 18494   01397E  EFC3  F09C         	goto	u5081
 18495   013982  EFC5  F09C         	goto	u5080
 18496   013986                     u5081:
 18497   013986  EFC6  F09C         	goto	l7701
 18498   01398A                     u5080:
 18499   01398A  801E               	bsf	___fladd@b^(0+1280),0,c
 18500   01398C                     l7701:
 18501   01398C  A02D               	btfss	___fladd@grs^(0+1280),0,c
 18502   01398E  EFCB  F09C         	goto	u5091
 18503   013992  EFCD  F09C         	goto	u5090
 18504   013996                     u5091:
 18505   013996  EFD1  F09C         	goto	l7705
 18506   01399A                     u5090:
 18507   01399A  80D8               	bsf	status,0,c
 18508   01399C  362D               	rlcf	___fladd@grs^(0+1280),f,c
 18509   01399E  EFD3  F09C         	goto	l7707
 18510   0139A2                     l7705:
 18511   0139A2  90D8               	bcf	status,0,c
 18512   0139A4  362D               	rlcf	___fladd@grs^(0+1280),f,c
 18513   0139A6                     l7707:
 18514   0139A6  502C               	movf	___fladd@bexp^(0+1280),w,c
 18515   0139A8  B4D8               	btfsc	status,2,c
 18516   0139AA  EFD9  F09C         	goto	u5101
 18517   0139AE  EFDB  F09C         	goto	u5100
 18518   0139B2                     u5101:
 18519   0139B2  EFDC  F09C         	goto	l7711
 18520   0139B6                     u5100:
 18521   0139B6  062C               	decf	___fladd@bexp^(0+1280),f,c
 18522   0139B8                     l7711:
 18523   0139B8  AE20               	btfss	(___fladd@b+2)^(0+1280),7,c
 18524   0139BA  EFE1  F09C         	goto	u5111
 18525   0139BE  EFE3  F09C         	goto	u5110
 18526   0139C2                     u5111:
 18527   0139C2  EFB9  F09C         	goto	l7695
 18528   0139C6                     u5110:
 18529   0139C6                     l1925:
 18530   0139C6  6A2B               	clrf	___fladd@aexp^(0+1280),c
 18531   0139C8  AE2D               	btfss	___fladd@grs^(0+1280),7,c
 18532   0139CA  EFE9  F09C         	goto	u5121
 18533   0139CE  EFEB  F09C         	goto	u5120
 18534   0139D2                     u5121:
 18535   0139D2  EF03  F09D         	goto	l1937
 18536   0139D6                     u5120:
 18537   0139D6  C52D  F526         	movff	___fladd@grs,??___fladd
 18538   0139DA  0E7F               	movlw	127
 18539   0139DC  1626               	andwf	??___fladd^(0+1280),f,c
 18540   0139DE  B4D8               	btfsc	status,2,c
 18541   0139E0  EFF4  F09C         	goto	u5131
 18542   0139E4  EFF6  F09C         	goto	u5130
 18543   0139E8                     u5131:
 18544   0139E8  EFFA  F09C         	goto	l1938
 18545   0139EC                     u5130:
 18546   0139EC                     l7715:
 18547   0139EC  0E01               	movlw	1
 18548   0139EE  6E2B               	movwf	___fladd@aexp^(0+1280),c
 18549   0139F0  EF03  F09D         	goto	l1937
 18550   0139F4                     l1938:
 18551   0139F4  A01E               	btfss	___fladd@b^(0+1280),0,c
 18552   0139F6  EFFF  F09C         	goto	u5141
 18553   0139FA  EF01  F09D         	goto	u5140
 18554   0139FE                     u5141:
 18555   0139FE  EF03  F09D         	goto	l1937
 18556   013A02                     u5140:
 18557   013A02  EFF6  F09C         	goto	l7715
 18558   013A06                     l1937:
 18559   013A06  502B               	movf	___fladd@aexp^(0+1280),w,c
 18560   013A08  B4D8               	btfsc	status,2,c
 18561   013A0A  EF09  F09D         	goto	u5151
 18562   013A0E  EF0B  F09D         	goto	u5150
 18563   013A12                     u5151:
 18564   013A12  EF36  F09D         	goto	l7727
 18565   013A16                     u5150:
 18566   013A16  0E01               	movlw	1
 18567   013A18  261E               	addwf	___fladd@b^(0+1280),f,c
 18568   013A1A  0E00               	movlw	0
 18569   013A1C  221F               	addwfc	(___fladd@b+1)^(0+1280),f,c
 18570   013A1E  2220               	addwfc	(___fladd@b+2)^(0+1280),f,c
 18571   013A20  2221               	addwfc	(___fladd@b+3)^(0+1280),f,c
 18572   013A22  A021               	btfss	(___fladd@b+3)^(0+1280),0,c
 18573   013A24  EF16  F09D         	goto	u5161
 18574   013A28  EF18  F09D         	goto	u5160
 18575   013A2C                     u5161:
 18576   013A2C  EF36  F09D         	goto	l7727
 18577   013A30                     u5160:
 18578   013A30  C51E  F526         	movff	___fladd@b,??___fladd
 18579   013A34  C51F  F527         	movff	___fladd@b+1,??___fladd+1
 18580   013A38  C520  F528         	movff	___fladd@b+2,??___fladd+2
 18581   013A3C  C521  F529         	movff	___fladd@b+3,??___fladd+3
 18582   013A40  3429               	rlcf	(??___fladd+3)^(0+1280),w,c
 18583   013A42  3229               	rrcf	(??___fladd+3)^(0+1280),f,c
 18584   013A44  3228               	rrcf	(??___fladd+2)^(0+1280),f,c
 18585   013A46  3227               	rrcf	(??___fladd+1)^(0+1280),f,c
 18586   013A48  3226               	rrcf	??___fladd^(0+1280),f,c
 18587   013A4A  C526  F51E         	movff	??___fladd,___fladd@b
 18588   013A4E  C527  F51F         	movff	??___fladd+1,___fladd@b+1
 18589   013A52  C528  F520         	movff	??___fladd+2,___fladd@b+2
 18590   013A56  C529  F521         	movff	??___fladd+3,___fladd@b+3
 18591   013A5A  282C               	incf	___fladd@bexp^(0+1280),w,c
 18592   013A5C  B4D8               	btfsc	status,2,c
 18593   013A5E  EF33  F09D         	goto	u5171
 18594   013A62  EF35  F09D         	goto	u5170
 18595   013A66                     u5171:
 18596   013A66  EF36  F09D         	goto	l7727
 18597   013A6A                     u5170:
 18598   013A6A  2A2C               	incf	___fladd@bexp^(0+1280),f,c
 18599   013A6C                     l7727:
 18600   013A6C  282C               	incf	___fladd@bexp^(0+1280),w,c
 18601   013A6E  B4D8               	btfsc	status,2,c
 18602   013A70  EF3C  F09D         	goto	u5181
 18603   013A74  EF3E  F09D         	goto	u5180
 18604   013A78                     u5181:
 18605   013A78  EF46  F09D         	goto	l7731
 18606   013A7C                     u5180:
 18607   013A7C  502C               	movf	___fladd@bexp^(0+1280),w,c
 18608   013A7E  A4D8               	btfss	status,2,c
 18609   013A80  EF44  F09D         	goto	u5191
 18610   013A84  EF46  F09D         	goto	u5190
 18611   013A88                     u5191:
 18612   013A88  EF57  F09D         	goto	l1944
 18613   013A8C                     u5190:
 18614   013A8C                     l7731:
 18615   013A8C  0E00               	movlw	0
 18616   013A8E  6E1E               	movwf	___fladd@b^(0+1280),c
 18617   013A90  0E00               	movlw	0
 18618   013A92  6E1F               	movwf	(___fladd@b+1)^(0+1280),c
 18619   013A94  0E00               	movlw	0
 18620   013A96  6E20               	movwf	(___fladd@b+2)^(0+1280),c
 18621   013A98  0E00               	movlw	0
 18622   013A9A  6E21               	movwf	(___fladd@b+3)^(0+1280),c
 18623   013A9C  502C               	movf	___fladd@bexp^(0+1280),w,c
 18624   013A9E  A4D8               	btfss	status,2,c
 18625   013AA0  EF54  F09D         	goto	u5201
 18626   013AA4  EF56  F09D         	goto	u5200
 18627   013AA8                     u5201:
 18628   013AA8  EF57  F09D         	goto	l1944
 18629   013AAC                     u5200:
 18630   013AAC  6A2A               	clrf	___fladd@signs^(0+1280),c
 18631   013AAE                     l1944:
 18632   013AAE  A02C               	btfss	___fladd@bexp^(0+1280),0,c
 18633   013AB0  EF5C  F09D         	goto	u5211
 18634   013AB4  EF5E  F09D         	goto	u5210
 18635   013AB8                     u5211:
 18636   013AB8  EF61  F09D         	goto	l7737
 18637   013ABC                     u5210:
 18638   013ABC  8E20               	bsf	(___fladd@b+2)^(0+1280),7,c
 18639   013ABE  EF62  F09D         	goto	l7739
 18640   013AC2                     l7737:
 18641   013AC2  9E20               	bcf	(___fladd@b+2)^(0+1280),7,c
 18642   013AC4                     l7739:
 18643   013AC4  90D8               	bcf	status,0,c
 18644   013AC6  302C               	rrcf	___fladd@bexp^(0+1280),w,c
 18645   013AC8  6E21               	movwf	(___fladd@b+3)^(0+1280),c
 18646   013ACA  AE2A               	btfss	___fladd@signs^(0+1280),7,c
 18647   013ACC  EF6A  F09D         	goto	u5221
 18648   013AD0  EF6C  F09D         	goto	u5220
 18649   013AD4                     u5221:
 18650   013AD4  EF6D  F09D         	goto	l7745
 18651   013AD8                     u5220:
 18652   013AD8  8E21               	bsf	(___fladd@b+3)^(0+1280),7,c
 18653   013ADA                     l7745:
 18654   013ADA  C51E  F51E         	movff	___fladd@b,?___fladd
 18655   013ADE  C51F  F51F         	movff	___fladd@b+1,?___fladd+1
 18656   013AE2  C520  F520         	movff	___fladd@b+2,?___fladd+2
 18657   013AE6  C521  F521         	movff	___fladd@b+3,?___fladd+3
 18658   013AEA                     l1920:
 18659   013AEA  0012               	return		;funcret
 18660   013AEC                     __end_of___fladd:
 18661                           	callstack 0
 18662                           
 18663 ;; *************** function ___flneg *****************
 18664 ;; Defined at:
 18665 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\flneg.c"
 18666 ;; Parameters:    Size  Location     Type
 18667 ;;  f1              4    0[COMRAM] unsigned char 
 18668 ;; Auto vars:     Size  Location     Type
 18669 ;;		None
 18670 ;; Return value:  Size  Location     Type
 18671 ;;                  4    0[COMRAM] unsigned char 
 18672 ;; Registers used:
 18673 ;;		wreg, status,2, status,0
 18674 ;; Tracked objects:
 18675 ;;		On entry : 0/0
 18676 ;;		On exit  : 0/0
 18677 ;;		Unchanged: 0/0
 18678 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18679 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18682 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18683 ;;Total ram usage:        4 bytes
 18684 ;; Hardware stack levels used: 1
 18685 ;; This function calls:
 18686 ;;		Nothing
 18687 ;; This function is called by:
 18688 ;;		_MPU6050_DMP_GetData
 18689 ;;		_MPU6050_ReadAll
 18690 ;;		_main
 18691 ;;		_atan2f
 18692 ;;		_atanf
 18693 ;;		_cosf
 18694 ;;		___rem_pio2f
 18695 ;;		_efgtoa
 18696 ;;		_sinf
 18697 ;;		_AnalyzeMovementPattern
 18698 ;;		_CalculateConfidence
 18699 ;; This function uses a non-reentrant model
 18700 ;;
 18701                           
 18702                           	psect	text42
 18703   016EDE                     __ptext42:
 18704                           	callstack 0
 18705   016EDE                     ___flneg:
 18706                           	callstack 122
 18707   016EDE  5001               	movf	___flneg@f1^(0+1280),w,c
 18708   016EE0  1002               	iorwf	(___flneg@f1+1)^(0+1280),w,c
 18709   016EE2  1003               	iorwf	(___flneg@f1+2)^(0+1280),w,c
 18710   016EE4  1004               	iorwf	(___flneg@f1+3)^(0+1280),w,c
 18711   016EE6  B4D8               	btfsc	status,2,c
 18712   016EE8  EF78  F0B7         	goto	u5931
 18713   016EEC  EF7A  F0B7         	goto	u5930
 18714   016EF0                     u5931:
 18715   016EF0  EF82  F0B7         	goto	l8317
 18716   016EF4                     u5930:
 18717   016EF4  0E00               	movlw	0
 18718   016EF6  1A01               	xorwf	___flneg@f1^(0+1280),f,c
 18719   016EF8  0E00               	movlw	0
 18720   016EFA  1A02               	xorwf	(___flneg@f1+1)^(0+1280),f,c
 18721   016EFC  0E00               	movlw	0
 18722   016EFE  1A03               	xorwf	(___flneg@f1+2)^(0+1280),f,c
 18723   016F00  0E80               	movlw	128
 18724   016F02  1A04               	xorwf	(___flneg@f1+3)^(0+1280),f,c
 18725   016F04                     l8317:
 18726   016F04  C501  F501         	movff	___flneg@f1,?___flneg
 18727   016F08  C502  F502         	movff	___flneg@f1+1,?___flneg+1
 18728   016F0C  C503  F503         	movff	___flneg@f1+2,?___flneg+2
 18729   016F10  C504  F504         	movff	___flneg@f1+3,?___flneg+3
 18730   016F14  0012               	return		;funcret
 18731   016F16                     __end_of___flneg:
 18732                           	callstack 0
 18733                           
 18734 ;; *************** function ___flmul *****************
 18735 ;; Defined at:
 18736 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
 18737 ;; Parameters:    Size  Location     Type
 18738 ;;  b               4    4[COMRAM] unsigned char 
 18739 ;;  a               4    8[COMRAM] unsigned char 
 18740 ;; Auto vars:     Size  Location     Type
 18741 ;;  prod            4   23[COMRAM] struct .
 18742 ;;  grs             4   17[COMRAM] unsigned long 
 18743 ;;  temp            2   27[COMRAM] struct .
 18744 ;;  bexp            1   22[COMRAM] unsigned char 
 18745 ;;  aexp            1   21[COMRAM] unsigned char 
 18746 ;;  sign            1   16[COMRAM] unsigned char 
 18747 ;; Return value:  Size  Location     Type
 18748 ;;                  4    4[COMRAM] unsigned char 
 18749 ;; Registers used:
 18750 ;;		wreg, status,2, status,0, prodl, prodh
 18751 ;; Tracked objects:
 18752 ;;		On entry : 0/0
 18753 ;;		On exit  : 0/0
 18754 ;;		Unchanged: 0/0
 18755 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 18756 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18757 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18758 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18759 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18760 ;;Total ram usage:       25 bytes
 18761 ;; Hardware stack levels used: 1
 18762 ;; This function calls:
 18763 ;;		Nothing
 18764 ;; This function is called by:
 18765 ;;		_MPU6050_DMP_GetData
 18766 ;;		_MPU6050_ReadAll
 18767 ;;		_atanf
 18768 ;;		___cosdf
 18769 ;;		___rem_pio2f
 18770 ;;		___sindf
 18771 ;;		_efgtoa
 18772 ;; This function uses a non-reentrant model
 18773 ;;
 18774                           
 18775                           	psect	text43
 18776   013F6E                     __ptext43:
 18777                           	callstack 0
 18778   013F6E                     ___flmul:
 18779                           	callstack 122
 18780   013F6E  5008               	movf	(___flmul@b+3)^(0+1280),w,c
 18781   013F70  0B80               	andlw	128
 18782   013F72  6E11               	movwf	___flmul@sign^(0+1280),c
 18783   013F74  5008               	movf	(___flmul@b+3)^(0+1280),w,c
 18784   013F76  2408               	addwf	(___flmul@b+3)^(0+1280),w,c
 18785   013F78  6E17               	movwf	___flmul@bexp^(0+1280),c
 18786   013F7A  AE07               	btfss	(___flmul@b+2)^(0+1280),7,c
 18787   013F7C  EFC2  F09F         	goto	u5661
 18788   013F80  EFC4  F09F         	goto	u5660
 18789   013F84                     u5661:
 18790   013F84  EFC5  F09F         	goto	l8147
 18791   013F88                     u5660:
 18792   013F88  8017               	bsf	___flmul@bexp^(0+1280),0,c
 18793   013F8A                     l8147:
 18794   013F8A  5017               	movf	___flmul@bexp^(0+1280),w,c
 18795   013F8C  B4D8               	btfsc	status,2,c
 18796   013F8E  EFCB  F09F         	goto	u5671
 18797   013F92  EFCD  F09F         	goto	u5670
 18798   013F96                     u5671:
 18799   013F96  EFE0  F09F         	goto	l8155
 18800   013F9A                     u5670:
 18801   013F9A  2817               	incf	___flmul@bexp^(0+1280),w,c
 18802   013F9C  A4D8               	btfss	status,2,c
 18803   013F9E  EFD3  F09F         	goto	u5681
 18804   013FA2  EFD5  F09F         	goto	u5680
 18805   013FA6                     u5681:
 18806   013FA6  EFDD  F09F         	goto	l8153
 18807   013FAA                     u5680:
 18808   013FAA  0E00               	movlw	0
 18809   013FAC  6E05               	movwf	___flmul@b^(0+1280),c
 18810   013FAE  0E00               	movlw	0
 18811   013FB0  6E06               	movwf	(___flmul@b+1)^(0+1280),c
 18812   013FB2  0E00               	movlw	0
 18813   013FB4  6E07               	movwf	(___flmul@b+2)^(0+1280),c
 18814   013FB6  0E00               	movlw	0
 18815   013FB8  6E08               	movwf	(___flmul@b+3)^(0+1280),c
 18816   013FBA                     l8153:
 18817   013FBA  8E07               	bsf	(___flmul@b+2)^(0+1280),7,c
 18818   013FBC  EFE8  F09F         	goto	l8157
 18819   013FC0                     l8155:
 18820   013FC0  0E00               	movlw	0
 18821   013FC2  6E05               	movwf	___flmul@b^(0+1280),c
 18822   013FC4  0E00               	movlw	0
 18823   013FC6  6E06               	movwf	(___flmul@b+1)^(0+1280),c
 18824   013FC8  0E00               	movlw	0
 18825   013FCA  6E07               	movwf	(___flmul@b+2)^(0+1280),c
 18826   013FCC  0E00               	movlw	0
 18827   013FCE  6E08               	movwf	(___flmul@b+3)^(0+1280),c
 18828   013FD0                     l8157:
 18829   013FD0  500C               	movf	(___flmul@a+3)^(0+1280),w,c
 18830   013FD2  0B80               	andlw	128
 18831   013FD4  1A11               	xorwf	___flmul@sign^(0+1280),f,c
 18832   013FD6  500C               	movf	(___flmul@a+3)^(0+1280),w,c
 18833   013FD8  240C               	addwf	(___flmul@a+3)^(0+1280),w,c
 18834   013FDA  6E16               	movwf	___flmul@aexp^(0+1280),c
 18835   013FDC  AE0B               	btfss	(___flmul@a+2)^(0+1280),7,c
 18836   013FDE  EFF3  F09F         	goto	u5691
 18837   013FE2  EFF5  F09F         	goto	u5690
 18838   013FE6                     u5691:
 18839   013FE6  EFF6  F09F         	goto	l8165
 18840   013FEA                     u5690:
 18841   013FEA  8016               	bsf	___flmul@aexp^(0+1280),0,c
 18842   013FEC                     l8165:
 18843   013FEC  5016               	movf	___flmul@aexp^(0+1280),w,c
 18844   013FEE  B4D8               	btfsc	status,2,c
 18845   013FF0  EFFC  F09F         	goto	u5701
 18846   013FF4  EFFE  F09F         	goto	u5700
 18847   013FF8                     u5701:
 18848   013FF8  EF11  F0A0         	goto	l8173
 18849   013FFC                     u5700:
 18850   013FFC  2816               	incf	___flmul@aexp^(0+1280),w,c
 18851   013FFE  A4D8               	btfss	status,2,c
 18852   014000  EF04  F0A0         	goto	u5711
 18853   014004  EF06  F0A0         	goto	u5710
 18854   014008                     u5711:
 18855   014008  EF0E  F0A0         	goto	l8171
 18856   01400C                     u5710:
 18857   01400C  0E00               	movlw	0
 18858   01400E  6E09               	movwf	___flmul@a^(0+1280),c
 18859   014010  0E00               	movlw	0
 18860   014012  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 18861   014014  0E00               	movlw	0
 18862   014016  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 18863   014018  0E00               	movlw	0
 18864   01401A  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 18865   01401C                     l8171:
 18866   01401C  8E0B               	bsf	(___flmul@a+2)^(0+1280),7,c
 18867   01401E  EF19  F0A0         	goto	l1997
 18868   014022                     l8173:
 18869   014022  0E00               	movlw	0
 18870   014024  6E09               	movwf	___flmul@a^(0+1280),c
 18871   014026  0E00               	movlw	0
 18872   014028  6E0A               	movwf	(___flmul@a+1)^(0+1280),c
 18873   01402A  0E00               	movlw	0
 18874   01402C  6E0B               	movwf	(___flmul@a+2)^(0+1280),c
 18875   01402E  0E00               	movlw	0
 18876   014030  6E0C               	movwf	(___flmul@a+3)^(0+1280),c
 18877   014032                     l1997:
 18878   014032  5016               	movf	___flmul@aexp^(0+1280),w,c
 18879   014034  B4D8               	btfsc	status,2,c
 18880   014036  EF1F  F0A0         	goto	u5721
 18881   01403A  EF21  F0A0         	goto	u5720
 18882   01403E                     u5721:
 18883   01403E  EF29  F0A0         	goto	l8177
 18884   014042                     u5720:
 18885   014042  5017               	movf	___flmul@bexp^(0+1280),w,c
 18886   014044  A4D8               	btfss	status,2,c
 18887   014046  EF27  F0A0         	goto	u5731
 18888   01404A  EF29  F0A0         	goto	u5730
 18889   01404E                     u5731:
 18890   01404E  EF33  F0A0         	goto	l8181
 18891   014052                     u5730:
 18892   014052                     l8177:
 18893   014052  0E00               	movlw	0
 18894   014054  6E05               	movwf	?___flmul^(0+1280),c
 18895   014056  0E00               	movlw	0
 18896   014058  6E06               	movwf	(?___flmul+1)^(0+1280),c
 18897   01405A  0E00               	movlw	0
 18898   01405C  6E07               	movwf	(?___flmul+2)^(0+1280),c
 18899   01405E  0E00               	movlw	0
 18900   014060  6E08               	movwf	(?___flmul+3)^(0+1280),c
 18901   014062  EFC9  F0A1         	goto	l2001
 18902   014066                     l8181:
 18903   014066  500B               	movf	(___flmul@a+2)^(0+1280),w,c
 18904   014068  0205               	mulwf	___flmul@b^(0+1280),c
 18905   01406A  C4F3 F51C          	movff	prodl,___flmul@temp
 18906   01406E  C4F4 F51D          	movff	prodh,___flmul@temp+1
 18907   014072  501C               	movf	___flmul@temp^(0+1280),w,c
 18908   014074  6E12               	movwf	___flmul@grs^(0+1280),c
 18909   014076  6A13               	clrf	(___flmul@grs+1)^(0+1280),c
 18910   014078  6A14               	clrf	(___flmul@grs+2)^(0+1280),c
 18911   01407A  6A15               	clrf	(___flmul@grs+3)^(0+1280),c
 18912   01407C  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 18913   01407E  6E18               	movwf	___flmul@prod^(0+1280),c
 18914   014080  6A19               	clrf	(___flmul@prod+1)^(0+1280),c
 18915   014082  6A1A               	clrf	(___flmul@prod+2)^(0+1280),c
 18916   014084  6A1B               	clrf	(___flmul@prod+3)^(0+1280),c
 18917   014086  500A               	movf	(___flmul@a+1)^(0+1280),w,c
 18918   014088  0206               	mulwf	(___flmul@b+1)^(0+1280),c
 18919   01408A  C4F3 F51C          	movff	prodl,___flmul@temp
 18920   01408E  C4F4 F51D          	movff	prodh,___flmul@temp+1
 18921   014092  501C               	movf	___flmul@temp^(0+1280),w,c
 18922   014094  2612               	addwf	___flmul@grs^(0+1280),f,c
 18923   014096  0E00               	movlw	0
 18924   014098  2213               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 18925   01409A  2214               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 18926   01409C  2215               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 18927   01409E  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 18928   0140A0  2618               	addwf	___flmul@prod^(0+1280),f,c
 18929   0140A2  0E00               	movlw	0
 18930   0140A4  2219               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 18931   0140A6  221A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 18932   0140A8  221B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 18933   0140AA  5009               	movf	___flmul@a^(0+1280),w,c
 18934   0140AC  0207               	mulwf	(___flmul@b+2)^(0+1280),c
 18935   0140AE  C4F3 F51C          	movff	prodl,___flmul@temp
 18936   0140B2  C4F4 F51D          	movff	prodh,___flmul@temp+1
 18937   0140B6  501C               	movf	___flmul@temp^(0+1280),w,c
 18938   0140B8  2612               	addwf	___flmul@grs^(0+1280),f,c
 18939   0140BA  0E00               	movlw	0
 18940   0140BC  2213               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 18941   0140BE  2214               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 18942   0140C0  2215               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 18943   0140C2  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 18944   0140C4  2618               	addwf	___flmul@prod^(0+1280),f,c
 18945   0140C6  0E00               	movlw	0
 18946   0140C8  2219               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 18947   0140CA  221A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 18948   0140CC  221B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 18949   0140CE  C514  F515         	movff	___flmul@grs+2,___flmul@grs+3
 18950   0140D2  C513  F514         	movff	___flmul@grs+1,___flmul@grs+2
 18951   0140D6  C512  F513         	movff	___flmul@grs,___flmul@grs+1
 18952   0140DA  6A12               	clrf	___flmul@grs^(0+1280),c
 18953   0140DC  5009               	movf	___flmul@a^(0+1280),w,c
 18954   0140DE  0206               	mulwf	(___flmul@b+1)^(0+1280),c
 18955   0140E0  C4F3 F51C          	movff	prodl,___flmul@temp
 18956   0140E4  C4F4 F51D          	movff	prodh,___flmul@temp+1
 18957   0140E8  501C               	movf	___flmul@temp^(0+1280),w,c
 18958   0140EA  2612               	addwf	___flmul@grs^(0+1280),f,c
 18959   0140EC  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 18960   0140EE  2213               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 18961   0140F0  0E00               	movlw	0
 18962   0140F2  2214               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 18963   0140F4  0E00               	movlw	0
 18964   0140F6  2215               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 18965   0140F8  500A               	movf	(___flmul@a+1)^(0+1280),w,c
 18966   0140FA  0205               	mulwf	___flmul@b^(0+1280),c
 18967   0140FC  C4F3 F51C          	movff	prodl,___flmul@temp
 18968   014100  C4F4 F51D          	movff	prodh,___flmul@temp+1
 18969   014104  501C               	movf	___flmul@temp^(0+1280),w,c
 18970   014106  2612               	addwf	___flmul@grs^(0+1280),f,c
 18971   014108  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 18972   01410A  2213               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 18973   01410C  0E00               	movlw	0
 18974   01410E  2214               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 18975   014110  0E00               	movlw	0
 18976   014112  2215               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 18977   014114  C514  F515         	movff	___flmul@grs+2,___flmul@grs+3
 18978   014118  C513  F514         	movff	___flmul@grs+1,___flmul@grs+2
 18979   01411C  C512  F513         	movff	___flmul@grs,___flmul@grs+1
 18980   014120  6A12               	clrf	___flmul@grs^(0+1280),c
 18981   014122  5009               	movf	___flmul@a^(0+1280),w,c
 18982   014124  0205               	mulwf	___flmul@b^(0+1280),c
 18983   014126  C4F3 F51C          	movff	prodl,___flmul@temp
 18984   01412A  C4F4 F51D          	movff	prodh,___flmul@temp+1
 18985   01412E  501C               	movf	___flmul@temp^(0+1280),w,c
 18986   014130  2612               	addwf	___flmul@grs^(0+1280),f,c
 18987   014132  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 18988   014134  2213               	addwfc	(___flmul@grs+1)^(0+1280),f,c
 18989   014136  0E00               	movlw	0
 18990   014138  2214               	addwfc	(___flmul@grs+2)^(0+1280),f,c
 18991   01413A  0E00               	movlw	0
 18992   01413C  2215               	addwfc	(___flmul@grs+3)^(0+1280),f,c
 18993   01413E  500B               	movf	(___flmul@a+2)^(0+1280),w,c
 18994   014140  0206               	mulwf	(___flmul@b+1)^(0+1280),c
 18995   014142  C4F3 F51C          	movff	prodl,___flmul@temp
 18996   014146  C4F4 F51D          	movff	prodh,___flmul@temp+1
 18997   01414A  501C               	movf	___flmul@temp^(0+1280),w,c
 18998   01414C  2618               	addwf	___flmul@prod^(0+1280),f,c
 18999   01414E  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 19000   014150  2219               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 19001   014152  0E00               	movlw	0
 19002   014154  221A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 19003   014156  0E00               	movlw	0
 19004   014158  221B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 19005   01415A  500A               	movf	(___flmul@a+1)^(0+1280),w,c
 19006   01415C  0207               	mulwf	(___flmul@b+2)^(0+1280),c
 19007   01415E  C4F3 F51C          	movff	prodl,___flmul@temp
 19008   014162  C4F4 F51D          	movff	prodh,___flmul@temp+1
 19009   014166  501C               	movf	___flmul@temp^(0+1280),w,c
 19010   014168  2618               	addwf	___flmul@prod^(0+1280),f,c
 19011   01416A  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 19012   01416C  2219               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 19013   01416E  0E00               	movlw	0
 19014   014170  221A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 19015   014172  0E00               	movlw	0
 19016   014174  221B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 19017   014176  500B               	movf	(___flmul@a+2)^(0+1280),w,c
 19018   014178  0207               	mulwf	(___flmul@b+2)^(0+1280),c
 19019   01417A  C4F3 F51C          	movff	prodl,___flmul@temp
 19020   01417E  C4F4 F51D          	movff	prodh,___flmul@temp+1
 19021   014182  501C               	movf	___flmul@temp^(0+1280),w,c
 19022   014184  6E0D               	movwf	??___flmul^(0+1280),c
 19023   014186  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 19024   014188  6E0E               	movwf	(??___flmul+1)^(0+1280),c
 19025   01418A  6A0F               	clrf	(??___flmul+2)^(0+1280),c
 19026   01418C  6A10               	clrf	(??___flmul+3)^(0+1280),c
 19027   01418E  C50F  F510         	movff	??___flmul+2,??___flmul+3
 19028   014192  C50E  F50F         	movff	??___flmul+1,??___flmul+2
 19029   014196  C50D  F50E         	movff	??___flmul,??___flmul+1
 19030   01419A  6A0D               	clrf	??___flmul^(0+1280),c
 19031   01419C  500D               	movf	??___flmul^(0+1280),w,c
 19032   01419E  2618               	addwf	___flmul@prod^(0+1280),f,c
 19033   0141A0  500E               	movf	(??___flmul+1)^(0+1280),w,c
 19034   0141A2  2219               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 19035   0141A4  500F               	movf	(??___flmul+2)^(0+1280),w,c
 19036   0141A6  221A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 19037   0141A8  5010               	movf	(??___flmul+3)^(0+1280),w,c
 19038   0141AA  221B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 19039   0141AC  C512  F50D         	movff	___flmul@grs,??___flmul
 19040   0141B0  C513  F50E         	movff	___flmul@grs+1,??___flmul+1
 19041   0141B4  C514  F50F         	movff	___flmul@grs+2,??___flmul+2
 19042   0141B8  C515  F510         	movff	___flmul@grs+3,??___flmul+3
 19043   0141BC  0E19               	movlw	25
 19044   0141BE  EFE6  F0A0         	goto	u5740
 19045   0141C2                     u5745:
 19046   0141C2  90D8               	bcf	status,0,c
 19047   0141C4  3210               	rrcf	(??___flmul+3)^(0+1280),f,c
 19048   0141C6  320F               	rrcf	(??___flmul+2)^(0+1280),f,c
 19049   0141C8  320E               	rrcf	(??___flmul+1)^(0+1280),f,c
 19050   0141CA  320D               	rrcf	??___flmul^(0+1280),f,c
 19051   0141CC                     u5740:
 19052   0141CC  2EE8               	decfsz	wreg,f,c
 19053   0141CE  EFE1  F0A0         	goto	u5745
 19054   0141D2  500D               	movf	??___flmul^(0+1280),w,c
 19055   0141D4  2618               	addwf	___flmul@prod^(0+1280),f,c
 19056   0141D6  500E               	movf	(??___flmul+1)^(0+1280),w,c
 19057   0141D8  2219               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 19058   0141DA  500F               	movf	(??___flmul+2)^(0+1280),w,c
 19059   0141DC  221A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 19060   0141DE  5010               	movf	(??___flmul+3)^(0+1280),w,c
 19061   0141E0  221B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 19062   0141E2  C514  F515         	movff	___flmul@grs+2,___flmul@grs+3
 19063   0141E6  C513  F514         	movff	___flmul@grs+1,___flmul@grs+2
 19064   0141EA  C512  F513         	movff	___flmul@grs,___flmul@grs+1
 19065   0141EE  6A12               	clrf	___flmul@grs^(0+1280),c
 19066   0141F0  5016               	movf	___flmul@aexp^(0+1280),w,c
 19067   0141F2  C517  F50D         	movff	___flmul@bexp,??___flmul
 19068   0141F6  6A0E               	clrf	(??___flmul+1)^(0+1280),c
 19069   0141F8  260D               	addwf	??___flmul^(0+1280),f,c
 19070   0141FA  0E00               	movlw	0
 19071   0141FC  220E               	addwfc	(??___flmul+1)^(0+1280),f,c
 19072   0141FE  0E82               	movlw	130
 19073   014200  240D               	addwf	??___flmul^(0+1280),w,c
 19074   014202  6E1C               	movwf	___flmul@temp^(0+1280),c
 19075   014204  0EFF               	movlw	255
 19076   014206  200E               	addwfc	(??___flmul+1)^(0+1280),w,c
 19077   014208  6E1D               	movwf	(___flmul@temp+1)^(0+1280),c
 19078   01420A  EF1C  F0A1         	goto	l8229
 19079   01420E                     l8223:
 19080   01420E  90D8               	bcf	status,0,c
 19081   014210  3618               	rlcf	___flmul@prod^(0+1280),f,c
 19082   014212  3619               	rlcf	(___flmul@prod+1)^(0+1280),f,c
 19083   014214  361A               	rlcf	(___flmul@prod+2)^(0+1280),f,c
 19084   014216  361B               	rlcf	(___flmul@prod+3)^(0+1280),f,c
 19085   014218  AE15               	btfss	(___flmul@grs+3)^(0+1280),7,c
 19086   01421A  EF11  F0A1         	goto	u5751
 19087   01421E  EF13  F0A1         	goto	u5750
 19088   014222                     u5751:
 19089   014222  EF14  F0A1         	goto	l2004
 19090   014226                     u5750:
 19091   014226  8018               	bsf	___flmul@prod^(0+1280),0,c
 19092   014228                     l2004:
 19093   014228  90D8               	bcf	status,0,c
 19094   01422A  3612               	rlcf	___flmul@grs^(0+1280),f,c
 19095   01422C  3613               	rlcf	(___flmul@grs+1)^(0+1280),f,c
 19096   01422E  3614               	rlcf	(___flmul@grs+2)^(0+1280),f,c
 19097   014230  3615               	rlcf	(___flmul@grs+3)^(0+1280),f,c
 19098   014232  061C               	decf	___flmul@temp^(0+1280),f,c
 19099   014234  A0D8               	btfss	status,0,c
 19100   014236  061D               	decf	(___flmul@temp+1)^(0+1280),f,c
 19101   014238                     l8229:
 19102   014238  AE1A               	btfss	(___flmul@prod+2)^(0+1280),7,c
 19103   01423A  EF21  F0A1         	goto	u5761
 19104   01423E  EF23  F0A1         	goto	u5760
 19105   014242                     u5761:
 19106   014242  EF07  F0A1         	goto	l8223
 19107   014246                     u5760:
 19108   014246  6A16               	clrf	___flmul@aexp^(0+1280),c
 19109   014248  AE15               	btfss	(___flmul@grs+3)^(0+1280),7,c
 19110   01424A  EF29  F0A1         	goto	u5771
 19111   01424E  EF2B  F0A1         	goto	u5770
 19112   014252                     u5771:
 19113   014252  EF4F  F0A1         	goto	l2006
 19114   014256                     u5770:
 19115   014256  0EFF               	movlw	255
 19116   014258  1412               	andwf	___flmul@grs^(0+1280),w,c
 19117   01425A  6E0D               	movwf	??___flmul^(0+1280),c
 19118   01425C  0EFF               	movlw	255
 19119   01425E  1413               	andwf	(___flmul@grs+1)^(0+1280),w,c
 19120   014260  6E0E               	movwf	(??___flmul+1)^(0+1280),c
 19121   014262  0EFF               	movlw	255
 19122   014264  1414               	andwf	(___flmul@grs+2)^(0+1280),w,c
 19123   014266  6E0F               	movwf	(??___flmul+2)^(0+1280),c
 19124   014268  0E7F               	movlw	127
 19125   01426A  1415               	andwf	(___flmul@grs+3)^(0+1280),w,c
 19126   01426C  6E10               	movwf	(??___flmul+3)^(0+1280),c
 19127   01426E  500D               	movf	??___flmul^(0+1280),w,c
 19128   014270  100E               	iorwf	(??___flmul+1)^(0+1280),w,c
 19129   014272  100F               	iorwf	(??___flmul+2)^(0+1280),w,c
 19130   014274  1010               	iorwf	(??___flmul+3)^(0+1280),w,c
 19131   014276  B4D8               	btfsc	status,2,c
 19132   014278  EF40  F0A1         	goto	u5781
 19133   01427C  EF42  F0A1         	goto	u5780
 19134   014280                     u5781:
 19135   014280  EF46  F0A1         	goto	l2007
 19136   014284                     u5780:
 19137   014284                     l8233:
 19138   014284  0E01               	movlw	1
 19139   014286  6E16               	movwf	___flmul@aexp^(0+1280),c
 19140   014288  EF4F  F0A1         	goto	l2006
 19141   01428C                     l2007:
 19142   01428C  A018               	btfss	___flmul@prod^(0+1280),0,c
 19143   01428E  EF4B  F0A1         	goto	u5791
 19144   014292  EF4D  F0A1         	goto	u5790
 19145   014296                     u5791:
 19146   014296  EF4F  F0A1         	goto	l2006
 19147   01429A                     u5790:
 19148   01429A  EF42  F0A1         	goto	l8233
 19149   01429E                     l2006:
 19150   01429E  5016               	movf	___flmul@aexp^(0+1280),w,c
 19151   0142A0  B4D8               	btfsc	status,2,c
 19152   0142A2  EF55  F0A1         	goto	u5801
 19153   0142A6  EF57  F0A1         	goto	u5800
 19154   0142AA                     u5801:
 19155   0142AA  EF7B  F0A1         	goto	l8245
 19156   0142AE                     u5800:
 19157   0142AE  0E01               	movlw	1
 19158   0142B0  2618               	addwf	___flmul@prod^(0+1280),f,c
 19159   0142B2  0E00               	movlw	0
 19160   0142B4  2219               	addwfc	(___flmul@prod+1)^(0+1280),f,c
 19161   0142B6  221A               	addwfc	(___flmul@prod+2)^(0+1280),f,c
 19162   0142B8  221B               	addwfc	(___flmul@prod+3)^(0+1280),f,c
 19163   0142BA  A01B               	btfss	(___flmul@prod+3)^(0+1280),0,c
 19164   0142BC  EF62  F0A1         	goto	u5811
 19165   0142C0  EF64  F0A1         	goto	u5810
 19166   0142C4                     u5811:
 19167   0142C4  EF7B  F0A1         	goto	l8245
 19168   0142C8                     u5810:
 19169   0142C8  C518  F50D         	movff	___flmul@prod,??___flmul
 19170   0142CC  C519  F50E         	movff	___flmul@prod+1,??___flmul+1
 19171   0142D0  C51A  F50F         	movff	___flmul@prod+2,??___flmul+2
 19172   0142D4  C51B  F510         	movff	___flmul@prod+3,??___flmul+3
 19173   0142D8  3410               	rlcf	(??___flmul+3)^(0+1280),w,c
 19174   0142DA  3210               	rrcf	(??___flmul+3)^(0+1280),f,c
 19175   0142DC  320F               	rrcf	(??___flmul+2)^(0+1280),f,c
 19176   0142DE  320E               	rrcf	(??___flmul+1)^(0+1280),f,c
 19177   0142E0  320D               	rrcf	??___flmul^(0+1280),f,c
 19178   0142E2  C50D  F518         	movff	??___flmul,___flmul@prod
 19179   0142E6  C50E  F519         	movff	??___flmul+1,___flmul@prod+1
 19180   0142EA  C50F  F51A         	movff	??___flmul+2,___flmul@prod+2
 19181   0142EE  C510  F51B         	movff	??___flmul+3,___flmul@prod+3
 19182   0142F2  4A1C               	infsnz	___flmul@temp^(0+1280),f,c
 19183   0142F4  2A1D               	incf	(___flmul@temp+1)^(0+1280),f,c
 19184   0142F6                     l8245:
 19185   0142F6  BE1D               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 19186   0142F8  EF86  F0A1         	goto	u5821
 19187   0142FC  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 19188   0142FE  E108               	bnz	u5820
 19189   014300  281C               	incf	___flmul@temp^(0+1280),w,c
 19190   014302  A0D8               	btfss	status,0,c
 19191   014304  EF86  F0A1         	goto	u5821
 19192   014308  EF88  F0A1         	goto	u5820
 19193   01430C                     u5821:
 19194   01430C  EF92  F0A1         	goto	l8249
 19195   014310                     u5820:
 19196   014310  0E00               	movlw	0
 19197   014312  6E18               	movwf	___flmul@prod^(0+1280),c
 19198   014314  0E00               	movlw	0
 19199   014316  6E19               	movwf	(___flmul@prod+1)^(0+1280),c
 19200   014318  0E80               	movlw	128
 19201   01431A  6E1A               	movwf	(___flmul@prod+2)^(0+1280),c
 19202   01431C  0E7F               	movlw	127
 19203   01431E  6E1B               	movwf	(___flmul@prod+3)^(0+1280),c
 19204   014320  EFBF  F0A1         	goto	l8263
 19205   014324                     l8249:
 19206   014324  BE1D               	btfsc	(___flmul@temp+1)^(0+1280),7,c
 19207   014326  EF9F  F0A1         	goto	u5830
 19208   01432A  501D               	movf	(___flmul@temp+1)^(0+1280),w,c
 19209   01432C  E106               	bnz	u5831
 19210   01432E  041C               	decf	___flmul@temp^(0+1280),w,c
 19211   014330  B0D8               	btfsc	status,0,c
 19212   014332  EF9D  F0A1         	goto	u5831
 19213   014336  EF9F  F0A1         	goto	u5830
 19214   01433A                     u5831:
 19215   01433A  EFAA  F0A1         	goto	l2014
 19216   01433E                     u5830:
 19217   01433E  0E00               	movlw	0
 19218   014340  6E18               	movwf	___flmul@prod^(0+1280),c
 19219   014342  0E00               	movlw	0
 19220   014344  6E19               	movwf	(___flmul@prod+1)^(0+1280),c
 19221   014346  0E00               	movlw	0
 19222   014348  6E1A               	movwf	(___flmul@prod+2)^(0+1280),c
 19223   01434A  0E00               	movlw	0
 19224   01434C  6E1B               	movwf	(___flmul@prod+3)^(0+1280),c
 19225   01434E  6A11               	clrf	___flmul@sign^(0+1280),c
 19226   014350  EFBF  F0A1         	goto	l8263
 19227   014354                     l2014:
 19228   014354  C51C  F517         	movff	___flmul@temp,___flmul@bexp
 19229   014358  0EFF               	movlw	255
 19230   01435A  1618               	andwf	___flmul@prod^(0+1280),f,c
 19231   01435C  0EFF               	movlw	255
 19232   01435E  1619               	andwf	(___flmul@prod+1)^(0+1280),f,c
 19233   014360  0E7F               	movlw	127
 19234   014362  161A               	andwf	(___flmul@prod+2)^(0+1280),f,c
 19235   014364  0E00               	movlw	0
 19236   014366  161B               	andwf	(___flmul@prod+3)^(0+1280),f,c
 19237   014368  A017               	btfss	___flmul@bexp^(0+1280),0,c
 19238   01436A  EFB9  F0A1         	goto	u5841
 19239   01436E  EFBB  F0A1         	goto	u5840
 19240   014372                     u5841:
 19241   014372  EFBC  F0A1         	goto	l8261
 19242   014376                     u5840:
 19243   014376  8E1A               	bsf	(___flmul@prod+2)^(0+1280),7,c
 19244   014378                     l8261:
 19245   014378  90D8               	bcf	status,0,c
 19246   01437A  3017               	rrcf	___flmul@bexp^(0+1280),w,c
 19247   01437C  6E1B               	movwf	(___flmul@prod+3)^(0+1280),c
 19248   01437E                     l8263:
 19249   01437E  5011               	movf	___flmul@sign^(0+1280),w,c
 19250   014380  121B               	iorwf	(___flmul@prod+3)^(0+1280),f,c
 19251   014382  C518  F505         	movff	___flmul@prod,?___flmul
 19252   014386  C519  F506         	movff	___flmul@prod+1,?___flmul+1
 19253   01438A  C51A  F507         	movff	___flmul@prod+2,?___flmul+2
 19254   01438E  C51B  F508         	movff	___flmul@prod+3,?___flmul+3
 19255   014392                     l2001:
 19256   014392  0012               	return		;funcret
 19257   014394                     __end_of___flmul:
 19258                           	callstack 0
 19259                           
 19260 ;; *************** function ___fldiv *****************
 19261 ;; Defined at:
 19262 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
 19263 ;; Parameters:    Size  Location     Type
 19264 ;;  b               4   82[COMRAM] unsigned char 
 19265 ;;  a               4   86[COMRAM] unsigned char 
 19266 ;; Auto vars:     Size  Location     Type
 19267 ;;  grs             4    7[BANK5 ] unsigned long 
 19268 ;;  rem             4    0[BANK5 ] unsigned long 
 19269 ;;  new_exp         2    5[BANK5 ] short 
 19270 ;;  aexp            1   12[BANK5 ] unsigned char 
 19271 ;;  bexp            1   11[BANK5 ] unsigned char 
 19272 ;;  sign            1    4[BANK5 ] unsigned char 
 19273 ;; Return value:  Size  Location     Type
 19274 ;;                  4   82[COMRAM] unsigned char 
 19275 ;; Registers used:
 19276 ;;		wreg, status,2, status,0
 19277 ;; Tracked objects:
 19278 ;;		On entry : 0/0
 19279 ;;		On exit  : 0/0
 19280 ;;		Unchanged: 0/0
 19281 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19282 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19283 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19284 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19285 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19286 ;;Total ram usage:       25 bytes
 19287 ;; Hardware stack levels used: 1
 19288 ;; This function calls:
 19289 ;;		Nothing
 19290 ;; This function is called by:
 19291 ;;		_MPU6050_DMP_GetData
 19292 ;;		_MPU6050_ReadAll
 19293 ;;		_atan2f
 19294 ;;		_atanf
 19295 ;;		_efgtoa
 19296 ;;		_MPU6050_ReadAccel
 19297 ;;		_MPU6050_ReadGyro
 19298 ;;		_MPU6050_ReadTemperature
 19299 ;;		_MPU6050_Calibrate
 19300 ;;		_MovingAverage_Update
 19301 ;; This function uses a non-reentrant model
 19302 ;;
 19303                           
 19304                           	psect	text44
 19305   014B3C                     __ptext44:
 19306                           	callstack 0
 19307   014B3C                     ___fldiv:
 19308                           	callstack 122
 19309   014B3C  5056               	movf	(___fldiv@b+3)^(0+1280),w,c
 19310   014B3E  0B80               	andlw	128
 19311   014B40  0105               	movlb	5	; () banked
 19312   014B42  6F64               	movwf	___fldiv@sign& (0+255),b
 19313   014B44  5056               	movf	(___fldiv@b+3)^(0+1280),w,c
 19314   014B46  2456               	addwf	(___fldiv@b+3)^(0+1280),w,c
 19315   014B48  6F6B               	movwf	___fldiv@bexp& (0+255),b
 19316   014B4A                     
 19317                           ; BSR set to: 5
 19318   014B4A  AE55               	btfss	(___fldiv@b+2)^(0+1280),7,c
 19319   014B4C  EFAA  F0A5         	goto	u5431
 19320   014B50  EFAC  F0A5         	goto	u5430
 19321   014B54                     u5431:
 19322   014B54  EFAD  F0A5         	goto	l8011
 19323   014B58                     u5430:
 19324   014B58                     
 19325                           ; BSR set to: 5
 19326   014B58  816B               	bsf	___fldiv@bexp& (0+255),0,b
 19327   014B5A                     l8011:
 19328                           
 19329                           ; BSR set to: 5
 19330   014B5A  516B               	movf	___fldiv@bexp& (0+255),w,b
 19331   014B5C  B4D8               	btfsc	status,2,c
 19332   014B5E  EFB3  F0A5         	goto	u5441
 19333   014B62  EFB5  F0A5         	goto	u5440
 19334   014B66                     u5441:
 19335   014B66  EFC9  F0A5         	goto	l8021
 19336   014B6A                     u5440:
 19337   014B6A                     
 19338                           ; BSR set to: 5
 19339   014B6A  296B               	incf	___fldiv@bexp& (0+255),w,b
 19340   014B6C  A4D8               	btfss	status,2,c
 19341   014B6E  EFBB  F0A5         	goto	u5451
 19342   014B72  EFBD  F0A5         	goto	u5450
 19343   014B76                     u5451:
 19344   014B76  EFC5  F0A5         	goto	l8017
 19345   014B7A                     u5450:
 19346   014B7A                     
 19347                           ; BSR set to: 5
 19348   014B7A  0E00               	movlw	0
 19349   014B7C  6E53               	movwf	___fldiv@b^(0+1280),c
 19350   014B7E  0E00               	movlw	0
 19351   014B80  6E54               	movwf	(___fldiv@b+1)^(0+1280),c
 19352   014B82  0E00               	movlw	0
 19353   014B84  6E55               	movwf	(___fldiv@b+2)^(0+1280),c
 19354   014B86  0E00               	movlw	0
 19355   014B88  6E56               	movwf	(___fldiv@b+3)^(0+1280),c
 19356   014B8A                     l8017:
 19357                           
 19358                           ; BSR set to: 5
 19359   014B8A  8E55               	bsf	(___fldiv@b+2)^(0+1280),7,c
 19360   014B8C                     
 19361                           ; BSR set to: 5
 19362   014B8C  6A56               	clrf	(___fldiv@b+3)^(0+1280),c
 19363   014B8E  EFD1  F0A5         	goto	l8023
 19364   014B92                     l8021:
 19365                           
 19366                           ; BSR set to: 5
 19367   014B92  0E00               	movlw	0
 19368   014B94  6E53               	movwf	___fldiv@b^(0+1280),c
 19369   014B96  0E00               	movlw	0
 19370   014B98  6E54               	movwf	(___fldiv@b+1)^(0+1280),c
 19371   014B9A  0E00               	movlw	0
 19372   014B9C  6E55               	movwf	(___fldiv@b+2)^(0+1280),c
 19373   014B9E  0E00               	movlw	0
 19374   014BA0  6E56               	movwf	(___fldiv@b+3)^(0+1280),c
 19375   014BA2                     l8023:
 19376                           
 19377                           ; BSR set to: 5
 19378   014BA2  505A               	movf	(___fldiv@a+3)^(0+1280),w,c
 19379   014BA4  0B80               	andlw	128
 19380   014BA6  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 19381   014BA8                     
 19382                           ; BSR set to: 5
 19383   014BA8  505A               	movf	(___fldiv@a+3)^(0+1280),w,c
 19384   014BAA  245A               	addwf	(___fldiv@a+3)^(0+1280),w,c
 19385   014BAC  6F6C               	movwf	___fldiv@aexp& (0+255),b
 19386   014BAE                     
 19387                           ; BSR set to: 5
 19388   014BAE  AE59               	btfss	(___fldiv@a+2)^(0+1280),7,c
 19389   014BB0  EFDC  F0A5         	goto	u5461
 19390   014BB4  EFDE  F0A5         	goto	u5460
 19391   014BB8                     u5461:
 19392   014BB8  EFDF  F0A5         	goto	l8031
 19393   014BBC                     u5460:
 19394   014BBC                     
 19395                           ; BSR set to: 5
 19396   014BBC  816C               	bsf	___fldiv@aexp& (0+255),0,b
 19397   014BBE                     l8031:
 19398                           
 19399                           ; BSR set to: 5
 19400   014BBE  516C               	movf	___fldiv@aexp& (0+255),w,b
 19401   014BC0  B4D8               	btfsc	status,2,c
 19402   014BC2  EFE5  F0A5         	goto	u5471
 19403   014BC6  EFE7  F0A5         	goto	u5470
 19404   014BCA                     u5471:
 19405   014BCA  EFFB  F0A5         	goto	l8041
 19406   014BCE                     u5470:
 19407   014BCE                     
 19408                           ; BSR set to: 5
 19409   014BCE  296C               	incf	___fldiv@aexp& (0+255),w,b
 19410   014BD0  A4D8               	btfss	status,2,c
 19411   014BD2  EFED  F0A5         	goto	u5481
 19412   014BD6  EFEF  F0A5         	goto	u5480
 19413   014BDA                     u5481:
 19414   014BDA  EFF7  F0A5         	goto	l8037
 19415   014BDE                     u5480:
 19416   014BDE                     
 19417                           ; BSR set to: 5
 19418   014BDE  0E00               	movlw	0
 19419   014BE0  6E57               	movwf	___fldiv@a^(0+1280),c
 19420   014BE2  0E00               	movlw	0
 19421   014BE4  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 19422   014BE6  0E00               	movlw	0
 19423   014BE8  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 19424   014BEA  0E00               	movlw	0
 19425   014BEC  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 19426   014BEE                     l8037:
 19427                           
 19428                           ; BSR set to: 5
 19429   014BEE  8E59               	bsf	(___fldiv@a+2)^(0+1280),7,c
 19430   014BF0                     
 19431                           ; BSR set to: 5
 19432   014BF0  6A5A               	clrf	(___fldiv@a+3)^(0+1280),c
 19433   014BF2  EF03  F0A6         	goto	l8043
 19434   014BF6                     l8041:
 19435                           
 19436                           ; BSR set to: 5
 19437   014BF6  0E00               	movlw	0
 19438   014BF8  6E57               	movwf	___fldiv@a^(0+1280),c
 19439   014BFA  0E00               	movlw	0
 19440   014BFC  6E58               	movwf	(___fldiv@a+1)^(0+1280),c
 19441   014BFE  0E00               	movlw	0
 19442   014C00  6E59               	movwf	(___fldiv@a+2)^(0+1280),c
 19443   014C02  0E00               	movlw	0
 19444   014C04  6E5A               	movwf	(___fldiv@a+3)^(0+1280),c
 19445   014C06                     l8043:
 19446                           
 19447                           ; BSR set to: 5
 19448   014C06  5057               	movf	___fldiv@a^(0+1280),w,c
 19449   014C08  1058               	iorwf	(___fldiv@a+1)^(0+1280),w,c
 19450   014C0A  1059               	iorwf	(___fldiv@a+2)^(0+1280),w,c
 19451   014C0C  105A               	iorwf	(___fldiv@a+3)^(0+1280),w,c
 19452   014C0E  A4D8               	btfss	status,2,c
 19453   014C10  EF0C  F0A6         	goto	u5491
 19454   014C14  EF0E  F0A6         	goto	u5490
 19455   014C18                     u5491:
 19456   014C18  EF26  F0A6         	goto	l8055
 19457   014C1C                     u5490:
 19458   014C1C                     
 19459                           ; BSR set to: 5
 19460   014C1C  0E00               	movlw	0
 19461   014C1E  6E53               	movwf	___fldiv@b^(0+1280),c
 19462   014C20  0E00               	movlw	0
 19463   014C22  6E54               	movwf	(___fldiv@b+1)^(0+1280),c
 19464   014C24  0E00               	movlw	0
 19465   014C26  6E55               	movwf	(___fldiv@b+2)^(0+1280),c
 19466   014C28  0E00               	movlw	0
 19467   014C2A  6E56               	movwf	(___fldiv@b+3)^(0+1280),c
 19468   014C2C                     
 19469                           ; BSR set to: 5
 19470   014C2C  0E80               	movlw	128
 19471   014C2E  1255               	iorwf	(___fldiv@b+2)^(0+1280),f,c
 19472   014C30  0E7F               	movlw	127
 19473   014C32  1256               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 19474   014C34                     l8049:
 19475                           
 19476                           ; BSR set to: 5
 19477   014C34  5164               	movf	___fldiv@sign& (0+255),w,b
 19478   014C36  1256               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 19479   014C38                     
 19480                           ; BSR set to: 5
 19481   014C38  C553  F553         	movff	___fldiv@b,?___fldiv
 19482   014C3C  C554  F554         	movff	___fldiv@b+1,?___fldiv+1
 19483   014C40  C555  F555         	movff	___fldiv@b+2,?___fldiv+2
 19484   014C44  C556  F556         	movff	___fldiv@b+3,?___fldiv+3
 19485   014C48  EF66  F0A7         	goto	l1965
 19486   014C4C                     l8055:
 19487                           
 19488                           ; BSR set to: 5
 19489   014C4C  516B               	movf	___fldiv@bexp& (0+255),w,b
 19490   014C4E  A4D8               	btfss	status,2,c
 19491   014C50  EF2C  F0A6         	goto	u5501
 19492   014C54  EF2E  F0A6         	goto	u5500
 19493   014C58                     u5501:
 19494   014C58  EF38  F0A6         	goto	l8063
 19495   014C5C                     u5500:
 19496   014C5C                     
 19497                           ; BSR set to: 5
 19498   014C5C  0E00               	movlw	0
 19499   014C5E  6E53               	movwf	?___fldiv^(0+1280),c
 19500   014C60  0E00               	movlw	0
 19501   014C62  6E54               	movwf	(?___fldiv+1)^(0+1280),c
 19502   014C64  0E00               	movlw	0
 19503   014C66  6E55               	movwf	(?___fldiv+2)^(0+1280),c
 19504   014C68  0E00               	movlw	0
 19505   014C6A  6E56               	movwf	(?___fldiv+3)^(0+1280),c
 19506   014C6C  EF66  F0A7         	goto	l1965
 19507   014C70                     l8063:
 19508                           
 19509                           ; BSR set to: 5
 19510   014C70  516C               	movf	___fldiv@aexp& (0+255),w,b
 19511   014C72  C56B  F55B         	movff	___fldiv@bexp,??___fldiv
 19512   014C76  6A5C               	clrf	(??___fldiv+1)^(0+1280),c
 19513   014C78  5E5B               	subwf	??___fldiv^(0+1280),f,c
 19514   014C7A  0E00               	movlw	0
 19515   014C7C  5A5C               	subwfb	(??___fldiv+1)^(0+1280),f,c
 19516   014C7E  0E7F               	movlw	127
 19517   014C80  245B               	addwf	??___fldiv^(0+1280),w,c
 19518   014C82  6F65               	movwf	___fldiv@new_exp& (0+255),b
 19519   014C84  0E00               	movlw	0
 19520   014C86  205C               	addwfc	(??___fldiv+1)^(0+1280),w,c
 19521   014C88  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19522   014C8A                     
 19523                           ; BSR set to: 5
 19524   014C8A  C553  F560         	movff	___fldiv@b,___fldiv@rem
 19525   014C8E  C554  F561         	movff	___fldiv@b+1,___fldiv@rem+1
 19526   014C92  C555  F562         	movff	___fldiv@b+2,___fldiv@rem+2
 19527   014C96  C556  F563         	movff	___fldiv@b+3,___fldiv@rem+3
 19528   014C9A                     
 19529                           ; BSR set to: 5
 19530   014C9A  0E00               	movlw	0
 19531   014C9C  6E53               	movwf	___fldiv@b^(0+1280),c
 19532   014C9E  0E00               	movlw	0
 19533   014CA0  6E54               	movwf	(___fldiv@b+1)^(0+1280),c
 19534   014CA2  0E00               	movlw	0
 19535   014CA4  6E55               	movwf	(___fldiv@b+2)^(0+1280),c
 19536   014CA6  0E00               	movlw	0
 19537   014CA8  6E56               	movwf	(___fldiv@b+3)^(0+1280),c
 19538   014CAA                     
 19539                           ; BSR set to: 5
 19540   014CAA  0E00               	movlw	0
 19541   014CAC  6F67               	movwf	___fldiv@grs& (0+255),b
 19542   014CAE  0E00               	movlw	0
 19543   014CB0  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 19544   014CB2  0E00               	movlw	0
 19545   014CB4  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 19546   014CB6  0E00               	movlw	0
 19547   014CB8  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 19548   014CBA                     
 19549                           ; BSR set to: 5
 19550   014CBA  6B6C               	clrf	___fldiv@aexp& (0+255),b
 19551   014CBC  EF98  F0A6         	goto	l1967
 19552   014CC0                     l8073:
 19553                           
 19554                           ; BSR set to: 5
 19555   014CC0  516C               	movf	___fldiv@aexp& (0+255),w,b
 19556   014CC2  B4D8               	btfsc	status,2,c
 19557   014CC4  EF66  F0A6         	goto	u5511
 19558   014CC8  EF68  F0A6         	goto	u5510
 19559   014CCC                     u5511:
 19560   014CCC  EF7F  F0A6         	goto	l8081
 19561   014CD0                     u5510:
 19562   014CD0                     
 19563                           ; BSR set to: 5
 19564   014CD0  90D8               	bcf	status,0,c
 19565   014CD2  3760               	rlcf	___fldiv@rem& (0+255),f,b
 19566   014CD4  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 19567   014CD6  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 19568   014CD8  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 19569   014CDA  90D8               	bcf	status,0,c
 19570   014CDC  3653               	rlcf	___fldiv@b^(0+1280),f,c
 19571   014CDE  3654               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 19572   014CE0  3655               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 19573   014CE2  3656               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 19574   014CE4                     
 19575                           ; BSR set to: 5
 19576   014CE4  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 19577   014CE6  EF77  F0A6         	goto	u5521
 19578   014CEA  EF79  F0A6         	goto	u5520
 19579   014CEE                     u5521:
 19580   014CEE  EF7A  F0A6         	goto	l1970
 19581   014CF2                     u5520:
 19582   014CF2                     
 19583                           ; BSR set to: 5
 19584   014CF2  8053               	bsf	___fldiv@b^(0+1280),0,c
 19585   014CF4                     l1970:
 19586                           
 19587                           ; BSR set to: 5
 19588   014CF4  90D8               	bcf	status,0,c
 19589   014CF6  3767               	rlcf	___fldiv@grs& (0+255),f,b
 19590   014CF8  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 19591   014CFA  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 19592   014CFC  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 19593   014CFE                     l8081:
 19594                           
 19595                           ; BSR set to: 5
 19596   014CFE  5057               	movf	___fldiv@a^(0+1280),w,c
 19597   014D00  5D60               	subwf	___fldiv@rem& (0+255),w,b
 19598   014D02  5058               	movf	(___fldiv@a+1)^(0+1280),w,c
 19599   014D04  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 19600   014D06  5059               	movf	(___fldiv@a+2)^(0+1280),w,c
 19601   014D08  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 19602   014D0A  505A               	movf	(___fldiv@a+3)^(0+1280),w,c
 19603   014D0C  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 19604   014D0E  A0D8               	btfss	status,0,c
 19605   014D10  EF8C  F0A6         	goto	u5531
 19606   014D14  EF8E  F0A6         	goto	u5530
 19607   014D18                     u5531:
 19608   014D18  EF97  F0A6         	goto	l8087
 19609   014D1C                     u5530:
 19610   014D1C                     
 19611                           ; BSR set to: 5
 19612   014D1C  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 19613   014D1E                     
 19614                           ; BSR set to: 5
 19615   014D1E  5057               	movf	___fldiv@a^(0+1280),w,c
 19616   014D20  5F60               	subwf	___fldiv@rem& (0+255),f,b
 19617   014D22  5058               	movf	(___fldiv@a+1)^(0+1280),w,c
 19618   014D24  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 19619   014D26  5059               	movf	(___fldiv@a+2)^(0+1280),w,c
 19620   014D28  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 19621   014D2A  505A               	movf	(___fldiv@a+3)^(0+1280),w,c
 19622   014D2C  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 19623   014D2E                     l8087:
 19624                           
 19625                           ; BSR set to: 5
 19626   014D2E  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 19627   014D30                     l1967:
 19628                           
 19629                           ; BSR set to: 5
 19630   014D30  0E19               	movlw	25
 19631   014D32  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 19632   014D34  EF9E  F0A6         	goto	u5541
 19633   014D38  EFA0  F0A6         	goto	u5540
 19634   014D3C                     u5541:
 19635   014D3C  EF60  F0A6         	goto	l8073
 19636   014D40                     u5540:
 19637   014D40                     
 19638                           ; BSR set to: 5
 19639   014D40  5160               	movf	___fldiv@rem& (0+255),w,b
 19640   014D42  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 19641   014D44  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 19642   014D46  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 19643   014D48  B4D8               	btfsc	status,2,c
 19644   014D4A  EFA9  F0A6         	goto	u5551
 19645   014D4E  EFAB  F0A6         	goto	u5550
 19646   014D52                     u5551:
 19647   014D52  EFC3  F0A6         	goto	l8099
 19648   014D56                     u5550:
 19649   014D56                     
 19650                           ; BSR set to: 5
 19651   014D56  8167               	bsf	___fldiv@grs& (0+255),0,b
 19652   014D58  EFC3  F0A6         	goto	l8099
 19653   014D5C                     l8093:
 19654                           
 19655                           ; BSR set to: 5
 19656   014D5C  90D8               	bcf	status,0,c
 19657   014D5E  3653               	rlcf	___fldiv@b^(0+1280),f,c
 19658   014D60  3654               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 19659   014D62  3655               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 19660   014D64  3656               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 19661   014D66                     
 19662                           ; BSR set to: 5
 19663   014D66  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 19664   014D68  EFB8  F0A6         	goto	u5561
 19665   014D6C  EFBA  F0A6         	goto	u5560
 19666   014D70                     u5561:
 19667   014D70  EFBB  F0A6         	goto	l1976
 19668   014D74                     u5560:
 19669   014D74                     
 19670                           ; BSR set to: 5
 19671   014D74  8053               	bsf	___fldiv@b^(0+1280),0,c
 19672   014D76                     l1976:
 19673                           
 19674                           ; BSR set to: 5
 19675   014D76  90D8               	bcf	status,0,c
 19676   014D78  3767               	rlcf	___fldiv@grs& (0+255),f,b
 19677   014D7A  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 19678   014D7C  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 19679   014D7E  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 19680   014D80  0765               	decf	___fldiv@new_exp& (0+255),f,b
 19681   014D82  A0D8               	btfss	status,0,c
 19682   014D84  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 19683   014D86                     l8099:
 19684                           
 19685                           ; BSR set to: 5
 19686   014D86  AE55               	btfss	(___fldiv@b+2)^(0+1280),7,c
 19687   014D88  EFC8  F0A6         	goto	u5571
 19688   014D8C  EFCA  F0A6         	goto	u5570
 19689   014D90                     u5571:
 19690   014D90  EFAE  F0A6         	goto	l8093
 19691   014D94                     u5570:
 19692   014D94                     
 19693                           ; BSR set to: 5
 19694   014D94  6B6C               	clrf	___fldiv@aexp& (0+255),b
 19695   014D96  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 19696   014D98  EFD0  F0A6         	goto	u5581
 19697   014D9C  EFD2  F0A6         	goto	u5580
 19698   014DA0                     u5581:
 19699   014DA0  EFF6  F0A6         	goto	l1978
 19700   014DA4                     u5580:
 19701   014DA4                     
 19702                           ; BSR set to: 5
 19703   014DA4  0EFF               	movlw	255
 19704   014DA6  1567               	andwf	___fldiv@grs& (0+255),w,b
 19705   014DA8  6E5B               	movwf	??___fldiv^(0+1280),c
 19706   014DAA  0EFF               	movlw	255
 19707   014DAC  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 19708   014DAE  6E5C               	movwf	(??___fldiv+1)^(0+1280),c
 19709   014DB0  0EFF               	movlw	255
 19710   014DB2  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 19711   014DB4  6E5D               	movwf	(??___fldiv+2)^(0+1280),c
 19712   014DB6  0E7F               	movlw	127
 19713   014DB8  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 19714   014DBA  6E5E               	movwf	(??___fldiv+3)^(0+1280),c
 19715   014DBC  505B               	movf	??___fldiv^(0+1280),w,c
 19716   014DBE  105C               	iorwf	(??___fldiv+1)^(0+1280),w,c
 19717   014DC0  105D               	iorwf	(??___fldiv+2)^(0+1280),w,c
 19718   014DC2  105E               	iorwf	(??___fldiv+3)^(0+1280),w,c
 19719   014DC4  B4D8               	btfsc	status,2,c
 19720   014DC6  EFE7  F0A6         	goto	u5591
 19721   014DCA  EFE9  F0A6         	goto	u5590
 19722   014DCE                     u5591:
 19723   014DCE  EFED  F0A6         	goto	l1979
 19724   014DD2                     u5590:
 19725   014DD2                     l8103:
 19726                           
 19727                           ; BSR set to: 5
 19728   014DD2  0E01               	movlw	1
 19729   014DD4  6F6C               	movwf	___fldiv@aexp& (0+255),b
 19730   014DD6  EFF6  F0A6         	goto	l1978
 19731   014DDA                     l1979:
 19732                           
 19733                           ; BSR set to: 5
 19734   014DDA  A053               	btfss	___fldiv@b^(0+1280),0,c
 19735   014DDC  EFF2  F0A6         	goto	u5601
 19736   014DE0  EFF4  F0A6         	goto	u5600
 19737   014DE4                     u5601:
 19738   014DE4  EFF6  F0A6         	goto	l1978
 19739   014DE8                     u5600:
 19740   014DE8  EFE9  F0A6         	goto	l8103
 19741   014DEC                     l1978:
 19742                           
 19743                           ; BSR set to: 5
 19744   014DEC  516C               	movf	___fldiv@aexp& (0+255),w,b
 19745   014DEE  B4D8               	btfsc	status,2,c
 19746   014DF0  EFFC  F0A6         	goto	u5611
 19747   014DF4  EFFE  F0A6         	goto	u5610
 19748   014DF8                     u5611:
 19749   014DF8  EF22  F0A7         	goto	l8115
 19750   014DFC                     u5610:
 19751   014DFC                     
 19752                           ; BSR set to: 5
 19753   014DFC  0E01               	movlw	1
 19754   014DFE  2653               	addwf	___fldiv@b^(0+1280),f,c
 19755   014E00  0E00               	movlw	0
 19756   014E02  2254               	addwfc	(___fldiv@b+1)^(0+1280),f,c
 19757   014E04  2255               	addwfc	(___fldiv@b+2)^(0+1280),f,c
 19758   014E06  2256               	addwfc	(___fldiv@b+3)^(0+1280),f,c
 19759   014E08                     
 19760                           ; BSR set to: 5
 19761   014E08  A056               	btfss	(___fldiv@b+3)^(0+1280),0,c
 19762   014E0A  EF09  F0A7         	goto	u5621
 19763   014E0E  EF0B  F0A7         	goto	u5620
 19764   014E12                     u5621:
 19765   014E12  EF22  F0A7         	goto	l8115
 19766   014E16                     u5620:
 19767   014E16                     
 19768                           ; BSR set to: 5
 19769   014E16  C553  F55B         	movff	___fldiv@b,??___fldiv
 19770   014E1A  C554  F55C         	movff	___fldiv@b+1,??___fldiv+1
 19771   014E1E  C555  F55D         	movff	___fldiv@b+2,??___fldiv+2
 19772   014E22  C556  F55E         	movff	___fldiv@b+3,??___fldiv+3
 19773   014E26  345E               	rlcf	(??___fldiv+3)^(0+1280),w,c
 19774   014E28  325E               	rrcf	(??___fldiv+3)^(0+1280),f,c
 19775   014E2A  325D               	rrcf	(??___fldiv+2)^(0+1280),f,c
 19776   014E2C  325C               	rrcf	(??___fldiv+1)^(0+1280),f,c
 19777   014E2E  325B               	rrcf	??___fldiv^(0+1280),f,c
 19778   014E30  C55B  F553         	movff	??___fldiv,___fldiv@b
 19779   014E34  C55C  F554         	movff	??___fldiv+1,___fldiv@b+1
 19780   014E38  C55D  F555         	movff	??___fldiv+2,___fldiv@b+2
 19781   014E3C  C55E  F556         	movff	??___fldiv+3,___fldiv@b+3
 19782   014E40                     
 19783                           ; BSR set to: 5
 19784   014E40  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 19785   014E42  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 19786   014E44                     l8115:
 19787                           
 19788                           ; BSR set to: 5
 19789   014E44  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 19790   014E46  EF2D  F0A7         	goto	u5631
 19791   014E4A  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 19792   014E4C  E108               	bnz	u5630
 19793   014E4E  2965               	incf	___fldiv@new_exp& (0+255),w,b
 19794   014E50  A0D8               	btfss	status,0,c
 19795   014E52  EF2D  F0A7         	goto	u5631
 19796   014E56  EF2F  F0A7         	goto	u5630
 19797   014E5A                     u5631:
 19798   014E5A  EF3A  F0A7         	goto	l8119
 19799   014E5E                     u5630:
 19800   014E5E                     
 19801                           ; BSR set to: 5
 19802   014E5E  0E00               	movlw	0
 19803   014E60  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19804   014E62  6965               	setf	___fldiv@new_exp& (0+255),b
 19805   014E64  0E00               	movlw	0
 19806   014E66  6E53               	movwf	___fldiv@b^(0+1280),c
 19807   014E68  0E00               	movlw	0
 19808   014E6A  6E54               	movwf	(___fldiv@b+1)^(0+1280),c
 19809   014E6C  0E00               	movlw	0
 19810   014E6E  6E55               	movwf	(___fldiv@b+2)^(0+1280),c
 19811   014E70  0E00               	movlw	0
 19812   014E72  6E56               	movwf	(___fldiv@b+3)^(0+1280),c
 19813   014E74                     l8119:
 19814                           
 19815                           ; BSR set to: 5
 19816   014E74  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 19817   014E76  EF47  F0A7         	goto	u5640
 19818   014E7A  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 19819   014E7C  E106               	bnz	u5641
 19820   014E7E  0565               	decf	___fldiv@new_exp& (0+255),w,b
 19821   014E80  B0D8               	btfsc	status,0,c
 19822   014E82  EF45  F0A7         	goto	u5641
 19823   014E86  EF47  F0A7         	goto	u5640
 19824   014E8A                     u5641:
 19825   014E8A  EF54  F0A7         	goto	l8125
 19826   014E8E                     u5640:
 19827   014E8E                     
 19828                           ; BSR set to: 5
 19829   014E8E  0E00               	movlw	0
 19830   014E90  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 19831   014E92  0E00               	movlw	0
 19832   014E94  6F65               	movwf	___fldiv@new_exp& (0+255),b
 19833   014E96  0E00               	movlw	0
 19834   014E98  6E53               	movwf	___fldiv@b^(0+1280),c
 19835   014E9A  0E00               	movlw	0
 19836   014E9C  6E54               	movwf	(___fldiv@b+1)^(0+1280),c
 19837   014E9E  0E00               	movlw	0
 19838   014EA0  6E55               	movwf	(___fldiv@b+2)^(0+1280),c
 19839   014EA2  0E00               	movlw	0
 19840   014EA4  6E56               	movwf	(___fldiv@b+3)^(0+1280),c
 19841   014EA6                     
 19842                           ; BSR set to: 5
 19843   014EA6  6B64               	clrf	___fldiv@sign& (0+255),b
 19844   014EA8                     l8125:
 19845                           
 19846                           ; BSR set to: 5
 19847   014EA8  C565  F56B         	movff	___fldiv@new_exp,___fldiv@bexp
 19848   014EAC                     
 19849                           ; BSR set to: 5
 19850   014EAC  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 19851   014EAE  EF5B  F0A7         	goto	u5651
 19852   014EB2  EF5D  F0A7         	goto	u5650
 19853   014EB6                     u5651:
 19854   014EB6  EF60  F0A7         	goto	l8131
 19855   014EBA                     u5650:
 19856   014EBA                     
 19857                           ; BSR set to: 5
 19858   014EBA  8E55               	bsf	(___fldiv@b+2)^(0+1280),7,c
 19859   014EBC  EF61  F0A7         	goto	l8133
 19860   014EC0                     l8131:
 19861                           
 19862                           ; BSR set to: 5
 19863   014EC0  9E55               	bcf	(___fldiv@b+2)^(0+1280),7,c
 19864   014EC2                     l8133:
 19865                           
 19866                           ; BSR set to: 5
 19867   014EC2  90D8               	bcf	status,0,c
 19868   014EC4  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 19869   014EC6  6E56               	movwf	(___fldiv@b+3)^(0+1280),c
 19870   014EC8  EF1A  F0A6         	goto	l8049
 19871   014ECC                     l1965:
 19872                           
 19873                           ; BSR set to: 5
 19874   014ECC  0012               	return		;funcret
 19875   014ECE                     __end_of___fldiv:
 19876                           	callstack 0
 19877                           
 19878 ;; *************** function ___xxtofl *****************
 19879 ;; Defined at:
 19880 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
 19881 ;; Parameters:    Size  Location     Type
 19882 ;;  sign            1    wreg     unsigned char 
 19883 ;;  val             4    0[COMRAM] long 
 19884 ;; Auto vars:     Size  Location     Type
 19885 ;;  sign            1    8[COMRAM] unsigned char 
 19886 ;;  arg             4   10[COMRAM] unsigned long 
 19887 ;;  exp             1    9[COMRAM] unsigned char 
 19888 ;; Return value:  Size  Location     Type
 19889 ;;                  4    0[COMRAM] unsigned char 
 19890 ;; Registers used:
 19891 ;;		wreg, status,2, status,0
 19892 ;; Tracked objects:
 19893 ;;		On entry : 0/0
 19894 ;;		On exit  : 0/0
 19895 ;;		Unchanged: 0/0
 19896 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 19897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19898 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19899 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19900 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19901 ;;Total ram usage:       14 bytes
 19902 ;; Hardware stack levels used: 1
 19903 ;; This function calls:
 19904 ;;		Nothing
 19905 ;; This function is called by:
 19906 ;;		_MPU6050_DMP_GetData
 19907 ;;		_MPU6050_ReadAll
 19908 ;;		___rem_pio2f
 19909 ;;		_MPU6050_ReadAccel
 19910 ;;		_MPU6050_ReadGyro
 19911 ;;		_MPU6050_ReadTemperature
 19912 ;;		_MPU6050_Calibrate
 19913 ;;		_MovingAverage_Update
 19914 ;; This function uses a non-reentrant model
 19915 ;;
 19916                           
 19917                           	psect	text45
 19918   0159C8                     __ptext45:
 19919                           	callstack 0
 19920   0159C8                     ___xxtofl:
 19921                           	callstack 123
 19922                           
 19923                           ; BSR set to: 5
 19924                           ;incstack = 0
 19925                           ;___xxtofl@sign stored from wreg
 19926   0159C8  6E09               	movwf	___xxtofl@sign^(0+1280),c
 19927   0159CA  5009               	movf	___xxtofl@sign^(0+1280),w,c
 19928   0159CC  B4D8               	btfsc	status,2,c
 19929   0159CE  EFEB  F0AC         	goto	u6461
 19930   0159D2  EFED  F0AC         	goto	u6460
 19931   0159D6                     u6461:
 19932   0159D6  EF0F  F0AD         	goto	l2038
 19933   0159DA                     u6460:
 19934   0159DA  BE04               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
 19935   0159DC  EFF4  F0AC         	goto	u6470
 19936   0159E0  EFF2  F0AC         	goto	u6471
 19937   0159E4                     u6471:
 19938   0159E4  EF0F  F0AD         	goto	l2038
 19939   0159E8                     u6470:
 19940   0159E8  C501  F505         	movff	___xxtofl@val,??___xxtofl
 19941   0159EC  C502  F506         	movff	___xxtofl@val+1,??___xxtofl+1
 19942   0159F0  C503  F507         	movff	___xxtofl@val+2,??___xxtofl+2
 19943   0159F4  C504  F508         	movff	___xxtofl@val+3,??___xxtofl+3
 19944   0159F8  1E05               	comf	??___xxtofl^(0+1280),f,c
 19945   0159FA  1E06               	comf	(??___xxtofl+1)^(0+1280),f,c
 19946   0159FC  1E07               	comf	(??___xxtofl+2)^(0+1280),f,c
 19947   0159FE  1E08               	comf	(??___xxtofl+3)^(0+1280),f,c
 19948   015A00  2A05               	incf	??___xxtofl^(0+1280),f,c
 19949   015A02  0E00               	movlw	0
 19950   015A04  2206               	addwfc	(??___xxtofl+1)^(0+1280),f,c
 19951   015A06  2207               	addwfc	(??___xxtofl+2)^(0+1280),f,c
 19952   015A08  2208               	addwfc	(??___xxtofl+3)^(0+1280),f,c
 19953   015A0A  C505  F50B         	movff	??___xxtofl,___xxtofl@arg
 19954   015A0E  C506  F50C         	movff	??___xxtofl+1,___xxtofl@arg+1
 19955   015A12  C507  F50D         	movff	??___xxtofl+2,___xxtofl@arg+2
 19956   015A16  C508  F50E         	movff	??___xxtofl+3,___xxtofl@arg+3
 19957   015A1A  EF17  F0AD         	goto	l8665
 19958   015A1E                     l2038:
 19959   015A1E  C501  F50B         	movff	___xxtofl@val,___xxtofl@arg
 19960   015A22  C502  F50C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 19961   015A26  C503  F50D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 19962   015A2A  C504  F50E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 19963   015A2E                     l8665:
 19964   015A2E  5001               	movf	___xxtofl@val^(0+1280),w,c
 19965   015A30  1002               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
 19966   015A32  1003               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
 19967   015A34  1004               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
 19968   015A36  A4D8               	btfss	status,2,c
 19969   015A38  EF20  F0AD         	goto	u6481
 19970   015A3C  EF22  F0AD         	goto	u6480
 19971   015A40                     u6481:
 19972   015A40  EF2C  F0AD         	goto	l8671
 19973   015A44                     u6480:
 19974   015A44  0E00               	movlw	0
 19975   015A46  6E01               	movwf	?___xxtofl^(0+1280),c
 19976   015A48  0E00               	movlw	0
 19977   015A4A  6E02               	movwf	(?___xxtofl+1)^(0+1280),c
 19978   015A4C  0E00               	movlw	0
 19979   015A4E  6E03               	movwf	(?___xxtofl+2)^(0+1280),c
 19980   015A50  0E00               	movlw	0
 19981   015A52  6E04               	movwf	(?___xxtofl+3)^(0+1280),c
 19982   015A54  EFBD  F0AD         	goto	l2041
 19983   015A58                     l8671:
 19984   015A58  0E96               	movlw	150
 19985   015A5A  6E0A               	movwf	___xxtofl@exp^(0+1280),c
 19986   015A5C  EF36  F0AD         	goto	l8675
 19987   015A60                     l8673:
 19988   015A60  2A0A               	incf	___xxtofl@exp^(0+1280),f,c
 19989   015A62  90D8               	bcf	status,0,c
 19990   015A64  320E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 19991   015A66  320D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 19992   015A68  320C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 19993   015A6A  320B               	rrcf	___xxtofl@arg^(0+1280),f,c
 19994   015A6C                     l8675:
 19995   015A6C  0E00               	movlw	0
 19996   015A6E  140B               	andwf	___xxtofl@arg^(0+1280),w,c
 19997   015A70  6E05               	movwf	??___xxtofl^(0+1280),c
 19998   015A72  0E00               	movlw	0
 19999   015A74  140C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 20000   015A76  6E06               	movwf	(??___xxtofl+1)^(0+1280),c
 20001   015A78  0E00               	movlw	0
 20002   015A7A  140D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 20003   015A7C  6E07               	movwf	(??___xxtofl+2)^(0+1280),c
 20004   015A7E  0EFE               	movlw	254
 20005   015A80  140E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 20006   015A82  6E08               	movwf	(??___xxtofl+3)^(0+1280),c
 20007   015A84  5005               	movf	??___xxtofl^(0+1280),w,c
 20008   015A86  1006               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 20009   015A88  1007               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 20010   015A8A  1008               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 20011   015A8C  A4D8               	btfss	status,2,c
 20012   015A8E  EF4B  F0AD         	goto	u6491
 20013   015A92  EF4D  F0AD         	goto	u6490
 20014   015A96                     u6491:
 20015   015A96  EF30  F0AD         	goto	l8673
 20016   015A9A                     u6490:
 20017   015A9A  EF5B  F0AD         	goto	l2045
 20018   015A9E                     l8677:
 20019   015A9E  2A0A               	incf	___xxtofl@exp^(0+1280),f,c
 20020   015AA0  0E01               	movlw	1
 20021   015AA2  260B               	addwf	___xxtofl@arg^(0+1280),f,c
 20022   015AA4  0E00               	movlw	0
 20023   015AA6  220C               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
 20024   015AA8  220D               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
 20025   015AAA  220E               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
 20026   015AAC  90D8               	bcf	status,0,c
 20027   015AAE  320E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
 20028   015AB0  320D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
 20029   015AB2  320C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
 20030   015AB4  320B               	rrcf	___xxtofl@arg^(0+1280),f,c
 20031   015AB6                     l2045:
 20032   015AB6  0E00               	movlw	0
 20033   015AB8  140B               	andwf	___xxtofl@arg^(0+1280),w,c
 20034   015ABA  6E05               	movwf	??___xxtofl^(0+1280),c
 20035   015ABC  0E00               	movlw	0
 20036   015ABE  140C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
 20037   015AC0  6E06               	movwf	(??___xxtofl+1)^(0+1280),c
 20038   015AC2  0E00               	movlw	0
 20039   015AC4  140D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
 20040   015AC6  6E07               	movwf	(??___xxtofl+2)^(0+1280),c
 20041   015AC8  0EFF               	movlw	255
 20042   015ACA  140E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
 20043   015ACC  6E08               	movwf	(??___xxtofl+3)^(0+1280),c
 20044   015ACE  5005               	movf	??___xxtofl^(0+1280),w,c
 20045   015AD0  1006               	iorwf	(??___xxtofl+1)^(0+1280),w,c
 20046   015AD2  1007               	iorwf	(??___xxtofl+2)^(0+1280),w,c
 20047   015AD4  1008               	iorwf	(??___xxtofl+3)^(0+1280),w,c
 20048   015AD6  A4D8               	btfss	status,2,c
 20049   015AD8  EF70  F0AD         	goto	u6501
 20050   015ADC  EF72  F0AD         	goto	u6500
 20051   015AE0                     u6501:
 20052   015AE0  EF4F  F0AD         	goto	l8677
 20053   015AE4                     u6500:
 20054   015AE4  EF7A  F0AD         	goto	l8685
 20055   015AE8                     l8683:
 20056   015AE8  060A               	decf	___xxtofl@exp^(0+1280),f,c
 20057   015AEA  90D8               	bcf	status,0,c
 20058   015AEC  360B               	rlcf	___xxtofl@arg^(0+1280),f,c
 20059   015AEE  360C               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
 20060   015AF0  360D               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
 20061   015AF2  360E               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
 20062   015AF4                     l8685:
 20063   015AF4  BE0D               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
 20064   015AF6  EF7F  F0AD         	goto	u6511
 20065   015AFA  EF81  F0AD         	goto	u6510
 20066   015AFE                     u6511:
 20067   015AFE  EF89  F0AD         	goto	l2052
 20068   015B02                     u6510:
 20069   015B02  0E02               	movlw	2
 20070   015B04  600A               	cpfslt	___xxtofl@exp^(0+1280),c
 20071   015B06  EF87  F0AD         	goto	u6521
 20072   015B0A  EF89  F0AD         	goto	u6520
 20073   015B0E                     u6521:
 20074   015B0E  EF74  F0AD         	goto	l8683
 20075   015B12                     u6520:
 20076   015B12                     l2052:
 20077   015B12  B00A               	btfsc	___xxtofl@exp^(0+1280),0,c
 20078   015B14  EF8E  F0AD         	goto	u6531
 20079   015B18  EF90  F0AD         	goto	u6530
 20080   015B1C                     u6531:
 20081   015B1C  EF91  F0AD         	goto	l8691
 20082   015B20                     u6530:
 20083   015B20  9E0D               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
 20084   015B22                     l8691:
 20085   015B22  90D8               	bcf	status,0,c
 20086   015B24  320A               	rrcf	___xxtofl@exp^(0+1280),f,c
 20087   015B26  C50A  F505         	movff	___xxtofl@exp,??___xxtofl
 20088   015B2A  6A06               	clrf	(??___xxtofl+1)^(0+1280),c
 20089   015B2C  6A07               	clrf	(??___xxtofl+2)^(0+1280),c
 20090   015B2E  6A08               	clrf	(??___xxtofl+3)^(0+1280),c
 20091   015B30  C505  F508         	movff	??___xxtofl,??___xxtofl+3
 20092   015B34  6A07               	clrf	(??___xxtofl+2)^(0+1280),c
 20093   015B36  6A06               	clrf	(??___xxtofl+1)^(0+1280),c
 20094   015B38  6A05               	clrf	??___xxtofl^(0+1280),c
 20095   015B3A  5005               	movf	??___xxtofl^(0+1280),w,c
 20096   015B3C  120B               	iorwf	___xxtofl@arg^(0+1280),f,c
 20097   015B3E  5006               	movf	(??___xxtofl+1)^(0+1280),w,c
 20098   015B40  120C               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
 20099   015B42  5007               	movf	(??___xxtofl+2)^(0+1280),w,c
 20100   015B44  120D               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
 20101   015B46  5008               	movf	(??___xxtofl+3)^(0+1280),w,c
 20102   015B48  120E               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
 20103   015B4A  5009               	movf	___xxtofl@sign^(0+1280),w,c
 20104   015B4C  B4D8               	btfsc	status,2,c
 20105   015B4E  EFAB  F0AD         	goto	u6541
 20106   015B52  EFAD  F0AD         	goto	u6540
 20107   015B56                     u6541:
 20108   015B56  EFB5  F0AD         	goto	l8701
 20109   015B5A                     u6540:
 20110   015B5A  BE04               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
 20111   015B5C  EFB4  F0AD         	goto	u6550
 20112   015B60  EFB2  F0AD         	goto	u6551
 20113   015B64                     u6551:
 20114   015B64  EFB5  F0AD         	goto	l8701
 20115   015B68                     u6550:
 20116   015B68  8E0E               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
 20117   015B6A                     l8701:
 20118   015B6A  C50B  F501         	movff	___xxtofl@arg,?___xxtofl
 20119   015B6E  C50C  F502         	movff	___xxtofl@arg+1,?___xxtofl+1
 20120   015B72  C50D  F503         	movff	___xxtofl@arg+2,?___xxtofl+2
 20121   015B76  C50E  F504         	movff	___xxtofl@arg+3,?___xxtofl+3
 20122   015B7A                     l2041:
 20123   015B7A  0012               	return		;funcret
 20124   015B7C                     __end_of___xxtofl:
 20125                           	callstack 0
 20126                           
 20127 ;; *************** function _MPU6050_ReadRegisters *****************
 20128 ;; Defined at:
 20129 ;;		line 578 in file "MPU6050_DMP.c"
 20130 ;; Parameters:    Size  Location     Type
 20131 ;;  reg             1    wreg     unsigned char 
 20132 ;;  data            2   18[COMRAM] PTR unsigned char 
 20133 ;;		 -> MPU6050_ReadAll@raw_data(14), MPU6050_ReadTemperature@data(2), MPU6050_ReadGyro@data(6), MPU6050_ReadAccel@data(
      +6), 
 20134 ;;  length          1   20[COMRAM] unsigned char 
 20135 ;; Auto vars:     Size  Location     Type
 20136 ;;  reg             1   21[COMRAM] unsigned char 
 20137 ;; Return value:  Size  Location     Type
 20138 ;;                  1    wreg      _Bool 
 20139 ;; Registers used:
 20140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20141 ;; Tracked objects:
 20142 ;;		On entry : 0/0
 20143 ;;		On exit  : 0/0
 20144 ;;		Unchanged: 0/0
 20145 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20146 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20147 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20149 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20150 ;;Total ram usage:        4 bytes
 20151 ;; Hardware stack levels used: 1
 20152 ;; Hardware stack levels required when called: 4
 20153 ;; This function calls:
 20154 ;;		_SW_I2C_ReadBlock
 20155 ;; This function is called by:
 20156 ;;		_MPU6050_ReadAll
 20157 ;;		_MPU6050_ReadAccel
 20158 ;;		_MPU6050_ReadGyro
 20159 ;;		_MPU6050_ReadTemperature
 20160 ;; This function uses a non-reentrant model
 20161 ;;
 20162                           
 20163                           	psect	text46
 20164   017012                     __ptext46:
 20165                           	callstack 0
 20166   017012                     _MPU6050_ReadRegisters:
 20167                           	callstack 120
 20168                           
 20169                           ;incstack = 0
 20170                           ;MPU6050_ReadRegisters@reg stored from wreg
 20171   017012  6E16               	movwf	MPU6050_ReadRegisters@reg^(0+1280),c
 20172   017014                     
 20173                           ;MPU6050_DMP.c: 579:     return (SW_I2C_ReadBlock(0x68, reg, data, length) == SW_I2C_SUC
      +                          CESS);
 20174   017014  C516  F508         	movff	MPU6050_ReadRegisters@reg,SW_I2C_ReadBlock@reg_addr
 20175   017018  C513  F509         	movff	MPU6050_ReadRegisters@data,SW_I2C_ReadBlock@data
 20176   01701C  C514  F50A         	movff	MPU6050_ReadRegisters@data+1,SW_I2C_ReadBlock@data+1
 20177   017020  C515  F50B         	movff	MPU6050_ReadRegisters@length,SW_I2C_ReadBlock@length
 20178   017024  0E68               	movlw	104
 20179   017026  EC75  F0AE         	call	_SW_I2C_ReadBlock
 20180   01702A  0900               	iorlw	0
 20181   01702C  B4D8               	btfsc	status,2,c
 20182   01702E  EF1B  F0B8         	goto	u7361
 20183   017032  EF1E  F0B8         	goto	u7360
 20184   017036                     u7361:
 20185   017036  0E01               	movlw	1
 20186   017038  EF1F  F0B8         	goto	u7370
 20187   01703C                     u7360:
 20188   01703C  0E00               	movlw	0
 20189   01703E                     u7370:
 20190   01703E  0012               	return		;funcret
 20191   017040                     __end_of_MPU6050_ReadRegisters:
 20192                           	callstack 0
 20193                           
 20194 ;; *************** function _SW_I2C_ReadBlock *****************
 20195 ;; Defined at:
 20196 ;;		line 332 in file "Software_I2C.c"
 20197 ;; Parameters:    Size  Location     Type
 20198 ;;  device_addr     1    wreg     unsigned char 
 20199 ;;  reg_addr        1    7[COMRAM] unsigned char 
 20200 ;;  data            2    8[COMRAM] PTR unsigned char 
 20201 ;;		 -> MPU6050_ReadAll@raw_data(14), MPU6050_ReadTemperature@data(2), MPU6050_ReadGyro@data(6), MPU6050_ReadAccel@data(
      +6), 
 20202 ;;  length          1   10[COMRAM] unsigned char 
 20203 ;; Auto vars:     Size  Location     Type
 20204 ;;  device_addr     1   15[COMRAM] unsigned char 
 20205 ;;  result          1   17[COMRAM] enum E17123
 20206 ;;  i               1   16[COMRAM] unsigned char 
 20207 ;; Return value:  Size  Location     Type
 20208 ;;                  1    wreg      enum E17547
 20209 ;; Registers used:
 20210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20211 ;; Tracked objects:
 20212 ;;		On entry : 0/0
 20213 ;;		On exit  : 0/0
 20214 ;;		Unchanged: 0/0
 20215 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20216 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20217 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20218 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20219 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20220 ;;Total ram usage:       11 bytes
 20221 ;; Hardware stack levels used: 1
 20222 ;; Hardware stack levels required when called: 3
 20223 ;; This function calls:
 20224 ;;		_SW_I2C_ReadByte
 20225 ;;		_SW_I2C_Restart
 20226 ;;		_SW_I2C_Start
 20227 ;;		_SW_I2C_Stop
 20228 ;;		_SW_I2C_WriteByte
 20229 ;; This function is called by:
 20230 ;;		_MPU6050_ReadRegisters
 20231 ;; This function uses a non-reentrant model
 20232 ;;
 20233                           
 20234                           	psect	text47
 20235   015CEA                     __ptext47:
 20236                           	callstack 0
 20237   015CEA                     _SW_I2C_ReadBlock:
 20238                           	callstack 120
 20239                           
 20240                           ;incstack = 0
 20241                           ;SW_I2C_ReadBlock@device_addr stored from wreg
 20242   015CEA  6E10               	movwf	SW_I2C_ReadBlock@device_addr^(0+1280),c
 20243   015CEC                     
 20244                           ;Software_I2C.c: 333:     sw_i2c_error_t result;;Software_I2C.c: 334:     uint8_t i;;Sof
      +                          tware_I2C.c: 336:     if (data == ((void*)0) || length == 0) {
 20245   015CEC  5009               	movf	SW_I2C_ReadBlock@data^(0+1280),w,c
 20246   015CEE  100A               	iorwf	(SW_I2C_ReadBlock@data+1)^(0+1280),w,c
 20247   015CF0  B4D8               	btfsc	status,2,c
 20248   015CF2  EF7D  F0AE         	goto	u6361
 20249   015CF6  EF7F  F0AE         	goto	u6360
 20250   015CFA                     u6361:
 20251   015CFA  EF87  F0AE         	goto	l8545
 20252   015CFE                     u6360:
 20253   015CFE  500B               	movf	SW_I2C_ReadBlock@length^(0+1280),w,c
 20254   015D00  A4D8               	btfss	status,2,c
 20255   015D02  EF85  F0AE         	goto	u6371
 20256   015D06  EF87  F0AE         	goto	u6370
 20257   015D0A                     u6371:
 20258   015D0A  EF8A  F0AE         	goto	l8549
 20259   015D0E                     u6370:
 20260   015D0E                     l8545:
 20261                           
 20262                           ;Software_I2C.c: 337:         return SW_I2C_ERROR_TIMEOUT;
 20263   015D0E  0E02               	movlw	2
 20264   015D10  EF0E  F0AF         	goto	l1082
 20265   015D14                     l8549:
 20266                           
 20267                           ;Software_I2C.c: 341:     result = SW_I2C_Start();
 20268   015D14  EC0F  F0AF         	call	_SW_I2C_Start	;wreg free
 20269   015D18  6E12               	movwf	SW_I2C_ReadBlock@result^(0+1280),c
 20270   015D1A                     
 20271                           ;Software_I2C.c: 342:     if (result != SW_I2C_SUCCESS) {
 20272   015D1A  5012               	movf	SW_I2C_ReadBlock@result^(0+1280),w,c
 20273   015D1C  B4D8               	btfsc	status,2,c
 20274   015D1E  EF93  F0AE         	goto	u6381
 20275   015D22  EF95  F0AE         	goto	u6380
 20276   015D26                     u6381:
 20277   015D26  EF98  F0AE         	goto	l8557
 20278   015D2A                     u6380:
 20279   015D2A                     l8553:
 20280                           
 20281                           ;Software_I2C.c: 343:         return result;
 20282   015D2A  5012               	movf	SW_I2C_ReadBlock@result^(0+1280),w,c
 20283   015D2C  EF0E  F0AF         	goto	l1082
 20284   015D30                     l8557:
 20285                           
 20286                           ;Software_I2C.c: 348:     result = SW_I2C_WriteByte((uint8_t)((device_addr << 1) | 0));
 20287   015D30  5010               	movf	SW_I2C_ReadBlock@device_addr^(0+1280),w,c
 20288   015D32  2410               	addwf	SW_I2C_ReadBlock@device_addr^(0+1280),w,c
 20289   015D34  EC67  F0A7         	call	_SW_I2C_WriteByte
 20290   015D38  6E12               	movwf	SW_I2C_ReadBlock@result^(0+1280),c
 20291   015D3A                     
 20292                           ;Software_I2C.c: 349:     if (result != SW_I2C_SUCCESS) {
 20293   015D3A  5012               	movf	SW_I2C_ReadBlock@result^(0+1280),w,c
 20294   015D3C  B4D8               	btfsc	status,2,c
 20295   015D3E  EFA3  F0AE         	goto	u6391
 20296   015D42  EFA5  F0AE         	goto	u6390
 20297   015D46                     u6391:
 20298   015D46  EFA9  F0AE         	goto	l8567
 20299   015D4A                     u6390:
 20300   015D4A                     l8561:
 20301                           
 20302                           ;Software_I2C.c: 350:         SW_I2C_Stop();
 20303   015D4A  ECBE  F0AD         	call	_SW_I2C_Stop	;wreg free
 20304   015D4E  EF95  F0AE         	goto	l8553
 20305   015D52                     l8567:
 20306                           
 20307                           ;Software_I2C.c: 355:     result = SW_I2C_WriteByte(reg_addr);
 20308   015D52  5008               	movf	SW_I2C_ReadBlock@reg_addr^(0+1280),w,c
 20309   015D54  EC67  F0A7         	call	_SW_I2C_WriteByte
 20310   015D58  6E12               	movwf	SW_I2C_ReadBlock@result^(0+1280),c
 20311   015D5A                     
 20312                           ;Software_I2C.c: 356:     if (result != SW_I2C_SUCCESS) {
 20313   015D5A  5012               	movf	SW_I2C_ReadBlock@result^(0+1280),w,c
 20314   015D5C  B4D8               	btfsc	status,2,c
 20315   015D5E  EFB3  F0AE         	goto	u6401
 20316   015D62  EFB5  F0AE         	goto	u6400
 20317   015D66                     u6401:
 20318   015D66  EFB7  F0AE         	goto	l8577
 20319   015D6A                     u6400:
 20320   015D6A  EFA5  F0AE         	goto	l8561
 20321   015D6E                     l8577:
 20322                           
 20323                           ;Software_I2C.c: 362:     result = SW_I2C_Restart();
 20324   015D6E  EC9C  F0B8         	call	_SW_I2C_Restart	;wreg free
 20325   015D72  6E12               	movwf	SW_I2C_ReadBlock@result^(0+1280),c
 20326   015D74                     
 20327                           ;Software_I2C.c: 363:     if (result != SW_I2C_SUCCESS) {
 20328   015D74  5012               	movf	SW_I2C_ReadBlock@result^(0+1280),w,c
 20329   015D76  B4D8               	btfsc	status,2,c
 20330   015D78  EFC0  F0AE         	goto	u6411
 20331   015D7C  EFC2  F0AE         	goto	u6410
 20332   015D80                     u6411:
 20333   015D80  EFC4  F0AE         	goto	l8587
 20334   015D84                     u6410:
 20335   015D84  EFA5  F0AE         	goto	l8561
 20336   015D88                     l8587:
 20337                           
 20338                           ;Software_I2C.c: 370:     result = SW_I2C_WriteByte((uint8_t)((device_addr << 1) | 1));
 20339   015D88  80D8               	bsf	status,0,c
 20340   015D8A  3410               	rlcf	SW_I2C_ReadBlock@device_addr^(0+1280),w,c
 20341   015D8C  EC67  F0A7         	call	_SW_I2C_WriteByte
 20342   015D90  6E12               	movwf	SW_I2C_ReadBlock@result^(0+1280),c
 20343   015D92                     
 20344                           ;Software_I2C.c: 371:     if (result != SW_I2C_SUCCESS) {
 20345   015D92  5012               	movf	SW_I2C_ReadBlock@result^(0+1280),w,c
 20346   015D94  B4D8               	btfsc	status,2,c
 20347   015D96  EFCF  F0AE         	goto	u6421
 20348   015D9A  EFD1  F0AE         	goto	u6420
 20349   015D9E                     u6421:
 20350   015D9E  EFD3  F0AE         	goto	l1087
 20351   015DA2                     u6420:
 20352   015DA2  EFA5  F0AE         	goto	l8561
 20353   015DA6                     l1087:
 20354                           
 20355                           ;Software_I2C.c: 377:     for (i = 0; i < length; i++) {
 20356   015DA6  6A11               	clrf	SW_I2C_ReadBlock@i^(0+1280),c
 20357   015DA8  EF02  F0AF         	goto	l8605
 20358   015DAC                     l8597:
 20359                           
 20360                           ;Software_I2C.c: 378:         if (i == (length - 1)) {
 20361   015DAC  5011               	movf	SW_I2C_ReadBlock@i^(0+1280),w,c
 20362   015DAE  6E0C               	movwf	??_SW_I2C_ReadBlock^(0+1280),c
 20363   015DB0  6A0D               	clrf	(??_SW_I2C_ReadBlock+1)^(0+1280),c
 20364   015DB2  0EFF               	movlw	255
 20365   015DB4  240B               	addwf	SW_I2C_ReadBlock@length^(0+1280),w,c
 20366   015DB6  6E0E               	movwf	(??_SW_I2C_ReadBlock+2)^(0+1280),c
 20367   015DB8  6A0F               	clrf	(??_SW_I2C_ReadBlock+3)^(0+1280),c
 20368   015DBA  0EFF               	movlw	255
 20369   015DBC  220F               	addwfc	(??_SW_I2C_ReadBlock+3)^(0+1280),f,c
 20370   015DBE  500C               	movf	??_SW_I2C_ReadBlock^(0+1280),w,c
 20371   015DC0  180E               	xorwf	(??_SW_I2C_ReadBlock+2)^(0+1280),w,c
 20372   015DC2  E107               	bnz	u6431
 20373   015DC4  500D               	movf	(??_SW_I2C_ReadBlock+1)^(0+1280),w,c
 20374   015DC6  180F               	xorwf	(??_SW_I2C_ReadBlock+3)^(0+1280),w,c
 20375   015DC8  A4D8               	btfss	status,2,c
 20376   015DCA  EFE9  F0AE         	goto	u6431
 20377   015DCE  EFEB  F0AE         	goto	u6430
 20378   015DD2                     u6431:
 20379   015DD2  EFF7  F0AE         	goto	l8601
 20380   015DD6                     u6430:
 20381   015DD6                     
 20382                           ;Software_I2C.c: 379:             data[i] = SW_I2C_ReadByte(0);
 20383   015DD6  5011               	movf	SW_I2C_ReadBlock@i^(0+1280),w,c
 20384   015DD8  2409               	addwf	SW_I2C_ReadBlock@data^(0+1280),w,c
 20385   015DDA  6ED9               	movwf	fsr2l,c
 20386   015DDC  0E00               	movlw	0
 20387   015DDE  200A               	addwfc	(SW_I2C_ReadBlock@data+1)^(0+1280),w,c
 20388   015DE0  6EDA               	movwf	fsr2h,c
 20389   015DE2  0E00               	movlw	0
 20390   015DE4  ECC1  F0B1         	call	_SW_I2C_ReadByte
 20391   015DE8  6EDF               	movwf	indf2,c
 20392                           
 20393                           ;Software_I2C.c: 380:         } else {
 20394   015DEA  EF01  F0AF         	goto	l8603
 20395   015DEE                     l8601:
 20396                           
 20397                           ;Software_I2C.c: 381:             data[i] = SW_I2C_ReadByte(1);
 20398   015DEE  5011               	movf	SW_I2C_ReadBlock@i^(0+1280),w,c
 20399   015DF0  2409               	addwf	SW_I2C_ReadBlock@data^(0+1280),w,c
 20400   015DF2  6ED9               	movwf	fsr2l,c
 20401   015DF4  0E00               	movlw	0
 20402   015DF6  200A               	addwfc	(SW_I2C_ReadBlock@data+1)^(0+1280),w,c
 20403   015DF8  6EDA               	movwf	fsr2h,c
 20404   015DFA  0E01               	movlw	1
 20405   015DFC  ECC1  F0B1         	call	_SW_I2C_ReadByte
 20406   015E00  6EDF               	movwf	indf2,c
 20407   015E02                     l8603:
 20408                           
 20409                           ;Software_I2C.c: 383:     }
 20410   015E02  2A11               	incf	SW_I2C_ReadBlock@i^(0+1280),f,c
 20411   015E04                     l8605:
 20412   015E04  500B               	movf	SW_I2C_ReadBlock@length^(0+1280),w,c
 20413   015E06  5C11               	subwf	SW_I2C_ReadBlock@i^(0+1280),w,c
 20414   015E08  A0D8               	btfss	status,0,c
 20415   015E0A  EF09  F0AF         	goto	u6441
 20416   015E0E  EF0B  F0AF         	goto	u6440
 20417   015E12                     u6441:
 20418   015E12  EFD6  F0AE         	goto	l8597
 20419   015E16                     u6440:
 20420   015E16                     
 20421                           ;Software_I2C.c: 386:     SW_I2C_Stop();
 20422   015E16  ECBE  F0AD         	call	_SW_I2C_Stop	;wreg free
 20423   015E1A                     
 20424                           ;Software_I2C.c: 388:     return SW_I2C_SUCCESS;
 20425   015E1A  0E00               	movlw	0
 20426   015E1C                     l1082:
 20427   015E1C  0012               	return		;funcret
 20428   015E1E                     __end_of_SW_I2C_ReadBlock:
 20429                           	callstack 0
 20430                           
 20431 ;; *************** function _SW_I2C_WriteByte *****************
 20432 ;; Defined at:
 20433 ;;		line 118 in file "Software_I2C.c"
 20434 ;; Parameters:    Size  Location     Type
 20435 ;;  data            1    wreg     unsigned char 
 20436 ;; Auto vars:     Size  Location     Type
 20437 ;;  data            1    2[COMRAM] unsigned char 
 20438 ;;  i               1    4[COMRAM] unsigned char 
 20439 ;;  ack             1    3[COMRAM] unsigned char 
 20440 ;; Return value:  Size  Location     Type
 20441 ;;                  1    wreg      enum E17123
 20442 ;; Registers used:
 20443 ;;		wreg, status,2, status,0
 20444 ;; Tracked objects:
 20445 ;;		On entry : 0/0
 20446 ;;		On exit  : 0/0
 20447 ;;		Unchanged: 0/0
 20448 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20450 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20451 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20452 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20453 ;;Total ram usage:        5 bytes
 20454 ;; Hardware stack levels used: 1
 20455 ;; This function calls:
 20456 ;;		Nothing
 20457 ;; This function is called by:
 20458 ;;		_SW_I2C_WriteRegister
 20459 ;;		_SW_I2C_ReadRegister
 20460 ;;		_SW_I2C_ReadBlock
 20461 ;;		_SW_I2C_ScanBus
 20462 ;; This function uses a non-reentrant model
 20463 ;;
 20464                           
 20465                           	psect	text48
 20466   014ECE                     __ptext48:
 20467                           	callstack 0
 20468   014ECE                     _SW_I2C_WriteByte:
 20469                           	callstack 122
 20470                           
 20471                           ;incstack = 0
 20472                           ;SW_I2C_WriteByte@data stored from wreg
 20473   014ECE  6E03               	movwf	SW_I2C_WriteByte@data^(0+1280),c
 20474   014ED0                     
 20475                           ;Software_I2C.c: 119:     uint8_t i;;Software_I2C.c: 122:     for (i = 0; i < 8; i++) {
 20476   014ED0  6A05               	clrf	SW_I2C_WriteByte@i^(0+1280),c
 20477   014ED2                     l926:
 20478                           
 20479                           ;Software_I2C.c: 124:         if (data & 0x80) {
 20480   014ED2  AE03               	btfss	SW_I2C_WriteByte@data^(0+1280),7,c
 20481   014ED4  EF6E  F0A7         	goto	u4771
 20482   014ED8  EF70  F0A7         	goto	u4770
 20483   014EDC                     u4771:
 20484   014EDC  EF73  F0A7         	goto	l928
 20485   014EE0                     u4770:
 20486   014EE0                     
 20487                           ;Software_I2C.c: 125:             (TRISBbits.TRISB2 = 1);
 20488   014EE0  84C7               	bsf	199,2,c	;volatile
 20489                           
 20490                           ;Software_I2C.c: 126:         } else {
 20491   014EE2  EF88  F0A7         	goto	l7391
 20492   014EE6                     l928:
 20493                           
 20494                           ;Software_I2C.c: 127:             (TRISBbits.TRISB2 = 0);
 20495   014EE6  94C7               	bcf	199,2,c	;volatile
 20496                           
 20497                           ;Software_I2C.c: 128:             (LATBbits.LATB2 = 0);
 20498   014EE8  94BF               	bcf	191,2,c	;volatile
 20499   014EEA  EF88  F0A7         	goto	l7391
 20500   014EEE                     l7381:
 20501   014EEE  0E1A               	movlw	26
 20502   014EF0                     u9167:
 20503   014EF0  2EE8               	decfsz	wreg,f,c
 20504   014EF2  D7FE               	bra	u9167
 20505   014EF4  D000               	nop2	
 20506   014EF6  EFA1  F0A7         	goto	l937
 20507   014EFA                     l7383:
 20508   014EFA  0E2A               	movlw	42
 20509   014EFC                     u9177:
 20510   014EFC  2EE8               	decfsz	wreg,f,c
 20511   014EFE  D7FE               	bra	u9177
 20512   014F00  D000               	nop2	
 20513   014F02  EFA1  F0A7         	goto	l937
 20514   014F06                     l7385:
 20515   014F06  0E40               	movlw	64
 20516   014F08                     u9187:
 20517   014F08  2EE8               	decfsz	wreg,f,c
 20518   014F0A  D7FE               	bra	u9187
 20519   014F0C  EFA1  F0A7         	goto	l937
 20520   014F10                     l7391:
 20521   014F10  505F               	movf	_current_i2c_speed^(0+1280),w,c
 20522   014F12  6E01               	movwf	??_SW_I2C_WriteByte^(0+1280),c
 20523   014F14  6A02               	clrf	(??_SW_I2C_WriteByte+1)^(0+1280),c
 20524                           
 20525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20526                           ; Switch size 1, requested type "simple"
 20527                           ; Number of cases is 1, Range of values is 0 to 0
 20528                           ; switch strategies available:
 20529                           ; Name         Instructions Cycles
 20530                           ; simple_byte            4     3 (average)
 20531                           ;	Chosen strategy is simple_byte
 20532   014F16  5002               	movf	(??_SW_I2C_WriteByte+1)^(0+1280),w,c
 20533   014F18  0A00               	xorlw	0	; case 0
 20534   014F1A  B4D8               	btfsc	status,2,c
 20535   014F1C  EF92  F0A7         	goto	l11241
 20536   014F20  EF7D  F0A7         	goto	l7383
 20537   014F24                     l11241:
 20538                           
 20539                           ; Switch size 1, requested type "simple"
 20540                           ; Number of cases is 3, Range of values is 0 to 2
 20541                           ; switch strategies available:
 20542                           ; Name         Instructions Cycles
 20543                           ; simple_byte           10     6 (average)
 20544                           ;	Chosen strategy is simple_byte
 20545   014F24  5001               	movf	??_SW_I2C_WriteByte^(0+1280),w,c
 20546   014F26  0A00               	xorlw	0	; case 0
 20547   014F28  B4D8               	btfsc	status,2,c
 20548   014F2A  EF77  F0A7         	goto	l7381
 20549   014F2E  0A01               	xorlw	1	; case 1
 20550   014F30  B4D8               	btfsc	status,2,c
 20551   014F32  EF7D  F0A7         	goto	l7383
 20552   014F36  0A03               	xorlw	3	; case 2
 20553   014F38  B4D8               	btfsc	status,2,c
 20554   014F3A  EF83  F0A7         	goto	l7385
 20555   014F3E  EF7D  F0A7         	goto	l7383
 20556   014F42                     l937:
 20557                           
 20558                           ;Software_I2C.c: 134:         (TRISBbits.TRISB1 = 1);
 20559   014F42  82C7               	bsf	199,1,c	;volatile
 20560   014F44  EFB5  F0A7         	goto	l7403
 20561   014F48                     l7393:
 20562   014F48  0E1A               	movlw	26
 20563   014F4A                     u9197:
 20564   014F4A  2EE8               	decfsz	wreg,f,c
 20565   014F4C  D7FE               	bra	u9197
 20566   014F4E  D000               	nop2	
 20567   014F50  EFCE  F0A7         	goto	l945
 20568   014F54                     l7395:
 20569   014F54  0E2A               	movlw	42
 20570   014F56                     u9207:
 20571   014F56  2EE8               	decfsz	wreg,f,c
 20572   014F58  D7FE               	bra	u9207
 20573   014F5A  D000               	nop2	
 20574   014F5C  EFCE  F0A7         	goto	l945
 20575   014F60                     l7397:
 20576   014F60  0E40               	movlw	64
 20577   014F62                     u9217:
 20578   014F62  2EE8               	decfsz	wreg,f,c
 20579   014F64  D7FE               	bra	u9217
 20580   014F66  EFCE  F0A7         	goto	l945
 20581   014F6A                     l7403:
 20582   014F6A  505F               	movf	_current_i2c_speed^(0+1280),w,c
 20583   014F6C  6E01               	movwf	??_SW_I2C_WriteByte^(0+1280),c
 20584   014F6E  6A02               	clrf	(??_SW_I2C_WriteByte+1)^(0+1280),c
 20585                           
 20586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20587                           ; Switch size 1, requested type "simple"
 20588                           ; Number of cases is 1, Range of values is 0 to 0
 20589                           ; switch strategies available:
 20590                           ; Name         Instructions Cycles
 20591                           ; simple_byte            4     3 (average)
 20592                           ;	Chosen strategy is simple_byte
 20593   014F70  5002               	movf	(??_SW_I2C_WriteByte+1)^(0+1280),w,c
 20594   014F72  0A00               	xorlw	0	; case 0
 20595   014F74  B4D8               	btfsc	status,2,c
 20596   014F76  EFBF  F0A7         	goto	l11243
 20597   014F7A  EFAA  F0A7         	goto	l7395
 20598   014F7E                     l11243:
 20599                           
 20600                           ; Switch size 1, requested type "simple"
 20601                           ; Number of cases is 3, Range of values is 0 to 2
 20602                           ; switch strategies available:
 20603                           ; Name         Instructions Cycles
 20604                           ; simple_byte           10     6 (average)
 20605                           ;	Chosen strategy is simple_byte
 20606   014F7E  5001               	movf	??_SW_I2C_WriteByte^(0+1280),w,c
 20607   014F80  0A00               	xorlw	0	; case 0
 20608   014F82  B4D8               	btfsc	status,2,c
 20609   014F84  EFA4  F0A7         	goto	l7393
 20610   014F88  0A01               	xorlw	1	; case 1
 20611   014F8A  B4D8               	btfsc	status,2,c
 20612   014F8C  EFAA  F0A7         	goto	l7395
 20613   014F90  0A03               	xorlw	3	; case 2
 20614   014F92  B4D8               	btfsc	status,2,c
 20615   014F94  EFB0  F0A7         	goto	l7397
 20616   014F98  EFAA  F0A7         	goto	l7395
 20617   014F9C                     l945:
 20618                           
 20619                           ;Software_I2C.c: 136:         (TRISBbits.TRISB1 = 0);
 20620   014F9C  92C7               	bcf	199,1,c	;volatile
 20621                           
 20622                           ;Software_I2C.c: 137:         (LATBbits.LATB1 = 0);
 20623   014F9E  92BF               	bcf	191,1,c	;volatile
 20624   014FA0  EFE3  F0A7         	goto	l7415
 20625   014FA4                     l7405:
 20626   014FA4  0E1A               	movlw	26
 20627   014FA6                     u9227:
 20628   014FA6  2EE8               	decfsz	wreg,f,c
 20629   014FA8  D7FE               	bra	u9227
 20630   014FAA  D000               	nop2	
 20631   014FAC  EFFC  F0A7         	goto	l7417
 20632   014FB0                     l7407:
 20633   014FB0  0E2A               	movlw	42
 20634   014FB2                     u9237:
 20635   014FB2  2EE8               	decfsz	wreg,f,c
 20636   014FB4  D7FE               	bra	u9237
 20637   014FB6  D000               	nop2	
 20638   014FB8  EFFC  F0A7         	goto	l7417
 20639   014FBC                     l7409:
 20640   014FBC  0E40               	movlw	64
 20641   014FBE                     u9247:
 20642   014FBE  2EE8               	decfsz	wreg,f,c
 20643   014FC0  D7FE               	bra	u9247
 20644   014FC2  EFFC  F0A7         	goto	l7417
 20645   014FC6                     l7415:
 20646   014FC6  505F               	movf	_current_i2c_speed^(0+1280),w,c
 20647   014FC8  6E01               	movwf	??_SW_I2C_WriteByte^(0+1280),c
 20648   014FCA  6A02               	clrf	(??_SW_I2C_WriteByte+1)^(0+1280),c
 20649                           
 20650                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20651                           ; Switch size 1, requested type "simple"
 20652                           ; Number of cases is 1, Range of values is 0 to 0
 20653                           ; switch strategies available:
 20654                           ; Name         Instructions Cycles
 20655                           ; simple_byte            4     3 (average)
 20656                           ;	Chosen strategy is simple_byte
 20657   014FCC  5002               	movf	(??_SW_I2C_WriteByte+1)^(0+1280),w,c
 20658   014FCE  0A00               	xorlw	0	; case 0
 20659   014FD0  B4D8               	btfsc	status,2,c
 20660   014FD2  EFED  F0A7         	goto	l11245
 20661   014FD6  EFD8  F0A7         	goto	l7407
 20662   014FDA                     l11245:
 20663                           
 20664                           ; Switch size 1, requested type "simple"
 20665                           ; Number of cases is 3, Range of values is 0 to 2
 20666                           ; switch strategies available:
 20667                           ; Name         Instructions Cycles
 20668                           ; simple_byte           10     6 (average)
 20669                           ;	Chosen strategy is simple_byte
 20670   014FDA  5001               	movf	??_SW_I2C_WriteByte^(0+1280),w,c
 20671   014FDC  0A00               	xorlw	0	; case 0
 20672   014FDE  B4D8               	btfsc	status,2,c
 20673   014FE0  EFD2  F0A7         	goto	l7405
 20674   014FE4  0A01               	xorlw	1	; case 1
 20675   014FE6  B4D8               	btfsc	status,2,c
 20676   014FE8  EFD8  F0A7         	goto	l7407
 20677   014FEC  0A03               	xorlw	3	; case 2
 20678   014FEE  B4D8               	btfsc	status,2,c
 20679   014FF0  EFDE  F0A7         	goto	l7409
 20680   014FF4  EFD8  F0A7         	goto	l7407
 20681   014FF8                     l7417:
 20682                           
 20683                           ;Software_I2C.c: 140:         data <<= 1;
 20684   014FF8  90D8               	bcf	status,0,c
 20685   014FFA  3603               	rlcf	SW_I2C_WriteByte@data^(0+1280),f,c
 20686   014FFC                     
 20687                           ;Software_I2C.c: 141:     }
 20688   014FFC  2A05               	incf	SW_I2C_WriteByte@i^(0+1280),f,c
 20689   014FFE  0E07               	movlw	7
 20690   015000  6405               	cpfsgt	SW_I2C_WriteByte@i^(0+1280),c
 20691   015002  EF05  F0A8         	goto	u4781
 20692   015006  EF07  F0A8         	goto	u4780
 20693   01500A                     u4781:
 20694   01500A  EF69  F0A7         	goto	l926
 20695   01500E                     u4780:
 20696   01500E                     
 20697                           ;Software_I2C.c: 144:     (TRISBbits.TRISB2 = 1);
 20698   01500E  84C7               	bsf	199,2,c	;volatile
 20699   015010  EF1B  F0A8         	goto	l7433
 20700   015014                     l7423:
 20701   015014  0E1A               	movlw	26
 20702   015016                     u9257:
 20703   015016  2EE8               	decfsz	wreg,f,c
 20704   015018  D7FE               	bra	u9257
 20705   01501A  D000               	nop2	
 20706   01501C  EF34  F0A8         	goto	l961
 20707   015020                     l7425:
 20708   015020  0E2A               	movlw	42
 20709   015022                     u9267:
 20710   015022  2EE8               	decfsz	wreg,f,c
 20711   015024  D7FE               	bra	u9267
 20712   015026  D000               	nop2	
 20713   015028  EF34  F0A8         	goto	l961
 20714   01502C                     l7427:
 20715   01502C  0E40               	movlw	64
 20716   01502E                     u9277:
 20717   01502E  2EE8               	decfsz	wreg,f,c
 20718   015030  D7FE               	bra	u9277
 20719   015032  EF34  F0A8         	goto	l961
 20720   015036                     l7433:
 20721   015036  505F               	movf	_current_i2c_speed^(0+1280),w,c
 20722   015038  6E01               	movwf	??_SW_I2C_WriteByte^(0+1280),c
 20723   01503A  6A02               	clrf	(??_SW_I2C_WriteByte+1)^(0+1280),c
 20724                           
 20725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20726                           ; Switch size 1, requested type "simple"
 20727                           ; Number of cases is 1, Range of values is 0 to 0
 20728                           ; switch strategies available:
 20729                           ; Name         Instructions Cycles
 20730                           ; simple_byte            4     3 (average)
 20731                           ;	Chosen strategy is simple_byte
 20732   01503C  5002               	movf	(??_SW_I2C_WriteByte+1)^(0+1280),w,c
 20733   01503E  0A00               	xorlw	0	; case 0
 20734   015040  B4D8               	btfsc	status,2,c
 20735   015042  EF25  F0A8         	goto	l11247
 20736   015046  EF10  F0A8         	goto	l7425
 20737   01504A                     l11247:
 20738                           
 20739                           ; Switch size 1, requested type "simple"
 20740                           ; Number of cases is 3, Range of values is 0 to 2
 20741                           ; switch strategies available:
 20742                           ; Name         Instructions Cycles
 20743                           ; simple_byte           10     6 (average)
 20744                           ;	Chosen strategy is simple_byte
 20745   01504A  5001               	movf	??_SW_I2C_WriteByte^(0+1280),w,c
 20746   01504C  0A00               	xorlw	0	; case 0
 20747   01504E  B4D8               	btfsc	status,2,c
 20748   015050  EF0A  F0A8         	goto	l7423
 20749   015054  0A01               	xorlw	1	; case 1
 20750   015056  B4D8               	btfsc	status,2,c
 20751   015058  EF10  F0A8         	goto	l7425
 20752   01505C  0A03               	xorlw	3	; case 2
 20753   01505E  B4D8               	btfsc	status,2,c
 20754   015060  EF16  F0A8         	goto	l7427
 20755   015064  EF10  F0A8         	goto	l7425
 20756   015068                     l961:
 20757                           
 20758                           ;Software_I2C.c: 147:     (TRISBbits.TRISB1 = 1);
 20759   015068  82C7               	bsf	199,1,c	;volatile
 20760   01506A  EF48  F0A8         	goto	l7445
 20761   01506E                     l7435:
 20762   01506E  0E1A               	movlw	26
 20763   015070                     u9287:
 20764   015070  2EE8               	decfsz	wreg,f,c
 20765   015072  D7FE               	bra	u9287
 20766   015074  D000               	nop2	
 20767   015076  EF61  F0A8         	goto	l7447
 20768   01507A                     l7437:
 20769   01507A  0E2A               	movlw	42
 20770   01507C                     u9297:
 20771   01507C  2EE8               	decfsz	wreg,f,c
 20772   01507E  D7FE               	bra	u9297
 20773   015080  D000               	nop2	
 20774   015082  EF61  F0A8         	goto	l7447
 20775   015086                     l7439:
 20776   015086  0E40               	movlw	64
 20777   015088                     u9307:
 20778   015088  2EE8               	decfsz	wreg,f,c
 20779   01508A  D7FE               	bra	u9307
 20780   01508C  EF61  F0A8         	goto	l7447
 20781   015090                     l7445:
 20782   015090  505F               	movf	_current_i2c_speed^(0+1280),w,c
 20783   015092  6E01               	movwf	??_SW_I2C_WriteByte^(0+1280),c
 20784   015094  6A02               	clrf	(??_SW_I2C_WriteByte+1)^(0+1280),c
 20785                           
 20786                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20787                           ; Switch size 1, requested type "simple"
 20788                           ; Number of cases is 1, Range of values is 0 to 0
 20789                           ; switch strategies available:
 20790                           ; Name         Instructions Cycles
 20791                           ; simple_byte            4     3 (average)
 20792                           ;	Chosen strategy is simple_byte
 20793   015096  5002               	movf	(??_SW_I2C_WriteByte+1)^(0+1280),w,c
 20794   015098  0A00               	xorlw	0	; case 0
 20795   01509A  B4D8               	btfsc	status,2,c
 20796   01509C  EF52  F0A8         	goto	l11249
 20797   0150A0  EF3D  F0A8         	goto	l7437
 20798   0150A4                     l11249:
 20799                           
 20800                           ; Switch size 1, requested type "simple"
 20801                           ; Number of cases is 3, Range of values is 0 to 2
 20802                           ; switch strategies available:
 20803                           ; Name         Instructions Cycles
 20804                           ; simple_byte           10     6 (average)
 20805                           ;	Chosen strategy is simple_byte
 20806   0150A4  5001               	movf	??_SW_I2C_WriteByte^(0+1280),w,c
 20807   0150A6  0A00               	xorlw	0	; case 0
 20808   0150A8  B4D8               	btfsc	status,2,c
 20809   0150AA  EF37  F0A8         	goto	l7435
 20810   0150AE  0A01               	xorlw	1	; case 1
 20811   0150B0  B4D8               	btfsc	status,2,c
 20812   0150B2  EF3D  F0A8         	goto	l7437
 20813   0150B6  0A03               	xorlw	3	; case 2
 20814   0150B8  B4D8               	btfsc	status,2,c
 20815   0150BA  EF43  F0A8         	goto	l7439
 20816   0150BE  EF3D  F0A8         	goto	l7437
 20817   0150C2                     l7447:
 20818                           
 20819                           ;Software_I2C.c: 150:     uint8_t ack = (PORTBbits.RB2);
 20820   0150C2  0E00               	movlw	0
 20821   0150C4  B4CF               	btfsc	207,2,c	;volatile
 20822   0150C6  0E01               	movlw	1
 20823   0150C8  6E04               	movwf	SW_I2C_WriteByte@ack^(0+1280),c
 20824   0150CA                     
 20825                           ;Software_I2C.c: 152:     (TRISBbits.TRISB1 = 0);
 20826   0150CA  92C7               	bcf	199,1,c	;volatile
 20827   0150CC                     
 20828                           ;Software_I2C.c: 153:     (LATBbits.LATB1 = 0);
 20829   0150CC  92BF               	bcf	191,1,c	;volatile
 20830   0150CE  EF7A  F0A8         	goto	l7463
 20831   0150D2                     l7453:
 20832   0150D2  0E1A               	movlw	26
 20833   0150D4                     u9317:
 20834   0150D4  2EE8               	decfsz	wreg,f,c
 20835   0150D6  D7FE               	bra	u9317
 20836   0150D8  D000               	nop2	
 20837   0150DA  EF93  F0A8         	goto	l7465
 20838   0150DE                     l7455:
 20839   0150DE  0E2A               	movlw	42
 20840   0150E0                     u9327:
 20841   0150E0  2EE8               	decfsz	wreg,f,c
 20842   0150E2  D7FE               	bra	u9327
 20843   0150E4  D000               	nop2	
 20844   0150E6  EF93  F0A8         	goto	l7465
 20845   0150EA                     l7457:
 20846   0150EA  0E40               	movlw	64
 20847   0150EC                     u9337:
 20848   0150EC  2EE8               	decfsz	wreg,f,c
 20849   0150EE  D7FE               	bra	u9337
 20850   0150F0  EF93  F0A8         	goto	l7465
 20851   0150F4                     l7463:
 20852   0150F4  505F               	movf	_current_i2c_speed^(0+1280),w,c
 20853   0150F6  6E01               	movwf	??_SW_I2C_WriteByte^(0+1280),c
 20854   0150F8  6A02               	clrf	(??_SW_I2C_WriteByte+1)^(0+1280),c
 20855                           
 20856                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20857                           ; Switch size 1, requested type "simple"
 20858                           ; Number of cases is 1, Range of values is 0 to 0
 20859                           ; switch strategies available:
 20860                           ; Name         Instructions Cycles
 20861                           ; simple_byte            4     3 (average)
 20862                           ;	Chosen strategy is simple_byte
 20863   0150FA  5002               	movf	(??_SW_I2C_WriteByte+1)^(0+1280),w,c
 20864   0150FC  0A00               	xorlw	0	; case 0
 20865   0150FE  B4D8               	btfsc	status,2,c
 20866   015100  EF84  F0A8         	goto	l11251
 20867   015104  EF6F  F0A8         	goto	l7455
 20868   015108                     l11251:
 20869                           
 20870                           ; Switch size 1, requested type "simple"
 20871                           ; Number of cases is 3, Range of values is 0 to 2
 20872                           ; switch strategies available:
 20873                           ; Name         Instructions Cycles
 20874                           ; simple_byte           10     6 (average)
 20875                           ;	Chosen strategy is simple_byte
 20876   015108  5001               	movf	??_SW_I2C_WriteByte^(0+1280),w,c
 20877   01510A  0A00               	xorlw	0	; case 0
 20878   01510C  B4D8               	btfsc	status,2,c
 20879   01510E  EF69  F0A8         	goto	l7453
 20880   015112  0A01               	xorlw	1	; case 1
 20881   015114  B4D8               	btfsc	status,2,c
 20882   015116  EF6F  F0A8         	goto	l7455
 20883   01511A  0A03               	xorlw	3	; case 2
 20884   01511C  B4D8               	btfsc	status,2,c
 20885   01511E  EF75  F0A8         	goto	l7457
 20886   015122  EF6F  F0A8         	goto	l7455
 20887   015126                     l7465:
 20888                           
 20889                           ;Software_I2C.c: 156:     return (ack == 0) ? SW_I2C_SUCCESS : SW_I2C_ERROR_NACK;
 20890   015126  5004               	movf	SW_I2C_WriteByte@ack^(0+1280),w,c
 20891   015128  A4D8               	btfss	status,2,c
 20892   01512A  EF99  F0A8         	goto	u4791
 20893   01512E  EF9C  F0A8         	goto	u4790
 20894   015132                     u4791:
 20895   015132  0E01               	movlw	1
 20896   015134  EF9D  F0A8         	goto	u4800
 20897   015138                     u4790:
 20898   015138  0E00               	movlw	0
 20899   01513A                     u4800:
 20900   01513A  0012               	return		;funcret
 20901   01513C                     __end_of_SW_I2C_WriteByte:
 20902                           	callstack 0
 20903                           
 20904 ;; *************** function _SW_I2C_Restart *****************
 20905 ;; Defined at:
 20906 ;;		line 108 in file "Software_I2C.c"
 20907 ;; Parameters:    Size  Location     Type
 20908 ;;		None
 20909 ;; Auto vars:     Size  Location     Type
 20910 ;;		None
 20911 ;; Return value:  Size  Location     Type
 20912 ;;                  1    wreg      enum E17123
 20913 ;; Registers used:
 20914 ;;		wreg, status,2, status,0, cstack
 20915 ;; Tracked objects:
 20916 ;;		On entry : 0/0
 20917 ;;		On exit  : 0/0
 20918 ;;		Unchanged: 0/0
 20919 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20924 ;;Total ram usage:        0 bytes
 20925 ;; Hardware stack levels used: 1
 20926 ;; Hardware stack levels required when called: 2
 20927 ;; This function calls:
 20928 ;;		_SW_I2C_Start
 20929 ;;		_SW_I2C_Stop
 20930 ;; This function is called by:
 20931 ;;		_SW_I2C_ReadRegister
 20932 ;;		_SW_I2C_ReadBlock
 20933 ;; This function uses a non-reentrant model
 20934 ;;
 20935                           
 20936                           	psect	text49
 20937   017138                     __ptext49:
 20938                           	callstack 0
 20939   017138                     _SW_I2C_Restart:
 20940                           	callstack 119
 20941   017138                     
 20942                           ;Software_I2C.c: 110:     SW_I2C_Stop();
 20943   017138  ECBE  F0AD         	call	_SW_I2C_Stop	;wreg free
 20944   01713C                     
 20945                           ;Software_I2C.c: 111:     _delay((unsigned long)((8)*(64000000UL/4000000.0)));
 20946   01713C  0E2A               	movlw	42
 20947   01713E                     u9347:
 20948   01713E  2EE8               	decfsz	wreg,f,c
 20949   017140  D7FE               	bra	u9347
 20950   017142  D000               	nop2	
 20951   017144                     
 20952                           ;Software_I2C.c: 112:     return SW_I2C_Start();
 20953   017144  EC0F  F0AF         	call	_SW_I2C_Start	;wreg free
 20954   017148  0012               	return		;funcret
 20955   01714A                     __end_of_SW_I2C_Restart:
 20956                           	callstack 0
 20957                           
 20958 ;; *************** function _SW_I2C_Stop *****************
 20959 ;; Defined at:
 20960 ;;		line 86 in file "Software_I2C.c"
 20961 ;; Parameters:    Size  Location     Type
 20962 ;;		None
 20963 ;; Auto vars:     Size  Location     Type
 20964 ;;		None
 20965 ;; Return value:  Size  Location     Type
 20966 ;;                  1    wreg      void 
 20967 ;; Registers used:
 20968 ;;		wreg, status,2, status,0
 20969 ;; Tracked objects:
 20970 ;;		On entry : 0/0
 20971 ;;		On exit  : 0/0
 20972 ;;		Unchanged: 0/0
 20973 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 20974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20977 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20978 ;;Total ram usage:        2 bytes
 20979 ;; Hardware stack levels used: 1
 20980 ;; This function calls:
 20981 ;;		Nothing
 20982 ;; This function is called by:
 20983 ;;		_SW_I2C_Restart
 20984 ;;		_SW_I2C_WriteRegister
 20985 ;;		_SW_I2C_ReadRegister
 20986 ;;		_SW_I2C_ReadBlock
 20987 ;;		_SW_I2C_ScanBus
 20988 ;; This function uses a non-reentrant model
 20989 ;;
 20990                           
 20991                           	psect	text50
 20992   015B7C                     __ptext50:
 20993                           	callstack 0
 20994   015B7C                     _SW_I2C_Stop:
 20995                           	callstack 122
 20996   015B7C                     
 20997                           ;Software_I2C.c: 88:     (TRISBbits.TRISB1 = 0);
 20998   015B7C  92C7               	bcf	199,1,c	;volatile
 20999                           
 21000                           ;Software_I2C.c: 89:     (LATBbits.LATB1 = 0);
 21001   015B7E  92BF               	bcf	191,1,c	;volatile
 21002   015B80  EFD3  F0AD         	goto	l7091
 21003   015B84                     l7081:
 21004   015B84  0E1A               	movlw	26
 21005   015B86                     u9357:
 21006   015B86  2EE8               	decfsz	wreg,f,c
 21007   015B88  D7FE               	bra	u9357
 21008   015B8A  D000               	nop2	
 21009   015B8C  EFEC  F0AD         	goto	l895
 21010   015B90                     l7083:
 21011   015B90  0E2A               	movlw	42
 21012   015B92                     u9367:
 21013   015B92  2EE8               	decfsz	wreg,f,c
 21014   015B94  D7FE               	bra	u9367
 21015   015B96  D000               	nop2	
 21016   015B98  EFEC  F0AD         	goto	l895
 21017   015B9C                     l7085:
 21018   015B9C  0E40               	movlw	64
 21019   015B9E                     u9377:
 21020   015B9E  2EE8               	decfsz	wreg,f,c
 21021   015BA0  D7FE               	bra	u9377
 21022   015BA2  EFEC  F0AD         	goto	l895
 21023   015BA6                     l7091:
 21024   015BA6  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21025   015BA8  6E01               	movwf	??_SW_I2C_Stop^(0+1280),c
 21026   015BAA  6A02               	clrf	(??_SW_I2C_Stop+1)^(0+1280),c
 21027                           
 21028                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21029                           ; Switch size 1, requested type "simple"
 21030                           ; Number of cases is 1, Range of values is 0 to 0
 21031                           ; switch strategies available:
 21032                           ; Name         Instructions Cycles
 21033                           ; simple_byte            4     3 (average)
 21034                           ;	Chosen strategy is simple_byte
 21035   015BAC  5002               	movf	(??_SW_I2C_Stop+1)^(0+1280),w,c
 21036   015BAE  0A00               	xorlw	0	; case 0
 21037   015BB0  B4D8               	btfsc	status,2,c
 21038   015BB2  EFDD  F0AD         	goto	l11253
 21039   015BB6  EFC8  F0AD         	goto	l7083
 21040   015BBA                     l11253:
 21041                           
 21042                           ; Switch size 1, requested type "simple"
 21043                           ; Number of cases is 3, Range of values is 0 to 2
 21044                           ; switch strategies available:
 21045                           ; Name         Instructions Cycles
 21046                           ; simple_byte           10     6 (average)
 21047                           ;	Chosen strategy is simple_byte
 21048   015BBA  5001               	movf	??_SW_I2C_Stop^(0+1280),w,c
 21049   015BBC  0A00               	xorlw	0	; case 0
 21050   015BBE  B4D8               	btfsc	status,2,c
 21051   015BC0  EFC2  F0AD         	goto	l7081
 21052   015BC4  0A01               	xorlw	1	; case 1
 21053   015BC6  B4D8               	btfsc	status,2,c
 21054   015BC8  EFC8  F0AD         	goto	l7083
 21055   015BCC  0A03               	xorlw	3	; case 2
 21056   015BCE  B4D8               	btfsc	status,2,c
 21057   015BD0  EFCE  F0AD         	goto	l7085
 21058   015BD4  EFC8  F0AD         	goto	l7083
 21059   015BD8                     l895:
 21060                           
 21061                           ;Software_I2C.c: 93:     (TRISBbits.TRISB2 = 0);
 21062   015BD8  94C7               	bcf	199,2,c	;volatile
 21063                           
 21064                           ;Software_I2C.c: 94:     (LATBbits.LATB2 = 0);
 21065   015BDA  94BF               	bcf	191,2,c	;volatile
 21066   015BDC  EF01  F0AE         	goto	l7103
 21067   015BE0                     l7093:
 21068   015BE0  0E1A               	movlw	26
 21069   015BE2                     u9387:
 21070   015BE2  2EE8               	decfsz	wreg,f,c
 21071   015BE4  D7FE               	bra	u9387
 21072   015BE6  D000               	nop2	
 21073   015BE8  EF1A  F0AE         	goto	l903
 21074   015BEC                     l7095:
 21075   015BEC  0E2A               	movlw	42
 21076   015BEE                     u9397:
 21077   015BEE  2EE8               	decfsz	wreg,f,c
 21078   015BF0  D7FE               	bra	u9397
 21079   015BF2  D000               	nop2	
 21080   015BF4  EF1A  F0AE         	goto	l903
 21081   015BF8                     l7097:
 21082   015BF8  0E40               	movlw	64
 21083   015BFA                     u9407:
 21084   015BFA  2EE8               	decfsz	wreg,f,c
 21085   015BFC  D7FE               	bra	u9407
 21086   015BFE  EF1A  F0AE         	goto	l903
 21087   015C02                     l7103:
 21088   015C02  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21089   015C04  6E01               	movwf	??_SW_I2C_Stop^(0+1280),c
 21090   015C06  6A02               	clrf	(??_SW_I2C_Stop+1)^(0+1280),c
 21091                           
 21092                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21093                           ; Switch size 1, requested type "simple"
 21094                           ; Number of cases is 1, Range of values is 0 to 0
 21095                           ; switch strategies available:
 21096                           ; Name         Instructions Cycles
 21097                           ; simple_byte            4     3 (average)
 21098                           ;	Chosen strategy is simple_byte
 21099   015C08  5002               	movf	(??_SW_I2C_Stop+1)^(0+1280),w,c
 21100   015C0A  0A00               	xorlw	0	; case 0
 21101   015C0C  B4D8               	btfsc	status,2,c
 21102   015C0E  EF0B  F0AE         	goto	l11255
 21103   015C12  EFF6  F0AD         	goto	l7095
 21104   015C16                     l11255:
 21105                           
 21106                           ; Switch size 1, requested type "simple"
 21107                           ; Number of cases is 3, Range of values is 0 to 2
 21108                           ; switch strategies available:
 21109                           ; Name         Instructions Cycles
 21110                           ; simple_byte           10     6 (average)
 21111                           ;	Chosen strategy is simple_byte
 21112   015C16  5001               	movf	??_SW_I2C_Stop^(0+1280),w,c
 21113   015C18  0A00               	xorlw	0	; case 0
 21114   015C1A  B4D8               	btfsc	status,2,c
 21115   015C1C  EFF0  F0AD         	goto	l7093
 21116   015C20  0A01               	xorlw	1	; case 1
 21117   015C22  B4D8               	btfsc	status,2,c
 21118   015C24  EFF6  F0AD         	goto	l7095
 21119   015C28  0A03               	xorlw	3	; case 2
 21120   015C2A  B4D8               	btfsc	status,2,c
 21121   015C2C  EFFC  F0AD         	goto	l7097
 21122   015C30  EFF6  F0AD         	goto	l7095
 21123   015C34                     l903:
 21124                           
 21125                           ;Software_I2C.c: 98:     (TRISBbits.TRISB1 = 1);
 21126   015C34  82C7               	bsf	199,1,c	;volatile
 21127   015C36  EF2E  F0AE         	goto	l7115
 21128   015C3A                     l7105:
 21129   015C3A  0E1A               	movlw	26
 21130   015C3C                     u9417:
 21131   015C3C  2EE8               	decfsz	wreg,f,c
 21132   015C3E  D7FE               	bra	u9417
 21133   015C40  D000               	nop2	
 21134   015C42  EF47  F0AE         	goto	l911
 21135   015C46                     l7107:
 21136   015C46  0E2A               	movlw	42
 21137   015C48                     u9427:
 21138   015C48  2EE8               	decfsz	wreg,f,c
 21139   015C4A  D7FE               	bra	u9427
 21140   015C4C  D000               	nop2	
 21141   015C4E  EF47  F0AE         	goto	l911
 21142   015C52                     l7109:
 21143   015C52  0E40               	movlw	64
 21144   015C54                     u9437:
 21145   015C54  2EE8               	decfsz	wreg,f,c
 21146   015C56  D7FE               	bra	u9437
 21147   015C58  EF47  F0AE         	goto	l911
 21148   015C5C                     l7115:
 21149   015C5C  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21150   015C5E  6E01               	movwf	??_SW_I2C_Stop^(0+1280),c
 21151   015C60  6A02               	clrf	(??_SW_I2C_Stop+1)^(0+1280),c
 21152                           
 21153                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21154                           ; Switch size 1, requested type "simple"
 21155                           ; Number of cases is 1, Range of values is 0 to 0
 21156                           ; switch strategies available:
 21157                           ; Name         Instructions Cycles
 21158                           ; simple_byte            4     3 (average)
 21159                           ;	Chosen strategy is simple_byte
 21160   015C62  5002               	movf	(??_SW_I2C_Stop+1)^(0+1280),w,c
 21161   015C64  0A00               	xorlw	0	; case 0
 21162   015C66  B4D8               	btfsc	status,2,c
 21163   015C68  EF38  F0AE         	goto	l11257
 21164   015C6C  EF23  F0AE         	goto	l7107
 21165   015C70                     l11257:
 21166                           
 21167                           ; Switch size 1, requested type "simple"
 21168                           ; Number of cases is 3, Range of values is 0 to 2
 21169                           ; switch strategies available:
 21170                           ; Name         Instructions Cycles
 21171                           ; simple_byte           10     6 (average)
 21172                           ;	Chosen strategy is simple_byte
 21173   015C70  5001               	movf	??_SW_I2C_Stop^(0+1280),w,c
 21174   015C72  0A00               	xorlw	0	; case 0
 21175   015C74  B4D8               	btfsc	status,2,c
 21176   015C76  EF1D  F0AE         	goto	l7105
 21177   015C7A  0A01               	xorlw	1	; case 1
 21178   015C7C  B4D8               	btfsc	status,2,c
 21179   015C7E  EF23  F0AE         	goto	l7107
 21180   015C82  0A03               	xorlw	3	; case 2
 21181   015C84  B4D8               	btfsc	status,2,c
 21182   015C86  EF29  F0AE         	goto	l7109
 21183   015C8A  EF23  F0AE         	goto	l7107
 21184   015C8E                     l911:
 21185                           
 21186                           ;Software_I2C.c: 101:     (TRISBbits.TRISB2 = 1);
 21187   015C8E  84C7               	bsf	199,2,c	;volatile
 21188   015C90  EF5B  F0AE         	goto	l7127
 21189   015C94                     l7117:
 21190   015C94  0E1A               	movlw	26
 21191   015C96                     u9447:
 21192   015C96  2EE8               	decfsz	wreg,f,c
 21193   015C98  D7FE               	bra	u9447
 21194   015C9A  D000               	nop2	
 21195   015C9C  EF74  F0AE         	goto	l920
 21196   015CA0                     l7119:
 21197   015CA0  0E2A               	movlw	42
 21198   015CA2                     u9457:
 21199   015CA2  2EE8               	decfsz	wreg,f,c
 21200   015CA4  D7FE               	bra	u9457
 21201   015CA6  D000               	nop2	
 21202   015CA8  EF74  F0AE         	goto	l920
 21203   015CAC                     l7121:
 21204   015CAC  0E40               	movlw	64
 21205   015CAE                     u9467:
 21206   015CAE  2EE8               	decfsz	wreg,f,c
 21207   015CB0  D7FE               	bra	u9467
 21208   015CB2  EF74  F0AE         	goto	l920
 21209   015CB6                     l7127:
 21210   015CB6  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21211   015CB8  6E01               	movwf	??_SW_I2C_Stop^(0+1280),c
 21212   015CBA  6A02               	clrf	(??_SW_I2C_Stop+1)^(0+1280),c
 21213                           
 21214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21215                           ; Switch size 1, requested type "simple"
 21216                           ; Number of cases is 1, Range of values is 0 to 0
 21217                           ; switch strategies available:
 21218                           ; Name         Instructions Cycles
 21219                           ; simple_byte            4     3 (average)
 21220                           ;	Chosen strategy is simple_byte
 21221   015CBC  5002               	movf	(??_SW_I2C_Stop+1)^(0+1280),w,c
 21222   015CBE  0A00               	xorlw	0	; case 0
 21223   015CC0  B4D8               	btfsc	status,2,c
 21224   015CC2  EF65  F0AE         	goto	l11259
 21225   015CC6  EF50  F0AE         	goto	l7119
 21226   015CCA                     l11259:
 21227                           
 21228                           ; Switch size 1, requested type "simple"
 21229                           ; Number of cases is 3, Range of values is 0 to 2
 21230                           ; switch strategies available:
 21231                           ; Name         Instructions Cycles
 21232                           ; simple_byte           10     6 (average)
 21233                           ;	Chosen strategy is simple_byte
 21234   015CCA  5001               	movf	??_SW_I2C_Stop^(0+1280),w,c
 21235   015CCC  0A00               	xorlw	0	; case 0
 21236   015CCE  B4D8               	btfsc	status,2,c
 21237   015CD0  EF4A  F0AE         	goto	l7117
 21238   015CD4  0A01               	xorlw	1	; case 1
 21239   015CD6  B4D8               	btfsc	status,2,c
 21240   015CD8  EF50  F0AE         	goto	l7119
 21241   015CDC  0A03               	xorlw	3	; case 2
 21242   015CDE  B4D8               	btfsc	status,2,c
 21243   015CE0  EF56  F0AE         	goto	l7121
 21244   015CE4  EF50  F0AE         	goto	l7119
 21245   015CE8                     l920:
 21246   015CE8  0012               	return		;funcret
 21247   015CEA                     __end_of_SW_I2C_Stop:
 21248                           	callstack 0
 21249                           
 21250 ;; *************** function _SW_I2C_Start *****************
 21251 ;; Defined at:
 21252 ;;		line 61 in file "Software_I2C.c"
 21253 ;; Parameters:    Size  Location     Type
 21254 ;;		None
 21255 ;; Auto vars:     Size  Location     Type
 21256 ;;		None
 21257 ;; Return value:  Size  Location     Type
 21258 ;;                  1    wreg      enum E17123
 21259 ;; Registers used:
 21260 ;;		wreg, status,2, status,0, cstack
 21261 ;; Tracked objects:
 21262 ;;		On entry : 0/0
 21263 ;;		On exit  : 0/0
 21264 ;;		Unchanged: 0/0
 21265 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21268 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21270 ;;Total ram usage:        2 bytes
 21271 ;; Hardware stack levels used: 1
 21272 ;; Hardware stack levels required when called: 1
 21273 ;; This function calls:
 21274 ;;		_SW_I2C_IsBusFree
 21275 ;; This function is called by:
 21276 ;;		_SW_I2C_Restart
 21277 ;;		_SW_I2C_WriteRegister
 21278 ;;		_SW_I2C_ReadRegister
 21279 ;;		_SW_I2C_ReadBlock
 21280 ;;		_SW_I2C_ScanBus
 21281 ;; This function uses a non-reentrant model
 21282 ;;
 21283                           
 21284                           	psect	text51
 21285   015E1E                     __ptext51:
 21286                           	callstack 0
 21287   015E1E                     _SW_I2C_Start:
 21288                           	callstack 121
 21289   015E1E                     
 21290                           ;Software_I2C.c: 63:     if (!SW_I2C_IsBusFree()) {
 21291   015E1E  ECA6  F0B7         	call	_SW_I2C_IsBusFree	;wreg free
 21292   015E22  0900               	iorlw	0
 21293   015E24  A4D8               	btfss	status,2,c
 21294   015E26  EF17  F0AF         	goto	u4651
 21295   015E2A  EF19  F0AF         	goto	u4650
 21296   015E2E                     u4651:
 21297   015E2E  EF1C  F0AF         	goto	l860
 21298   015E32                     u4650:
 21299   015E32                     
 21300                           ;Software_I2C.c: 64:         return SW_I2C_ERROR_BUS_BUSY;
 21301   015E32  0E03               	movlw	3
 21302   015E34  EFA7  F0AF         	goto	l861
 21303   015E38                     l860:
 21304                           
 21305                           ;Software_I2C.c: 68:     (TRISBbits.TRISB2 = 1);
 21306   015E38  84C7               	bsf	199,2,c	;volatile
 21307                           
 21308                           ;Software_I2C.c: 69:     (TRISBbits.TRISB1 = 1);
 21309   015E3A  82C7               	bsf	199,1,c	;volatile
 21310   015E3C  EF31  F0AF         	goto	l7037
 21311   015E40                     l7027:
 21312   015E40  0E1A               	movlw	26
 21313   015E42                     u9477:
 21314   015E42  2EE8               	decfsz	wreg,f,c
 21315   015E44  D7FE               	bra	u9477
 21316   015E46  D000               	nop2	
 21317   015E48  EF4A  F0AF         	goto	l869
 21318   015E4C                     l7029:
 21319   015E4C  0E2A               	movlw	42
 21320   015E4E                     u9487:
 21321   015E4E  2EE8               	decfsz	wreg,f,c
 21322   015E50  D7FE               	bra	u9487
 21323   015E52  D000               	nop2	
 21324   015E54  EF4A  F0AF         	goto	l869
 21325   015E58                     l7031:
 21326   015E58  0E40               	movlw	64
 21327   015E5A                     u9497:
 21328   015E5A  2EE8               	decfsz	wreg,f,c
 21329   015E5C  D7FE               	bra	u9497
 21330   015E5E  EF4A  F0AF         	goto	l869
 21331   015E62                     l7037:
 21332   015E62  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21333   015E64  6E02               	movwf	??_SW_I2C_Start^(0+1280),c
 21334   015E66  6A03               	clrf	(??_SW_I2C_Start+1)^(0+1280),c
 21335                           
 21336                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21337                           ; Switch size 1, requested type "simple"
 21338                           ; Number of cases is 1, Range of values is 0 to 0
 21339                           ; switch strategies available:
 21340                           ; Name         Instructions Cycles
 21341                           ; simple_byte            4     3 (average)
 21342                           ;	Chosen strategy is simple_byte
 21343   015E68  5003               	movf	(??_SW_I2C_Start+1)^(0+1280),w,c
 21344   015E6A  0A00               	xorlw	0	; case 0
 21345   015E6C  B4D8               	btfsc	status,2,c
 21346   015E6E  EF3B  F0AF         	goto	l11261
 21347   015E72  EF26  F0AF         	goto	l7029
 21348   015E76                     l11261:
 21349                           
 21350                           ; Switch size 1, requested type "simple"
 21351                           ; Number of cases is 3, Range of values is 0 to 2
 21352                           ; switch strategies available:
 21353                           ; Name         Instructions Cycles
 21354                           ; simple_byte           10     6 (average)
 21355                           ;	Chosen strategy is simple_byte
 21356   015E76  5002               	movf	??_SW_I2C_Start^(0+1280),w,c
 21357   015E78  0A00               	xorlw	0	; case 0
 21358   015E7A  B4D8               	btfsc	status,2,c
 21359   015E7C  EF20  F0AF         	goto	l7027
 21360   015E80  0A01               	xorlw	1	; case 1
 21361   015E82  B4D8               	btfsc	status,2,c
 21362   015E84  EF26  F0AF         	goto	l7029
 21363   015E88  0A03               	xorlw	3	; case 2
 21364   015E8A  B4D8               	btfsc	status,2,c
 21365   015E8C  EF2C  F0AF         	goto	l7031
 21366   015E90  EF26  F0AF         	goto	l7029
 21367   015E94                     l869:
 21368                           
 21369                           ;Software_I2C.c: 72:     (TRISBbits.TRISB2 = 0);
 21370   015E94  94C7               	bcf	199,2,c	;volatile
 21371                           
 21372                           ;Software_I2C.c: 73:     (LATBbits.LATB2 = 0);
 21373   015E96  94BF               	bcf	191,2,c	;volatile
 21374   015E98  EF5F  F0AF         	goto	l7049
 21375   015E9C                     l7039:
 21376   015E9C  0E1A               	movlw	26
 21377   015E9E                     u9507:
 21378   015E9E  2EE8               	decfsz	wreg,f,c
 21379   015EA0  D7FE               	bra	u9507
 21380   015EA2  D000               	nop2	
 21381   015EA4  EF78  F0AF         	goto	l877
 21382   015EA8                     l7041:
 21383   015EA8  0E2A               	movlw	42
 21384   015EAA                     u9517:
 21385   015EAA  2EE8               	decfsz	wreg,f,c
 21386   015EAC  D7FE               	bra	u9517
 21387   015EAE  D000               	nop2	
 21388   015EB0  EF78  F0AF         	goto	l877
 21389   015EB4                     l7043:
 21390   015EB4  0E40               	movlw	64
 21391   015EB6                     u9527:
 21392   015EB6  2EE8               	decfsz	wreg,f,c
 21393   015EB8  D7FE               	bra	u9527
 21394   015EBA  EF78  F0AF         	goto	l877
 21395   015EBE                     l7049:
 21396   015EBE  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21397   015EC0  6E02               	movwf	??_SW_I2C_Start^(0+1280),c
 21398   015EC2  6A03               	clrf	(??_SW_I2C_Start+1)^(0+1280),c
 21399                           
 21400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21401                           ; Switch size 1, requested type "simple"
 21402                           ; Number of cases is 1, Range of values is 0 to 0
 21403                           ; switch strategies available:
 21404                           ; Name         Instructions Cycles
 21405                           ; simple_byte            4     3 (average)
 21406                           ;	Chosen strategy is simple_byte
 21407   015EC4  5003               	movf	(??_SW_I2C_Start+1)^(0+1280),w,c
 21408   015EC6  0A00               	xorlw	0	; case 0
 21409   015EC8  B4D8               	btfsc	status,2,c
 21410   015ECA  EF69  F0AF         	goto	l11263
 21411   015ECE  EF54  F0AF         	goto	l7041
 21412   015ED2                     l11263:
 21413                           
 21414                           ; Switch size 1, requested type "simple"
 21415                           ; Number of cases is 3, Range of values is 0 to 2
 21416                           ; switch strategies available:
 21417                           ; Name         Instructions Cycles
 21418                           ; simple_byte           10     6 (average)
 21419                           ;	Chosen strategy is simple_byte
 21420   015ED2  5002               	movf	??_SW_I2C_Start^(0+1280),w,c
 21421   015ED4  0A00               	xorlw	0	; case 0
 21422   015ED6  B4D8               	btfsc	status,2,c
 21423   015ED8  EF4E  F0AF         	goto	l7039
 21424   015EDC  0A01               	xorlw	1	; case 1
 21425   015EDE  B4D8               	btfsc	status,2,c
 21426   015EE0  EF54  F0AF         	goto	l7041
 21427   015EE4  0A03               	xorlw	3	; case 2
 21428   015EE6  B4D8               	btfsc	status,2,c
 21429   015EE8  EF5A  F0AF         	goto	l7043
 21430   015EEC  EF54  F0AF         	goto	l7041
 21431   015EF0                     l877:
 21432                           
 21433                           ;Software_I2C.c: 76:     (TRISBbits.TRISB1 = 0);
 21434   015EF0  92C7               	bcf	199,1,c	;volatile
 21435                           
 21436                           ;Software_I2C.c: 77:     (LATBbits.LATB1 = 0);
 21437   015EF2  92BF               	bcf	191,1,c	;volatile
 21438   015EF4  EF8D  F0AF         	goto	l7061
 21439   015EF8                     l7051:
 21440   015EF8  0E1A               	movlw	26
 21441   015EFA                     u9537:
 21442   015EFA  2EE8               	decfsz	wreg,f,c
 21443   015EFC  D7FE               	bra	u9537
 21444   015EFE  D000               	nop2	
 21445   015F00  EFA6  F0AF         	goto	l7063
 21446   015F04                     l7053:
 21447   015F04  0E2A               	movlw	42
 21448   015F06                     u9547:
 21449   015F06  2EE8               	decfsz	wreg,f,c
 21450   015F08  D7FE               	bra	u9547
 21451   015F0A  D000               	nop2	
 21452   015F0C  EFA6  F0AF         	goto	l7063
 21453   015F10                     l7055:
 21454   015F10  0E40               	movlw	64
 21455   015F12                     u9557:
 21456   015F12  2EE8               	decfsz	wreg,f,c
 21457   015F14  D7FE               	bra	u9557
 21458   015F16  EFA6  F0AF         	goto	l7063
 21459   015F1A                     l7061:
 21460   015F1A  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21461   015F1C  6E02               	movwf	??_SW_I2C_Start^(0+1280),c
 21462   015F1E  6A03               	clrf	(??_SW_I2C_Start+1)^(0+1280),c
 21463                           
 21464                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21465                           ; Switch size 1, requested type "simple"
 21466                           ; Number of cases is 1, Range of values is 0 to 0
 21467                           ; switch strategies available:
 21468                           ; Name         Instructions Cycles
 21469                           ; simple_byte            4     3 (average)
 21470                           ;	Chosen strategy is simple_byte
 21471   015F20  5003               	movf	(??_SW_I2C_Start+1)^(0+1280),w,c
 21472   015F22  0A00               	xorlw	0	; case 0
 21473   015F24  B4D8               	btfsc	status,2,c
 21474   015F26  EF97  F0AF         	goto	l11265
 21475   015F2A  EF82  F0AF         	goto	l7053
 21476   015F2E                     l11265:
 21477                           
 21478                           ; Switch size 1, requested type "simple"
 21479                           ; Number of cases is 3, Range of values is 0 to 2
 21480                           ; switch strategies available:
 21481                           ; Name         Instructions Cycles
 21482                           ; simple_byte           10     6 (average)
 21483                           ;	Chosen strategy is simple_byte
 21484   015F2E  5002               	movf	??_SW_I2C_Start^(0+1280),w,c
 21485   015F30  0A00               	xorlw	0	; case 0
 21486   015F32  B4D8               	btfsc	status,2,c
 21487   015F34  EF7C  F0AF         	goto	l7051
 21488   015F38  0A01               	xorlw	1	; case 1
 21489   015F3A  B4D8               	btfsc	status,2,c
 21490   015F3C  EF82  F0AF         	goto	l7053
 21491   015F40  0A03               	xorlw	3	; case 2
 21492   015F42  B4D8               	btfsc	status,2,c
 21493   015F44  EF88  F0AF         	goto	l7055
 21494   015F48  EF82  F0AF         	goto	l7053
 21495   015F4C                     l7063:
 21496                           
 21497                           ;Software_I2C.c: 80:     return SW_I2C_SUCCESS;
 21498   015F4C  0E00               	movlw	0
 21499   015F4E                     l861:
 21500   015F4E  0012               	return		;funcret
 21501   015F50                     __end_of_SW_I2C_Start:
 21502                           	callstack 0
 21503                           
 21504 ;; *************** function _SW_I2C_IsBusFree *****************
 21505 ;; Defined at:
 21506 ;;		line 228 in file "Software_I2C.c"
 21507 ;; Parameters:    Size  Location     Type
 21508 ;;		None
 21509 ;; Auto vars:     Size  Location     Type
 21510 ;;		None
 21511 ;; Return value:  Size  Location     Type
 21512 ;;                  1    wreg      unsigned char 
 21513 ;; Registers used:
 21514 ;;		wreg, status,2
 21515 ;; Tracked objects:
 21516 ;;		On entry : 0/0
 21517 ;;		On exit  : 0/0
 21518 ;;		Unchanged: 0/0
 21519 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21524 ;;Total ram usage:        1 bytes
 21525 ;; Hardware stack levels used: 1
 21526 ;; This function calls:
 21527 ;;		Nothing
 21528 ;; This function is called by:
 21529 ;;		_SW_I2C_Start
 21530 ;; This function uses a non-reentrant model
 21531 ;;
 21532                           
 21533                           	psect	text52
 21534   016F4C                     __ptext52:
 21535                           	callstack 0
 21536   016F4C                     _SW_I2C_IsBusFree:
 21537                           	callstack 121
 21538   016F4C                     
 21539                           ;Software_I2C.c: 229:     (TRISBbits.TRISB1 = 1);
 21540   016F4C  82C7               	bsf	199,1,c	;volatile
 21541                           
 21542                           ;Software_I2C.c: 230:     (TRISBbits.TRISB2 = 1);
 21543   016F4E  84C7               	bsf	199,2,c	;volatile
 21544   016F50                     
 21545                           ;Software_I2C.c: 231:     _delay((unsigned long)((8)*(64000000UL/4000000.0)));
 21546   016F50  0E2A               	movlw	42
 21547   016F52                     u9567:
 21548   016F52  2EE8               	decfsz	wreg,f,c
 21549   016F54  D7FE               	bra	u9567
 21550   016F56  D000               	nop2	
 21551   016F58                     
 21552                           ;Software_I2C.c: 234:     return (PORTBbits.RB1 && PORTBbits.RB2);
 21553   016F58  6A01               	clrf	_SW_I2C_IsBusFree$1645^(0+1280),c
 21554   016F5A  A2CF               	btfss	207,1,c	;volatile
 21555   016F5C  EFB2  F0B7         	goto	u4621
 21556   016F60  EFB4  F0B7         	goto	u4620
 21557   016F64                     u4621:
 21558   016F64  EFBD  F0B7         	goto	l1060
 21559   016F68                     u4620:
 21560   016F68  A4CF               	btfss	207,2,c	;volatile
 21561   016F6A  EFB9  F0B7         	goto	u4631
 21562   016F6E  EFBB  F0B7         	goto	u4630
 21563   016F72                     u4631:
 21564   016F72  EFBD  F0B7         	goto	l1060
 21565   016F76                     u4630:
 21566   016F76  0E01               	movlw	1
 21567   016F78  6E01               	movwf	_SW_I2C_IsBusFree$1645^(0+1280),c
 21568   016F7A                     l1060:
 21569   016F7A  5001               	movf	_SW_I2C_IsBusFree$1645^(0+1280),w,c
 21570   016F7C  0012               	return		;funcret
 21571   016F7E                     __end_of_SW_I2C_IsBusFree:
 21572                           	callstack 0
 21573                           
 21574 ;; *************** function _SW_I2C_ReadByte *****************
 21575 ;; Defined at:
 21576 ;;		line 162 in file "Software_I2C.c"
 21577 ;; Parameters:    Size  Location     Type
 21578 ;;  ack             1    wreg     unsigned char 
 21579 ;; Auto vars:     Size  Location     Type
 21580 ;;  ack             1    4[COMRAM] unsigned char 
 21581 ;;  i               1    6[COMRAM] unsigned char 
 21582 ;;  data            1    5[COMRAM] unsigned char 
 21583 ;; Return value:  Size  Location     Type
 21584 ;;                  1    wreg      unsigned char 
 21585 ;; Registers used:
 21586 ;;		wreg, status,2, status,0, cstack
 21587 ;; Tracked objects:
 21588 ;;		On entry : 0/0
 21589 ;;		On exit  : 0/0
 21590 ;;		Unchanged: 0/0
 21591 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21593 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21594 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21595 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21596 ;;Total ram usage:        5 bytes
 21597 ;; Hardware stack levels used: 1
 21598 ;; Hardware stack levels required when called: 1
 21599 ;; This function calls:
 21600 ;;		_SW_I2C_SendAck
 21601 ;;		_SW_I2C_SendNack
 21602 ;; This function is called by:
 21603 ;;		_SW_I2C_ReadRegister
 21604 ;;		_SW_I2C_ReadBlock
 21605 ;; This function uses a non-reentrant model
 21606 ;;
 21607                           
 21608                           	psect	text53
 21609   016382                     __ptext53:
 21610                           	callstack 0
 21611   016382                     _SW_I2C_ReadByte:
 21612                           	callstack 120
 21613                           
 21614                           ;incstack = 0
 21615                           ;SW_I2C_ReadByte@ack stored from wreg
 21616   016382  6E05               	movwf	SW_I2C_ReadByte@ack^(0+1280),c
 21617   016384                     
 21618                           ;Software_I2C.c: 163:     uint8_t i;;Software_I2C.c: 164:     uint8_t data = 0;
 21619   016384  6A06               	clrf	SW_I2C_ReadByte@data^(0+1280),c
 21620                           
 21621                           ;Software_I2C.c: 166:     (TRISBbits.TRISB2 = 1);
 21622   016386  84C7               	bsf	199,2,c	;volatile
 21623                           
 21624                           ;Software_I2C.c: 169:     for (i = 0; i < 8; i++) {
 21625   016388  6A07               	clrf	SW_I2C_ReadByte@i^(0+1280),c
 21626   01638A                     l7499:
 21627                           
 21628                           ;Software_I2C.c: 170:         data <<= 1;
 21629   01638A  90D8               	bcf	status,0,c
 21630   01638C  3606               	rlcf	SW_I2C_ReadByte@data^(0+1280),f,c
 21631   01638E                     
 21632                           ;Software_I2C.c: 172:         (TRISBbits.TRISB1 = 1);
 21633   01638E  82C7               	bsf	199,1,c	;volatile
 21634   016390  EFDB  F0B1         	goto	l7513
 21635   016394                     l7503:
 21636   016394  0E1A               	movlw	26
 21637   016396                     u9577:
 21638   016396  2EE8               	decfsz	wreg,f,c
 21639   016398  D7FE               	bra	u9577
 21640   01639A  D000               	nop2	
 21641   01639C  EFF4  F0B1         	goto	l990
 21642   0163A0                     l7505:
 21643   0163A0  0E2A               	movlw	42
 21644   0163A2                     u9587:
 21645   0163A2  2EE8               	decfsz	wreg,f,c
 21646   0163A4  D7FE               	bra	u9587
 21647   0163A6  D000               	nop2	
 21648   0163A8  EFF4  F0B1         	goto	l990
 21649   0163AC                     l7507:
 21650   0163AC  0E40               	movlw	64
 21651   0163AE                     u9597:
 21652   0163AE  2EE8               	decfsz	wreg,f,c
 21653   0163B0  D7FE               	bra	u9597
 21654   0163B2  EFF4  F0B1         	goto	l990
 21655   0163B6                     l7513:
 21656   0163B6  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21657   0163B8  6E03               	movwf	??_SW_I2C_ReadByte^(0+1280),c
 21658   0163BA  6A04               	clrf	(??_SW_I2C_ReadByte+1)^(0+1280),c
 21659                           
 21660                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21661                           ; Switch size 1, requested type "simple"
 21662                           ; Number of cases is 1, Range of values is 0 to 0
 21663                           ; switch strategies available:
 21664                           ; Name         Instructions Cycles
 21665                           ; simple_byte            4     3 (average)
 21666                           ;	Chosen strategy is simple_byte
 21667   0163BC  5004               	movf	(??_SW_I2C_ReadByte+1)^(0+1280),w,c
 21668   0163BE  0A00               	xorlw	0	; case 0
 21669   0163C0  B4D8               	btfsc	status,2,c
 21670   0163C2  EFE5  F0B1         	goto	l11267
 21671   0163C6  EFD0  F0B1         	goto	l7505
 21672   0163CA                     l11267:
 21673                           
 21674                           ; Switch size 1, requested type "simple"
 21675                           ; Number of cases is 3, Range of values is 0 to 2
 21676                           ; switch strategies available:
 21677                           ; Name         Instructions Cycles
 21678                           ; simple_byte           10     6 (average)
 21679                           ;	Chosen strategy is simple_byte
 21680   0163CA  5003               	movf	??_SW_I2C_ReadByte^(0+1280),w,c
 21681   0163CC  0A00               	xorlw	0	; case 0
 21682   0163CE  B4D8               	btfsc	status,2,c
 21683   0163D0  EFCA  F0B1         	goto	l7503
 21684   0163D4  0A01               	xorlw	1	; case 1
 21685   0163D6  B4D8               	btfsc	status,2,c
 21686   0163D8  EFD0  F0B1         	goto	l7505
 21687   0163DC  0A03               	xorlw	3	; case 2
 21688   0163DE  B4D8               	btfsc	status,2,c
 21689   0163E0  EFD6  F0B1         	goto	l7507
 21690   0163E4  EFD0  F0B1         	goto	l7505
 21691   0163E8                     l990:
 21692                           
 21693                           ;Software_I2C.c: 175:         if ((PORTBbits.RB2)) {
 21694   0163E8  A4CF               	btfss	207,2,c	;volatile
 21695   0163EA  EFF9  F0B1         	goto	u4811
 21696   0163EE  EFFB  F0B1         	goto	u4810
 21697   0163F2                     u4811:
 21698   0163F2  EFFC  F0B1         	goto	l7517
 21699   0163F6                     u4810:
 21700   0163F6                     
 21701                           ;Software_I2C.c: 176:             data |= 1;
 21702   0163F6  8006               	bsf	SW_I2C_ReadByte@data^(0+1280),0,c
 21703   0163F8                     l7517:
 21704                           
 21705                           ;Software_I2C.c: 179:         (TRISBbits.TRISB1 = 0);
 21706   0163F8  92C7               	bcf	199,1,c	;volatile
 21707   0163FA                     
 21708                           ;Software_I2C.c: 180:         (LATBbits.LATB1 = 0);
 21709   0163FA  92BF               	bcf	191,1,c	;volatile
 21710   0163FC  EF11  F0B2         	goto	l7531
 21711   016400                     l7521:
 21712   016400  0E1A               	movlw	26
 21713   016402                     u9607:
 21714   016402  2EE8               	decfsz	wreg,f,c
 21715   016404  D7FE               	bra	u9607
 21716   016406  D000               	nop2	
 21717   016408  EF2A  F0B2         	goto	l7533
 21718   01640C                     l7523:
 21719   01640C  0E2A               	movlw	42
 21720   01640E                     u9617:
 21721   01640E  2EE8               	decfsz	wreg,f,c
 21722   016410  D7FE               	bra	u9617
 21723   016412  D000               	nop2	
 21724   016414  EF2A  F0B2         	goto	l7533
 21725   016418                     l7525:
 21726   016418  0E40               	movlw	64
 21727   01641A                     u9627:
 21728   01641A  2EE8               	decfsz	wreg,f,c
 21729   01641C  D7FE               	bra	u9627
 21730   01641E  EF2A  F0B2         	goto	l7533
 21731   016422                     l7531:
 21732   016422  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21733   016424  6E03               	movwf	??_SW_I2C_ReadByte^(0+1280),c
 21734   016426  6A04               	clrf	(??_SW_I2C_ReadByte+1)^(0+1280),c
 21735                           
 21736                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21737                           ; Switch size 1, requested type "simple"
 21738                           ; Number of cases is 1, Range of values is 0 to 0
 21739                           ; switch strategies available:
 21740                           ; Name         Instructions Cycles
 21741                           ; simple_byte            4     3 (average)
 21742                           ;	Chosen strategy is simple_byte
 21743   016428  5004               	movf	(??_SW_I2C_ReadByte+1)^(0+1280),w,c
 21744   01642A  0A00               	xorlw	0	; case 0
 21745   01642C  B4D8               	btfsc	status,2,c
 21746   01642E  EF1B  F0B2         	goto	l11269
 21747   016432  EF06  F0B2         	goto	l7523
 21748   016436                     l11269:
 21749                           
 21750                           ; Switch size 1, requested type "simple"
 21751                           ; Number of cases is 3, Range of values is 0 to 2
 21752                           ; switch strategies available:
 21753                           ; Name         Instructions Cycles
 21754                           ; simple_byte           10     6 (average)
 21755                           ;	Chosen strategy is simple_byte
 21756   016436  5003               	movf	??_SW_I2C_ReadByte^(0+1280),w,c
 21757   016438  0A00               	xorlw	0	; case 0
 21758   01643A  B4D8               	btfsc	status,2,c
 21759   01643C  EF00  F0B2         	goto	l7521
 21760   016440  0A01               	xorlw	1	; case 1
 21761   016442  B4D8               	btfsc	status,2,c
 21762   016444  EF06  F0B2         	goto	l7523
 21763   016448  0A03               	xorlw	3	; case 2
 21764   01644A  B4D8               	btfsc	status,2,c
 21765   01644C  EF0C  F0B2         	goto	l7525
 21766   016450  EF06  F0B2         	goto	l7523
 21767   016454                     l7533:
 21768                           
 21769                           ;Software_I2C.c: 182:     }
 21770   016454  2A07               	incf	SW_I2C_ReadByte@i^(0+1280),f,c
 21771   016456  0E07               	movlw	7
 21772   016458  6407               	cpfsgt	SW_I2C_ReadByte@i^(0+1280),c
 21773   01645A  EF31  F0B2         	goto	u4821
 21774   01645E  EF33  F0B2         	goto	u4820
 21775   016462                     u4821:
 21776   016462  EFC5  F0B1         	goto	l7499
 21777   016466                     u4820:
 21778   016466                     
 21779                           ;Software_I2C.c: 185:     if (ack) {
 21780   016466  5005               	movf	SW_I2C_ReadByte@ack^(0+1280),w,c
 21781   016468  B4D8               	btfsc	status,2,c
 21782   01646A  EF39  F0B2         	goto	u4831
 21783   01646E  EF3B  F0B2         	goto	u4830
 21784   016472                     u4831:
 21785   016472  EF3F  F0B2         	goto	l7541
 21786   016476                     u4830:
 21787   016476                     
 21788                           ;Software_I2C.c: 186:         SW_I2C_SendAck();
 21789   016476  ECA8  F0AF         	call	_SW_I2C_SendAck	;wreg free
 21790                           
 21791                           ;Software_I2C.c: 187:     } else {
 21792   01647A  EF41  F0B2         	goto	l7543
 21793   01647E                     l7541:
 21794                           
 21795                           ;Software_I2C.c: 188:         SW_I2C_SendNack();
 21796   01647E  EC33  F0B0         	call	_SW_I2C_SendNack	;wreg free
 21797   016482                     l7543:
 21798                           
 21799                           ;Software_I2C.c: 191:     return data;
 21800   016482  5006               	movf	SW_I2C_ReadByte@data^(0+1280),w,c
 21801   016484  0012               	return		;funcret
 21802   016486                     __end_of_SW_I2C_ReadByte:
 21803                           	callstack 0
 21804                           
 21805 ;; *************** function _SW_I2C_SendNack *****************
 21806 ;; Defined at:
 21807 ;;		line 214 in file "Software_I2C.c"
 21808 ;; Parameters:    Size  Location     Type
 21809 ;;		None
 21810 ;; Auto vars:     Size  Location     Type
 21811 ;;		None
 21812 ;; Return value:  Size  Location     Type
 21813 ;;                  1    wreg      void 
 21814 ;; Registers used:
 21815 ;;		wreg, status,2, status,0
 21816 ;; Tracked objects:
 21817 ;;		On entry : 0/0
 21818 ;;		On exit  : 0/0
 21819 ;;		Unchanged: 0/0
 21820 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 21821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21823 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21824 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21825 ;;Total ram usage:        2 bytes
 21826 ;; Hardware stack levels used: 1
 21827 ;; This function calls:
 21828 ;;		Nothing
 21829 ;; This function is called by:
 21830 ;;		_SW_I2C_ReadByte
 21831 ;; This function uses a non-reentrant model
 21832 ;;
 21833                           
 21834                           	psect	text54
 21835   016066                     __ptext54:
 21836                           	callstack 0
 21837   016066                     _SW_I2C_SendNack:
 21838                           	callstack 120
 21839   016066                     
 21840                           ;Software_I2C.c: 215:     (TRISBbits.TRISB2 = 1);
 21841   016066  84C7               	bsf	199,2,c	;volatile
 21842   016068  EF47  F0B0         	goto	l7207
 21843   01606C                     l7197:
 21844   01606C  0E1A               	movlw	26
 21845   01606E                     u9637:
 21846   01606E  2EE8               	decfsz	wreg,f,c
 21847   016070  D7FE               	bra	u9637
 21848   016072  D000               	nop2	
 21849   016074  EF60  F0B0         	goto	l1039
 21850   016078                     l7199:
 21851   016078  0E2A               	movlw	42
 21852   01607A                     u9647:
 21853   01607A  2EE8               	decfsz	wreg,f,c
 21854   01607C  D7FE               	bra	u9647
 21855   01607E  D000               	nop2	
 21856   016080  EF60  F0B0         	goto	l1039
 21857   016084                     l7201:
 21858   016084  0E40               	movlw	64
 21859   016086                     u9657:
 21860   016086  2EE8               	decfsz	wreg,f,c
 21861   016088  D7FE               	bra	u9657
 21862   01608A  EF60  F0B0         	goto	l1039
 21863   01608E                     l7207:
 21864   01608E  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21865   016090  6E01               	movwf	??_SW_I2C_SendNack^(0+1280),c
 21866   016092  6A02               	clrf	(??_SW_I2C_SendNack+1)^(0+1280),c
 21867                           
 21868                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21869                           ; Switch size 1, requested type "simple"
 21870                           ; Number of cases is 1, Range of values is 0 to 0
 21871                           ; switch strategies available:
 21872                           ; Name         Instructions Cycles
 21873                           ; simple_byte            4     3 (average)
 21874                           ;	Chosen strategy is simple_byte
 21875   016094  5002               	movf	(??_SW_I2C_SendNack+1)^(0+1280),w,c
 21876   016096  0A00               	xorlw	0	; case 0
 21877   016098  B4D8               	btfsc	status,2,c
 21878   01609A  EF51  F0B0         	goto	l11271
 21879   01609E  EF3C  F0B0         	goto	l7199
 21880   0160A2                     l11271:
 21881                           
 21882                           ; Switch size 1, requested type "simple"
 21883                           ; Number of cases is 3, Range of values is 0 to 2
 21884                           ; switch strategies available:
 21885                           ; Name         Instructions Cycles
 21886                           ; simple_byte           10     6 (average)
 21887                           ;	Chosen strategy is simple_byte
 21888   0160A2  5001               	movf	??_SW_I2C_SendNack^(0+1280),w,c
 21889   0160A4  0A00               	xorlw	0	; case 0
 21890   0160A6  B4D8               	btfsc	status,2,c
 21891   0160A8  EF36  F0B0         	goto	l7197
 21892   0160AC  0A01               	xorlw	1	; case 1
 21893   0160AE  B4D8               	btfsc	status,2,c
 21894   0160B0  EF3C  F0B0         	goto	l7199
 21895   0160B4  0A03               	xorlw	3	; case 2
 21896   0160B6  B4D8               	btfsc	status,2,c
 21897   0160B8  EF42  F0B0         	goto	l7201
 21898   0160BC  EF3C  F0B0         	goto	l7199
 21899   0160C0                     l1039:
 21900                           
 21901                           ;Software_I2C.c: 218:     (TRISBbits.TRISB1 = 1);
 21902   0160C0  82C7               	bsf	199,1,c	;volatile
 21903   0160C2  EF74  F0B0         	goto	l7219
 21904   0160C6                     l7209:
 21905   0160C6  0E1A               	movlw	26
 21906   0160C8                     u9667:
 21907   0160C8  2EE8               	decfsz	wreg,f,c
 21908   0160CA  D7FE               	bra	u9667
 21909   0160CC  D000               	nop2	
 21910   0160CE  EF8D  F0B0         	goto	l1047
 21911   0160D2                     l7211:
 21912   0160D2  0E2A               	movlw	42
 21913   0160D4                     u9677:
 21914   0160D4  2EE8               	decfsz	wreg,f,c
 21915   0160D6  D7FE               	bra	u9677
 21916   0160D8  D000               	nop2	
 21917   0160DA  EF8D  F0B0         	goto	l1047
 21918   0160DE                     l7213:
 21919   0160DE  0E40               	movlw	64
 21920   0160E0                     u9687:
 21921   0160E0  2EE8               	decfsz	wreg,f,c
 21922   0160E2  D7FE               	bra	u9687
 21923   0160E4  EF8D  F0B0         	goto	l1047
 21924   0160E8                     l7219:
 21925   0160E8  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21926   0160EA  6E01               	movwf	??_SW_I2C_SendNack^(0+1280),c
 21927   0160EC  6A02               	clrf	(??_SW_I2C_SendNack+1)^(0+1280),c
 21928                           
 21929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21930                           ; Switch size 1, requested type "simple"
 21931                           ; Number of cases is 1, Range of values is 0 to 0
 21932                           ; switch strategies available:
 21933                           ; Name         Instructions Cycles
 21934                           ; simple_byte            4     3 (average)
 21935                           ;	Chosen strategy is simple_byte
 21936   0160EE  5002               	movf	(??_SW_I2C_SendNack+1)^(0+1280),w,c
 21937   0160F0  0A00               	xorlw	0	; case 0
 21938   0160F2  B4D8               	btfsc	status,2,c
 21939   0160F4  EF7E  F0B0         	goto	l11273
 21940   0160F8  EF69  F0B0         	goto	l7211
 21941   0160FC                     l11273:
 21942                           
 21943                           ; Switch size 1, requested type "simple"
 21944                           ; Number of cases is 3, Range of values is 0 to 2
 21945                           ; switch strategies available:
 21946                           ; Name         Instructions Cycles
 21947                           ; simple_byte           10     6 (average)
 21948                           ;	Chosen strategy is simple_byte
 21949   0160FC  5001               	movf	??_SW_I2C_SendNack^(0+1280),w,c
 21950   0160FE  0A00               	xorlw	0	; case 0
 21951   016100  B4D8               	btfsc	status,2,c
 21952   016102  EF63  F0B0         	goto	l7209
 21953   016106  0A01               	xorlw	1	; case 1
 21954   016108  B4D8               	btfsc	status,2,c
 21955   01610A  EF69  F0B0         	goto	l7211
 21956   01610E  0A03               	xorlw	3	; case 2
 21957   016110  B4D8               	btfsc	status,2,c
 21958   016112  EF6F  F0B0         	goto	l7213
 21959   016116  EF69  F0B0         	goto	l7211
 21960   01611A                     l1047:
 21961                           
 21962                           ;Software_I2C.c: 220:     (TRISBbits.TRISB1 = 0);
 21963   01611A  92C7               	bcf	199,1,c	;volatile
 21964                           
 21965                           ;Software_I2C.c: 221:     (LATBbits.LATB1 = 0);
 21966   01611C  92BF               	bcf	191,1,c	;volatile
 21967   01611E  EFA2  F0B0         	goto	l7231
 21968   016122                     l7221:
 21969   016122  0E1A               	movlw	26
 21970   016124                     u9697:
 21971   016124  2EE8               	decfsz	wreg,f,c
 21972   016126  D7FE               	bra	u9697
 21973   016128  D000               	nop2	
 21974   01612A  EFBB  F0B0         	goto	l1056
 21975   01612E                     l7223:
 21976   01612E  0E2A               	movlw	42
 21977   016130                     u9707:
 21978   016130  2EE8               	decfsz	wreg,f,c
 21979   016132  D7FE               	bra	u9707
 21980   016134  D000               	nop2	
 21981   016136  EFBB  F0B0         	goto	l1056
 21982   01613A                     l7225:
 21983   01613A  0E40               	movlw	64
 21984   01613C                     u9717:
 21985   01613C  2EE8               	decfsz	wreg,f,c
 21986   01613E  D7FE               	bra	u9717
 21987   016140  EFBB  F0B0         	goto	l1056
 21988   016144                     l7231:
 21989   016144  505F               	movf	_current_i2c_speed^(0+1280),w,c
 21990   016146  6E01               	movwf	??_SW_I2C_SendNack^(0+1280),c
 21991   016148  6A02               	clrf	(??_SW_I2C_SendNack+1)^(0+1280),c
 21992                           
 21993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21994                           ; Switch size 1, requested type "simple"
 21995                           ; Number of cases is 1, Range of values is 0 to 0
 21996                           ; switch strategies available:
 21997                           ; Name         Instructions Cycles
 21998                           ; simple_byte            4     3 (average)
 21999                           ;	Chosen strategy is simple_byte
 22000   01614A  5002               	movf	(??_SW_I2C_SendNack+1)^(0+1280),w,c
 22001   01614C  0A00               	xorlw	0	; case 0
 22002   01614E  B4D8               	btfsc	status,2,c
 22003   016150  EFAC  F0B0         	goto	l11275
 22004   016154  EF97  F0B0         	goto	l7223
 22005   016158                     l11275:
 22006                           
 22007                           ; Switch size 1, requested type "simple"
 22008                           ; Number of cases is 3, Range of values is 0 to 2
 22009                           ; switch strategies available:
 22010                           ; Name         Instructions Cycles
 22011                           ; simple_byte           10     6 (average)
 22012                           ;	Chosen strategy is simple_byte
 22013   016158  5001               	movf	??_SW_I2C_SendNack^(0+1280),w,c
 22014   01615A  0A00               	xorlw	0	; case 0
 22015   01615C  B4D8               	btfsc	status,2,c
 22016   01615E  EF91  F0B0         	goto	l7221
 22017   016162  0A01               	xorlw	1	; case 1
 22018   016164  B4D8               	btfsc	status,2,c
 22019   016166  EF97  F0B0         	goto	l7223
 22020   01616A  0A03               	xorlw	3	; case 2
 22021   01616C  B4D8               	btfsc	status,2,c
 22022   01616E  EF9D  F0B0         	goto	l7225
 22023   016172  EF97  F0B0         	goto	l7223
 22024   016176                     l1056:
 22025   016176  0012               	return		;funcret
 22026   016178                     __end_of_SW_I2C_SendNack:
 22027                           	callstack 0
 22028                           
 22029 ;; *************** function _SW_I2C_SendAck *****************
 22030 ;; Defined at:
 22031 ;;		line 197 in file "Software_I2C.c"
 22032 ;; Parameters:    Size  Location     Type
 22033 ;;		None
 22034 ;; Auto vars:     Size  Location     Type
 22035 ;;		None
 22036 ;; Return value:  Size  Location     Type
 22037 ;;                  1    wreg      void 
 22038 ;; Registers used:
 22039 ;;		wreg, status,2, status,0
 22040 ;; Tracked objects:
 22041 ;;		On entry : 0/0
 22042 ;;		On exit  : 0/0
 22043 ;;		Unchanged: 0/0
 22044 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22047 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22049 ;;Total ram usage:        2 bytes
 22050 ;; Hardware stack levels used: 1
 22051 ;; This function calls:
 22052 ;;		Nothing
 22053 ;; This function is called by:
 22054 ;;		_SW_I2C_ReadByte
 22055 ;; This function uses a non-reentrant model
 22056 ;;
 22057                           
 22058                           	psect	text55
 22059   015F50                     __ptext55:
 22060                           	callstack 0
 22061   015F50                     _SW_I2C_SendAck:
 22062                           	callstack 120
 22063   015F50                     
 22064                           ;Software_I2C.c: 198:     (TRISBbits.TRISB2 = 0);
 22065   015F50  94C7               	bcf	199,2,c	;volatile
 22066                           
 22067                           ;Software_I2C.c: 199:     (LATBbits.LATB2 = 0);
 22068   015F52  94BF               	bcf	191,2,c	;volatile
 22069   015F54  EFBD  F0AF         	goto	l7157
 22070   015F58                     l7147:
 22071   015F58  0E1A               	movlw	26
 22072   015F5A                     u9727:
 22073   015F5A  2EE8               	decfsz	wreg,f,c
 22074   015F5C  D7FE               	bra	u9727
 22075   015F5E  D000               	nop2	
 22076   015F60  EFD6  F0AF         	goto	l1012
 22077   015F64                     l7149:
 22078   015F64  0E2A               	movlw	42
 22079   015F66                     u9737:
 22080   015F66  2EE8               	decfsz	wreg,f,c
 22081   015F68  D7FE               	bra	u9737
 22082   015F6A  D000               	nop2	
 22083   015F6C  EFD6  F0AF         	goto	l1012
 22084   015F70                     l7151:
 22085   015F70  0E40               	movlw	64
 22086   015F72                     u9747:
 22087   015F72  2EE8               	decfsz	wreg,f,c
 22088   015F74  D7FE               	bra	u9747
 22089   015F76  EFD6  F0AF         	goto	l1012
 22090   015F7A                     l7157:
 22091   015F7A  505F               	movf	_current_i2c_speed^(0+1280),w,c
 22092   015F7C  6E01               	movwf	??_SW_I2C_SendAck^(0+1280),c
 22093   015F7E  6A02               	clrf	(??_SW_I2C_SendAck+1)^(0+1280),c
 22094                           
 22095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22096                           ; Switch size 1, requested type "simple"
 22097                           ; Number of cases is 1, Range of values is 0 to 0
 22098                           ; switch strategies available:
 22099                           ; Name         Instructions Cycles
 22100                           ; simple_byte            4     3 (average)
 22101                           ;	Chosen strategy is simple_byte
 22102   015F80  5002               	movf	(??_SW_I2C_SendAck+1)^(0+1280),w,c
 22103   015F82  0A00               	xorlw	0	; case 0
 22104   015F84  B4D8               	btfsc	status,2,c
 22105   015F86  EFC7  F0AF         	goto	l11277
 22106   015F8A  EFB2  F0AF         	goto	l7149
 22107   015F8E                     l11277:
 22108                           
 22109                           ; Switch size 1, requested type "simple"
 22110                           ; Number of cases is 3, Range of values is 0 to 2
 22111                           ; switch strategies available:
 22112                           ; Name         Instructions Cycles
 22113                           ; simple_byte           10     6 (average)
 22114                           ;	Chosen strategy is simple_byte
 22115   015F8E  5001               	movf	??_SW_I2C_SendAck^(0+1280),w,c
 22116   015F90  0A00               	xorlw	0	; case 0
 22117   015F92  B4D8               	btfsc	status,2,c
 22118   015F94  EFAC  F0AF         	goto	l7147
 22119   015F98  0A01               	xorlw	1	; case 1
 22120   015F9A  B4D8               	btfsc	status,2,c
 22121   015F9C  EFB2  F0AF         	goto	l7149
 22122   015FA0  0A03               	xorlw	3	; case 2
 22123   015FA2  B4D8               	btfsc	status,2,c
 22124   015FA4  EFB8  F0AF         	goto	l7151
 22125   015FA8  EFB2  F0AF         	goto	l7149
 22126   015FAC                     l1012:
 22127                           
 22128                           ;Software_I2C.c: 202:     (TRISBbits.TRISB1 = 1);
 22129   015FAC  82C7               	bsf	199,1,c	;volatile
 22130   015FAE  EFEA  F0AF         	goto	l7169
 22131   015FB2                     l7159:
 22132   015FB2  0E1A               	movlw	26
 22133   015FB4                     u9757:
 22134   015FB4  2EE8               	decfsz	wreg,f,c
 22135   015FB6  D7FE               	bra	u9757
 22136   015FB8  D000               	nop2	
 22137   015FBA  EF03  F0B0         	goto	l1020
 22138   015FBE                     l7161:
 22139   015FBE  0E2A               	movlw	42
 22140   015FC0                     u9767:
 22141   015FC0  2EE8               	decfsz	wreg,f,c
 22142   015FC2  D7FE               	bra	u9767
 22143   015FC4  D000               	nop2	
 22144   015FC6  EF03  F0B0         	goto	l1020
 22145   015FCA                     l7163:
 22146   015FCA  0E40               	movlw	64
 22147   015FCC                     u9777:
 22148   015FCC  2EE8               	decfsz	wreg,f,c
 22149   015FCE  D7FE               	bra	u9777
 22150   015FD0  EF03  F0B0         	goto	l1020
 22151   015FD4                     l7169:
 22152   015FD4  505F               	movf	_current_i2c_speed^(0+1280),w,c
 22153   015FD6  6E01               	movwf	??_SW_I2C_SendAck^(0+1280),c
 22154   015FD8  6A02               	clrf	(??_SW_I2C_SendAck+1)^(0+1280),c
 22155                           
 22156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22157                           ; Switch size 1, requested type "simple"
 22158                           ; Number of cases is 1, Range of values is 0 to 0
 22159                           ; switch strategies available:
 22160                           ; Name         Instructions Cycles
 22161                           ; simple_byte            4     3 (average)
 22162                           ;	Chosen strategy is simple_byte
 22163   015FDA  5002               	movf	(??_SW_I2C_SendAck+1)^(0+1280),w,c
 22164   015FDC  0A00               	xorlw	0	; case 0
 22165   015FDE  B4D8               	btfsc	status,2,c
 22166   015FE0  EFF4  F0AF         	goto	l11279
 22167   015FE4  EFDF  F0AF         	goto	l7161
 22168   015FE8                     l11279:
 22169                           
 22170                           ; Switch size 1, requested type "simple"
 22171                           ; Number of cases is 3, Range of values is 0 to 2
 22172                           ; switch strategies available:
 22173                           ; Name         Instructions Cycles
 22174                           ; simple_byte           10     6 (average)
 22175                           ;	Chosen strategy is simple_byte
 22176   015FE8  5001               	movf	??_SW_I2C_SendAck^(0+1280),w,c
 22177   015FEA  0A00               	xorlw	0	; case 0
 22178   015FEC  B4D8               	btfsc	status,2,c
 22179   015FEE  EFD9  F0AF         	goto	l7159
 22180   015FF2  0A01               	xorlw	1	; case 1
 22181   015FF4  B4D8               	btfsc	status,2,c
 22182   015FF6  EFDF  F0AF         	goto	l7161
 22183   015FFA  0A03               	xorlw	3	; case 2
 22184   015FFC  B4D8               	btfsc	status,2,c
 22185   015FFE  EFE5  F0AF         	goto	l7163
 22186   016002  EFDF  F0AF         	goto	l7161
 22187   016006                     l1020:
 22188                           
 22189                           ;Software_I2C.c: 204:     (TRISBbits.TRISB1 = 0);
 22190   016006  92C7               	bcf	199,1,c	;volatile
 22191                           
 22192                           ;Software_I2C.c: 205:     (LATBbits.LATB1 = 0);
 22193   016008  92BF               	bcf	191,1,c	;volatile
 22194   01600A  EF18  F0B0         	goto	l7181
 22195   01600E                     l7171:
 22196   01600E  0E1A               	movlw	26
 22197   016010                     u9787:
 22198   016010  2EE8               	decfsz	wreg,f,c
 22199   016012  D7FE               	bra	u9787
 22200   016014  D000               	nop2	
 22201   016016  EF31  F0B0         	goto	l1028
 22202   01601A                     l7173:
 22203   01601A  0E2A               	movlw	42
 22204   01601C                     u9797:
 22205   01601C  2EE8               	decfsz	wreg,f,c
 22206   01601E  D7FE               	bra	u9797
 22207   016020  D000               	nop2	
 22208   016022  EF31  F0B0         	goto	l1028
 22209   016026                     l7175:
 22210   016026  0E40               	movlw	64
 22211   016028                     u9807:
 22212   016028  2EE8               	decfsz	wreg,f,c
 22213   01602A  D7FE               	bra	u9807
 22214   01602C  EF31  F0B0         	goto	l1028
 22215   016030                     l7181:
 22216   016030  505F               	movf	_current_i2c_speed^(0+1280),w,c
 22217   016032  6E01               	movwf	??_SW_I2C_SendAck^(0+1280),c
 22218   016034  6A02               	clrf	(??_SW_I2C_SendAck+1)^(0+1280),c
 22219                           
 22220                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22221                           ; Switch size 1, requested type "simple"
 22222                           ; Number of cases is 1, Range of values is 0 to 0
 22223                           ; switch strategies available:
 22224                           ; Name         Instructions Cycles
 22225                           ; simple_byte            4     3 (average)
 22226                           ;	Chosen strategy is simple_byte
 22227   016036  5002               	movf	(??_SW_I2C_SendAck+1)^(0+1280),w,c
 22228   016038  0A00               	xorlw	0	; case 0
 22229   01603A  B4D8               	btfsc	status,2,c
 22230   01603C  EF22  F0B0         	goto	l11281
 22231   016040  EF0D  F0B0         	goto	l7173
 22232   016044                     l11281:
 22233                           
 22234                           ; Switch size 1, requested type "simple"
 22235                           ; Number of cases is 3, Range of values is 0 to 2
 22236                           ; switch strategies available:
 22237                           ; Name         Instructions Cycles
 22238                           ; simple_byte           10     6 (average)
 22239                           ;	Chosen strategy is simple_byte
 22240   016044  5001               	movf	??_SW_I2C_SendAck^(0+1280),w,c
 22241   016046  0A00               	xorlw	0	; case 0
 22242   016048  B4D8               	btfsc	status,2,c
 22243   01604A  EF07  F0B0         	goto	l7171
 22244   01604E  0A01               	xorlw	1	; case 1
 22245   016050  B4D8               	btfsc	status,2,c
 22246   016052  EF0D  F0B0         	goto	l7173
 22247   016056  0A03               	xorlw	3	; case 2
 22248   016058  B4D8               	btfsc	status,2,c
 22249   01605A  EF13  F0B0         	goto	l7175
 22250   01605E  EF0D  F0B0         	goto	l7173
 22251   016062                     l1028:
 22252                           
 22253                           ;Software_I2C.c: 208:     (TRISBbits.TRISB2 = 1);
 22254   016062  84C7               	bsf	199,2,c	;volatile
 22255   016064  0012               	return		;funcret
 22256   016066                     __end_of_SW_I2C_SendAck:
 22257                           	callstack 0
 22258                           
 22259 ;; *************** function _MPU6050_CombineBytes *****************
 22260 ;; Defined at:
 22261 ;;		line 585 in file "MPU6050_DMP.c"
 22262 ;; Parameters:    Size  Location     Type
 22263 ;;  high            1    wreg     unsigned char 
 22264 ;;  low             1    0[COMRAM] unsigned char 
 22265 ;; Auto vars:     Size  Location     Type
 22266 ;;  high            1    4[COMRAM] unsigned char 
 22267 ;; Return value:  Size  Location     Type
 22268 ;;                  2    0[COMRAM] short 
 22269 ;; Registers used:
 22270 ;;		wreg, status,2, status,0
 22271 ;; Tracked objects:
 22272 ;;		On entry : 0/0
 22273 ;;		On exit  : 0/0
 22274 ;;		Unchanged: 0/0
 22275 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22277 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22278 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22279 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22280 ;;Total ram usage:        5 bytes
 22281 ;; Hardware stack levels used: 1
 22282 ;; This function calls:
 22283 ;;		Nothing
 22284 ;; This function is called by:
 22285 ;;		_MPU6050_ReadAll
 22286 ;;		_MPU6050_ReadAccel
 22287 ;;		_MPU6050_ReadGyro
 22288 ;;		_MPU6050_ReadTemperature
 22289 ;; This function uses a non-reentrant model
 22290 ;;
 22291                           
 22292                           	psect	text56
 22293   017106                     __ptext56:
 22294                           	callstack 0
 22295   017106                     _MPU6050_CombineBytes:
 22296                           	callstack 124
 22297                           
 22298                           ;incstack = 0
 22299                           ;MPU6050_CombineBytes@high stored from wreg
 22300   017106  6E05               	movwf	MPU6050_CombineBytes@high^(0+1280),c
 22301   017108                     
 22302                           ;MPU6050_DMP.c: 586:     return (int16_t)((high << 8) | low);
 22303   017108  5001               	movf	MPU6050_CombineBytes@low^(0+1280),w,c
 22304   01710A  C505  F503         	movff	MPU6050_CombineBytes@high,??_MPU6050_CombineBytes
 22305   01710E  6A04               	clrf	(??_MPU6050_CombineBytes+1)^(0+1280),c
 22306   017110  C503  F504         	movff	??_MPU6050_CombineBytes,??_MPU6050_CombineBytes+1
 22307   017114  6A03               	clrf	??_MPU6050_CombineBytes^(0+1280),c
 22308   017116  1003               	iorwf	??_MPU6050_CombineBytes^(0+1280),w,c
 22309   017118  6E01               	movwf	?_MPU6050_CombineBytes^(0+1280),c
 22310   01711A  5004               	movf	(??_MPU6050_CombineBytes+1)^(0+1280),w,c
 22311   01711C  6E02               	movwf	(?_MPU6050_CombineBytes+1)^(0+1280),c
 22312   01711E  0012               	return		;funcret
 22313   017120                     __end_of_MPU6050_CombineBytes:
 22314                           	callstack 0
 22315                           
 22316 ;; *************** function _GetTimestamp_ms *****************
 22317 ;; Defined at:
 22318 ;;		line 626 in file "MPU6050_DMP.c"
 22319 ;; Parameters:    Size  Location     Type
 22320 ;;		None
 22321 ;; Auto vars:     Size  Location     Type
 22322 ;;		None
 22323 ;; Return value:  Size  Location     Type
 22324 ;;                  2    0[COMRAM] unsigned short 
 22325 ;; Registers used:
 22326 ;;		status,2, status,0
 22327 ;; Tracked objects:
 22328 ;;		On entry : 0/0
 22329 ;;		On exit  : 0/0
 22330 ;;		Unchanged: 0/0
 22331 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22336 ;;Total ram usage:        2 bytes
 22337 ;; Hardware stack levels used: 1
 22338 ;; This function calls:
 22339 ;;		Nothing
 22340 ;; This function is called by:
 22341 ;;		_MPU6050_DMP_GetData
 22342 ;;		_MPU6050_ReadAll
 22343 ;;		_MPU6050_DetectMovement
 22344 ;; This function uses a non-reentrant model
 22345 ;;
 22346                           
 22347                           	psect	text57
 22348   01714A                     __ptext57:
 22349                           	callstack 0
 22350   01714A                     _GetTimestamp_ms:
 22351                           	callstack 124
 22352   01714A                     
 22353                           ;MPU6050_DMP.c: 627:     static uint16_t timestamp = 0;;MPU6050_DMP.c: 628:     timestam
      +                          p++;
 22354   01714A  0106               	movlb	6	; () banked
 22355   01714C  4BF9               	infsnz	GetTimestamp_ms@timestamp& (0+255),f,b
 22356   01714E  2BFA               	incf	(GetTimestamp_ms@timestamp+1)& (0+255),f,b
 22357   017150                     
 22358                           ; BSR set to: 6
 22359                           ;MPU6050_DMP.c: 629:     return timestamp;
 22360   017150  C6F9  F501         	movff	GetTimestamp_ms@timestamp,?_GetTimestamp_ms
 22361   017154  C6FA  F502         	movff	GetTimestamp_ms@timestamp+1,?_GetTimestamp_ms+1
 22362   017158                     
 22363                           ; BSR set to: 6
 22364   017158  0012               	return		;funcret
 22365   01715A                     __end_of_GetTimestamp_ms:
 22366                           	callstack 0
 22367                           
 22368 ;; *************** function _LCD_init *****************
 22369 ;; Defined at:
 22370 ;;		line 74 in file "p_final.c"
 22371 ;; Parameters:    Size  Location     Type
 22372 ;;		None
 22373 ;; Auto vars:     Size  Location     Type
 22374 ;;		None
 22375 ;; Return value:  Size  Location     Type
 22376 ;;                  1    wreg      void 
 22377 ;; Registers used:
 22378 ;;		wreg, status,2, status,0, cstack
 22379 ;; Tracked objects:
 22380 ;;		On entry : 0/0
 22381 ;;		On exit  : 0/0
 22382 ;;		Unchanged: 0/0
 22383 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22386 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22387 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22388 ;;Total ram usage:        2 bytes
 22389 ;; Hardware stack levels used: 1
 22390 ;; Hardware stack levels required when called: 3
 22391 ;; This function calls:
 22392 ;;		_BORRAR_LCD
 22393 ;;		_CURSOR_HOME
 22394 ;;		_CURSOR_ONOFF
 22395 ;;		_LCD_CONFIG
 22396 ;; This function is called by:
 22397 ;;		_main
 22398 ;; This function uses a non-reentrant model
 22399 ;;
 22400                           
 22401                           	psect	text58
 22402   017040                     __ptext58:
 22403                           	callstack 0
 22404   017040                     _LCD_init:
 22405                           	callstack 123
 22406   017040                     
 22407                           ;p_final.c: 75:     _delay((unsigned long)((20)*(64000000UL/4000.0)));
 22408   017040  0E02               	movlw	2
 22409   017042  6E06               	movwf	(??_LCD_init+1)^(0+1280),c
 22410   017044  0EA0               	movlw	160
 22411   017046  6E05               	movwf	??_LCD_init^(0+1280),c
 22412   017048  0E92               	movlw	146
 22413   01704A                     u9817:
 22414   01704A  2EE8               	decfsz	wreg,f,c
 22415   01704C  D7FE               	bra	u9817
 22416   01704E  2E05               	decfsz	??_LCD_init^(0+1280),f,c
 22417   017050  D7FC               	bra	u9817
 22418   017052  2E06               	decfsz	(??_LCD_init+1)^(0+1280),f,c
 22419   017054  D7FA               	bra	u9817
 22420   017056  D000               	nop2	
 22421   017058                     
 22422                           ;p_final.c: 76:     LCD_CONFIG();
 22423   017058  EC4C  F0B6         	call	_LCD_CONFIG	;wreg free
 22424   01705C                     
 22425                           ;p_final.c: 77:     BORRAR_LCD();
 22426   01705C  ECB8  F0B8         	call	_BORRAR_LCD	;wreg free
 22427   017060                     
 22428                           ;p_final.c: 78:     CURSOR_HOME();
 22429   017060  ECB4  F0B8         	call	_CURSOR_HOME	;wreg free
 22430   017064                     
 22431                           ;p_final.c: 79:     CURSOR_ONOFF(1);
 22432   017064  0E01               	movlw	1
 22433   017066  ECF1  F0B7         	call	_CURSOR_ONOFF
 22434   01706A  0012               	return		;funcret
 22435   01706C                     __end_of_LCD_init:
 22436                           	callstack 0
 22437                           
 22438 ;; *************** function _LCD_CONFIG *****************
 22439 ;; Defined at:
 22440 ;;		line 109 in file "LCD.c"
 22441 ;; Parameters:    Size  Location     Type
 22442 ;;		None
 22443 ;; Auto vars:     Size  Location     Type
 22444 ;;		None
 22445 ;; Return value:  Size  Location     Type
 22446 ;;                  1    wreg      void 
 22447 ;; Registers used:
 22448 ;;		wreg, status,2, status,0, cstack
 22449 ;; Tracked objects:
 22450 ;;		On entry : 0/0
 22451 ;;		On exit  : 0/0
 22452 ;;		Unchanged: 0/0
 22453 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22456 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22458 ;;Total ram usage:        1 bytes
 22459 ;; Hardware stack levels used: 1
 22460 ;; Hardware stack levels required when called: 2
 22461 ;; This function calls:
 22462 ;;		_ENVIA_LCD_CMD
 22463 ;;		_ENVIA_NIBBLE
 22464 ;; This function is called by:
 22465 ;;		_LCD_init
 22466 ;;		_LCD_INIT
 22467 ;; This function uses a non-reentrant model
 22468 ;;
 22469                           
 22470                           	psect	text59
 22471   016C98                     __ptext59:
 22472                           	callstack 0
 22473   016C98                     _LCD_CONFIG:
 22474                           	callstack 123
 22475   016C98                     
 22476                           ;LCD.c: 111:  LATDbits.LATD0 = 0;
 22477   016C98  90C1               	bcf	193,0,c	;volatile
 22478                           
 22479                           ;LCD.c: 112:  LATDbits.LATD1 = 0;
 22480   016C9A  92C1               	bcf	193,1,c	;volatile
 22481   016C9C                     
 22482                           ;LCD.c: 113:  ENVIA_NIBBLE(0x30);
 22483   016C9C  0E30               	movlw	48
 22484   016C9E  EC75  F0B8         	call	_ENVIA_NIBBLE
 22485   016CA2                     
 22486                           ;LCD.c: 114:     _delay((unsigned long)((2)*(4000000UL/4000.0)));
 22487   016CA2  0E03               	movlw	3
 22488   016CA4  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
 22489   016CA6  0E98               	movlw	152
 22490   016CA8                     u9827:
 22491   016CA8  2EE8               	decfsz	wreg,f,c
 22492   016CAA  D7FE               	bra	u9827
 22493   016CAC  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
 22494   016CAE  D7FC               	bra	u9827
 22495   016CB0                     
 22496                           ;LCD.c: 115:  ENVIA_NIBBLE(0x30);
 22497   016CB0  0E30               	movlw	48
 22498   016CB2  EC75  F0B8         	call	_ENVIA_NIBBLE
 22499                           
 22500                           ;LCD.c: 116:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 22501   016CB6  0E21               	movlw	33
 22502   016CB8                     u9837:
 22503   016CB8  2EE8               	decfsz	wreg,f,c
 22504   016CBA  D7FE               	bra	u9837
 22505   016CBC  0000               	nop	
 22506   016CBE                     
 22507                           ;LCD.c: 117:     ENVIA_NIBBLE(0x30);
 22508   016CBE  0E30               	movlw	48
 22509   016CC0  EC75  F0B8         	call	_ENVIA_NIBBLE
 22510   016CC4                     
 22511                           ;LCD.c: 118:  ENVIA_NIBBLE(0x20);
 22512   016CC4  0E20               	movlw	32
 22513   016CC6  EC75  F0B8         	call	_ENVIA_NIBBLE
 22514   016CCA                     
 22515                           ;LCD.c: 119:  ENVIA_LCD_CMD(0x01);
 22516   016CCA  0E01               	movlw	1
 22517   016CCC  ECBF  F0B7         	call	_ENVIA_LCD_CMD
 22518   016CD0                     
 22519                           ;LCD.c: 120:  ENVIA_LCD_CMD(0x28);
 22520   016CD0  0E28               	movlw	40
 22521   016CD2  ECBF  F0B7         	call	_ENVIA_LCD_CMD
 22522   016CD6                     
 22523                           ;LCD.c: 121:  ENVIA_LCD_CMD(0x0F);
 22524   016CD6  0E0F               	movlw	15
 22525   016CD8  ECBF  F0B7         	call	_ENVIA_LCD_CMD
 22526   016CDC                     
 22527                           ;LCD.c: 122:  ENVIA_LCD_CMD(0x06);
 22528   016CDC  0E06               	movlw	6
 22529   016CDE  ECBF  F0B7         	call	_ENVIA_LCD_CMD
 22530   016CE2                     
 22531                           ;LCD.c: 123:  ENVIA_LCD_CMD(0x01);
 22532   016CE2  0E01               	movlw	1
 22533   016CE4  ECBF  F0B7         	call	_ENVIA_LCD_CMD
 22534   016CE8  0012               	return		;funcret
 22535   016CEA                     __end_of_LCD_CONFIG:
 22536                           	callstack 0
 22537                           
 22538 ;; *************** function _CURSOR_ONOFF *****************
 22539 ;; Defined at:
 22540 ;;		line 62 in file "LCD.c"
 22541 ;; Parameters:    Size  Location     Type
 22542 ;;  estado          1    wreg     unsigned char 
 22543 ;; Auto vars:     Size  Location     Type
 22544 ;;  estado          1    3[COMRAM] unsigned char 
 22545 ;; Return value:  Size  Location     Type
 22546 ;;                  1    wreg      void 
 22547 ;; Registers used:
 22548 ;;		wreg, status,2, status,0, cstack
 22549 ;; Tracked objects:
 22550 ;;		On entry : 0/0
 22551 ;;		On exit  : 0/0
 22552 ;;		Unchanged: 0/0
 22553 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22557 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22558 ;;Total ram usage:        1 bytes
 22559 ;; Hardware stack levels used: 1
 22560 ;; Hardware stack levels required when called: 2
 22561 ;; This function calls:
 22562 ;;		_ENVIA_LCD_CMD
 22563 ;; This function is called by:
 22564 ;;		_LCD_init
 22565 ;;		_LCD_INIT
 22566 ;; This function uses a non-reentrant model
 22567 ;;
 22568                           
 22569                           	psect	text60
 22570   016FE2                     __ptext60:
 22571                           	callstack 0
 22572   016FE2                     _CURSOR_ONOFF:
 22573                           	callstack 123
 22574                           
 22575                           ;incstack = 0
 22576                           ;CURSOR_ONOFF@estado stored from wreg
 22577   016FE2  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
 22578   016FE4                     
 22579                           ;LCD.c: 62: void CURSOR_ONOFF(unsigned char estado);LCD.c: 63: {;LCD.c: 64:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
 22580   016FE4  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
 22581   016FE6  A4D8               	btfss	status,2,c
 22582   016FE8  EFF8  F0B7         	goto	u7831
 22583   016FEC  EFFA  F0B7         	goto	u7830
 22584   016FF0                     u7831:
 22585   016FF0  EFFD  F0B7         	goto	l9751
 22586   016FF4                     u7830:
 22587   016FF4  0E0E               	movlw	14
 22588   016FF6  ECBF  F0B7         	call	_ENVIA_LCD_CMD
 22589   016FFA                     l9751:
 22590                           
 22591                           ;LCD.c: 65:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
 22592   016FFA  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
 22593   016FFC  A4D8               	btfss	status,2,c
 22594   016FFE  EF03  F0B8         	goto	u7841
 22595   017002  EF05  F0B8         	goto	u7840
 22596   017006                     u7841:
 22597   017006  EF08  F0B8         	goto	l1249
 22598   01700A                     u7840:
 22599   01700A  0E0C               	movlw	12
 22600   01700C  ECBF  F0B7         	call	_ENVIA_LCD_CMD
 22601   017010                     l1249:
 22602   017010  0012               	return		;funcret
 22603   017012                     __end_of_CURSOR_ONOFF:
 22604                           	callstack 0
 22605                           
 22606 ;; *************** function _CURSOR_HOME *****************
 22607 ;; Defined at:
 22608 ;;		line 37 in file "LCD.c"
 22609 ;; Parameters:    Size  Location     Type
 22610 ;;		None
 22611 ;; Auto vars:     Size  Location     Type
 22612 ;;		None
 22613 ;; Return value:  Size  Location     Type
 22614 ;;                  1    wreg      void 
 22615 ;; Registers used:
 22616 ;;		wreg, status,2, status,0, cstack
 22617 ;; Tracked objects:
 22618 ;;		On entry : 0/0
 22619 ;;		On exit  : 0/0
 22620 ;;		Unchanged: 0/0
 22621 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22626 ;;Total ram usage:        0 bytes
 22627 ;; Hardware stack levels used: 1
 22628 ;; Hardware stack levels required when called: 2
 22629 ;; This function calls:
 22630 ;;		_ENVIA_LCD_CMD
 22631 ;; This function is called by:
 22632 ;;		_LCD_init
 22633 ;;		_LCD_INIT
 22634 ;; This function uses a non-reentrant model
 22635 ;;
 22636                           
 22637                           	psect	text61
 22638   017168                     __ptext61:
 22639                           	callstack 0
 22640   017168                     _CURSOR_HOME:
 22641                           	callstack 123
 22642   017168                     
 22643                           ;LCD.c: 39:  ENVIA_LCD_CMD(0x02);
 22644   017168  0E02               	movlw	2
 22645   01716A  ECBF  F0B7         	call	_ENVIA_LCD_CMD
 22646   01716E  0012               	return		;funcret
 22647   017170                     __end_of_CURSOR_HOME:
 22648                           	callstack 0
 22649                           
 22650 ;; *************** function _BORRAR_LCD *****************
 22651 ;; Defined at:
 22652 ;;		line 104 in file "LCD.c"
 22653 ;; Parameters:    Size  Location     Type
 22654 ;;		None
 22655 ;; Auto vars:     Size  Location     Type
 22656 ;;		None
 22657 ;; Return value:  Size  Location     Type
 22658 ;;                  1    wreg      void 
 22659 ;; Registers used:
 22660 ;;		wreg, status,2, status,0, cstack
 22661 ;; Tracked objects:
 22662 ;;		On entry : 0/0
 22663 ;;		On exit  : 0/0
 22664 ;;		Unchanged: 0/0
 22665 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22670 ;;Total ram usage:        0 bytes
 22671 ;; Hardware stack levels used: 1
 22672 ;; Hardware stack levels required when called: 2
 22673 ;; This function calls:
 22674 ;;		_ENVIA_LCD_CMD
 22675 ;; This function is called by:
 22676 ;;		_main
 22677 ;;		_LCD_init
 22678 ;;		_LCD_INIT
 22679 ;; This function uses a non-reentrant model
 22680 ;;
 22681                           
 22682                           	psect	text62
 22683   017170                     __ptext62:
 22684                           	callstack 0
 22685   017170                     _BORRAR_LCD:
 22686                           	callstack 123
 22687   017170                     
 22688                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x01);
 22689   017170  0E01               	movlw	1
 22690   017172  ECBF  F0B7         	call	_ENVIA_LCD_CMD
 22691   017176  0012               	return		;funcret
 22692   017178                     __end_of_BORRAR_LCD:
 22693                           	callstack 0
 22694                           
 22695 ;; *************** function _ENVIA_LCD_CMD *****************
 22696 ;; Defined at:
 22697 ;;		line 136 in file "LCD.c"
 22698 ;; Parameters:    Size  Location     Type
 22699 ;;  dato            1    wreg     unsigned char 
 22700 ;; Auto vars:     Size  Location     Type
 22701 ;;  dato            1    1[COMRAM] unsigned char 
 22702 ;;  aux             1    2[COMRAM] unsigned char 
 22703 ;; Return value:  Size  Location     Type
 22704 ;;                  1    wreg      void 
 22705 ;; Registers used:
 22706 ;;		wreg, status,2, status,0, cstack
 22707 ;; Tracked objects:
 22708 ;;		On entry : 0/0
 22709 ;;		On exit  : 0/0
 22710 ;;		Unchanged: 0/0
 22711 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22713 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22715 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22716 ;;Total ram usage:        2 bytes
 22717 ;; Hardware stack levels used: 1
 22718 ;; Hardware stack levels required when called: 1
 22719 ;; This function calls:
 22720 ;;		_ENVIA_NIBBLE
 22721 ;;		_LEER_LCD
 22722 ;; This function is called by:
 22723 ;;		_POS_CURSOR
 22724 ;;		_CURSOR_HOME
 22725 ;;		_CURSOR_ONOFF
 22726 ;;		_BORRAR_LCD
 22727 ;;		_LCD_CONFIG
 22728 ;;		_BLINK_CURSOR
 22729 ;;		_DISPLAY_ONOFF
 22730 ;;		_CURSOR_SHIFTLEFT
 22731 ;;		_CURSOR_SHIFTRIGHT
 22732 ;;		_DISPLAY_SHIFTLEFT
 22733 ;;		_DISPLAY_SHIFTRIGHT
 22734 ;;		_GENERACARACTER
 22735 ;; This function uses a non-reentrant model
 22736 ;;
 22737                           
 22738                           	psect	text63
 22739   016F7E                     __ptext63:
 22740                           	callstack 0
 22741   016F7E                     _ENVIA_LCD_CMD:
 22742                           	callstack 124
 22743                           
 22744                           ;incstack = 0
 22745                           ;ENVIA_LCD_CMD@dato stored from wreg
 22746   016F7E  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
 22747   016F80                     
 22748                           ;LCD.c: 136: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 137: {;LCD.c: 138:  unsigned 
      +                          char aux;;LCD.c: 139:  LATDbits.LATD0 = 0;
 22749   016F80  90C1               	bcf	193,0,c	;volatile
 22750   016F82                     
 22751                           ;LCD.c: 140:  LEER_LCD();
 22752   016F82  EC28  F0B5         	call	_LEER_LCD	;wreg free
 22753   016F86                     
 22754                           ;LCD.c: 141:  TRISD = 0b00000000;
 22755   016F86  6AC9               	clrf	201,c	;volatile
 22756   016F88                     
 22757                           ;LCD.c: 142:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 22758   016F88  0E21               	movlw	33
 22759   016F8A                     u9847:
 22760   016F8A  2EE8               	decfsz	wreg,f,c
 22761   016F8C  D7FE               	bra	u9847
 22762   016F8E  0000               	nop	
 22763   016F90                     
 22764                           ;LCD.c: 143:     LATDbits.LATD1 = 0;
 22765   016F90  92C1               	bcf	193,1,c	;volatile
 22766   016F92                     
 22767                           ;LCD.c: 144:  LATDbits.LATD2 = 0;
 22768   016F92  94C1               	bcf	193,2,c	;volatile
 22769   016F94                     
 22770                           ;LCD.c: 145:  LATDbits.LATD0 = 0;
 22771   016F94  90C1               	bcf	193,0,c	;volatile
 22772   016F96                     
 22773                           ;LCD.c: 146:  aux = dato & 0xF0;
 22774   016F96  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
 22775   016F98  0BF0               	andlw	240
 22776   016F9A  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
 22777   016F9C                     
 22778                           ;LCD.c: 147:  ENVIA_NIBBLE(aux);
 22779   016F9C  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
 22780   016F9E  EC75  F0B8         	call	_ENVIA_NIBBLE
 22781   016FA2                     
 22782                           ;LCD.c: 148:  aux = dato<<4;
 22783   016FA2  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
 22784   016FA4  0BF0               	andlw	240
 22785   016FA6  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
 22786   016FA8                     
 22787                           ;LCD.c: 149:  ENVIA_NIBBLE(aux);
 22788   016FA8  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
 22789   016FAA  EC75  F0B8         	call	_ENVIA_NIBBLE
 22790   016FAE  0012               	return		;funcret
 22791   016FB0                     __end_of_ENVIA_LCD_CMD:
 22792                           	callstack 0
 22793                           
 22794 ;; *************** function _I2C1_Initialize *****************
 22795 ;; Defined at:
 22796 ;;		line 141 in file "I2C_LIB.c"
 22797 ;; Parameters:    Size  Location     Type
 22798 ;;		None
 22799 ;; Auto vars:     Size  Location     Type
 22800 ;;		None
 22801 ;; Return value:  Size  Location     Type
 22802 ;;                  1    wreg      void 
 22803 ;; Registers used:
 22804 ;;		wreg, status,2
 22805 ;; Tracked objects:
 22806 ;;		On entry : 0/0
 22807 ;;		On exit  : 0/0
 22808 ;;		Unchanged: 0/0
 22809 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22814 ;;Total ram usage:        0 bytes
 22815 ;; Hardware stack levels used: 1
 22816 ;; This function calls:
 22817 ;;		Nothing
 22818 ;; This function is called by:
 22819 ;;		_main
 22820 ;; This function uses a non-reentrant model
 22821 ;;
 22822                           
 22823                           	psect	text64
 22824   0170CE                     __ptext64:
 22825                           	callstack 0
 22826   0170CE                     _I2C1_Initialize:
 22827                           	callstack 126
 22828   0170CE                     
 22829                           ;I2C_LIB.c: 144:     I2C1CON0 = 0x04;
 22830   0170CE  0E04               	movlw	4
 22831   0170D0  0102               	movlb	2	; () banked
 22832   0170D2  6F94               	movwf	148,b	;volatile
 22833                           
 22834                           ;I2C_LIB.c: 146:     I2C1CON1 = 0x80;
 22835   0170D4  0E80               	movlw	128
 22836   0170D6  6F95               	movwf	149,b	;volatile
 22837                           
 22838                           ;I2C_LIB.c: 148:     I2C1CON2 = 0x18;
 22839   0170D8  0E18               	movlw	24
 22840   0170DA  6F96               	movwf	150,b	;volatile
 22841                           
 22842                           ;I2C_LIB.c: 150:     I2C1CLK = 0x03;
 22843   0170DC  0E03               	movlw	3
 22844   0170DE  6F9C               	movwf	156,b	;volatile
 22845   0170E0                     
 22846                           ; BSR set to: 2
 22847                           ;I2C_LIB.c: 152:     I2C1PIR = 0x00;
 22848   0170E0  6B9A               	clrf	154,b	;volatile
 22849   0170E2                     
 22850                           ; BSR set to: 2
 22851                           ;I2C_LIB.c: 154:     I2C1PIE = 0x00;
 22852   0170E2  6B9B               	clrf	155,b	;volatile
 22853   0170E4                     
 22854                           ; BSR set to: 2
 22855                           ;I2C_LIB.c: 156:     I2C1ERR = 0x00;
 22856   0170E4  6B97               	clrf	151,b	;volatile
 22857   0170E6                     
 22858                           ; BSR set to: 2
 22859                           ;I2C_LIB.c: 158:     I2C1CNT = 0xFF;
 22860   0170E6  698D               	setf	141,b	;volatile
 22861   0170E8                     
 22862                           ; BSR set to: 2
 22863   0170E8  0012               	return		;funcret
 22864   0170EA                     __end_of_I2C1_Initialize:
 22865                           	callstack 0
 22866                           
 22867 ;; *************** function _ESCRIBE_MENSAJE *****************
 22868 ;; Defined at:
 22869 ;;		line 68 in file "LCD.c"
 22870 ;; Parameters:    Size  Location     Type
 22871 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
 22872 ;;		 -> STR_19(7), STR_18(6), STR_17(7), STR_16(10), 
 22873 ;;		 -> STR_15(8), main@buffer1(16), STR_13(7), 
 22874 ;;  tam             1    5[COMRAM] unsigned char 
 22875 ;; Auto vars:     Size  Location     Type
 22876 ;;  i               1    8[COMRAM] unsigned char 
 22877 ;; Return value:  Size  Location     Type
 22878 ;;                  1    wreg      void 
 22879 ;; Registers used:
 22880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22881 ;; Tracked objects:
 22882 ;;		On entry : 0/0
 22883 ;;		On exit  : 0/0
 22884 ;;		Unchanged: 0/0
 22885 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22886 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22888 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22889 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22890 ;;Total ram usage:        6 bytes
 22891 ;; Hardware stack levels used: 1
 22892 ;; Hardware stack levels required when called: 2
 22893 ;; This function calls:
 22894 ;;		_ENVIA_CHAR
 22895 ;; This function is called by:
 22896 ;;		_main
 22897 ;; This function uses a non-reentrant model
 22898 ;;
 22899                           
 22900                           	psect	text65
 22901   016D8A                     __ptext65:
 22902                           	callstack 0
 22903   016D8A                     _ESCRIBE_MENSAJE:
 22904                           	callstack 124
 22905   016D8A                     
 22906                           ;LCD.c: 68: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 69: {;LCD.
      +                          c: 70:  unsigned char i = 0;
 22907   016D8A  6A09               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
 22908                           
 22909                           ;LCD.c: 71:  for(i = 0; i<tam; i++)
 22910   016D8C  6A09               	clrf	ESCRIBE_MENSAJE@i^(0+1280),c
 22911   016D8E  EFE3  F0B6         	goto	l10031
 22912   016D92                     l10027:
 22913                           
 22914                           ;LCD.c: 72:  {;LCD.c: 73:   ENVIA_CHAR(cadena[i]);
 22915   016D92  5009               	movf	ESCRIBE_MENSAJE@i^(0+1280),w,c
 22916   016D94  2404               	addwf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
 22917   016D96  6E07               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
 22918   016D98  0E00               	movlw	0
 22919   016D9A  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),w,c
 22920   016D9C  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^(0+1280),c
 22921   016D9E  C507  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
 22922   016DA2  C508  F4F7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
 22923   016DA6  0E00               	movlw	low (__mediumconst shr (0+16))
 22924   016DA8  6EF8               	movwf	tblptru,c
 22925   016DAA  0E25               	movlw	(high __ramtop+-1)
 22926   016DAC  64F7               	cpfsgt	tblptrh,c
 22927   016DAE  D003               	bra	u8007
 22928   016DB0  0008               	tblrd		*
 22929   016DB2  50F5               	movf	tablat,w,c
 22930   016DB4  D005               	bra	u8000
 22931   016DB6                     u8007:
 22932   016DB6  C4F6 F4E9          	movff	tblptrl,fsr0l
 22933   016DBA  C4F7 F4EA          	movff	tblptrh,fsr0h
 22934   016DBE  50EF               	movf	indf0,w,c
 22935   016DC0                     u8000:
 22936   016DC0  ECD8  F0B7         	call	_ENVIA_CHAR
 22937   016DC4                     
 22938                           ;LCD.c: 74:  }
 22939   016DC4  2A09               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
 22940   016DC6                     l10031:
 22941   016DC6  5006               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
 22942   016DC8  5C09               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
 22943   016DCA  A0D8               	btfss	status,0,c
 22944   016DCC  EFEA  F0B6         	goto	u8011
 22945   016DD0  EFEC  F0B6         	goto	u8010
 22946   016DD4                     u8011:
 22947   016DD4  EFC9  F0B6         	goto	l10027
 22948   016DD8                     u8010:
 22949   016DD8  0012               	return		;funcret
 22950   016DDA                     __end_of_ESCRIBE_MENSAJE:
 22951                           	callstack 0
 22952                           
 22953 ;; *************** function _ENVIA_CHAR *****************
 22954 ;; Defined at:
 22955 ;;		line 88 in file "LCD.c"
 22956 ;; Parameters:    Size  Location     Type
 22957 ;;  dato            1    wreg     unsigned char 
 22958 ;; Auto vars:     Size  Location     Type
 22959 ;;  dato            1    1[COMRAM] unsigned char 
 22960 ;;  aux             1    2[COMRAM] unsigned char 
 22961 ;; Return value:  Size  Location     Type
 22962 ;;                  1    wreg      void 
 22963 ;; Registers used:
 22964 ;;		wreg, status,2, status,0, cstack
 22965 ;; Tracked objects:
 22966 ;;		On entry : 0/0
 22967 ;;		On exit  : 0/0
 22968 ;;		Unchanged: 0/0
 22969 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 22970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22971 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22974 ;;Total ram usage:        2 bytes
 22975 ;; Hardware stack levels used: 1
 22976 ;; Hardware stack levels required when called: 1
 22977 ;; This function calls:
 22978 ;;		_ENVIA_NIBBLE
 22979 ;;		_LEER_LCD
 22980 ;; This function is called by:
 22981 ;;		_ESCRIBE_MENSAJE
 22982 ;;		_ESCRIBE_MENSAJE2
 22983 ;;		_GENERACARACTER
 22984 ;;		_LCD_ESCRIBE_VAR_CHAR
 22985 ;;		_LCD_ESCRIBE_VAR_INT
 22986 ;;		_LCD_CHAR_GRADO
 22987 ;;		_LCD_VARCHAR_BITS
 22988 ;; This function uses a non-reentrant model
 22989 ;;
 22990                           
 22991                           	psect	text66
 22992   016FB0                     __ptext66:
 22993                           	callstack 0
 22994   016FB0                     _ENVIA_CHAR:
 22995                           	callstack 124
 22996                           
 22997                           ;incstack = 0
 22998                           ;ENVIA_CHAR@dato stored from wreg
 22999   016FB0  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
 23000   016FB2                     
 23001                           ;LCD.c: 88: void ENVIA_CHAR(unsigned char dato);LCD.c: 89: {;LCD.c: 90:  unsigned char a
      +                          ux;;LCD.c: 91:  LATDbits.LATD0 = 1;
 23002   016FB2  80C1               	bsf	193,0,c	;volatile
 23003   016FB4                     
 23004                           ;LCD.c: 92:  LEER_LCD();
 23005   016FB4  EC28  F0B5         	call	_LEER_LCD	;wreg free
 23006   016FB8                     
 23007                           ;LCD.c: 93:  TRISD = 0x00;
 23008   016FB8  6AC9               	clrf	201,c	;volatile
 23009   016FBA                     
 23010                           ;LCD.c: 94:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 23011   016FBA  0E21               	movlw	33
 23012   016FBC                     u9857:
 23013   016FBC  2EE8               	decfsz	wreg,f,c
 23014   016FBE  D7FE               	bra	u9857
 23015   016FC0  0000               	nop	
 23016   016FC2                     
 23017                           ;LCD.c: 95:  LATDbits.LATD1 = 0;
 23018   016FC2  92C1               	bcf	193,1,c	;volatile
 23019   016FC4                     
 23020                           ;LCD.c: 96:  LATDbits.LATD2 = 0;
 23021   016FC4  94C1               	bcf	193,2,c	;volatile
 23022   016FC6                     
 23023                           ;LCD.c: 97:  LATDbits.LATD0 = 1;
 23024   016FC6  80C1               	bsf	193,0,c	;volatile
 23025   016FC8                     
 23026                           ;LCD.c: 98:  aux = dato & 0xF0;
 23027   016FC8  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
 23028   016FCA  0BF0               	andlw	240
 23029   016FCC  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
 23030   016FCE                     
 23031                           ;LCD.c: 99:  ENVIA_NIBBLE(aux);
 23032   016FCE  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
 23033   016FD0  EC75  F0B8         	call	_ENVIA_NIBBLE
 23034   016FD4                     
 23035                           ;LCD.c: 100:  aux = dato << 4;
 23036   016FD4  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
 23037   016FD6  0BF0               	andlw	240
 23038   016FD8  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
 23039   016FDA                     
 23040                           ;LCD.c: 101:  ENVIA_NIBBLE(aux);
 23041   016FDA  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
 23042   016FDC  EC75  F0B8         	call	_ENVIA_NIBBLE
 23043   016FE0  0012               	return		;funcret
 23044   016FE2                     __end_of_ENVIA_CHAR:
 23045                           	callstack 0
 23046                           
 23047 ;; *************** function _LEER_LCD *****************
 23048 ;; Defined at:
 23049 ;;		line 152 in file "LCD.c"
 23050 ;; Parameters:    Size  Location     Type
 23051 ;;		None
 23052 ;; Auto vars:     Size  Location     Type
 23053 ;;  aux             1    0[COMRAM] unsigned char 
 23054 ;; Return value:  Size  Location     Type
 23055 ;;                  1    wreg      void 
 23056 ;; Registers used:
 23057 ;;		wreg, status,2, status,0
 23058 ;; Tracked objects:
 23059 ;;		On entry : 0/0
 23060 ;;		On exit  : 0/0
 23061 ;;		Unchanged: 0/0
 23062 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23066 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23067 ;;Total ram usage:        1 bytes
 23068 ;; Hardware stack levels used: 1
 23069 ;; This function calls:
 23070 ;;		Nothing
 23071 ;; This function is called by:
 23072 ;;		_ENVIA_CHAR
 23073 ;;		_ENVIA_LCD_CMD
 23074 ;; This function uses a non-reentrant model
 23075 ;;
 23076                           
 23077                           	psect	text67
 23078   016A50                     __ptext67:
 23079                           	callstack 0
 23080   016A50                     _LEER_LCD:
 23081                           	callstack 124
 23082   016A50                     
 23083                           ;LCD.c: 154:  unsigned char aux;;LCD.c: 155:  TRISD = 0xF8;
 23084   016A50  0EF8               	movlw	248
 23085   016A52  6EC9               	movwf	201,c	;volatile
 23086   016A54                     
 23087                           ;LCD.c: 156:  LATDbits.LATD0 = 0;
 23088   016A54  90C1               	bcf	193,0,c	;volatile
 23089   016A56                     
 23090                           ;LCD.c: 157:  LATDbits.LATD1 = 1;
 23091   016A56  82C1               	bsf	193,1,c	;volatile
 23092   016A58                     
 23093                           ;LCD.c: 158:  LATDbits.LATD2 = 1;
 23094   016A58  84C1               	bsf	193,2,c	;volatile
 23095   016A5A                     
 23096                           ;LCD.c: 159:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 23097   016A5A  0E21               	movlw	33
 23098   016A5C                     u9867:
 23099   016A5C  2EE8               	decfsz	wreg,f,c
 23100   016A5E  D7FE               	bra	u9867
 23101   016A60  0000               	nop	
 23102   016A62                     
 23103                           ;LCD.c: 160:  aux = PORTD;
 23104   016A62  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
 23105   016A66                     
 23106                           ;LCD.c: 161:  LATDbits.LATD2 = 0;
 23107   016A66  94C1               	bcf	193,2,c	;volatile
 23108   016A68                     
 23109                           ;LCD.c: 162:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 23110   016A68  0E21               	movlw	33
 23111   016A6A                     u9877:
 23112   016A6A  2EE8               	decfsz	wreg,f,c
 23113   016A6C  D7FE               	bra	u9877
 23114   016A6E  0000               	nop	
 23115   016A70                     
 23116                           ;LCD.c: 163:  LATDbits.LATD2 = 1;
 23117   016A70  84C1               	bsf	193,2,c	;volatile
 23118   016A72                     
 23119                           ;LCD.c: 164:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 23120   016A72  0E21               	movlw	33
 23121   016A74                     u9887:
 23122   016A74  2EE8               	decfsz	wreg,f,c
 23123   016A76  D7FE               	bra	u9887
 23124   016A78  0000               	nop	
 23125   016A7A                     
 23126                           ;LCD.c: 165:  LATDbits.LATD2 = 0;
 23127   016A7A  94C1               	bcf	193,2,c	;volatile
 23128   016A7C                     l8635:
 23129                           
 23130                           ;LCD.c: 166:  aux = aux & 0x80;
 23131   016A7C  5001               	movf	LEER_LCD@aux^(0+1280),w,c
 23132   016A7E  0B80               	andlw	128
 23133   016A80  6E01               	movwf	LEER_LCD@aux^(0+1280),c
 23134                           
 23135                           ;LCD.c: 167:  while(aux == 0x80)
 23136   016A82  EF57  F0B5         	goto	l8649
 23137   016A86                     l1280:
 23138                           
 23139                           ;LCD.c: 168:         {;LCD.c: 169:             LATDbits.LATD2 = 1;
 23140   016A86  84C1               	bsf	193,2,c	;volatile
 23141   016A88                     
 23142                           ;LCD.c: 170:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 23143   016A88  0E21               	movlw	33
 23144   016A8A                     u9897:
 23145   016A8A  2EE8               	decfsz	wreg,f,c
 23146   016A8C  D7FE               	bra	u9897
 23147   016A8E  0000               	nop	
 23148   016A90                     
 23149                           ;LCD.c: 171:             aux = PORTD;
 23150   016A90  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
 23151   016A94                     
 23152                           ;LCD.c: 172:             LATDbits.LATD2 = 0;
 23153   016A94  94C1               	bcf	193,2,c	;volatile
 23154                           
 23155                           ;LCD.c: 173:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 23156   016A96  0E21               	movlw	33
 23157   016A98                     u9907:
 23158   016A98  2EE8               	decfsz	wreg,f,c
 23159   016A9A  D7FE               	bra	u9907
 23160   016A9C  0000               	nop	
 23161   016A9E                     
 23162                           ;LCD.c: 174:             LATDbits.LATD2 = 1;
 23163   016A9E  84C1               	bsf	193,2,c	;volatile
 23164                           
 23165                           ;LCD.c: 175:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 23166   016AA0  0E21               	movlw	33
 23167   016AA2                     u9917:
 23168   016AA2  2EE8               	decfsz	wreg,f,c
 23169   016AA4  D7FE               	bra	u9917
 23170   016AA6  0000               	nop	
 23171   016AA8                     
 23172                           ;LCD.c: 176:             LATDbits.LATD2 = 0;
 23173   016AA8  94C1               	bcf	193,2,c	;volatile
 23174   016AAA  EF3E  F0B5         	goto	l8635
 23175   016AAE                     l8649:
 23176                           
 23177                           ;LCD.c: 167:  while(aux == 0x80)
 23178   016AAE  0E80               	movlw	128
 23179   016AB0  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
 23180   016AB2  B4D8               	btfsc	status,2,c
 23181   016AB4  EF5E  F0B5         	goto	u6451
 23182   016AB8  EF60  F0B5         	goto	u6450
 23183   016ABC                     u6451:
 23184   016ABC  EF43  F0B5         	goto	l1280
 23185   016AC0                     u6450:
 23186   016AC0  0012               	return		;funcret
 23187   016AC2                     __end_of_LEER_LCD:
 23188                           	callstack 0
 23189                           
 23190 ;; *************** function _ENVIA_NIBBLE *****************
 23191 ;; Defined at:
 23192 ;;		line 126 in file "LCD.c"
 23193 ;; Parameters:    Size  Location     Type
 23194 ;;  dato            1    wreg     unsigned char 
 23195 ;; Auto vars:     Size  Location     Type
 23196 ;;  dato            1    0[COMRAM] unsigned char 
 23197 ;; Return value:  Size  Location     Type
 23198 ;;                  1    wreg      void 
 23199 ;; Registers used:
 23200 ;;		wreg, status,2, status,0
 23201 ;; Tracked objects:
 23202 ;;		On entry : 0/0
 23203 ;;		On exit  : 0/0
 23204 ;;		Unchanged: 0/0
 23205 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 23206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23209 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23210 ;;Total ram usage:        1 bytes
 23211 ;; Hardware stack levels used: 1
 23212 ;; This function calls:
 23213 ;;		Nothing
 23214 ;; This function is called by:
 23215 ;;		_ENVIA_CHAR
 23216 ;;		_LCD_CONFIG
 23217 ;;		_ENVIA_LCD_CMD
 23218 ;; This function uses a non-reentrant model
 23219 ;;
 23220                           
 23221                           	psect	text68
 23222   0170EA                     __ptext68:
 23223                           	callstack 0
 23224   0170EA                     _ENVIA_NIBBLE:
 23225                           	callstack 124
 23226                           
 23227                           ;incstack = 0
 23228                           ;ENVIA_NIBBLE@dato stored from wreg
 23229   0170EA  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
 23230   0170EC                     
 23231                           ;LCD.c: 126: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 127: {;LCD.c: 128:  LATD &= 0x
      +                          0F;
 23232   0170EC  0E0F               	movlw	15
 23233   0170EE  16C1               	andwf	193,f,c	;volatile
 23234                           
 23235                           ;LCD.c: 129:  dato &= 0xF0;
 23236   0170F0  0EF0               	movlw	240
 23237   0170F2  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
 23238                           
 23239                           ;LCD.c: 130:  LATD|= dato;
 23240   0170F4  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
 23241   0170F6  12C1               	iorwf	193,f,c	;volatile
 23242   0170F8                     
 23243                           ;LCD.c: 131:  LATDbits.LATD2 = 1;
 23244   0170F8  84C1               	bsf	193,2,c	;volatile
 23245   0170FA                     
 23246                           ;LCD.c: 132:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
 23247   0170FA  0E21               	movlw	33
 23248   0170FC                     u9927:
 23249   0170FC  2EE8               	decfsz	wreg,f,c
 23250   0170FE  D7FE               	bra	u9927
 23251   017100  0000               	nop	
 23252   017102                     
 23253                           ;LCD.c: 133:  LATDbits.LATD2 = 0;
 23254   017102  94C1               	bcf	193,2,c	;volatile
 23255   017104  0012               	return		;funcret
 23256   017106                     __end_of_ENVIA_NIBBLE:
 23257                           	callstack 0
 23258                           
 23259                           	psect	rparam
 23260   000001                     ___rparam_used  equ	1
 23261   000000                     ___param_bank   equ	0
 23262   000000                     __Lparam        equ	__Lrparam
 23263   000000                     __Hparam        equ	__Hrparam
 23264                           
 23265                           	psect	config
 23266                           
 23267                           ;Config register CONFIG1 @ 0x300000
 23268                           ;	External Oscillator Selection
 23269                           ;	FEXTOSC = OFF, Oscillator not enabled
 23270                           ;	Reset Oscillator Selection
 23271                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 23272   300000                     	org	3145728
 23273   300000  8C                 	db	140
 23274                           
 23275                           ;Config register CONFIG2 @ 0x300001
 23276                           ;	Clock out Enable bit
 23277                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 23278                           ;	PRLOCKED One-Way Set Enable bit
 23279                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 23280                           ;	Clock Switch Enable bit
 23281                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 23282                           ;	Fail-Safe Clock Monitor Enable bit
 23283                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 23284   300001                     	org	3145729
 23285   300001  FF                 	db	255
 23286                           
 23287                           ;Config register CONFIG3 @ 0x300002
 23288                           ;	MCLR Enable bit
 23289                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 23290                           ;	Power-up timer selection bits
 23291                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 23292                           ;	Multi-vector enable bit
 23293                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 23294                           ;	IVTLOCK bit One-way set enable bit
 23295                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 23296                           ;	Low Power BOR Enable bit
 23297                           ;	LPBOREN = OFF, Low-Power BOR disabled
 23298                           ;	Brown-out Reset Enable bits
 23299                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 23300   300002                     	org	3145730
 23301   300002  FF                 	db	255
 23302                           
 23303                           ;Config register CONFIG4 @ 0x300003
 23304                           ;	Brown-out Reset Voltage Selection bits
 23305                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 23306                           ;	ZCD Disable bit
 23307                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 23308                           ;	PPSLOCK bit One-Way Set Enable bit
 23309                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 23310                           ;	Stack Full/Underflow Reset Enable bit
 23311                           ;	STVREN = ON, Stack full/underflow will cause Reset
 23312                           ;	Low Voltage Programming Enable bit
 23313                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 23314                           ;	Extended Instruction Set Enable bit
 23315                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 23316   300003                     	org	3145731
 23317   300003  FF                 	db	255
 23318                           
 23319                           ;Config register CONFIG5 @ 0x300004
 23320                           ;	WDT Period selection bits
 23321                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 23322                           ;	WDT operating mode
 23323                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 23324   300004                     	org	3145732
 23325   300004  9F                 	db	159
 23326                           
 23327                           ;Config register CONFIG6 @ 0x300005
 23328                           ;	WDT Window Select bits
 23329                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 23330                           ;	WDT input clock selector
 23331                           ;	WDTCCS = SC, Software Control
 23332   300005                     	org	3145733
 23333   300005  FF                 	db	255
 23334                           
 23335                           ;Config register CONFIG7 @ 0x300006
 23336                           ;	Boot Block Size selection bits
 23337                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 23338                           ;	Boot Block enable bit
 23339                           ;	BBEN = OFF, Boot block disabled
 23340                           ;	Storage Area Flash enable bit
 23341                           ;	SAFEN = OFF, SAF disabled
 23342                           ;	Background Debugger
 23343                           ;	DEBUG = ON, Background Debugger enabled
 23344   300006                     	org	3145734
 23345   300006  DF                 	db	223
 23346                           
 23347                           ;Config register CONFIG8 @ 0x300007
 23348                           ;	Boot Block Write Protection bit
 23349                           ;	WRTB = OFF, Boot Block not Write protected
 23350                           ;	Configuration Register Write Protection bit
 23351                           ;	WRTC = OFF, Configuration registers not Write protected
 23352                           ;	Data EEPROM Write Protection bit
 23353                           ;	WRTD = OFF, Data EEPROM not Write protected
 23354                           ;	SAF Write protection bit
 23355                           ;	WRTSAF = OFF, SAF not Write Protected
 23356                           ;	Application Block write protection bit
 23357                           ;	WRTAPP = OFF, Application Block not write protected
 23358   300007                     	org	3145735
 23359   300007  FF                 	db	255
 23360                           
 23361                           ;Config register CONFIG10 @ 0x300009
 23362                           ;	PFM and Data EEPROM Code Protection bit
 23363                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 23364   300009                     	org	3145737
 23365   300009  FF                 	db	255
 23366                           tosu	equ	0x4FF
 23367                           tosh	equ	0x4FE
 23368                           tosl	equ	0x4FD
 23369                           stkptr	equ	0x4FC
 23370                           pclatu	equ	0x4FB
 23371                           pclath	equ	0x4FA
 23372                           pcl	equ	0x4F9
 23373                           tblptru	equ	0x4F8
 23374                           tblptrh	equ	0x4F7
 23375                           tblptrl	equ	0x4F6
 23376                           tablat	equ	0x4F5
 23377                           prodh	equ	0x4F4
 23378                           prodl	equ	0x4F3
 23379                           indf0	equ	0x4EF
 23380                           postinc0	equ	0x4EE
 23381                           postdec0	equ	0x4ED
 23382                           preinc0	equ	0x4EC
 23383                           plusw0	equ	0x4EB
 23384                           fsr0h	equ	0x4EA
 23385                           fsr0l	equ	0x4E9
 23386                           wreg	equ	0x4E8
 23387                           indf1	equ	0x4E7
 23388                           postinc1	equ	0x4E6
 23389                           postdec1	equ	0x4E5
 23390                           preinc1	equ	0x4E4
 23391                           plusw1	equ	0x4E3
 23392                           fsr1h	equ	0x4E2
 23393                           fsr1l	equ	0x4E1
 23394                           bsr	equ	0x4E0
 23395                           indf2	equ	0x4DF
 23396                           postinc2	equ	0x4DE
 23397                           postdec2	equ	0x4DD
 23398                           preinc2	equ	0x4DC
 23399                           plusw2	equ	0x4DB
 23400                           fsr2h	equ	0x4DA
 23401                           fsr2l	equ	0x4D9
 23402                           status	equ	0x4D8

Data Sizes:
    Strings     207
    Constant    197
    Data        1
    BSS         391
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK5           160    160     160
    BANK6           256    175     255
    BANK7           256      0     231
    BANK8           256      0      80
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write@data(COMRAM[1]), NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> main@buffer1(BANK6[16]), STR_13(CODE[7]), STR_15(CODE[8]), STR_16(CODE[10]), 
		 -> STR_17(CODE[7]), STR_18(CODE[6]), STR_19(CODE[7]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer1(BANK6[16]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer1(BANK6[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    i2c1_fsmStateTable	const PTR FTN()enum E17538[19] size(3) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_BUS_COLLISION(), I2C1_DO_BUS_ERROR(), I2C1_DO_IDLE(), 
		 -> I2C1_DO_RESET(), I2C1_DO_RX(), I2C1_DO_RX_ACK(), I2C1_DO_RX_EMPTY(), 
		 -> I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_SEND_ADR_WRITE(), 
		 -> I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_READ(), I2C1_DO_SEND_RESTART_WRITE(), I2C1_DO_SEND_STOP(), 
		 -> I2C1_DO_TX(), I2C1_DO_TX_ACK(), I2C1_DO_TX_EMPTY(), 

    I2C1_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Status$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write@data(COMRAM[1]), NULL(NULL[0]), 

    I2C1_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(3) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C1_Status$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> bufferBlock$data(COMRAM[2]), I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read1ByteRegister@returnValue$data(COMRAM[2]), 
		 -> I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_Read2ByteRegister@returnValue$data(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Write1ByteRegister@data$data(COMRAM[2]), I2C1_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write2ByteRegister@data$data(COMRAM[2]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write@data(COMRAM[1]), 
		 -> I2C1_Write@data$data(COMRAM[2]), NULL(NULL[0]), 

    I2C1_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C1_Write@data$data	PTR unsigned char  size(2) Largest target is 0

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    MovingAverage_Reset@filter	PTR struct . size(2) Largest target is 211
		 -> movement_detector(BANK7[211]), 

    MPU6050_DMP_GetData@quat	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    MPU6050_DMP_GetData@ypr	PTR struct . size(2) Largest target is 12
		 -> main@ypr(BANK6[12]), 

    MPU6050_ReadAll@data	PTR struct . size(2) Largest target is 43
		 -> MPU6050_Calibrate@data(COMRAM[43]), MPU6050_DMP_GetData@sensor_data(BANK6[43]), 

    MPU6050_ReadRegisters@data	PTR unsigned char  size(2) Largest target is 14
		 -> MPU6050_ReadAccel@data(COMRAM[6]), MPU6050_ReadAll@raw_data(BANK5[14]), MPU6050_ReadGyro@data(COMRAM[6]), MPU6050_ReadTemperature@data(COMRAM[2]), 

    NULL$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write@data(COMRAM[1]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK5[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK5[2]), 

    __rem_pio2f@y	PTR  size(2) Largest target is 4
		 -> cosf@y(BANK5[4]), sinf@y(BANK5[4]), 

    S132$0$0	PTR void  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write@data(COMRAM[1]), NULL(NULL[0]), 

    S132$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write@data(COMRAM[1]), NULL(NULL[0]), 

    S132$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(3) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S132$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C1_Read1ByteRegister@reg(COMRAM[1]), I2C1_Read1ByteRegister@returnValue(COMRAM[1]), I2C1_Read2ByteRegister@reg(COMRAM[1]), I2C1_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C1_ReadDataBlock@bufferBlock(COMRAM[4]), I2C1_ReadDataBlock@reg(COMRAM[1]), I2C1_Write1ByteRegister@data(COMRAM[1]), I2C1_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C1_Write2ByteRegister@data(COMRAM[2]), I2C1_Write2ByteRegister@reg(COMRAM[1]), I2C1_Write@data(COMRAM[1]), NULL(NULL[0]), 

    S2832$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer1(BANK6[16]), 

    S2832$source	PTR const unsigned char  size(2) Largest target is 0

    S604$data	PTR unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    sp__MPU6050_MovementToString	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[15]), STR_10(CODE[9]), STR_11(CODE[6]), STR_12(CODE[12]), 
		 -> STR_2(CODE[9]), STR_3(CODE[6]), STR_4(CODE[10]), STR_5(CODE[8]), 
		 -> STR_6(CODE[21]), STR_7(CODE[18]), STR_8(CODE[22]), STR_9(CODE[20]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK5[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> main@buffer1(BANK6[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK8[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_20(CODE[4]), STR_23(CODE[4]), 

    SW_I2C_ReadBlock@data	PTR unsigned char  size(2) Largest target is 14
		 -> MPU6050_ReadAccel@data(COMRAM[6]), MPU6050_ReadAll@raw_data(BANK5[14]), MPU6050_ReadGyro@data(COMRAM[6]), MPU6050_ReadTemperature@data(COMRAM[2]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK5[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[16]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK5[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK5[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[16]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[16]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK5[11]), 


Critical Paths under _main in COMRAM

    _efgtoa->___fldiv
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    _POS_CURSOR->_ENVIA_LCD_CMD
    _MPU6050_DMP_Init->_MPU6050_Init
    _MPU6050_Init->_MPU6050_TestConnection
    _MPU6050_WriteRegister->_SW_I2C_WriteRegister
    _SW_I2C_WriteRegister->_SW_I2C_WriteByte
    _MPU6050_TestConnection->_MPU6050_ReadRegister
    _MPU6050_ReadRegister->_SW_I2C_ReadRegister
    _SW_I2C_ReadRegister->_SW_I2C_ReadByte
    _MPU6050_Movement_Init->_MovingAverage_Reset
    _MPU6050_DMP_GetData->___fldiv
    ___fltol->___fladd
    ___cosdf->___fladd
    ___flge->___flmul
    _MPU6050_ReadAll->___fldiv
    _sqrtf->___fladd
    _atan2f->___fldiv
    _atanf->___fldiv
    _fabsf->___fldiv
    ___flsub->___fldiv
    ___fladd->___flmul
    ___flmul->___flneg
    ___fldiv->_sqrtf
    _MPU6050_ReadRegisters->_SW_I2C_ReadBlock
    _SW_I2C_ReadBlock->_SW_I2C_ReadByte
    _SW_I2C_Restart->_SW_I2C_Start
    _SW_I2C_Start->_SW_I2C_IsBusFree
    _SW_I2C_ReadByte->_SW_I2C_SendAck
    _SW_I2C_ReadByte->_SW_I2C_SendNack
    _LCD_init->_CURSOR_ONOFF
    _LCD_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    _main->_MPU6050_DMP_GetData
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    _MPU6050_DMP_GetData->_MPU6050_ReadAll
    _sinf->___rem_pio2f
    _cosf->___rem_pio2f
    ___sindf->___flsub
    ___rem_pio2f->___flsub
    ___rem_pio2f->_fabsf
    _MPU6050_ReadAll->_atan2f
    _atan2f->_atanf
    _atanf->___flsub
    _atanf->_fabsf
    _fabsf->___fldiv
    ___flsub->___fldiv

Critical Paths under _main in BANK6

    _main->_MPU6050_DMP_GetData

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                54    54      0  107389
                                            137 BANK6     38    38      0
                         _BORRAR_LCD
                    _ESCRIBE_MENSAJE
                    _I2C1_Initialize
                           _LCD_init
                _MPU6050_DMP_GetData
                   _MPU6050_DMP_Init
                         _POS_CURSOR
                             ___flge
                            ___flneg
                          _configuro
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12   12790
                                            109 BANK5     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   12585
                                            101 BANK5      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    10      6   12451
                                             86 BANK5     15     9      6
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     182
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   11521
                                             33 BANK5     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4      77
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     3      6     707
                                             16 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     331
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     232
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     146
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4      69
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             13 BANK5     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     411
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _MPU6050_DMP_Init                                     0     0      0    1098
                       _MPU6050_Init
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Init                                         2     2      0    1098
                                             13 COMRAM     2     2      0
              _MPU6050_Movement_Init
             _MPU6050_TestConnection
              _MPU6050_WriteRegister
 ---------------------------------------------------------------------------------
 (3) _MPU6050_WriteRegister                                2     1      1     438
                                              9 COMRAM     2     1      1
               _SW_I2C_WriteRegister
 ---------------------------------------------------------------------------------
 (4) _SW_I2C_WriteRegister                                 4     2      2     379
                                              5 COMRAM     4     2      2
                       _SW_I2C_Start
                        _SW_I2C_Stop
                   _SW_I2C_WriteByte
 ---------------------------------------------------------------------------------
 (3) _MPU6050_TestConnection                               1     1      0     520
                                             12 COMRAM     1     1      0
               _MPU6050_ReadRegister
 ---------------------------------------------------------------------------------
 (4) _MPU6050_ReadRegister                                 1     1      0     497
                                             11 COMRAM     1     1      0
                _SW_I2C_ReadRegister
 ---------------------------------------------------------------------------------
 (5) _SW_I2C_ReadRegister                                  4     3      1     468
                                              7 COMRAM     4     3      1
                    _SW_I2C_ReadByte
                     _SW_I2C_Restart
                       _SW_I2C_Start
                        _SW_I2C_Stop
                   _SW_I2C_WriteByte
 ---------------------------------------------------------------------------------
 (3) _MPU6050_Movement_Init                                0     0      0     140
                _MovingAverage_Reset
 ---------------------------------------------------------------------------------
 (4) _MovingAverage_Reset                                  5     3      2     140
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _MPU6050_DMP_GetData                                143   139      4   90795
                                            154 BANK5      6     2      4
                                              0 BANK6    137   137      0
                    _GetTimestamp_ms
                    _MPU6050_ReadAll
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                             _atan2f
                               _cosf
                               _sinf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sinf                                                26    22      4   18518
                                             54 BANK5     26    22      4
                            ___cosdf
                            ___fladd
                            ___flneg
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (2) _cosf                                                26    22      4   20667
                                             54 BANK5     26    22      4
                            ___cosdf
                            ___fladd
                            ___flneg
                            ___flsub
                        ___rem_pio2f
                            ___sindf
 ---------------------------------------------------------------------------------
 (3) ___sindf                                             32    28      4    4096
                                             21 BANK5     32    28      4
                            ___fladd
                            ___flmul
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___rem_pio2f                                         33    27      6    7346
                                             21 BANK5     33    27      6
                            ___fladd
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     234
                                             45 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___cosdf                                             28    24      4    4031
                                             45 COMRAM    28    24      4
                            ___fladd
                            ___flmul
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     260
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _MPU6050_ReadAll                                     46    44      2   25569
                                            108 BANK5     46    44      2
                    _GetTimestamp_ms
               _MPU6050_CombineBytes
              _MPU6050_ReadRegisters
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                             _atan2f
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sqrtf                                               41    37      4     733
                                             45 COMRAM    37    33      4
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _atan2f                                              41    33      8   15220
                                             67 BANK5     41    33      8
                            ___fladd
                            ___fldiv
                            ___flneg
                            ___flsub
                      ___fpclassifyf
                              _atanf
                              _fabsf
                              _sqrtf (ARG)
 ---------------------------------------------------------------------------------
 (3) _atanf                                               46    42      4    8608
                                             21 BANK5     46    42      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___flsub
                      ___fpclassifyf
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _fabsf                                                8     4      4      51
                                             13 BANK5      8     4      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     140
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2217
                                             13 BANK5      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2116
                                             29 COMRAM    16     8      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      79
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    1612
                                              4 COMRAM    25    17      8
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1199
                                             82 COMRAM    12     4      8
                                              0 BANK5     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _sqrtf (ARG)
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     360
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) _MPU6050_ReadRegisters                                4     1      3     859
                                             18 COMRAM     4     1      3
                   _SW_I2C_ReadBlock
 ---------------------------------------------------------------------------------
 (4) _SW_I2C_ReadBlock                                    11     7      4     778
                                              7 COMRAM    11     7      4
                    _SW_I2C_ReadByte
                     _SW_I2C_Restart
                       _SW_I2C_Start
                        _SW_I2C_Stop
                   _SW_I2C_WriteByte
 ---------------------------------------------------------------------------------
 (5) _SW_I2C_WriteByte                                     5     5      0     100
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (6) _SW_I2C_Restart                                       0     0      0      24
                       _SW_I2C_Start
                        _SW_I2C_Stop
 ---------------------------------------------------------------------------------
 (5) _SW_I2C_Stop                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _SW_I2C_Start                                         2     2      0      24
                                              1 COMRAM     2     2      0
                   _SW_I2C_IsBusFree
 ---------------------------------------------------------------------------------
 (6) _SW_I2C_IsBusFree                                     1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _SW_I2C_ReadByte                                      5     5      0     100
                                              2 COMRAM     5     5      0
                     _SW_I2C_SendAck
                    _SW_I2C_SendNack
 ---------------------------------------------------------------------------------
 (7) _SW_I2C_SendNack                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _SW_I2C_SendAck                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _MPU6050_CombineBytes                                 5     3      2      65
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _GetTimestamp_ms                                      2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     909
                                              4 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     236
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     263
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     205
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     205
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     205
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     310
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     205
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _I2C1_Initialize
   _LCD_init
     _BORRAR_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _MPU6050_DMP_GetData
     _GetTimestamp_ms
     _MPU6050_ReadAll
       _GetTimestamp_ms
       _MPU6050_CombineBytes
       _MPU6050_ReadRegisters
         _SW_I2C_ReadBlock
           _SW_I2C_ReadByte
             _SW_I2C_SendAck
             _SW_I2C_SendNack
           _SW_I2C_Restart
             _SW_I2C_Start
               _SW_I2C_IsBusFree
             _SW_I2C_Stop
           _SW_I2C_Start
           _SW_I2C_Stop
           _SW_I2C_WriteByte
       ___fladd
         ___flmul (ARG)
           ___flneg (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___fladd (ARG)
         ___flmul (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
         _sqrtf (ARG)
           ___fladd (ARG)
           ___flmul (ARG)
       ___flmul
       ___flneg
       ___flsub
         ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _atan2f
         ___fladd
         ___fldiv
         ___flneg
         ___flsub
         ___fpclassifyf
         _atanf
           ___fladd
           ___fldiv
           ___flmul
           ___flneg
           ___flsub
           ___fpclassifyf
           _fabsf
             ___fldiv (ARG)
         _fabsf
         _sqrtf (ARG)
       _sqrtf
     ___fladd
     ___fldiv
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flneg
     ___flsub
     ___xxtofl
     _atan2f
     _cosf
       ___cosdf
         ___fladd
         ___flmul
         ___flneg (ARG)
       ___fladd
       ___flneg
       ___flsub
       ___rem_pio2f
         ___fladd
         ___flmul
         ___flneg
         ___flsub
         ___fltol
           ___fladd (ARG)
           ___flmul (ARG)
         ___xxtofl
         _fabsf
       ___sindf
         ___fladd
         ___flmul
         ___flsub (ARG)
     _sinf
       ___cosdf
       ___fladd
       ___flneg
       ___rem_pio2f
       ___sindf
     _sqrtf
   _MPU6050_DMP_Init
     _MPU6050_Init
       _MPU6050_Movement_Init
         _MovingAverage_Reset
       _MPU6050_TestConnection
         _MPU6050_ReadRegister
           _SW_I2C_ReadRegister
             _SW_I2C_ReadByte
             _SW_I2C_Restart
             _SW_I2C_Start
             _SW_I2C_Stop
             _SW_I2C_WriteByte
       _MPU6050_WriteRegister
         _SW_I2C_WriteRegister
           _SW_I2C_Start
           _SW_I2C_Stop
           _SW_I2C_WriteByte
   _POS_CURSOR
     _ENVIA_LCD_CMD
   ___flge
   ___flneg
   _configuro
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRh         611      0       0      0.0%
BITBIGSFRlllh      471      0       0      0.0%
BITBIGSFR_1        256      0       0      0.0%
BITBANK36          256      0       0      0.0%
BANK36             256      0       0      0.0%
BITBANK35          256      0       0      0.0%
BANK35             256      0       0      0.0%
BITBANK34          256      0       0      0.0%
BANK34             256      0       0      0.0%
BITBANK33          256      0       0      0.0%
BANK33             256      0       0      0.0%
BITBANK32          256      0       0      0.0%
BANK32             256      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0      80     31.2%
BITBANK7           256      0       0      0.0%
BANK7              256      0     231     90.2%
BITBANK6           256      0       0      0.0%
BANK6              256    175     255     99.6%
BITBIGSFRlllll     173      0       0      0.0%
BITBANK5           160      0       0      0.0%
BANK5              160    160     160    100.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     94      95    100.0%
BITBIGSFRlh         12      0       0      0.0%
BITBIGSFRllllh       5      0       0      0.0%
BITBIGSFRllh         1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     821      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Jul 11 17:35:30 2025

                     ___fldiv@aexp 056C                       ___fldiv@bexp 056B  
                     ___fldiv@sign 0564    SW_I2C_WriteRegister@device_addr 0508  
                               _C0 FF00                                 _C1 FEFC  
                               _C2 FEF8                                 _C3 FEF4  
                               _S1 FEE0                                 _S2 FEDC  
                               _S3 FED8                                 _S4 FED4  
                               _pi FF2C             ??_MPU6050_ReadRegister 050C  
                    ENVIA_CHAR@aux 0503                                l155 70E8  
                              l700 711E                                l614 267E  
                              l720 6BEA                                l617 6B90  
                              l571 6670                                l725 7158  
                              l581 7136                                l911 5C8E  
                              l903 5C34                                l920 5CE8  
                              l592 03FC                                l923 7148  
                              l595 047E                                l587 0DBC  
                              l691 7090                                l860 5E38  
                              l861 5F4E                                l926 4ED2  
                              l694 7166                                l678 70B0  
                              l927 500E                                l928 4EE6  
                              l961 5068                                l945 4F9C  
                              l937 4F42                                l697 703E  
                              l877 5EF0                                l869 5E94  
                              l990 63E8                                l895 5BD8  
                              l978 513A                                _aT0 FF24  
                              _aT1 FF20                                _aT2 FF1C  
                              _aT3 FF18                                _aT4 FF14  
                              _pad 6AC2           GetTimestamp_ms@timestamp 06F9  
                      LEER_LCD@aux 0501                                wreg 04E8  
                     ?_CURSOR_HOME 0501               _I2C1_DO_RX_NACK_STOP 0000  
                     ___flmul@aexp 0516                       ___flmul@bexp 0517  
                     ___flmul@sign 0511                       ___flmul@temp 051C  
                     ___flmul@prod 0518                     ??_ENVIA_NIBBLE 0501  
          ??_MPU6050_ReadRegisters 0516                        main@buffer1 068B  
                     ___fltol@exp1 0537                     ENVIA_CHAR@dato 0502  
         _MPU6050_DMP_GetData$3470 063A           _MPU6050_DMP_GetData$3471 064A  
         _MPU6050_DMP_GetData$3463 0628           _MPU6050_DMP_GetData$3472 063E  
         _MPU6050_DMP_GetData$3480 0620           _MPU6050_DMP_GetData$3464 0604  
         _MPU6050_DMP_GetData$3473 0642           _MPU6050_DMP_GetData$3481 0624  
         _MPU6050_DMP_GetData$3465 0608           _MPU6050_DMP_GetData$3474 0646  
         _MPU6050_DMP_GetData$3466 060C           _MPU6050_DMP_GetData$3475 064E  
         _MPU6050_DMP_GetData$3467 062E           _MPU6050_DMP_GetData$3468 0632  
         _MPU6050_DMP_GetData$3476 0610           _MPU6050_DMP_GetData$3469 0636  
         _MPU6050_DMP_GetData$3477 0614           _MPU6050_DMP_GetData$3478 0618  
         _MPU6050_DMP_GetData$3479 061C                               l1002 6484  
                             l1020 6006                               l1012 5FAC  
                             l2001 4392                               l1028 6062  
                             l1060 6F7A                               l2004 4228  
                             l1029 6064                               l1061 6F7C  
                             l2005 4246                               l2101 2A08  
                             l2014 4354                               l2006 429E  
                             l1047 611A                               l1039 60C0  
                             l2007 428C                               l1215 6A4E  
                             l1232 716E                               l1056 6176  
                             l1072 6954                               l2041 5B7A  
                             l1065 69D4                               l1082 5E1C  
                             l2123 6582                               l1219 6A4E  
                             l2052 5B12                               l2045 5AB6  
                             l2109 2B06                               l2221 59C6  
                             l1270 6CE8                               l2038 5A1E  
                             l2070 2C3C                               l1255 6DD8  
                             l1087 5DA6                               l1280 6A86  
                             l1264 6FE0                               l2400 6C96  
                             l2304 17B4                               l1273 7104  
                             l1249 7010                               l2153 18F4  
                             l1282 6AC0                               l2250 55B2  
                             l1267 7176                               l2147 1F2E  
                             l2075 27E0                               l2067 2704  
                             l2307 114E                               l1276 6FAE  
                             l1380 706A                               l2237 499A  
                             l2501 6EDC                               l2309 0F94  
                             l2238 4B3A                               l2406 6D88  
                             l2262 6D38                               l2255 6F4A  
                             l2185 3634                               l1377 70CC  
                             l2337 1598                               l2353 673C  
                             l1642 68B0                               l2418 6806  
                             l2426 6E64                               l2099 2A3E  
                             l2363 520C                               l2380 6C40  
                             l1653 6380                               l2429 7178  
                             l2293 6B2E                               l2349 6734  
                             l2373 5380                               l1911 381E  
                             l1920 3AEA                               l1912 380C  
                             l2480 4770                               l1648 633A  
                             l1680 627C                               l2448 314A  
                             l1657 6F14                               l1913 37D2  
                             l2289 6AD8                               l2386 57C8  
                             l2491 469A                               l2484 4578  
                             l1925 39C6                               l2493 4708  
                             l2389 570C                               l1944 3AAE  
                             l1928 3938                               l2488 45D6  
                             l7001 6F68                               l1937 3A06  
                             l1953 6E20                               l1970 4CF4  
                             l1938 39F4                               l7003 6F76  
                             l7021 5E1E                               l1965 4ECC  
                             ?_pad 0511                               l7031 5E58  
                             l7023 5E32                               l7103 5C02  
                             l1967 4D30                               l1976 4D76  
                             l7201 6084                               l7041 5EA8  
                             l7121 5CAC                               l7105 5C3A  
                             l1977 4D94                               l8001 6952  
                             l1978 4DEC                               l7211 60D2  
                             l7051 5EF8                               l7043 5EB4  
                             l7027 5E40                               l7107 5C46  
                             l7115 5C5C                               l1979 4DDA  
                             l8011 4B5A                               l7221 6122  
                             l7213 60DE                               l7053 5F04  
                             l7061 5F1A                               l7029 5E4C  
                             l7037 5E62                               l7117 5C94  
                             l7109 5C52                               l8101 4DA4  
                             l8013 4B6A                               l8021 4B92  
                             l8005 4B3C                               l1997 4032  
                             l7151 5F70                               l7223 612E  
                             l7231 6144                               l7207 608E  
                             l7055 5F10                               l7063 5F4C  
                             l7039 5E9C                               l7119 5CA0  
                             l7127 5CB6                               l8111 4E16  
                             l8103 4DD2                               l8031 4BBE  
                             l8023 4BA2                               l8015 4B7A  
                             l8007 4B4A                               l7161 5FBE  
                             l7145 5F50                               l7225 613A  
                             l7209 60C6                               l7049 5EBE  
                             l7081 5B84                               l8121 4E8E  
                             l8113 4E40                               l8033 4BCE  
                             l8041 4BF6                               l8025 4BA8  
                             l8017 4B8A                               l8009 4B58  
                             l8201 40F8                               l9001 1740  
                             l7171 600E                               l7163 5FCA  
                             l7147 5F58                               l7219 60E8  
                             l7083 5B90                               l7091 5BA6  
                             l7403 4F6A                               l8131 4EC0  
                             l8123 4EA6                               l8107 4DFC  
                             l8115 4E44                               l8051 4C38  
                             l8043 4C06                               l8035 4BDE  
                             l8027 4BAE                               l8019 4B8C  
                             l8211 415A                               l8203 4104  
                             l7251 676C                               l9011 1794  
                             l9003 174E                               l7173 601A  
                             l7181 6030                               l7149 5F64  
                             l7157 5F7A                               l7501 638E  
                             l7093 5BE0                               l7085 5B9C  
                             l7421 4FFE                               l7405 4FA4  
                             l8133 4EC2                               l8125 4EA8  
                             l8117 4E5E                               l8109 4E08  
                             l8045 4C1C                               l8037 4BEE  
                             l8029 4BBC                               l8221 41F0  
                             l8213 4166                               l8205 4114  
                             l8141 3F6E                               l9101 4518  
                             l8301 6308                               l7253 678A  
                             l7245 673E                               l9005 1766  
                             l9021 66DC                               l7175 6026  
                             l7159 5FB2                               l7503 6394  
                             l7095 5BEC                               l7079 5B7C  
                             l7423 5014                               l7407 4FB0  
                             l7415 4FC6                               l8127 4EAC  
                             l8119 4E74                               l8071 4CBA  
                             l8063 4C70                               l8047 4C2C  
                             l8055 4C4C                               l8039 4BF0  
                             l8231 4256                               l8223 420E  
                             l8215 4182                               l8207 412E  
                             l8151 3FAA                               l8143 3F7A  
                             l9111 45B8                               l9103 452C  
                             l8303 631A                               l7255 67C0  
                             l7247 6750                               l9007 1776  
                             l9023 66FA                               l9015 6672  
                             l7169 5FD4                               l7521 6400  
                             l7505 63A0                               l7513 63B6  
                             l7097 5BF8                               l7425 5020  
                             l7433 5036                               l7409 4FBC  
                             l7417 4FF8                               l8129 4EBA  
                             l8081 4CFE                               l8073 4CC0  
                             l8065 4C8A                               l8057 4C5C  
                             l8049 4C34                               l8241 42C8  
                             l8233 4284                               l8225 4218  
                             l8217 41AC                               l8209 413E  
                             l8161 3FDC                               l8153 3FBA  
                             l8145 3F88                               l8313 6EDE  
                             l7601 3732                               l9121 4662  
                             l9113 45C6                               l9105 4536  
                             l8305 6328                               l8321 6178  
                             l9041 706E                               l7249 6762  
                             l8401 6AF8                               l9009 178C  
                             l9025 6708                               l9017 667A  
                             l7195 6066                               l7523 640C  
                             l7531 6422                               l7515 63F6  
                             l7507 63AC                               l7451 50CC  
                             l7435 506E                               l7427 502C  
                             l7419 4FFC                               l8091 4D56  
                             l8083 4D1C                               l8075 4CD0  
                             l8067 4C9A                               l8059 4C5C  
                             l8251 433E                               l8243 42F2  
                             l8227 4226                               l8219 41E2  
                             l8171 401C                               l8163 3FEA  
                             l8155 3FC0                               l8147 3F8A  
                             l8315 6EF4                               l7611 3746  
                             l7603 3736                               l9203 291A  
                             l9123 46AA                               l9115 45F0  
                             l9107 4542                               l8307 6378  
                             l8331 61CE                               l8323 618E  
                             l9051 6B48                               l9035 7092  
                             l8411 6C42                               l8403 6AFC  
                             l9019 66A2                               l7197 606C  
                             l7541 647E                               l7525 6418  
                             l7533 6454                               l7517 63F8  
                             l7365 7138                               l7453 50D2  
                             l7437 507A                               l7445 5090  
                             l7381 4EEE                               l7373 4ED0  
                             l8093 4D5C                               l8085 4D1E  
                             l8077 4CE4                               l8069 4CAA  
                             l8261 4378                               l8253 434E  
                             l8237 42AE                               l8245 42F6  
                             l8229 4238                               l8181 4066  
                             l8173 4022                               l8165 3FEC  
                             l8157 3FD0                               l8149 3F9A  
                             l8317 6F04                               l7701 398C  
                             l7621 375A                               l7613 374A  
                             l7605 373A                               l9213 2968  
                             l9205 2940                               l9125 46B4  
                             l9117 4610                               l9109 4550  
                             l8309 637E                               l8333 61DE  
                             l9301 47A8                               l9061 6B84  
                             l9053 6B54                               l9045 6B30  
                             l9037 709A                               l8501 696E  
                             l8421 55D4                               l8413 6C50  
                             l8405 6B1A                               l9063 714A  
                             l7199 6078                               l7543 6482  
                             l7535 6456                               l7519 63FA  
                             l7367 713C                               l7455 50DE  
                             l7463 50F4                               l7439 5086  
                             l7447 50C2                               l7383 4EFA  
                             l7391 4F10                               l8095 4D66  
                             l8087 4D2E                               l8079 4CF2  
                             l8255 4358                               l8263 437E  
                             l8247 4310                               l8239 42BA  
                             l8191 40B6                               l8183 4072  
                             l8175 4042                               l8167 3FFC  
                             l8159 3FD6                               l7703 399A  
                             l7711 39B8                               l7631 376E  
                             l7623 375E                               l7615 374E  
                             l7607 373E                               l8271 6DEC  
                             l9231 2A2A                               l9223 2990  
                             l9151 27C2                               l9143 2724  
                             l9135 2680                               l9127 46CA  
                             l9119 4624                               l9071 43A4  
                             l8343 6208                               l8335 61E2  
                             l8327 61A2                               l9311 487E  
                             l9303 47AA                               l9055 6B60  
                             l9047 6B36                               l8431 56C0  
                             l8423 562C                               l8415 6C64  
                             l8407 6EA2                               l9065 7150  
                             l7537 6466                               l7369 7144  
                             l7457 50EA                               l7465 5126  
                             l7449 50CA                               l7393 4F48  
                             l7385 4F06                               l8601 5DEE  
                             l8097 4D74                               l8089 4D40  
                             l8265 4382                               l8257 4368  
                             l8249 4324                               l8193 40C2  
                             l8185 407C                               l8177 4052  
                             l8169 400C                               l7721 3A22  
                             l7713 39D6                               l7705 39A2  
                             l7641 37E0                               l7625 3762  
                             l7617 3752                               l7609 3742  
                             l7633 3772                               l7561 3652  
                             l9241 2ADE                               l9217 297C  
                             l9209 2954                               l9225 29B6  
                             l9161 2808                               l9153 27C4  
                             l9145 2742                               l9137 26A6  
                             l9129 46E0                               l9073 43D8  
                             l8361 626C                               l8353 6230  
                             l8345 6212                               l8337 61F0  
                             l8329 61CC                               l9313 48D6  
                             l9305 47C8                               l9057 6B6C  
                             l9049 6B46                               l8505 6974  
                             l8281 6874                               l8441 57A8  
                             l8433 56FC                               l8425 5640  
                             l8409 6EAA                               l7539 6476  
                             l7395 4F54                               l7379 4EE0  
                             l8603 5E02                               l8099 4D86  
                             l8259 4376                               l8195 40CE  
                             l8187 4092                               l7731 3A8C  
                             l7723 3A30                               l7715 39EC  
                             l7707 39A6                               l7651 380A  
                             l7643 37EC                               l7635 379E  
                             l7627 3766                               l7619 3756  
                             l7563 3662                               l7571 368A  
                             l7555 3636                               l8371 650C  
                             l9251 2BB0                               l9243 2B1A  
                             l9235 2A4C                               l9227 29EC  
                             l9171 2858                               l9139 26CC  
                             l9091 4498                               l9075 4406  
                             l9083 4438                               l8291 627E  
                             l8355 623C                               l8347 621C  
                             l9331 4AB4                               l9315 4938  
                             l9307 47EC                               l9323 49A6  
                             l9059 6B78                               l8515 6996  
                             l8507 697E                               l8283 6884  
                             l8275 6808                               l8443 57B8  
                             l8427 564E                               l8435 5730  
                             l8419 55B4                               l8451 6D5A  
                             l8621 6A5A                               l8613 6A50  
                             l7493 6384                               l7397 4F60  
                             l8605 5E04                               l8541 5CEC  
                             l8701 5B6A                               l8197 40DC  
                             l8189 409E                               l7741 3ACA  
                             l7733 3AAC                               l7725 3A6A  
                             l7709 39B6                               l7661 3860  
                             l7653 382C                               l7645 37F0  
                             l7637 37BA                               l7629 376A  
                             l7581 36BA                               l7573 369A  
                             l7565 3672                               l7557 3642  
                             l8269 6DDA                               l8373 6518  
                             l8365 6486                               l9237 2A82  
                             l9229 2A16                               l9181 28AA  
                             l9173 2866                               l9157 27F4  
                             l9149 276A                               l9093 44A6  
                             l9085 4456                               l9077 4414  
                             l9069 4394                               l9501 219A  
                             l8293 62AC                               l8357 624C  
                             l9333 4B0C                               l9325 49CA  
                             l9317 4948                               l9309 4858  
                             l8525 69B2                               l8517 699E  
                             l8509 698E                               l8285 68A8  
                             l8277 6836                               l8437 576C  
                             l8453 6D5E                               l8631 6A72  
                             l8623 6A62                               l8615 6A54  
                             l9271 6F86                               l9263 7108  
                             l8607 5E16                               l8551 5D1A  
                             l8543 5CFE                               l8199 40E8  
                             l7743 3AD8                               l7735 3ABC  
                             l7719 3A16                               l7727 3A6C  
                             l7671 389A                               l7663 386E  
                             l7655 383C                               l7647 37FE  
                             l7639 37CA                               l7591 36FA  
                             l7583 36C8                               l7575 36A0  
                             l7567 3682                               l7559 3650  
                             l8383 657A                               l8367 64A6  
                             l8391 6F3A                               l8711 17DE  
                             l9247 2B42                               l9239 2A96  
                             l9175 287A                               l9167 281C  
                             l9087 4484                               l9079 4424  
                             l9511 22D0                               l9503 21AC  
                             l8295 62BC                               l8359 625C  
                             l9335 4B24                               l9327 4A36  
                             l9319 497C                               l8535 69CE  
                             l8527 69BA                               l8287 68AE  
                             l8279 6846                               l8439 5780  
                             l8455 6D6A                               l8447 6D3A  
                             l7751 6E2E                               l9351 5184  
                             l9343 513C                               l8641 6A94  
                             l8633 6A7A                               l8625 6A66  
                             l8617 6A56                               l9281 6F96  
                             l9273 6F88                               l8609 5E1A  
                             l8561 5D4A                               l8553 5D2A  
                             l8545 5D0E                               l7745 3ADA  
                             l7737 3AC2                               l7729 3A7C  
                             l7681 3906                               l7673 389C  
                             l7665 387C                               l7649 3800  
                             l7593 36FC                               l7585 36CA  
                             l7577 36B2                               l7569 3684  
                             l8369 64E4                               l8377 6524  
                             l8721 1888                               l8713 17F4  
                             l8705 17B6                               l9257 2C1C  
                             l9193 28F2                               l9185 28CA  
                             l9169 2842                               l9521 2570  
                             l9513 234E                               l9505 21C0  
                             l8297 62EA                               l9329 4A5C  
                             l9601 3480                               l8481 6BAE  
                             l8537 69D2                               l8449 6D4E  
                             l8457 6D6E                               l7753 6E40  
                             l8801 0DE4                               l9361 51FC  
                             l9353 51AC                               l9345 5164  
                             l8651 70EC                               l8643 6A9E  
                             l8635 6A7C                               l8627 6A68  
                             l8619 6A58                               l9283 6F9C  
                             l9275 6F90                               l9267 6F80  
                             l7499 638A                               l9259 7014  
                             l7739 3AC4                               l7691 395E  
                             l7683 3908                               l7675 38A6  
                             l7667 3888                               l7659 3850  
                             l7587 36DA                               l7595 3702  
                             l7579 36B4                               l8379 6536  
                             l8387 6F16                               l8723 189C  
                             l8715 181A                               l8707 17C6  
                             l9179 288E                               l9099 44C4  
                             l9531 267C                               l9523 259C  
                             l9515 2406                               l9507 21D4  
                             l8299 62FA                               l8491 6BDA  
                             l9451 65D4                               l9443 659E  
                             l7755 6E44                               l8395 6AC2  
                             l8811 0E3A                               l8803 0E08  
                             l9371 5256                               l9363 5204  
                             l9355 51BA                               l9347 5172  
                             l8653 70F8                               l8645 6AA8  
                             l8637 6A88                               l8629 6A70  
                             l9285 6FA2                               l9277 6F92  
                             l9269 6F82                               l8557 5D30  
                             l8549 5D14                               l8661 59DA  
                             l7685 3918                               l7669 388C  
                             l7677 38AC                               l7597 3712  
                             l7589 36EA                               l8389 6F36  
                             l8741 194E                               l8733 18FA  
                             l8717 182E                               l8709 17DC  
                             l9197 2906                               l9189 28DE  
                             l9525 2636                               l9517 2448  
                             l9509 2252                               l9293 5382  
                             l9621 353E                               l9613 3504  
                             l9541 3174                               l9701 2F3E  
                             l8493 715C                               l9437 6584  
                             l7749 6E22                               l8397 6AD0  
                             l8901 11DC                               l8821 0E8A  
                             l8813 0E46                               l8805 0E12  
                             l9381 52F4                               l9373 528A  
                             l9357 51D6                               l9349 5180  
                             l8655 70FA                               l8639 6A90  
                             l9287 6FA8                               l9279 6F94  
                             l8567 5D52                               l8559 5D3A  
                             l8671 5A58                               l8663 59E8  
                             l7695 3972                               l7679 38D2  
                             l7687 3928                               l7599 3724  
                             l8751 1A90                               l8743 19F2  
                             l8735 191E                               l8719 1876  
                             l8727 18C4                               l9527 2652  
                             l9519 24AE                               l9631 35CA  
                             l9623 3566                               l9615 351A  
                             l9607 34CC                               l9543 3192  
                             l9535 314C                               l9711 2FBE  
                             l8487 6BB0                               l8479 6B92  
                             l7951 68B4                               l9463 6610  
                             l9439 6598                               l8399 6AE4  
                             l8911 12C4                               l8903 11E4  
                             l8831 0EBE                               l8823 0E8E  
                             l8815 0E4E                               l8807 0E1A  
                             l9367 5212                               l9359 51E6  
                             l8657 7102                               l8649 6AAE  
                             l6993 6F4C                               l8577 5D6E  
                             l8569 5D5A                               l8681 5AAC  
                             l8673 5A60                               l8665 5A2E  
                             l7697 397C                               l7689 394E  
                             l8761 1BD4                               l8753 1B34  
                             l8745 19F6                               l8737 1936  
                             l8729 18DA                               l9529 266C  
                             l9289 57CA                               l9297 4772  
                             l9633 35EE                               l9617 352A  
                             l9561 3268                               l9545 31A8  
                             l9553 31E4                               l9537 315C  
                             l9721 3040                               l9713 2FF2  
                             l9641 2C3E                               l8489 6BD8  
                             l7961 68DA                               l7953 68BA  
                             l8497 6958                               l9481 666E  
                             l9457 65F2                               l9449 65BC  
                             l8921 1382                               l8913 12F8  
                             l8905 11F4                               l8841 0F1A  
                             l8825 0E94                               l8809 0E2A  
                             l8817 0E52                               l9377 52BE  
                             l9369 5232                               l9393 5354  
                             l9801 6BEC                               l9811 70CE  
                             l6995 6F50                               l8587 5D88  
                             l8579 5D74                               l8691 5B22  
                             l8683 5AE8                               l8675 5A6C  
                             l8667 5A44                               l8659 59CA  
                             l7699 398A                               l8771 1D44  
                             l8763 1C2C                               l8755 1B38  
                             l8739 194C                               l8747 1A76  
                             l9491 1F58                               l9299 4792  
                             l9627 358E                               l9571 32E8  
                             l9563 329C                               l9555 3202  
                             l9539 3172                               l9707 2F76  
                             l9651 2C9A                               l9643 2C4E  
                             l7971 68FA                               l7963 68EA  
                             l7955 68CA                               l8499 695E  
                             l9475 664C                               l8931 141E  
                             l8923 1398                               l8907 1208  
                             l8915 12FE                               l8843 0F20  
                             l8827 0E9C                               l8819 0E78  
                             l8835 0EDE                               l9387 5326  
                             l9379 52D4                               l9803 6BF8  
                             l9813 70E0                               l6997 6F58  
                             l8597 5DAC                               l8589 5D92  
                             l8693 5B26                               l8685 5AF4  
                             l8677 5A9E                               l8781 1E3C  
                             l8773 1D54                               l8765 1C84  
                             l8749 1A8C                               l8757 1B6C  
                             l9493 1F94                               l9485 1F30  
                             l9573 331C                               l9557 3220  
                             l9549 31BC                               l9733 30C8  
                             l9725 3054                               l9709 2F86  
                             l9717 301A                               l9661 2D12  
                             l9653 2CAE                               l9645 2C64  
                             l7981 6914                               l7949 68B4  
                             l9477 6650                               l9469 662E  
                             l8933 1474                               l8941 14C6  
                             l8925 13CA                               l8917 131C  
                             l8909 126C                               l8861 0FAA  
                             l8845 0F28                               l8837 0F04  
                             l8853 0F44                               l8829 0EB4  
                             l9389 5342                               l9805 6C16  
                             l9815 70E2                               l9751 6FFA  
                             l6999 6F5A                               l8599 5DD6  
                             l8695 5B4A                               l8687 5B02  
                             l8679 5AA0                               l8783 1E90  
                             l8775 1DAC                               l8767 1CB8  
                             l8759 1BA0                               l9495 200E  
                             l9487 1F52                               l9639 3616  
                             l9591 3414                               l9559 3230  
                             l9583 3390                               l9727 307C  
                             l9743 312C                               l9719 3030  
                             l9663 2D22                               l9671 2D92  
                             l9647 2C66                               l9911 0000  
                             l7991 6932                               l7959 68D0  
                             l9479 6668                               l8951 14F6  
                             l8943 14D6                               l8935 147A  
                             l8927 13DA                               l8919 1350  
                             l8871 10A0                               l8863 0FDE  
                             l8855 0F5E                               l8839 0F16  
                             l9807 6C36                               l9761 6FBA  
                             l9817 70E4                               l9745 7168  
                             l9753 700A                               l8697 5B5A  
                             l8689 5B20                               l8785 1EC4  
                             l8769 1D10                               l9497 208C  
                             l9593 3448                               l9585 33AE  
                             l9569 32D8                               l9737 30F0  
                             l9729 30A0                               l9681 2E4A  
                             l9673 2DC6                               l9665 2D56  
                             l9649 2C84                               l9657 2CD6  
                             l9921 005A                               l9913 000C  
                             l7969 68F2                               l9905 7120  
                             l8961 15C8                               l8953 156E  
                             l8945 14DE                               l8937 14AE  
                             l8929 13EA                               l8881 1156  
                             l8873 10D4                               l8865 101C  
                             l9771 6FCE                               l9763 6FC2  
                             l9755 6FB2                               l9819 70E6  
                             l9747 6FE4                               l8699 5B68  
                             l8787 1F18                               l8779 1DE4  
                             l9499 210A                               l9587 33CC  
                             l9579 3344                               l9691 2EF6  
                             l9683 2E92                               l9659 2CF4  
                             l9931 0228                               l9923 006E  
                             l7979 690E                               l9907 7132  
                             l8971 15EE                               l8963 15CC  
                             l8955 158E                               l8947 14E2  
                             l8939 14C2                               l8891 118A  
                             l8883 1166                               l8875 10DC  
                             l8867 104E                               l8859 0FA4  
                             l8795 0DBE                               l9773 6FD4  
                             l9765 6FC4                               l9757 6FB4  
                             l9749 6FF4                               l9781 6C9C  
                             l9589 33DC                               l9693 2F06  
                             l9677 2DEE                               l9941 03B4  
                             l9933 024C                               l9925 00FE  
                             l9917 003A                               l7989 6928  
                             l8981 1622                               l8973 15F4  
                             l8965 15D2                               l8957 15AA  
                             l8949 14EA                               l8893 119C  
                             l8885 1172                               l8869 108C  
                             l8797 0DD2                               l9775 6FDA  
                             l9767 6FC6                               l9759 6FB8  
                             l9791 6CCA                               l9783 6CA2  
                             l9599 3470                               l9679 2DFE  
                             l9687 2EBA                               l9951 0564  
                             l9943 043A                               l9935 0280  
                             l9927 0132                               l7999 6946  
                             l8983 1628                               l8967 15DA  
                             l8959 15B8                               l8975 15FA  
                             l8991 16C0                               l8895 11AA  
                             l8887 117C                               l8879 111C  
                             l8799 0DE0                               STR_1 FF91  
                             STR_2 FFBF                               l9769 6FC8  
                             l9777 7170                               l9793 6CD0  
                             l9785 6CB0                               l9689 2ED8  
                             l9961 0756                               l9953 05FE  
                             l9937 0340                               l9929 0198  
                             l9945 04B8                               l8993 16DE  
                             l8985 1680                               l8977 160C  
                             l8969 15EA                               l8897 11C2  
                             l8889 1184                               STR_3 FFF1  
                             STR_4 FFAC                               l9795 6CD6  
                             l9787 6CBE                               l9779 6C98  
                             l9971 089E                               l9963 077A  
                             l9955 063A                               l9947 04CC  
                             l9939 0398                               l8995 16FA  
                             l8987 16B4                               l8979 161E  
                             l8899 11D4                               STR_5 FFC8  
                             STR_6 FF46                               l9797 6CDC  
                             l9789 6CC4                               l9981 0A8C  
                             l9973 08F6                               l9965 07D2  
                             l9957 06FE                               l9949 050C  
                             l8997 1702                               l8989 16BC  
                             STR_7 FF6F                               STR_8 FF30  
                             l9799 6CE2                               l9991 0BEA  
                             l9983 0AC0                               l9975 091A  
                             l9967 0856                               l9959 0732  
                             l8999 1710                               STR_9 FF5B  
                             l9993 0C0E                               l9985 0AE4  
                             l9977 093E                               l9969 087A  
                             l9995 0C32                               l9987 0B08  
                             l9979 0962                               l9997 0C8A  
                             l9989 0B60                               l9999 0CAE  
                             _LATD 04C1                               u5000 383C  
                             u5001 3838                               u5010 386E  
                             u5011 386A                               u5100 39B6  
                             u5020 387C                               u5101 39B2  
                             u5021 3878                               u5110 39C6  
                             u5030 389A                               u5111 39C2  
                             u5031 3896                               u5200 3AAC  
                             u5120 39D6                               u5040 38D2  
                             u6000 625C                               u5201 3AA8  
                             u5121 39D2                               u5041 38CE  
                             u6001 6258                               u5210 3ABC  
                             u5130 39EC                               u5050 3918  
                             u6010 64C6                               u5211 3AB8  
                             u5131 39E8                               u5051 3914  
                             u5220 3AD8                               u5140 3A02  
                             u5060 394E                               u6020 64E4  
                             u6100 6EDC                               u5221 3AD4  
                             u5141 39FE                               u5061 394A  
                             u6021 64E0                               u6101 6ED8  
                             u5150 3A16                               u5070 395E  
                             u6030 650C                               u6110 6C50  
                             u5230 6E64                               u5151 3A12  
                             u5071 395A                               u6031 6508  
                             u6015 64BC                               u6111 6C4C  
                             u5231 6E60                               u5160 3A30  
                             u5080 398A                               u6040 6536  
                             u5400 690A                               u6200 576C  
                             u6120 55FE                               u7000 66A2  
                             u5161 3A2C                               u5081 3986  
                             u6041 6532                               u5401 6906  
                             u6201 5768                               u7001 669E  
                             u5170 3A6A                               u5090 399A  
                             u5410 6924                               u6210 57A8  
                             u6130 562C                               u7010 6734  
                             u5171 3A66                               u5091 3996  
                             u5411 6920                               u6211 57A4  
                             u6131 5628                               u7011 6730  
                             u4620 6F68                               u5500 4C5C  
                             u5180 3A7C                               u6060 6570  
                             u7100 4456                               u5420 6942  
                             u6140 564E                               u6220 6D88  
                             u4621 6F64                               u5501 4C58  
                             u5181 3A78                               u6061 656A  
                             u7101 4452                               u5421 693E  
                             u6141 564A                               u6125 55F4  
                             u6221 6D84                               u4630 6F76  
                             u5510 4CD0                               u5430 4B58  
                             u5190 3A8C                               u6070 6572  
                             u7110 4484                               u6310 6BEA  
                             u7030 70AE                               u4631 6F72  
                             u5511 4CCC                               u5431 4B54  
                             u5191 3A88                               u6055 6548  
                             u7111 4480                               u6311 6BE6  
                             u7031 70A8                               u8000 6DC0  
                             u4800 513A                               u6400 5D6A  
                             u5600 4DE8                               u5520 4CF2  
                             u5440 4B6A                               u7120 44A6  
                             u7040 70B0                               u6320 696E  
                             u6160 56BC                               u6080 6AD0  
                             u6401 5D66                               u5601 4DE4  
                             u5521 4CEE                               u5441 4B66  
                             u7121 44A2                               u6321 696A  
                             u6161 56B8                               u6081 6ACC  
                             u8010 6DD8                               u4810 63F6  
                             u4650 5E32                               u6410 5D84  
                             u5610 4DFC                               u5530 4D1C  
                             u5450 4B7A                               u7210 26A6  
                             u6330 698E                               u7050 708E  
                             u6170 56E0                               u6090 6B1A  
                             u8011 6DD4                               u4811 63F2  
                             u4651 5E2E                               u6411 5D80  
                             u5611 4DF8                               u5531 4D18  
                             u5451 4B76                               u7211 26A2  
                             u6331 698A                               u7051 7088  
                             u6155 5662                               u6091 6B16  
                             u4820 6466                               u6420 5DA2  
                             u6500 5AE4                               u5620 4E16  
                             u5540 4D40                               u5460 4BBC  
                             u5700 3FFC                               u4900 36EA  
                             u7300 28C6                               u7220 26CC  
                             u7140 4518                               u5380 68CA  
                             u6340 69AE                               u7060 7090  
                             u6180 56FC                               u6156 566C  
                             u4660 6750                               u4821 6462  
                             u6421 5D9E                               u6501 5AE0  
                             u5621 4E12                               u5541 4D3C  
                             u5461 4BB8                               u5701 3FF8  
                             u4901 36E6                               u7301 28C2  
                             u7221 26C8                               u7205 474C  
                             u7141 4514                               u5381 68C6  
                             u6341 69AA                               u6181 56F8  
                             u6157 567C                               u4661 674C  
                             u4830 6476                               u6430 5DD6  
                             u6510 5B02                               u5630 4E5E  
                             u5550 4D56                               u5470 4BCE  
                             u5710 400C                               u4910 3724  
                             u7310 29EC                               u7230 2742  
                             u7150 4550                               u7070 43D8  
                             u5390 68EA                               u6350 69CA  
                             u6190 5750                               u4670 6762  
                             u8007 6DB6                               u4831 6472  
                             u6431 5DD2                               u6511 5AFE  
                             u5631 4E5A                               u5551 4D52  
                             u5471 4BCA                               u5711 4008  
                             u4911 3720                               u7311 29E8  
                             u7231 273E                               u7151 454C  
                             u7135 44D8                               u7071 43D4  
                             u5391 68E6                               u6351 69C6  
                             u6175 56D6                               u4671 675E  
                             u6440 5E16                               u6360 5CFE  
                             u6520 5B12                               u5640 4E8E  
                             u5560 4D74                               u5480 4BDE  
                             u5800 42AE                               u5720 4042  
                             u4920 3732                               u4840 3650  
                             u6600 1888                               u7320 2A08  
                             u7240 278A                               u7160 45C6  
                             u7136 44E2                               u7080 4406  
                             u7400 47C8                               u4680 678A  
                             u9000 3CDC                               u6441 5E12  
                             u6361 5CFA                               u6521 5B0E  
                             u5641 4E8A                               u5561 4D70  
                             u5481 4BDA                               u5801 42AA  
                             u5721 403E                               u4921 372E  
                             u4841 364C                               u6601 1884  
                             u7321 2A04                               u7161 45C2  
                             u7137 44F2                               u7081 4402  
                             u7401 47C4                               u4681 6786  
                             u9001 3CD8                               u6450 6AC0  
                             u4770 4EE0                               u6370 5D0E  
                             u6530 5B20                               u5650 4EBA  
                             u5570 4D94                               u5490 4C1C  
                             u5810 42C8                               u5730 4052  
                             u4930 379E                               u4850 3662  
                             u6610 18DA                               u7330 2A16  
                             u7250 27B4                               u7170 4662  
                             u7090 4414                               u7410 4948  
                             u4690 67C0                               u9010 3D0E  
                             u6451 6ABC                               u4771 4EDC  
                             u6371 5D0A                               u6531 5B1C  
                             u5651 4EB6                               u5571 4D90  
                             u5491 4C18                               u5811 42C4  
                             u5731 404E                               u4931 379A  
                             u4851 365E                               u6611 18D6  
                             u7331 2A12                               u7171 465E  
                             u7091 4410                               u7411 4944  
                             u6195 5746                               u4691 67BC  
                             u9011 3D0A                               u4780 500E  
                             u6380 5D2A                               u6540 5B5A  
                             u6460 59DA                               u5580 4DA4  
                             u5820 4310                               u5740 41CC  
                             u5660 3F88                               u4940 37B6  
                             u4860 3672                               u6620 18F0  
                             u7340 2A4C                               u7260 27DC  
                             u7180 46CA                               u5900 6308  
                             u7420 4B36                               u7500 6598  
                             u6700 0E3A                               u9100 3EF8  
                             u9020 3D40                               u4781 500A  
                             u6381 5D26                               u6541 5B56  
                             u6461 59D6                               u5581 4DA0  
                             u5821 430C                               u5661 3F84  
                             u4941 37B0                               u4861 366E  
                             u6621 18EC                               u7341 2A48  
                             u7261 27D8                               u7245 2780  
                             u7181 46C6                               u5901 6304  
                             u7421 4B32                               u7501 6594  
                             u6701 0E36                               u9101 3EF4  
                             u9021 3D3C                               u4790 5138  
                             u6390 5D4A                               u6550 5B68  
                             u6470 59E8                               u5590 4DD2  
                             u5830 433E                               u5750 4226  
                             u5670 3F9A                               u4950 37B8  
                             u4870 36B2                               u6630 1936  
                             u7350 2A82                               u7270 2858  
                             u7190 46E0                               u5910 6328  
                             u7510 65B8                               u6710 0E78  
                             u7430 5164                               u9110 3F2A  
                             u9030 3D72                               u4791 5132  
                             u6391 5D46                               u6551 5B64  
                             u6471 59E4                               u5591 4DCE  
                             u5831 433A                               u5751 4222  
                             u5671 3F96                               u4871 36AE  
                             u6631 1932                               u7351 2A7E  
                             u7271 2854                               u7255 27AA  
                             u7191 46DC                               u5911 6324  
                             u7511 65B4                               u6711 0E74  
                             u7431 5160                               u9111 3F26  
                             u9031 3D6E                               u7360 703C  
                             u6480 5A44                               u5840 4376  
                             u5760 4246                               u5680 3FAA  
                             u4960 37E0                               u4880 36C8  
                             u6640 194C                               u6560 17D8  
                             u7280 2866                               u5920 6378  
                             u7600 31A8                               u7520 65EE  
                             u6800 114E                               u6720 0E8A  
                             u7440 51AC                               u9040 3DB8  
                             u7361 7036                               u6481 5A40  
                             u5841 4372                               u5761 4242  
                             u5745 41C2                               u5681 3FA6  
                             u4961 37DC                               u4881 36C4  
                             u6641 1948                               u6561 17D2  
                             u7281 2862                               u5921 6374  
                             u7601 31A4                               u7521 65EA  
                             u6801 114A                               u6721 0E86  
                             u7441 51A8                               u9041 3DB4  
                             u7370 703E                               u6490 5A9A  
                             u5770 4256                               u5690 3FEA  
                             u5930 6EF4                               u4970 37FE  
                             u4890 36DA                               u6650 1A8C  
                             u6570 17DA                               u7290 28AA  
                             u7610 3202                               u7530 660C  
                             u5850 6836                               u6810 1166  
                             u6730 0F04                               u7450 5252  
                             u9050 3DEA                               u6491 5A96  
                             u5771 4252                               u5691 3FE6  
                             u5931 6EF0                               u4971 37FA  
                             u4891 36D6                               u6651 1A88  
                             u7291 28A6                               u7611 31FE  
                             u7531 6608                               u5851 6832  
                             u6811 1162                               u6731 0F00  
                             u7451 524E                               u9051 3DE6  
                             u5780 4284                               u4980 381E  
                             u6660 1D54                               u6580 17F4  
                             u5940 618E                               u7380 47A4  
                             u7620 3220                               u7700 2C60  
                             u7540 662A                               u5860 6874  
                             u6900 14C2                               u6820 119C  
                             u6740 0F16                               u9060 3E1C  
                             u5781 4280                               u4981 381A  
                             u6661 1D50                               u6581 17F0  
                             u5941 618A                               u7381 479E  
                             u7621 321C                               u7701 2C5A  
                             u7541 6626                               u5861 6870  
                             u6901 14BE                               u6821 1198  
                             u6741 0F12                               u9061 3E18  
                             u5790 429A                               u4990 382C  
                             u6670 1F2A                               u6590 181A  
                             u5950 61C2                               u7390 47A6  
                             u7630 3230                               u7710 2C62  
                             u7550 6648                               u5870 68A8  
                             u6910 156E                               u6830 11AA  
                             u6750 0F90                               u9070 3E4E  
                             u9207 4F56                               u5791 4296  
                             u4991 3828                               u6671 1F26  
                             u6591 1816                               u7631 322C  
                             u7551 6644                               u5871 68A4  
                             u6911 156A                               u6831 11A6  
                             u6751 0F8C                               u9071 3E4A  
                             u9127 3B18                               u7560 1F52  
                             u5880 62AC                               u5960 61F0  
                             u7640 32E8                               u7800 2F06  
                             u7720 2C84                               u6920 15AA  
                             u6840 11D4                               u6760 101C  
                             u6680 0DE0                               u9080 3E94  
                             u9217 4F62                               u7561 1F4E  
                             u5881 62A8                               u5961 61EC  
                             u7641 32E4                               u7801 2F02  
                             u7721 2C80                               u6921 15A6  
                             u6841 11D0                               u6761 1018  
                             u6681 0DDC                               u9137 3F5A  
                             u9081 3E90                               u5890 62EA  
                             u5970 6204                               u7650 33AE  
                             u7570 316E                               u7810 2F86  
                             u7730 2C9A                               u6930 15B8  
                             u6850 131C                               u6770 104E  
                             u6690 0E2A                               u9090 3EC6  
                             u9307 5088                               u9227 4FA6  
                             u5891 62E6                               u5971 6200  
                             u5955 61B8                               u7651 33AA  
                             u7571 3168                               u7811 2F82  
                             u7731 2C96                               u9147 65C6  
                             u6931 15B4                               u6851 1318  
                             u6771 104A                               u6691 0E26  
                             u9091 3EC2                               u5980 622C  
                             u7660 33CC                               u7580 3170  
                             u7820 3030                               u7740 2CF4  
                             u7900 0036                               u6940 160C  
                             u6860 1382                               u6780 108C  
                             u9317 50D4                               u9237 4FB2  
                             u5981 6228                               u7661 33C8  
                             u7821 302C                               u7741 2CF0  
                             u7901 0032                               u9157 665A  
                             u6941 1608                               u6861 137E  
                             u6781 1088                               u7830 6FF4  
                             u5990 624C                               u7670 33DC  
                             u7590 3192                               u7750 2D12  
                             u7910 0056                               u6950 16DE  
                             u6870 13CA                               u6790 1118  
                             u7831 6FF0                               u9407 5BFA  
                             u9327 50E0                               u9247 4FBE  
                             u9167 4EF0                               u5991 6248  
                             u7671 33D8                               u7591 318E  
                             u7751 2D0E                               u7911 0052  
                             u6951 16DA                               u6871 13C6  
                             u6791 1114                               u7840 700A  
                             u7680 3480                               u7760 2D22  
                             u7920 006E                               u6960 16FA  
                             u6880 13DA                               u7841 7006  
                             u9417 5C3C                               u9337 50EC  
                             u9257 5016                               u9177 4EFC  
                             u7681 347C                               u7761 2D1E  
                             u7921 006A                               u6961 16F6  
                             u6881 13D6                               u7690 351A  
                             u7770 2DFE                               u7930 0436  
                             u6970 1760                               u6890 1474  
                             u7850 6C36                               u9507 5E9E  
                             u9427 5C48                               u9347 713E  
                             u9267 5022                               u9187 4F08  
                             u7691 3516                               u7771 2DFA  
                             u7931 0432                               u6971 175A  
                             u6891 1470                               u7851 6C32  
                             u7780 2ED8                               u7940 04B8  
                             u6980 1762                               u9517 5EAA  
                             u9437 5C54                               u9357 5B86  
                             u9277 502E                               u9197 4F4A  
                             u7781 2ED4                               u7941 04B4  
                             u7790 2EF6                               u7950 04CC  
                             u6990 1776                               u9607 6402  
                             u9527 5EB6                               u9447 5C96  
                             u9367 5B92                               u9287 5070  
                             u7791 2EF2                               u7951 04C8  
                             u6991 1772                               u7960 69E8  
                             u9617 640E                               u9537 5EFA  
                             u9457 5CA2                               u9377 5B9E  
                             u9297 507C                               u7961 69E4  
                             u7890 7132                               u7970 6A06  
                             u9707 6130                               u9627 641A  
                             u9547 5F06                               u9467 5CAE  
                             u9387 5BE2                               u7891 712E  
                             u7971 6A02                               u7980 6A24  
                             u9717 613C                               u9637 606E  
                             u9557 5F12                               u9477 5E42  
                             u9397 5BEE                               u7981 6A20  
                             u7990 6A42                               u9807 6028  
                             u9727 5F5A                               u9647 607A  
                             u9567 6F52                               u9487 5E4E  
                             u7991 6A3E                               u8960 3C00  
                             u9817 704A                               u9737 5F66  
                             u9657 6086                               u9577 6396  
                             u9497 5E5A                               u8961 3BFC  
                             u8970 3C32                               u9907 6A98  
                             u9827 6CA8                               u9747 5F72  
                             u9667 60C8                               u9587 63A2  
                             u8971 3C2E                               u8980 3C64  
                             u9917 6AA2                               u9837 6CB8  
                             u9757 5FB4                               u9677 60D4  
                             u9597 63AE                               u8981 3C60  
                             u8990 3C96                               u9927 70FC  
                             u9847 6F8A                               u9767 5FC0  
                             u9687 60E0                               u8991 3C92  
                             u9857 6FBC                               u9777 5FCC  
                             u9697 6124                               u9867 6A5C  
                             u9787 6010                               u9877 6A6A  
                             u9797 601C                               u9887 6A74  
                             u9897 6A8A                               _WPUD 0419  
                             _dbuf 0800                               _half FEF0  
                             _labs 6C42                               _cosf 314C  
                             _main 3AEC                        _SW_I2C_Stop 5B7C  
                             _prec 06F7                               _sinf 2C3E  
                             pad@i 0518                               pad@p 0515  
                             fsr0h 04EA                               fsr1h 04E2  
                             indf0 04EF                               fsr2h 04DA  
                             fsr0l 04E9                               indf2 04DF  
                             fsr1l 04E1                               fsr2l 04D9  
   MPU6050_DMP_GetData@sensor_data 065E                      ___fpclassifyf 6486  
                             prodh 04F4                               prodl 04F3  
                             start FFFC                    ___fldiv@new_exp 0565  
                    ?_CURSOR_ONOFF 0501                       ___param_bank 0000  
                  ??_ENVIA_LCD_CMD 0502                MPU6050_ReadAll@data 05CC  
                 ?_SW_I2C_ReadByte 0501                              ??_pad 0517  
                 __end_of_LEER_LCD 6AC2            SW_I2C_ReadRegister@data 0509  
                 ?_SW_I2C_SendNack 0501                   __end_of_LCD_init 706C  
                            l10001 0CD2                              l10003 0CF6  
                            l10011 69E8                              l10005 0DB4  
                            l10021 6A30                              l10013 69F4  
                            l10031 6DC6                              l10023 6A42  
                            l10015 6A06                              l10025 6D8A  
                            l10017 6A12                              l10009 69D8  
                            l10041 70C8                              l10033 70B2  
                            l10027 6D92                              l10051 7060  
                            l10019 6A24                              l10043 70CA  
                            l10035 70C0                              l10029 6DC4  
                            l10053 7064                              l10045 7040  
                            l10037 70C2                              l10061 6D0C  
                            l10047 7058                              l10039 70C4  
                            l10063 6D28                              l10055 6CEA  
                            l10049 705C                              l10057 6CFC  
                            l10059 6D04                              l11241 4F24  
                            l11251 5108                              l11243 4F7E  
                            l11261 5E76                              l11253 5BBA  
                            l11245 4FDA                              l11271 60A2  
                            l11263 5ED2                              l11255 5C16  
                            l11247 504A                              l11281 6044  
                            l11273 60FC                              l11265 5F2E  
                            l11257 5C70                              l11249 50A4  
                            l10801 3DEA                              l11275 6158  
                            l11267 63CA                              l11259 5CCA  
                            l10811 3EC6                              l10803 3E1C  
                            l11277 5F8E                              l11269 6436  
                            l10813 3EF8                              l10805 3E4E  
                            l11279 5FE8                              l10815 3F2A  
                            l10807 3E62                              l10751 3AF0  
                            l10809 3E94                              l10817 3F3E  
                            l10761 3B26                              l10753 3AF4  
                            l10819 3F4E                              l10771 3BAA  
                            l10763 3B2A                              l10755 3AF8  
                            l10781 3C32                              l10773 3BB4  
                            l10765 3B40                              l10757 3AFC  
                            l10749 3AEC                              l10791 3D0E  
                            l10783 3C64                              l10775 3BC4  
                            l10767 3B64                              l10759 3B0C  
                            l10793 3D40                              l10785 3C96  
                            l10777 3BCE                              l10769 3B74  
                            l10795 3D72                              l10779 3C00  
                            l10787 3CAA                              l10789 3CDC  
                            l10797 3D86                              l10799 3DB8  
                    ___fltol@sign1 0536                              ?_labs 0501  
                            ?_cosf 0596                    __end_of___fladd 3AEC  
                            ?_main 0501                    __end_of___fldiv 4ECE  
                  __end_of___cosdf 59C8                    __end_of___flneg 6F16  
                            STR_10 FFB6                              STR_11 FFEB  
                            STR_20 FFF7                              STR_12 FFA0  
                            STR_13 FFD0                              STR_14 FF81  
                            STR_15 FFC8                              STR_23 FFFB  
                            STR_16 FFAC                              STR_17 FFD7  
                            STR_18 FFE5                              STR_19 FFDE  
                            ?_sinf 0596                    __end_of___flmul 4394  
                  __end_of___flsub 6E22                    __end_of___fltol 627E  
                  __end_of___sindf 55B4                       ___sindf$3500 0581  
                     ___sindf$3501 0585                       ___sindf$3502 0589  
       __end_of_i2c1_fsmStateTable FEA4                              _OSCEN 00B3  
                     vfpfcnvrt@fmt 05B8                              _PORTD 04D1  
                            _TRISD 04C9                  ??_I2C1_Initialize 0501  
                     _accel_offset 06E5                    __end_of_pio2_1t FEE8  
                            _fabsf 6F16                              _atanf 17B6  
                            _flags 06FD                      ?_MPU6050_Init 0501  
                     _SW_I2C_Start 5E1E                read_prec_or_width@c 0507  
                            _errno 0710                read_prec_or_width@n 0508  
                            _fputc 673E                              _pi_lo FF28  
                            _fputs 6E22                        ?_POS_CURSOR 0504  
                            labs@a 0501                              pad@fp 0511  
                            cosf@n 05A2                              cosf@x 0596  
                            _width 06F5                              cosf@y 05A8  
                  __end_of_invpio2 FEF0                              _putch 7178  
                            _sqrtf 4394                   _MPU6050_DMP_Init 7120  
                            tablat 04F5                              sinf@n 05A2  
                            sinf@x 0596                              sinf@y 05A8  
                            status 04D8                    __end_of_sprintf 6D3A  
                   ?___fpclassifyf 0501                  ?_SW_I2C_IsBusFree 0501  
          ??_MPU6050_WriteRegister 050B                     ??_CURSOR_ONOFF 0504  
               ??_SW_I2C_IsBusFree 0501                    __initialization 6E66  
                     __end_of_half FEF4                       __end_of_labs 6C98  
                     __end_of_cosf 3636                       __end_of_main 3F6E  
            _MPU6050_Movement_Init 6B30                       __end_of_sinf 314C  
                  _ESCRIBE_MENSAJE 6D8A               SW_I2C_ReadBlock@data 0509  
                ?_SW_I2C_ReadBlock 0508                             ??_labs 0505  
                           ??_cosf 055F                             ??_main 0689  
                           ??_sinf 055F                 ??_SW_I2C_ReadBlock 050C  
                    __activetblptr 0003              MPU6050_DMP_GetData@dt 0600  
         ??_MPU6050_TestConnection 050D         __end_of_read_prec_or_width 673E  
        MovingAverage_Reset@filter 0501                     ??_MPU6050_Init 050E  
                _movement_detector 0714                             ?_fabsf 056D  
                           ?_atanf 0575                _SW_I2C_ReadRegister 68B2  
                           ?_fputc 0501                             ?_fputs 050A  
             MovingAverage_Reset@i 0505                  SW_I2C_WriteByte@i 0505  
                           ?_putch 0501                             _ANSELD 0418  
                           ?_sqrtf 052E                             _RC2PPS 0213  
                           _RC5PPS 0216                             _RC6PPS 0217  
                    ___rem_pio2f@n 0592                      ___rem_pio2f@t 058E  
                    ___rem_pio2f@x 0575                      ___rem_pio2f@y 0579  
                           _OSCFRQ 00B1                   __end_of___xxtofl 5B7C  
                 _I2C1_DO_RX_EMPTY 0000                             _c1pio2 FF10  
                           _c2pio2 FF0C                   _I2C1_DO_TX_EMPTY 0000  
                           _c3pio2 FF08                             _c4pio2 FF04  
       MPU6050_DMP_GetData@yaw_rad 065A                       vfprintf@cfmt 05CB  
                           _s1pio2 FED0                             _s2pio2 FECC  
                           _s3pio2 FEC8                             _s4pio2 FEC4  
                           ___flge 627E                             ___fleq 6808  
             ?_SW_I2C_ReadRegister 0508                          ??___fladd 0526  
                        ??___fldiv 055B                          ??___cosdf 0532  
                        ??___flneg 0505               __end_of_ENVIA_NIBBLE 7106  
                        ??___flmul 050D                             _atan2f 2680  
                        ??___flsub 055F                          ??___fltol 0532  
                           _efgtoa 0DBE                             _atanhi FEB4  
                           _atanlo FEA4                          ??___sindf 055F  
                           _pio2_1 FEE8                             _floorf 55B4  
                           fabsf@u 0571                             fabsf@x 056D  
                           _memcpy 6D3A               read_prec_or_width@ap 0503  
                           clear_0 6E7E                             clear_1 6E8A  
                           clear_2 6E96            MPU6050_ReadAll@raw_data 05DA  
                           atanf@w 0596                             atanf@x 0575  
                           atanf@z 059B                             isa$std 0001  
          MPU6050_ReadAll@raw_temp 05EE                  ?_SW_I2C_WriteByte 0501  
                           pad@buf 0513                             cosf@ix 05AC  
                           _strcpy 6EA2              _I2C1_DO_SEND_ADR_READ 0000  
                           fputc@c 0501                 ??_SW_I2C_WriteByte 0501  
                           fputs@c 050E                             fputs@i 050F  
                     __pdataCOMRAM 055F                             fputs@s 050A  
                  ___fpclassifyf@e 0509                    ___fpclassifyf@u 050B  
                  ___fpclassifyf@x 0501                       __mediumconst FE6A  
                           sinf@ux 05AC                             tblptrh 04F7  
                           tblptrl 04F6                             tblptru 04F8  
                           putch@c 0501                   __end_of_vfprintf 6C42  
                     ??_BORRAR_LCD 0504                             sqrtf@i 053B  
                           sqrtf@m 0547                             sqrtf@q 053F  
                           sqrtf@r 054B                             sqrtf@s 0537  
                           sqrtf@t 0543                             sqrtf@x 052E  
                        ??_sprintf 055F            _I2C1_DO_RX_NACK_RESTART 0000  
                       ___flge@ff1 051E                         ___flge@ff2 0522  
                  ??___fpclassifyf 0505                       ___xxtofl@arg 050B  
                     ___xxtofl@exp 050A                       ___xxtofl@val 0501  
                       ___fleq@ff1 0501                         ___fleq@ff2 0505  
                        ?_LEER_LCD 0501                         __accesstop 0560  
          __end_of__initialization 6E9C                         ___flneg@f1 0501  
                     ??_LCD_CONFIG 0504        SW_I2C_ReadRegister@reg_addr 0508  
                        ?_LCD_init 0501                      ___rparam_used 0001  
                     ??_ENVIA_CHAR 0502       __end_of_SW_I2C_WriteRegister 69D6  
                       ___fltol@f1 052E            __end_of_ESCRIBE_MENSAJE 6DDA  
          _rdBlkRegCompleteHandler 0000             ?_MPU6050_Movement_Init 0501  
            ??_SW_I2C_ReadRegister 0509                     __pcstackCOMRAM 0501  
                    __end_of_fabsf 6F4C                      __end_of_atanf 1F30  
                    __end_of_fputc 6808                      __end_of_pi_lo FF2C  
                    __end_of_fputs 6E66                      __end_of_putch 717A  
                    __end_of_sqrtf 4772                 __end_of_BORRAR_LCD 7178  
                       __end_of_C0 FF04                         __end_of_C1 FF00  
                       __end_of_C2 FEFC                         __end_of_C3 FEF8  
                       __end_of_S1 FEE4                         __end_of_S2 FEE0  
                       __end_of_S3 FEDC                         __end_of_S4 FED8  
                       __end_of_pi FF30        __end_of_MPU6050_DMP_GetData 0DBE  
                 ENVIA_LCD_CMD@aux 0503               __end_of_CURSOR_ONOFF 7012  
               __end_of_LCD_CONFIG 6CEA                 __end_of_ENVIA_CHAR 6FE2  
         MPU6050_CombineBytes@high 0505                            ??_fabsf 055F  
            MPU6050_ReadAll@raw_ax 05E8              MPU6050_ReadAll@raw_ay 05EA  
            MPU6050_ReadAll@raw_az 05EC              MPU6050_ReadAll@raw_gx 05F0  
            MPU6050_ReadAll@raw_gy 05F2              MPU6050_ReadAll@raw_gz 05F4  
                _I2C1_DO_BUS_ERROR 0000                            ??_atanf 055F  
                          ??_fputc 0505                            ??_fputs 050E  
                          ??_putch 0501                            ??_sqrtf 0532  
                       __pbssBANK6 06AF                         __pbssBANK7 0700  
                       __pbssBANK8 0800             MPU6050_DMP_GetData@ypr 05FA  
    __end_of_MPU6050_ReadRegisters 7040        __end_of_MovingAverage_Reset 6BEC  
                       ??_LEER_LCD 0501                   ENVIA_NIBBLE@dato 0501  
                     ?_SW_I2C_Stop 0501                         _atanf$3490 058D  
                       _atanf$3491 0579                         _atanf$3492 0591  
                       _atanf$3493 057D                         _atanf$3494 0581  
                       ??_LCD_init 0505              _rd1RegCompleteHandler 0000  
                _I2C1_DO_SEND_STOP 0000              _wr1RegCompleteHandler 0000  
                          ?___flge 051E                            ?___fleq 0501  
             __end_of_MPU6050_Init 6672                            _I2C1CLK 029C  
                          _I2C1CNT 028D                            _I2C1ERR 0297  
                          _I2C1PIE 029B                            _I2C1PIR 029A  
                          _I2C1RXB 028B                            _I2C1TXB 028C  
                          ?_atan2f 05A3                            ?_efgtoa 0581  
                    ??___rem_pio2f 057B                  ??_MPU6050_ReadAll 055F  
                  _I2C1_Initialize 70CE           __end_of_MPU6050_DMP_Init 7138  
                          ?_floorf 056D                            ?_memcpy 0501  
                          ?_strcpy 0501       MPU6050_DMP_GetData@pitch_rad 0656  
                          _U1RXPPS 0272                          ?___xxtofl 0501  
                          _OSCCON1 00AD                            _OSCCON3 00AF  
                   ___rem_pio2f@fn 058A                     ___rem_pio2f@ty 057D  
                   ___rem_pio2f@ux 0586                       ??_POS_CURSOR 0505  
         SW_I2C_ReadBlock@reg_addr 0508                 _i2c1_fsmStateTable FE6B  
           _MPU6050_TestConnection 7092        MPU6050_DMP_GetData@roll_rad 0652  
                          __Hparam 0000                            __Lparam 0000  
                 ?_ESCRIBE_MENSAJE 0504      __end_of_MPU6050_WriteRegister 7092  
             SW_I2C_WriteByte@data 0503                  __end_of_configuro 70CE  
                          ___fladd 3636                            ___fldiv 4B3C  
                          ___cosdf 57CA                            ___flneg 6EDE  
                          ___flmul 3F6E                            ___flsub 6DDA  
                          ___fltol 6178                            ___sindf 5382  
                        ?_vfprintf 05C5              __end_of_ENVIA_LCD_CMD 6FB0  
                   _SW_I2C_SendAck 5F50                            __pcinit 6E66  
               __end_of_POS_CURSOR 6A50                            __ramtop 2600  
                          __ptext0 3AEC                            __ptext1 6CEA  
                          __ptext2 6BEC                            __ptext3 513C  
                          __ptext4 6672                            __ptext5 0DBE  
                          __ptext6 6EA2                            __ptext7 6AC2  
                          __ptext8 6E22                            __ptext9 673E  
                   _SW_I2C_Restart 7138                            _pio2_1t FEE4  
                ??_GetTimestamp_ms 0503  MPU6050_DMP_GetData@last_read_time 06FB  
                          atan2f@m 05CB              read_prec_or_width@fmt 0501  
                          atan2f@x 05A7                            atan2f@y 05A3  
                          atan2f@z 05BF                        _I2C1ERRbits 0297  
                       ??___xxtofl 0505                __end_of___rem_pio2f 4B3C  
                          _invpio2 FEEC               _SW_I2C_WriteRegister 6956  
                      _I2C1PIEbits 029B                            atanf@s1 0585  
                          atanf@s2 0589                            atanf@id 059A  
                          atanf@ix 059F                            efgtoa@c 0587  
                          efgtoa@d 0595                            efgtoa@e 0599  
                          efgtoa@f 0583                            efgtoa@g 05AE  
                          efgtoa@h 05A3                            efgtoa@i 05A1  
                          efgtoa@l 05A7                            efgtoa@m 0597  
                          efgtoa@n 05AC                            efgtoa@p 058C  
                          efgtoa@t 058E                            efgtoa@u 05B2  
                          efgtoa@w 059B                        _I2C1PIRbits 029A  
                          _sprintf 6CEA                            main@ypr 069B  
                 ___rem_pio2f$3499 0581                       _ENVIA_NIBBLE 70EA  
             end_of_initialization 6E9C                            floorf@e 057B  
                          floorf@m 0577                            floorf@u 057D  
                          floorf@x 056D    MPU6050_DMP_GetData@current_time 062C  
                          memcpy@d 0507                            memcpy@n 0505  
                          memcpy@s 0509                   SW_I2C_ReadByte@i 0507  
                          fputc@fp 0503                   ___rem_pio2f@F526 0708  
                          fputs@fp 050C             _I2C1_DO_SEND_ADR_WRITE 0000  
               _read_prec_or_width 6672       __end_of_MPU6050_CombineBytes 7120  
          __end_of_I2C1_Initialize 70EA                   ___rem_pio2f@sign 0585  
                      _I2C1_Status 06AF                  __end_of_vfpfcnvrt 5382  
                       efgtoa@mode 0593                         efgtoa@sign 05AB  
                          postdec2 04DD                ?_read_prec_or_width 0501  
                          postinc0 04EE                            postinc1 04E6  
                          postinc2 04DE             __end_of_SW_I2C_SendAck 6066  
                 vfpfcnvrt@convarg 05BE                         ??_vfprintf 055F  
   SW_I2C_ReadRegister@device_addr 050A             __end_of_SW_I2C_Restart 714A  
                          sqrtf@ix 054F         _I2C1_DO_SEND_RESTART_WRITE 0000  
                          strcpy@d 0505                          _PORTBbits 04CF  
                      ___fladd@grs 052D        MPU6050_ReadRegisters@length 0515  
            ?_SW_I2C_WriteRegister 0506                      ___xxtofl@sign 0509  
                        _TRISBbits 04C7                          _TRISCbits 04C8  
                        _TRISDbits 04C9                          _TRISFbits 04CB  
             ??_read_prec_or_width 0505                        ___fldiv@grs 0567  
                      ___fldiv@rem 0560                        ___flmul@grs 0512  
          ??_MPU6050_Movement_Init 0506                     _last_timestamp 0712  
                     _CURSOR_ONOFF 6FE2                 CURSOR_ONOFF@estado 0504  
                   __end_of_c1pio2 FF14                     __end_of_c2pio2 FF10  
                   __end_of_c3pio2 FF0C                     __end_of_c4pio2 FF08  
                  ?_SW_I2C_SendAck 0501                     __end_of_s1pio2 FED4  
                   __end_of_s2pio2 FED0                     __end_of_s3pio2 FECC  
                   __end_of_s4pio2 FEC8                     __end_of___flge 6382  
                   __end_of___fleq 68B2                        vfpfcnvrt@ap 05BA  
                      vfpfcnvrt@cp 05C3                        ___rem_pio2f 4772  
                      vfpfcnvrt@fp 05B6                    ?_SW_I2C_Restart 0501  
                   _I2C1_DO_RX_ACK 0000                     __end_of_atan2f 2C3E  
                   _I2C1_DO_TX_ACK 0000                      __pidataCOMRAM 717A  
                   __end_of_efgtoa 17B6                     __end_of_atanhi FEC4  
                   __end_of_atanlo FEB4                     __end_of_pio2_1 FEEC  
                   __end_of_floorf 57CA                     __end_of_memcpy 6D8A  
                       floorf@F521 0700                     __end_of_strcpy 6EDE  
                    ??_CURSOR_HOME 0504                start_initialization 6E66  
                      __end_of_aT0 FF28                        __end_of_aT1 FF24  
                      __end_of_aT2 FF20                        __end_of_aT3 FF1C  
                      __end_of_aT4 FF18                        __end_of_pad 6B30  
        MPU6050_WriteRegister@data 050A                       _MPU6050_Init 6584  
                ??_SW_I2C_ReadByte 0503                  ENVIA_LCD_CMD@dato 0502  
            __end_of___fpclassifyf 6584        __end_of_SW_I2C_ReadRegister 6956  
                ??_SW_I2C_SendNack 0501                    _MPU6050_ReadAll 1F30  
           SW_I2C_ReadBlock@length 050B                   ?_I2C1_Initialize 0501  
           SW_I2C_ReadBlock@result 0512                SW_I2C_ReadByte@data 0506  
                      vfprintf@fmt 05C7                           ??___flge 0526  
                         ??___fleq 0509                           ??_atan2f 05AB  
                         ??_efgtoa 0588                           ??_floorf 0571  
                         ??_memcpy 0507                        _atan2f$3487 05B3  
                      _atan2f$3488 05B7                        _atan2f$3489 05BB  
                ?_MPU6050_DMP_Init 0501                   _SW_I2C_IsBusFree 6F4C  
                         ??_strcpy 0505             ??_SW_I2C_WriteRegister 0508  
               ??_MPU6050_DMP_Init 0510                          ___fladd@a 0522  
                        ___fladd@b 051E                          ___fldiv@a 0557  
                        ___fldiv@b 0553                          ___cosdf@r 0532  
                        ___cosdf@w 0542                          ___cosdf@x 052E  
                        ___cosdf@z 0546            MPU6050_DMP_GetData@quat 05FC  
                        ___flmul@a 0509                          ___flmul@b 0505  
             _I2C1_DO_SEND_RESTART 0000                          ___flsub@a 0571  
                        ___flsub@b 056D               _MPU6050_CombineBytes 7106  
                    __pcstackBANK5 0560                      __pcstackBANK6 0600  
                    ?_SW_I2C_Start 0501                          ___sindf@r 0579  
                        ___sindf@s 058D                          ___sindf@w 057D  
                        ___sindf@x 0575                          ___sindf@z 0591  
         MPU6050_ReadRegisters@reg 0516                   _SW_I2C_ReadBlock 5CEA  
              _mpu6050_initialized 06FE            ?_MPU6050_TestConnection 0501  
              __end_of_CURSOR_HOME 7170            MPU6050_CombineBytes@low 0501  
            _MPU6050_ReadRegisters 7012       __end_of_MPU6050_ReadRegister 7168  
                        _cosf$3495 05A3                          _cosf$2778 059A  
                        _cosf$2779 059E              _rd2RegCompleteHandler 0000  
                      _efgtoa$2953 0590              _wr2RegCompleteHandler 0000  
                  _GetTimestamp_ms 714A                      __pmediumconst FE6A  
                         ?___fladd 051E                           ?___fldiv 0553  
                         ?___cosdf 052E                           ?___flneg 0501  
                         ?___flmul 0505                           ?___flsub 056D  
                         ?___fltol 052E                           ?___sindf 0575  
                         _I2C1CON0 0294                           _I2C1CON1 0295  
                         _I2C1CON2 0296                          _configuro 70B2  
       SW_I2C_WriteRegister@result 0509                          fabsf@F465 0704  
            ?_MPU6050_CombineBytes 0501                SW_I2C_WriteByte@ack 0504  
                   ??_SW_I2C_Start 0502            __end_of_MPU6050_ReadAll 2680  
   __end_of_MPU6050_TestConnection 70B2                          _sinf$3066 059A  
                         ?_sprintf 05CD                          _sinf$3067 059E  
                        _sinf$3503 05A4                         _I2C1SDAPPS 0270  
                 _SW_I2C_WriteByte 4ECE                         _I2C1SCLPPS 0271  
                         _LEER_LCD 6A50                           _LATBbits 04BF  
                         _LATDbits 04C1                           _LATFbits 04C3  
                       _I2C1_DO_RX 0000                         _I2C1_DO_TX 0000  
                         _LCD_init 7040                           _PIE7bits 04A5  
                    _I2C1STAT1bits 0299                          atanf@sign 0595  
                         _PIR7bits 04B5          _I2C1_DO_SEND_RESTART_READ 0000  
            _MPU6050_WriteRegister 706C                   ESCRIBE_MENSAJE@i 0509  
                        _vfpfcnvrt 513C                     POS_CURSOR@fila 0505  
                       ?_configuro 0501                           _WPUBbits 0409  
                         _WPUCbits 0411                           _WPUDbits 0419  
                        main@pitch 06A7                        _CURSOR_HOME 7168  
             _MPU6050_ReadAll$3482 05F6               _MPU6050_ReadAll$3483 05CE  
             _MPU6050_ReadAll$3484 05D2               _MPU6050_ReadAll$3485 05D6  
                    _I2C1_DO_RESET 0000                         vfpfcnvrt@c 05C2  
            _SW_I2C_IsBusFree$1645 0501            __end_of_GetTimestamp_ms 715A  
           ?_MPU6050_ReadRegisters 0513                   ??_SW_I2C_SendAck 0501  
    __end_of_MPU6050_Movement_Init 6B92                           __Hrparam 0000  
                 ??_SW_I2C_Restart 0504                          memcpy@tmp 050B  
               SW_I2C_ReadByte@ack 0505                         vfprintf@ap 05C9  
                         __Lrparam 0000                         vfprintf@fp 05C5  
                     ?___rem_pio2f 0575                         ?_vfpfcnvrt 05B6  
          MPU6050_ReadRegister@reg 050C                         _ANSELBbits 0408  
                       _ANSELCbits 0410             ??_MPU6050_CombineBytes 0503  
                  _SW_I2C_ReadByte 6382                 ___fpclassifyf@F465 070C  
                       _ANSELFbits 0428    MPU6050_DMP_GetData@yaw_integral 06F1  
                       sprintf@fmt 05CF                           ___xxtofl 59C8  
             _MPU6050_ReadRegister 715A                    _SW_I2C_SendNack 6066  
                     _I2C1CON0bits 0294                       _I2C1CON1bits 0295  
                         __ptext10 7178                           __ptext11 6D3A  
                         __ptext20 6956                           __ptext12 6C42  
                         __ptext21 7092                           __ptext13 55B4  
                         __ptext30 4772                           __ptext22 715A  
                         __ptext14 6808                           __ptext31 6178  
                         __ptext23 68B2                           __ptext15 70B2  
                         __ptext40 6DDA                           __ptext32 57CA  
                         __ptext24 6B30                           __ptext16 69D6  
                         __ptext41 3636                           __ptext33 627E  
                         __ptext25 6B92                           __ptext17 7120  
                         __ptext50 5B7C                           __ptext42 6EDE  
                         __ptext34 1F30                           __ptext26 0000  
                         __ptext18 6584                           __ptext51 5E1E  
                         __ptext43 3F6E                           __ptext35 4394  
                         __ptext27 2C3E                           __ptext19 706C  
                         __ptext60 6FE2                           __ptext52 6F4C  
                         __ptext44 4B3C                           __ptext36 2680  
                         __ptext28 314C                           __ptext61 7168  
                         __ptext53 6382                           __ptext45 59C8  
                         __ptext37 17B6                           __ptext29 5382  
                         __ptext62 7170                           __ptext54 6066  
                         __ptext46 7012                           __ptext38 6F16  
                         __ptext63 6F7E                           __ptext55 5F50  
                         __ptext47 5CEA                           __ptext39 6486  
                         __ptext64 70CE                           __ptext56 7106  
                         __ptext48 4ECE                           __ptext65 6D8A  
                         __ptext57 714A                           __ptext49 7138  
                         __ptext66 6FB0                           __ptext58 7040  
                         __ptext67 6A50                           __ptext59 6C98  
                         __ptext68 70EA                   ?_MPU6050_ReadAll 05CC  
                       _BORRAR_LCD 7170              _I2C1_DO_BUS_COLLISION 0000  
      SW_I2C_ReadBlock@device_addr 0510                         strcpy@dest 0501  
                    ??_SW_I2C_Stop 0501           _I2C1_CallbackReturnReset 0000  
         __end_of_SW_I2C_IsBusFree 6F7E                           atan2f@ix 05C3  
                         atan2f@iy 05C7                         _LCD_CONFIG 6C98  
                       _ENVIA_CHAR 6FB0                           efgtoa@fp 0581  
                         efgtoa@ne 058A                           efgtoa@pp 0592  
                         efgtoa@ou 059D             ?_MPU6050_WriteRegister 050A  
                         isa$xinst 0000               __end_of_SW_I2C_Start 5F50  
        MPU6050_ReadRegisters@data 0513           SW_I2C_WriteRegister@data 0507  
                         cosf@sign 05A7                         _ODCONBbits 040A  
                       _ODCONCbits 0412                _MPU6050_DMP_GetData 0000  
                _current_i2c_speed 055F                           _vfprintf 6BEC  
         __end_of_SW_I2C_ReadBlock 5E1E                           main@roll 06AB  
                    _ENVIA_LCD_CMD 6F7E                        ??_configuro 0501  
                     _I2C1_DO_IDLE 0000              ?_MPU6050_ReadRegister 0501  
                SW_I2C_ReadBlock@i 0511                           memcpy@d1 0501  
                         memcpy@s1 0503                _MovingAverage_Reset 6B92  
                ??_ESCRIBE_MENSAJE 0507               ?_MPU6050_DMP_GetData 05FA  
            ESCRIBE_MENSAJE@cadena 0504                          sprintf@ap 05D9  
                      _gyro_offset 06D9                   ?_GetTimestamp_ms 0501  
        SW_I2C_ReadRegister@result 050B       SW_I2C_WriteRegister@reg_addr 0506  
                        strcpy@src 0503                           sinf@sign 05A3  
          _I2C1_CallbackReturnStop 0000               ?_MovingAverage_Reset 0501  
             _I2C1_DO_ADDRESS_NACK 0000                __end_of_SW_I2C_Stop 5CEA  
                      efgtoa@nmode 0594            __end_of_SW_I2C_ReadByte 6486  
                   ?_ENVIA_LCD_CMD 0501                        ??_vfpfcnvrt 05BC  
         __end_of_SW_I2C_WriteByte 513C            __end_of_SW_I2C_SendNack 6178  
                         sprintf@f 05DB                           sprintf@s 05CD  
                      ?_BORRAR_LCD 0501              ??_MPU6050_DMP_GetData 05FE  
                    ?_ENVIA_NIBBLE 0501                      ___fladd@signs 052A  
                       _POS_CURSOR 69D6                       ___fladd@aexp 052B  
                     ___fladd@bexp 052C                        ?_LCD_CONFIG 0501  
   MPU6050_TestConnection@who_am_i 050D                 ESCRIBE_MENSAJE@tam 0506  
         MPU6050_WriteRegister@reg 050B                       ___cosdf$3496 0536  
                     ___cosdf$3497 053A                       ___cosdf$3498 053E  
                      ?_ENVIA_CHAR 0501                  POS_CURSOR@columna 0504  
            ??_MovingAverage_Reset 0503  
